{"docstore/data": {"53bf41f3-452a-4212-baaf-3b8bee4b8383": {"__data__": {"id_": "53bf41f3-452a-4212-baaf-3b8bee4b8383", "embedding": null, "metadata": {"page_label": "1", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23d12095-5494-4dc1-9d73-217ec8fc0f52", "node_type": "4", "metadata": {"page_label": "1", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "446126153c4221fb1f1705d58f80c96458335da324e9ea9fea4de4e671c50f2d", "class_name": "RelatedNodeInfo"}}, "text": " \n \n \n \n \n \n \n \n \n  \nGNU COBOL  2.0 \n(Formerly OpenCOBOL)  \n[11FEB2012  Version]  \nProgrammer\u2019s  Guide  \n2nd Edition , 21 November 2013  \nGary Cutler  \nCutlerGL@gmail.com  \n \nOpenCOBOL  Copyright \u00a9 2001 -2009  Keisuke Nishida  \nOpenCOBOL Copyright \u00a9 2006 -2012 Roger While  \nUnder the terms of the GNU General Public License  \n \n \nDocument  Copyright \u00a9 2009 -2013 Gary Cutler  \nPermission is granted to copy, distribute  and/or modify this document  \nunder the terms of the GNU Free Documentation License  [FDL] , Version 1.3  \nor any later version published by the Free Software Foundation;  \nwith Invariant Section \u201c What is GNU COBOL ?\u201d, no Front -Cover  Texts, and no Back -Cover Texts  \nA copy of the FDL is included in the section en titled \"GNU F ree Documentation License\"  \n  ", "start_char_idx": 0, "end_char_idx": 785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf472390-5c76-4df6-8192-720b22c4ac79": {"__data__": {"id_": "bf472390-5c76-4df6-8192-720b22c4ac79", "embedding": null, "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40fe008c-53c6-47ed-bdfc-9b7337d66b35", "node_type": "4", "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a7935ba849e1318f71d8857d3909df698cb21a0193a1f274ea11f89c51abaa46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f9a555e-ee8f-4408-9f8e-4afa8019aac8", "node_type": "1", "metadata": {}, "hash": "1d027df7addf9846ea0cea97aa4d756316e6d134e5001a581f56094334ab9d36", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  is an evolving tool . \nWhile all reasonable attempts will be made to maintain the currency of the information in this document , neither the \nauthor of this document nor the authors of the GNU COBOL  software,  extend any warranti es of any kind for this \ndocument or for the information contained therein.  \nSummary of Changes  \nEdition  Date  Change Description  \n2nd \n 17 July 2012  Updated for version 11FEB2012  of GNU COBOL  2.0 \nDocumentation Enhancements:  \n The use of a slash character (\u201c/\u201d) in column 7 was documented \u2013 this feature has existed since \nat least the 06FEB2009 version of OpenCOBOL  1.1, but was undocumented (section 1.6) \n Added documentation on the DEBUG -ITEM  special register (section 6.1.8 ). \n Updated DECLARATIVES  documentation to better explain how to use it.  ", "start_char_idx": 0, "end_char_idx": 808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f9a555e-ee8f-4408-9f8e-4afa8019aac8": {"__data__": {"id_": "4f9a555e-ee8f-4408-9f8e-4afa8019aac8", "embedding": null, "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40fe008c-53c6-47ed-bdfc-9b7337d66b35", "node_type": "4", "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a7935ba849e1318f71d8857d3909df698cb21a0193a1f274ea11f89c51abaa46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf472390-5c76-4df6-8192-720b22c4ac79", "node_type": "1", "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6c3948d5dd105963e1bd59841720a5f13452ab0bab110aef592f1e0cca970c69", "class_name": "RelatedNodeInfo"}}, "text": "See section 6.1.4 . \n A new section was added to the documentation to discuss the ramifica tions, rules and \ncapabilities of sub -programming (section 7). \n Documentation was added on the COB_SET_DEBUG  environment variable (section 8.1.4 ). \n The listings of all sample programs in chapter 9 are now presented as listings generated by the \nGNU COBOL  Interactive Compiler utility (itself included  as a sample program in section 9.4).  \nThis not only shows full source listings of the sample programs but complete cross -reference \nlistings as well.  \n A new sample program \u2013 DAY -FROM -DATE  \u2013 was introduced to illustrate how to write a user -\ndefined function (section 9.3) \nDocumentation of New  Features and Functionality:  \n User -defined functions are now supported  (sections 3, 7.1, 7.4.2  and 9.3) \n A new built -in subroutine \u2013 C$PRINTABLE  \u2013 was introduced (section 8.3.1.11 ) (the COBDUMP \nsample program (section 10.2 ) now uses it!  \n7 July 2011  Updated for pre -release version 29APR2011  of OpenCOBOL  2.0 \nDocumentation Corrections:  \n Corrected a problem with bogus footnote references in Figure 6-23. \nDocumentation Enhancements:  \n A reference to a new figure documenting error codes was added to the EXCEPTION -STATUS  \nfunction (section 6.1.7.21 ). \n Documentation was added to the CLOSE  statement (section 6.4.7 ) to explicitly docu ment how \nthe last record written to a LINE SEQUENTIAL  or LINE ADVANCING  file may have a terminating \ndelimiter sequence written at the time the file is closed.  \n Documentation was added to the WRITE  statement (section 6.4.50 ) to explicitly document \nhow the ADVANCING  options are handled with LINE SEQUENTIAL  and the new  LINE \nADVANCING  files.  \n  Additional documentation on the cobcrun  command (section 8.2.2 ) was added.  \nDocumentation of New Features and Functionality:  \n LINE ADVANCING  files are now supported (section 1.3.3.5 ). \n Floating -point literals of the form [+ -]nn.nnE[+ -]nn are now supported (section 1.8) \n Z\u201dxxxxx\u201d  null-delimited alphanumeric literals are now supported (section 1.8) \n The COPY  statement now supports the COBOL2002 standard LEADING  and TRAILING  options \nas well as the \u201c IN/OF library -name\u201d and SUPPRESS PRINTING  options (section 2.1.1 ) \n The REPLACE  Compiler -Directing Facility (CDF) statement was introduced (section 2.1.2 ) \n Conditional code generation is now supported through the use o f >>DEFINE , >>IF , >>SET , \n>>SOURCE  and >>TURN  Compiler -Directing Facility (CDF) directives (section 2.2) \n The COB_LINE_TRACE  environment variable was renamed to COB_SET_TRACE  (section 8.2.4 ). \n The COB_DISPLAY_WARNINGS  (section 8.2.4 ) environment variable was introduced.  \n SOURCE -COMPUTER WITH DEBUGGING MODE  is now supported (section  4.1.1 ) \n The CHARACTER CLASSIFICATION clause of the  OBJECT -COMPUTER clause is now supported  ", "start_char_idx": 808, "end_char_idx": 3669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0044bce3-b99a-48b7-a64d-288ff9cebb1d": {"__data__": {"id_": "0044bce3-b99a-48b7-a64d-288ff9cebb1d", "embedding": null, "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7363acf-e953-4ff5-86ef-82a4644634f5", "node_type": "4", "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a357c650a485b21766ee0420e0721479b43e1b414984eb14183b8909802cc63c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1de97c50-8be7-40e3-aa94-7ff83fa95f8b", "node_type": "1", "metadata": {}, "hash": "892b65b617dd77379a339bec1bdf45593212f3cac3705a55190585f6bf1b9205", "class_name": "RelatedNodeInfo"}}, "text": " \n \n (section 4.1.2 ). \n Mnemonic names are now optional for SWITCH  declarations in SPECIAL -NAMES  (section \n4.1.4 ); Eight new switches ( SWITCH -0, SWITCH -9 thru SWITCH -15) are now available; Switches \nmay be specified as SW0  thru SW15  as well as SWITCH -0 thru  SWITCH -15; a new print channel \ndesignation of CSP is now available; SYMBOLIC CHARACTERS  are now supported  (section \n4.1.4 ) \n The device name DISC  may now be used interchangeably with DISK  in SELECT  statements \n(section 4.2.1 ) \n Files may now be SELECT ed with the \u201c NOT OPTIONAL \u201d designation in addition to \u201c OPTIONAL \u201d \n(section 4.2.1 ). \n New  USAGE s of BINARY -INT, BINARY -LONG -LONG  and COMPUTATIONAL -6 (Figure 5-10 and \nsection 7.8.3 ) were introduced . \n ", "start_char_idx": 0, "end_char_idx": 746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1de97c50-8be7-40e3-aa94-7ff83fa95f8b": {"__data__": {"id_": "1de97c50-8be7-40e3-aa94-7ff83fa95f8b", "embedding": null, "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7363acf-e953-4ff5-86ef-82a4644634f5", "node_type": "4", "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a357c650a485b21766ee0420e0721479b43e1b414984eb14183b8909802cc63c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0044bce3-b99a-48b7-a64d-288ff9cebb1d", "node_type": "1", "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "657be64a7c50eddab7c476d4add11d7a6438c59179afe06e6ad8528d48a8d26d", "class_name": "RelatedNodeInfo"}}, "text": "The LEFTLINE  screen attribute was added to the SCREEN SECTION  (section 5.6). \n New  intrinsic functions were introduced:  \no MODULE -CALLER -ID (section 6.1.7.47 ) \no MODULE -DATE  (section 6.1.7.48 ) \no MODULE -FORMATTED -DATE  (section 6.1.7.49 ) \no MODULE -ID (section 6.1.7.50 ) \no MODULE -PATH  (secti on 6.1.7.51 ) \no MODULE -SOURCE  (section 6.1.7.52 ) \no MODULE -TIME  (section 6.1.7.53 ) \n A new option - WITH KEPT LOCK  (section 6.1.9.2 ) - was added to the READ  verb.  \n USE FOR DEBUGGING  is now supported (section 6.1.4 ) \n The following changes were made to the ACCEPT  Statement  \n The TIMEOUT  option was added to Format 4 (se ction 6.4.1.4 ). \n The non -functional CONVERSION  option was added to Format 4 (section 6.4.1.4 ). \n The LINE NUMBER  option  (a synonym for LINES) and COLS  option (a synonym for \nCOLUMNS ) and ESCAPE KEY  options were  added to Format 6 (section  6.4.1.6 ) \n A new format \u2013 Format 7 \u2013 was introduced (section 6.4.1.7 ) \n The ALTER  verb (sect ion 6.4.4 ) is now supported [ Editorial Comment : this change was made \nonly because NIST tests need it and not because you should be using it! ] \n Options (mnemonic -name, STDCALL  and STATIC ) were added to the CALL  verb (section 6.4.5 ). \n The non -functional CONVERSION  option was added to Format 4 of the DISPLAY  statement \n(section 6.4.12.4 ). \n The REVERSED  option for the OPEN  statement is now supported syntactically, even though it is \nnon-functi onal (section 6.4.29 ). \n The READY TRACE  (section 6.4.32 ) and RESET TRACE  (section 6.4.34 ) statements were \nintroduced.  \n A new option \u2013 STATU S \u2013 was added to the STOP  verb (section 6.4.42 ). \n The following built -in named  subroutines  were added:  \n C$CALLEDBY  (section 8.3.1.1 ) \n C$GETPID  (section 8.3.1.6 ) \n CBL_GET_CSR_POS (section 8.3.1.29 ) \n CBL_GET_SCR_SIZE (section 8.3.1.30 ) \n The following built -in numbered  subroutines were added:  \n X\u201dE4\u201d  (section 8.3.2.2 ) \n X\u201dE5\u201d  (section 8.3.2.3 ) \n1st \n 17 Sept 2010  \n  Introduced documentation for the hitherto un documented  \u201cCOBCPY \u201d environment variable \n(sections 8.1.4  and 8.1.5 ). \n Corrected \u201csection 0\u201d broken hyperlinks in the document.  \n1 Apr 2010  Elaborated on the use of the GLOBAL  clause in data item definitions (section 5.3). \n23 Jan 2010  INITIAL  RELEASE OF DOCUMENT \u2013 corresponds to version 06FEB2009  of OpenCOBOL  1.1 ", "start_char_idx": 746, "end_char_idx": 3115, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "266ad9e8-5bca-4ee3-b536-dad1cbd85f62": {"__data__": {"id_": "266ad9e8-5bca-4ee3-b536-dad1cbd85f62", "embedding": null, "metadata": {"page_label": "4", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a256c6f-d494-4c94-8d41-bc605e4d637f", "node_type": "4", "metadata": {"page_label": "4", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e3836eb30510051be26c58dc1924032edd393defda817622271e2688b0b89ce", "class_name": "RelatedNodeInfo"}}, "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75090174-3c37-4ef1-adab-3c357a83894d": {"__data__": {"id_": "75090174-3c37-4ef1-adab-3c357a83894d", "embedding": null, "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92b752d1-30a5-4c36-a678-42d978cb2b92", "node_type": "4", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "21780021485d467e84bae1b038087b415a11777e157ba8fdafd287445fb0995d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c637f05a-9b3b-46a1-b485-de5d5360eab0", "node_type": "1", "metadata": {}, "hash": "76fb34c586b46af805a24beb4b3feccea695b6b2e670ce6f1d6a632372af945a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   i Table  of Contents  \n1. INTRODUCTION  ................................ ................................ ................................ ................................ ... 1-1 \n1.1. What is GNU COBOL ? ................................ ................................ ................................ ................................ .........  1-1 \n1.2. Additional References and Documents  ................................ ................................ ................................ ..............  1-1 \n1.3. Introducing COBOL  ................................ ................................ ................................ ................................ ............  1-1 \n1.3.1. \u201cI Heard COBOL is a Dead Language!\u201d  ................................ ................................ ................................ .........  1-1 \n1.3.2. Programmer Productivity \u2013 The \u201cHoly Grail\u201d  ................................ ................................ ...............................  1-3 \n1.3.3. Notable COBOL/ GNU COBOL  Features  ................................ ................................ ................................ ........  1-4 \n1.3.3.1. Basic Program Readability  ................................ ................................ ................................ ....................  1-4 \n1.3.3.2. COBOL Program Structure  ................................ ................................ ................................ ....................  1-6 \n1.3.3.3. Copybooks  ................................ ................................ ................................ ................................ ...........  1-6 \n1.3.3.4. Structured Data  ................................ ................................ ................................ ................................ .... 1-7 \n1.3.3.5. Files  ................................ ................................ ................................ ................................ ......................  1-7 \n1.3.3.6. Table Handling  ................................ ................................ ................................ ................................ ..... 1-9 \n1.3.3.7. Sorting and Merging Data  ................................ ................................ ................................ ..................  1-10 \n1.3.3.8. String Manipulation  ................................ ................................ ................................ ...........................  1-10 \n1.3.3.9. Textual -User Interface (TUI) Features  ................................ ................................ ................................ . 1-12 \n1.4. ", "start_char_idx": 0, "end_char_idx": 2729, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c637f05a-9b3b-46a1-b485-de5d5360eab0": {"__data__": {"id_": "c637f05a-9b3b-46a1-b485-de5d5360eab0", "embedding": null, "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92b752d1-30a5-4c36-a678-42d978cb2b92", "node_type": "4", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "21780021485d467e84bae1b038087b415a11777e157ba8fdafd287445fb0995d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75090174-3c37-4ef1-adab-3c357a83894d", "node_type": "1", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "28ed900f3735fe2a8aeb3e93125e2148c8040aed180e18ed0dfd9ef2720d73e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1d6b171-8509-4b20-a93f-5a12299c761d", "node_type": "1", "metadata": {}, "hash": "47d2fdbda9ac18dd5f003264ad5be532a0bc9a63c553f3c4f32bb7e6e654b2e4", "class_name": "RelatedNodeInfo"}}, "text": "Syntax Description Conventions  ................................ ................................ ................................ ........................  1-2 \n1.5. General GNU COBOL  Program Format  ................................ ................................ ................................ ...............  1-3 \n1.5.1. Source Line Format  ................................ ................................ ................................ ................................ ..... 1-3 \n1.5.1.1. ", "start_char_idx": 2729, "end_char_idx": 3231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1d6b171-8509-4b20-a93f-5a12299c761d": {"__data__": {"id_": "f1d6b171-8509-4b20-a93f-5a12299c761d", "embedding": null, "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92b752d1-30a5-4c36-a678-42d978cb2b92", "node_type": "4", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "21780021485d467e84bae1b038087b415a11777e157ba8fdafd287445fb0995d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c637f05a-9b3b-46a1-b485-de5d5360eab0", "node_type": "1", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b9097804ae978e757a9d1f561735d4d6643dff1589bcdf8ce30484d268dd6c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71f21173-a84d-4f81-b281-552fb842e33b", "node_type": "1", "metadata": {}, "hash": "2674619049d5a16272cd77e122c502399c7cc5e9d885c8e12558a1b4d54699bd", "class_name": "RelatedNodeInfo"}}, "text": "Fixed Format Mode  ................................ ................................ ................................ ..............................  1-3 \n1.5.1.2. Free Format Mode ................................ ................................ ................................ ................................  1-4 \n1.5.2. Program Structure ................................ ................................ ................................ ................................ .......  1-4 \n1.6. In -Program Documentation (i.e. \u201cComments\u201d)  ................................ ................................ ................................ .. 1-5 \n1.7. Use of Commas and Semicolons  ................................ ................................ ................................ ........................  1-6 \n1.8. Use of Literals  ................................ ................................ ................................ ................................ ....................  1-6 \n1.8.1. Numeric Literals  ................................ ................................ ................................ ................................ ..........  1-6 \n1.8.2. Alphanumeric Literals  ................................ ................................ ................................ ................................ . 1-7 \n1.9. Use of Figurative Constants  ................................ ................................ ................................ ...............................  1-8 \n1.10. User -Defined Names  ................................ ................................ ................................ ................................ ........  1-8 \n1.11. Use of LENGTH OF  ................................ ................................ ................................ ................................ ............  1-8 \n2. THE GNU COBOL  COMPILER DIRECTING F ACILITY [CDF]  ................................ ....................  2-1 \n2.1. Text Manipulation Statements  ................................ ................................ ................................ ..........................  2-1 \n2.1.1. The COPY Statement  ................................ ................................ ................................ ................................ ... 2-1 \n2.1.2. The REPLACE Statement  ................................ ................................ ................................ ..............................  2-1 \n2.2. CDF Directives  ................................ ................................ ................................ ................................ ....................  2-2 \n2.2.1. T he >>DEFINE Directive  ................................ ................................ ................................ ...............................  2-2 \n2.2.2. The >>IF Directive  ................................ ................................ ................................ ................................ .......  2-3 \n2.2.3. The >>SET Directive  ................................ ................................ ................................ ................................ ..... 2-4 \n2.2.4. The >>SOURCE Directive  ................................ ................................ ................................ .............................  2-5 \n2.2.5. The >>TURN Directive  ................................ ................................ ................................ ................................ . 2-5 \n3. ", "start_char_idx": 3231, "end_char_idx": 6732, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71f21173-a84d-4f81-b281-552fb842e33b": {"__data__": {"id_": "71f21173-a84d-4f81-b281-552fb842e33b", "embedding": null, "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92b752d1-30a5-4c36-a678-42d978cb2b92", "node_type": "4", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "21780021485d467e84bae1b038087b415a11777e157ba8fdafd287445fb0995d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1d6b171-8509-4b20-a93f-5a12299c761d", "node_type": "1", "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7a2caeed46ddd6fa53f87bfef37550e26c4f07fe64c25d864dfaab0a796ff8ed", "class_name": "RelatedNodeInfo"}}, "text": "IDENTIFICATION DI VISION  ................................ ................................ ................................ .............  3-1 \n4. ENVIRONMENT DIVISION  ................................ ................................ ................................ ................  4-1 \n4.1. CONFIGURATION SECTION  ................................ ................................ ................................ ................................ . 4-1 \n4.1.1. SOURCE -COMPUTER Paragraph  ................................ ................................ ................................ ..................  4-1 \n4.1.2. OBJECT -COMPUTER Paragraph  ................................ ................................ ................................ ...................  4-2 \n4.1.3. REPOSITORY Paragraph  ................................ ................................ ................................ ...............................  4-3 \n4.1.4. SPECIAL -NAMES Paragraph  ................................ ................................ ................................ .........................  4-4 \n4.1.4.1. The alphabet -name  Clause  ................................ ................................ ................................ ...................  4-6 \n4.1.4.2. The class -name  Clause  ................................ ................................ ................................ .........................  4-6 \n4.1.4.3. The switch -definition  Clause  ................................ ................................ ................................ .................  4-7 \n4.1.4.4. The symbolic -characters  clause  ................................ ................................ ................................ ............  4-7 ", "start_char_idx": 6732, "end_char_idx": 8491, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b72111d-4720-4778-9b20-251913652806": {"__data__": {"id_": "8b72111d-4720-4778-9b20-251913652806", "embedding": null, "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef", "node_type": "4", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c988dcdc658a354f96fcb82cdb3b6a42498db1f55521ee8927daf2b8e6680cab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4209acf-feb9-4bc3-8ef7-08a5ef8794db", "node_type": "1", "metadata": {}, "hash": "c6bb3dc61dc5911cee452693b3afdb1ba5eb23c9c76625ec2bfbe3e0150c4a3d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   ii 4.2. INPUT -OUTPUT SECTION ................................ ................................ ................................ ................................ .... 4-8 \n4.2.1. ", "start_char_idx": 0, "end_char_idx": 256, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4209acf-feb9-4bc3-8ef7-08a5ef8794db": {"__data__": {"id_": "d4209acf-feb9-4bc3-8ef7-08a5ef8794db", "embedding": null, "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef", "node_type": "4", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c988dcdc658a354f96fcb82cdb3b6a42498db1f55521ee8927daf2b8e6680cab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b72111d-4720-4778-9b20-251913652806", "node_type": "1", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1609e71ca4446760eb087e557817c60ba9673d9e40ee7a68301bb1d78e2f6432", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7", "node_type": "1", "metadata": {}, "hash": "48da9e6d09dbaf7ce10c54b4e863aaafdd081ad4f526c6d0d2f0260bf7f78f8b", "class_name": "RelatedNodeInfo"}}, "text": "File SELECT Statement  ................................ ................................ ................................ ................................ . 4-9 \n4.2.1.1. SELECT Without an \u201corganization -clause\u201d  ................................ ................................ ..........................  4-11 \n4.2.1.2. ORGANIZATION SEQUENTIAL Files  ................................ ................................ ................................ ..... 4-11 \n4.2.1.3. ORGANIZATION LINE SEQUENTIAL Files  ................................ ................................ .............................  4-12 \nORGANIZATION RELATIVE Files  ................................ ................................ ................................ .......................  4-13 \n4.2.1.4. ORGANIZATION INDEXED Files  ................................ ................................ ................................ ...........  4-14 \n4.2.2. I -O-CONTROL Paragraph  ................................ ................................ ................................ ...........................  4-15 \n5. DATA DIVISION  ................................ ................................ ................................ ................................ ... 5-1 \n5.1. File Or Sort/Merge File Descriptions  ................................ ................................ ................................ ..................  5-2 \n5.1.1. Record Descriptions  ................................ ................................ ................................ ................................ .... 5-4 \n5.2. Describing Data Items  ................................ ................................ ................................ ................................ ........  5-4 \n5.2.1. Defining non -SCREEN SECTION Data Items  ................................ ................................ ................................ .. 5-6 \n5.2.1.1. ANY LENGTH Clause  ................................ ................................ ................................ .............................  5-7 \n5.2.1.2. ", "start_char_idx": 256, "end_char_idx": 2345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7": {"__data__": {"id_": "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7", "embedding": null, "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef", "node_type": "4", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c988dcdc658a354f96fcb82cdb3b6a42498db1f55521ee8927daf2b8e6680cab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4209acf-feb9-4bc3-8ef7-08a5ef8794db", "node_type": "1", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "aff1bf114d5c398e114288e8c289503c21757367204522a06117e6a66a9acdff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "903cd9a0-f243-4829-aed8-53204c571b03", "node_type": "1", "metadata": {}, "hash": "f5944477ffd40e877ac9eaf9669146e6dda57d8975ee758a3a54629a18e62c09", "class_name": "RelatedNodeInfo"}}, "text": "BASED Clause  ................................ ................................ ................................ ................................ .......  5-7 \n5.2.1. 3. BLANK WHEN ZERO Clause  ................................ ................................ ................................ ...................  5-7 \n5.2.1.4. JUSTIFIED Clause  ................................ ................................ ................................ ................................ .. 5-7 \n5.2.1.5. OCCURS Clause  ................................ ................................ ................................ ................................ ..... 5-8 \n5.2.1.6. PICTURE Clause  ................................ ................................ ................................ ................................ .... 5-8 \n5.2.1.7. REDEFINES Clause  ................................ ................................ ................................ ...............................  5-13 \n5.2.1.8. RENAMES Clause  ................................ ................................ ................................ ................................  5-14 \n5.2.1.9. SIGN Clause  ................................ ................................ ................................ ................................ ........  5-14 \n5.2.1.10. SYNCHRONIZED Clause  ................................ ................................ ................................ .....................  5-15 \n5.2.1.11. USAGE Clause  ................................ ................................ ................................ ................................ ... 5-15 \n5.2.1.12. ", "start_char_idx": 2345, "end_char_idx": 3999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "903cd9a0-f243-4829-aed8-53204c571b03": {"__data__": {"id_": "903cd9a0-f243-4829-aed8-53204c571b03", "embedding": null, "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef", "node_type": "4", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c988dcdc658a354f96fcb82cdb3b6a42498db1f55521ee8927daf2b8e6680cab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7", "node_type": "1", "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c88d25435d4449d12f6a65ce57dfc0e5850f88417aeb242b952ba07f8def7b8c", "class_name": "RelatedNodeInfo"}}, "text": "VALUE Clause  ................................ ................................ ................................ ................................ ... 5-18 \n5.2.2. Defining SCREEN SECTION Data Items  ................................ ................................ ................................ .......  5-20 \n5.2.2.1. AUTO | AUTO -SKIP | AUTOTERMINATE Clause  ................................ ................................ ..................  5-21 \n5.2.2.2. BACKGROUND -COLOR Clause  ................................ ................................ ................................ .............  5-21 \n5.2.2.3. BEEP | BELL Clause  ................................ ................................ ................................ .............................  5-21 \n5.2.2.4. BLANK LINE and BLANK SCREEN Clauses  ................................ ................................ .............................  5-22 \n5.2.2.5. BLANK WHEN ZERO Clause  ................................ ................................ ................................ .................  5-22 \n5.2.2.6. BLINK Clause  ................................ ................................ ................................ ................................ ...... 5-22 \n5.2.2.7. COLUMN Clause  ................................ ................................ ................................ ................................ . 5-22 \n5.2.2.8. ERASE EOL and ERASE EOS Clauses  ................................ ................................ ................................ ..... 5-23 \n5.2.2.9. FOREGROUND -COLOR Clause  ................................ ................................ ................................ .............  5-23 \n5.2.2.10. FROM, TO and USING Clauses  ................................ ................................ ................................ ..........  5-23 \n5.2.2.11. FULL | LENGTH -CHECK Clause  ................................ ................................ ................................ ...........  5-23 \n5.2.2.12. HIGHLIGHT and LOWLIGHT Clauses  ................................ ................................ ................................ .. 5-24 \n5.2.2.13. JUSTIFIED Clause  ................................ ................................ ................................ ..............................  5-24 \n5.2.2.14. LEFTLINE, OVERLINE and UNDERLINE Clauses  ................................ ................................ ...................  5-24 \n5.2.2.15. LINE Clause  ................................ ................................ ................................ ................................ .......  5-24 \n5.2.2.16. OCCURS Clause  ................................ ................................ ................................ ................................ . 5-25 \n5.2.2.17. PICTURE Clause  ................................ ................................ ................................ ................................  5-25 \n5.2.2.18. PROMPT  Clause  ................................ ................................ ................................ ................................  5-25 \n5.2.2.19. REQUIRED | EMPTY -CHECK Clause  ................................ ................................ ................................ ... 5-25 \n5.2.2.20. REVERSE -VIDEO Clause  ................................ ................................ ................................ .....................  5-25 \n5.2.2.21. SECURE | NO -ECHO Clause  ................................ ................................ ................................ ...............  5-26 \n5.2.2.22. SIGN Clause  ................................ ................................ ................................ ................................ ...... 5-26 \n5.2.2.23. VALUE Clause  ................................ ................................ ................................ ................................ ... 5-26 \n5.2.3. 01 -Level Constant Descriptions  ................................ ................................ ................................ .................  5-26 \n5.2.4. 66 -Level Data Descriptions (RENAMES)  ................................ ................................ ................................ ..... 5-28 \n5.2.5. 77 -Level Data Descriptions  ................................ ................................ ................................ ........................  5-28 \n5.2.6. 78 -Level Constant D escriptions  ................................ ................................ ................................ .................  5-29 \n5.2.7. 88 -Level Condition Names  ................................ ................................ ................................ ........................  5-29 \n6. PROCEDURE DIVISIO N ................................ ................................ ................................ ......................  6-1 ", "start_char_idx": 3999, "end_char_idx": 8930, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6ec7f7c-e29e-4807-988f-7c7544f89d44": {"__data__": {"id_": "f6ec7f7c-e29e-4807-988f-7c7544f89d44", "embedding": null, "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df", "node_type": "4", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03989f38f15327a186621d439028f67e7c8c3246fe979b5f5ccca465c446a34a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c151aaa-624c-4d43-bb76-2497ee6d8a85", "node_type": "1", "metadata": {}, "hash": "f1769326ae70db6751685acbd180c100988e6d23a0a8ebe6eccc17825b1ec8d0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   iii 6.1. General PROCEDURE DIVISION Components  ................................ ................................ ................................ ..... 6-1 \n6.1.1. ", "start_char_idx": 0, "end_char_idx": 242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c151aaa-624c-4d43-bb76-2497ee6d8a85": {"__data__": {"id_": "5c151aaa-624c-4d43-bb76-2497ee6d8a85", "embedding": null, "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df", "node_type": "4", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03989f38f15327a186621d439028f67e7c8c3246fe979b5f5ccca465c446a34a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6ec7f7c-e29e-4807-988f-7c7544f89d44", "node_type": "1", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d72d3649c7a011a4eda5fd57c273059081c674b6e945ab412d56d4a5c6a7e872", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71fec814-20b3-4531-9c4a-2834fcd1cab8", "node_type": "1", "metadata": {}, "hash": "a3e459993db26877f9a5736f35b69a8efba0ca86107738004011f95acad05f00", "class_name": "RelatedNodeInfo"}}, "text": "Table References  ................................ ................................ ................................ ................................ .........  6-1 \n6.1.2. Qualification of Data Names  ................................ ................................ ................................ .......................  6-4 \n6.1.3. Reference Modifiers  ................................ ................................ ................................ ................................ .... 6-5 \n6.1.4. Expressions  ................................ ................................ ................................ ................................ .................  6-6 \n6.1.4.1. Arithmetic Expressions  ................................ ................................ ................................ .........................  6-6 \n6.1.4.2. Conditional Expressions  ................................ ................................ ................................ .......................  6-8 \n6.1.5. Use of Periods (.)  ................................ ................................ ................................ ................................ .......  6-11 \n6.1.6. Use of \u201cVERB\u201d / \u201cEND -VERB\u201d Constructs  ................................ ................................ ................................ ... 6-12 \n6.1.7. Intrinsic Functions  ................................ ................................ ................................ ................................ ..... 6-21 \n6.1.7.1. ABS( number ) ................................ ................................ ................................ ................................ ...... 6-21 \n6.1.7.2. ACOS( cosine ) ................................ ................................ ................................ ................................ ...... 6-21 \n6.1.7.3. ANNUITY( interest -rate , number -of-periods ) ................................ ................................ .......................  6-21 \n6.1.7.4. ASIN( sine) ................................ ................................ ................................ ................................ ...........  6-22 \n6.1.7.5. ATAN( tangent ) ................................ ................................ ................................ ................................ ... 6-22 \n6.1.7.6. BYTE -LENGTH( string ) ................................ ................................ ................................ ..........................  6-22 \n6.1.7.7.  CHAR( integer ) ................................ ................................ ................................ ................................ .... 6-22 \n6.1.7.8. COMBINED -DATETIME( days , seconds ) ................................ ................................ ................................  6-22 \n6.1.7.9. CONCATENATE( string -1 [, string -2 ] \u2026) ................................ ................................ ...............................  6-22 \n6.1.7.10. COS( angle ) ................................ ................................ ................................ ................................ .......  6-23 \n6.1.7. ", "start_char_idx": 242, "end_char_idx": 3395, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71fec814-20b3-4531-9c4a-2834fcd1cab8": {"__data__": {"id_": "71fec814-20b3-4531-9c4a-2834fcd1cab8", "embedding": null, "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df", "node_type": "4", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03989f38f15327a186621d439028f67e7c8c3246fe979b5f5ccca465c446a34a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c151aaa-624c-4d43-bb76-2497ee6d8a85", "node_type": "1", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7fa0a8de2b1fd5273f5bb2ce28c5c64fe299becb615b3f3c79c213538d5692b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b2c079b-ec45-4b2a-9508-c5fd1dd8307e", "node_type": "1", "metadata": {}, "hash": "b49efea92b115d605a13909666a1b547ad5938cbf1ded159e39917a26a0df538", "class_name": "RelatedNodeInfo"}}, "text": "11. CURRENCY -SYMBOL  ................................ ................................ ................................ .........................  6-23 \n6.1.7.12. CURRENT -DATE  ................................ ................................ ................................ ................................  6-23 \n6.1.7.13. DATE -OF-INTEGER( integer ) ................................ ................................ ................................ ...............  6-23 \n6.1.7.14. DATE -TO-YYYYMMDD( yymmdd  [, yy-cutoff  ] ) ................................ ................................ ..................  6-23 \n6.1.7.15. DAY -OF-INTEGER( integer ) ................................ ................................ ................................ ................  6-23 \n6.1.7.16. DAY -TO-YYYYDDD( yyddd  [, yy-cutoff ]) ................................ ................................ .............................  6-24 \n6.1.7.17. E  ................................ ................................ ................................ ................................ .......................  6-24 \n6.1.7.18. ", "start_char_idx": 3395, "end_char_idx": 4519, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b2c079b-ec45-4b2a-9508-c5fd1dd8307e": {"__data__": {"id_": "4b2c079b-ec45-4b2a-9508-c5fd1dd8307e", "embedding": null, "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df", "node_type": "4", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03989f38f15327a186621d439028f67e7c8c3246fe979b5f5ccca465c446a34a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71fec814-20b3-4531-9c4a-2834fcd1cab8", "node_type": "1", "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0f71313f3fc3b17c45569dbf27274f7014b710d3be06da0b9ab3c13f605aed88", "class_name": "RelatedNodeInfo"}}, "text": "EXCEPTION -FILE ................................ ................................ ................................ ................................  6-24 \n6.1.7.19. EXCEPTION -LOCATION  ................................ ................................ ................................ ......................  6-24 \n6.1.7.20. EXCEPTION -STATEMENT  ................................ ................................ ................................ ...................  6-25 \n6.1.7.21. EXCEPTION -STATUS  ................................ ................................ ................................ ..........................  6-25 \n6.1.7.22. EXP( number ) ................................ ................................ ................................ ................................ .... 6-25 \n6.1.7.23. EXP10( number ) ................................ ................................ ................................ ................................  6-25 \n6.1.7.24. FACTORIAL( number ) ................................ ................................ ................................ .........................  6-25 \n6.1.7.25. FRACTION -PART( number ) ................................ ................................ ................................ .................  6-25 \n6.1.7.26. HIGHEST -ALGEBRAIC( numeric -identifier ) ................................ ................................ ..........................  6-25 \n6.1.7.27. INTEGER( number ) ................................ ................................ ................................ .............................  6-25 \n6.1.7.28. INTEGER -OF-DATE( date ) ................................ ................................ ................................ ...................  6-26 \n6.1.7.29. INTEGER -OF-DAY( date ) ................................ ................................ ................................ ....................  6-26 \n6.1.7.30. INTEGER -PART( number ) ................................ ................................ ................................ ...................  6-26 \n6.1.7.31. LENGTH( string ) ................................ ................................ ................................ ................................ . 6-26 \n6.1.7.32. LENGTH -AN(string ) ................................ ................................ ................................ ...........................  6-26 \n6.1.7.33. LOCALE -COMPARE( argument -1, argument -2 [ , locale  ]) ................................ ................................ .. 6-26 \n6.1.7.34. LOCALE -DATE( date [, locale  ] ) ................................ ................................ ................................ ..........  6-27 \n6.1.7.35. LOCALE -TIME( time [, locale  ] ) ................................ ................................ ................................ ..........  6-27 \n6.1.7.36. LOCALE -TIME -FROM -SECS( seconds  [, locale  ] ) ................................ ................................ .................  6-27 \n6.1.7.37. LOG( number ) ................................ ................................ ................................ ................................ .... 6-27 \n6.1.7.38. LOG10( number ) ................................ ................................ ................................ ................................  6-27 \n6.1.7.39. LOWER -CASE( string ) ................................ ................................ ................................ .........................  6-27 \n6.1.7.40. LOWEST -ALGEBRAIC( numeric -identifier ) ................................ ................................ ..........................  6-27 \n6.1.7.41. MAX( number -1 [, number -2 ] \u2026) ................................ ................................ ................................ .......  6-27 \n6.1.7.42. MEAN( number -1 [, number -2 ] \u2026) ................................ ................................ ................................ .... 6-27 \n6.1.7.43. MEDIAN( number -1 [, number -2 ] \u2026) ................................ ................................ ................................ . 6-28 \n6.1.7.44. MIDRANGE( number -1 [, number -2 ] \u2026) ................................ ................................ ............................  6-28 \n6.1.7.45. MIN( number -1 [, number -2 ] \u2026)................................ ................................ ................................ ........  6-28 \n6.1.7.46. MOD( value , modulus ) ................................ ................................ ................................ ......................  6-28 \n6.1.7.47. MODULE -CALLER -ID ................................ ................................ ................................ .........................  6-28 ", "start_char_idx": 4519, "end_char_idx": 9291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "258b7e56-3de0-40c4-9838-afc5d496d970": {"__data__": {"id_": "258b7e56-3de0-40c4-9838-afc5d496d970", "embedding": null, "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "794b4324-268d-45a0-9c68-70b1f052249b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e399258bf36da5db8251b42cbe6cd9de7f2a67a1eef0234dd10e72b75813f8bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20a04aa2-4767-4e81-bae8-40578cab27cb", "node_type": "1", "metadata": {}, "hash": "f54a8a6555413fc25f3ef7968a86ae8c3c986b7b793c5f4a20aae7f273d140dd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   iv 6.1.7.48. MODULE -DATE  ................................ ................................ ................................ ................................ . ", "start_char_idx": 0, "end_char_idx": 238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20a04aa2-4767-4e81-bae8-40578cab27cb": {"__data__": {"id_": "20a04aa2-4767-4e81-bae8-40578cab27cb", "embedding": null, "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "794b4324-268d-45a0-9c68-70b1f052249b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e399258bf36da5db8251b42cbe6cd9de7f2a67a1eef0234dd10e72b75813f8bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "258b7e56-3de0-40c4-9838-afc5d496d970", "node_type": "1", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e3f80ef98e39b423a3638e715da88b3bcb4e8d1872d77130f62a0b2d8d838f9f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91b16fdf-df9a-4038-8c12-b7db61c7acf0", "node_type": "1", "metadata": {}, "hash": "10a3d16c7c6cd7651e4b422ce12ab3cd47fe39305c9e601f9b5655a378d77557", "class_name": "RelatedNodeInfo"}}, "text": "6-28 \n6.1.7.49. MODULE -FORMATTED -DATE  ................................ ................................ ................................ ............  6-28 \n6.1.7.50. MODULE -ID ................................ ................................ ................................ ................................ ...... 6-28 \n6.1.7.51. MODULE -PATH  ................................ ................................ ................................ ................................ . 6-29 \n6.1.7.52. MODULE -SOURCE  ................................ ................................ ................................ .............................  6-29 \n6.1.7.53. MODULE -TIME  ................................ ................................ ................................ ................................ . 6-29 \n6.1.7.54. MONETARY -DECIMAL -POINT  ................................ ................................ ................................ ............  6-30 \n6.1.7.55. MONETARY -THOUSANDS -SEPARATOR  ................................ ................................ .............................  6-30 \n6.1.7.56. NUMERIC -DECIMAL -POINT  ................................ ................................ ................................ ...............  6-30 \n6.1.7.57. NUMERIC -THOUSANDS -SEPARATOR  ................................ ................................ ................................  6-30 \n6.1.7.58. NUMVAL( string ) ................................ ................................ ................................ ...............................  6-30 \n6.1.7.59. NUMVAL -C(string  [, symbol  ]) ................................ ................................ ................................ ...........  6-31 \n6.1.7.60. NUMVAL -F(string ) ................................ ................................ ................................ ............................  6-31 \n6.1.7.61. ORD( char ) ................................ ................................ ................................ ................................ .........  6-31 \n6.1.7.62. ORD -MAX( char -1 [, char -2 ] \u2026 )  ................................ ................................ ................................ .......  6-32 \n6.1.7.63. ORD -MIN( char -1 [, char -2 ] \u2026 )  ................................ ................................ ................................ ........  6-32 \n6.1.7.64. PI  ................................ ................................ ................................ ................................ ......................  6-32 \n6.1.7.65. ", "start_char_idx": 238, "end_char_idx": 2825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91b16fdf-df9a-4038-8c12-b7db61c7acf0": {"__data__": {"id_": "91b16fdf-df9a-4038-8c12-b7db61c7acf0", "embedding": null, "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "794b4324-268d-45a0-9c68-70b1f052249b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e399258bf36da5db8251b42cbe6cd9de7f2a67a1eef0234dd10e72b75813f8bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20a04aa2-4767-4e81-bae8-40578cab27cb", "node_type": "1", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "43115e88425a5faaf53ee824af2c3ceab30c81f58b9085c1d790b5b976db10f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef1e1449-a49e-4518-a4af-d31cc9ea583b", "node_type": "1", "metadata": {}, "hash": "09591dffeb422604c8c2905521ca154ec7edf786df961059965930cbf80efd75", "class_name": "RelatedNodeInfo"}}, "text": "PRESENT -VALUE( rate, value -1 [, value -2 ] ) ................................ ................................ ......................  6-32 \n6.1.7.66. RANDOM [ ( seed ) ] ................................ ................................ ................................ .........................  6-32 \n6.1.7.67. RANGE( number -1 [, number -2 ] \u2026) ................................ ................................ ................................ ... 6-33 \n6.1.7.68. REM( number , divisor ) ................................ ................................ ................................ .......................  6-33 \n6.1.7.69. REVERSE( string ) ................................ ................................ ................................ ................................  6-33 \n6.1.7.70. SECONDS -FROM -FORMATTED -TIME( format , time ) ................................ ................................ ..........  6-33 \n6.1.7.71. SECONDS -PAST -MIDNIGHT  ................................ ................................ ................................ ...............  6-33 \n6.1.7.72. SIGN( number ) ................................ ................................ ................................ ................................ ... 6-33 \n6.1.7.73. SIN( angle ) ................................ ................................ ................................ ................................ ........  6-33 \n6.1.7.74. SQRT( number ) ................................ ................................ ................................ ................................ .. 6-33 \n6.1.7.75. STANDARD -DEVIATION( number -1 [, number -2 ] \u2026) ................................ ................................ ..........  6-33 \n6.1.7.76. STORED -CHAR -LENGTH( string ) ................................ ................................ ................................ .........  6-34 \n6.1.7.77. SUBSTITUTE( string , from -1, to-1 [, from -n, to-n ] ) ................................ ................................ ............  6-34 \n6.1.7.78. SUBSTITUTE -CASE( string , from -1, to-1 [, from -n, to-n ] ) ................................ ................................ ... 6-34 \n6.1.7.79. SUM( number -1 [, number -2 ] \u2026) ................................ ................................ ................................ .......  6-34 \n6.1.7.80. TAN( angle ) ................................ ................................ ................................ ................................ .......  6-34 \n6.1.7.81. TEST -DATE -YYYYMMDD( date ) ................................ ................................ ................................ ..........  6-34 \n6.1.7.82. TEST -DAY -YYYYDDD( date ) ................................ ................................ ................................ ................  6-34 \n6.1.7.83. TEST -NUMVAL( string ) ................................ ................................ ................................ ......................  6-34 \n6.1.7.84. TEST -NUMVAL -C(string  [, symbol  ]) ................................ ................................ ................................ .. 6-34 \n6.1.7.85. TEST -NUMVAL -F(string ) ................................ ................................ ................................ ....................  6-35 \n6.1.7.86. TRIM( string [ , LEADING|TRAILING ] )  ................................ ................................ ................................  6-35 \n6.1.7.87. UPPER -CASE( string ) ................................ ................................ ................................ ..........................  6-35 \n6.1.7.88. VARIANCE( number -1 [, number -2 ] \u2026) ................................ ................................ ..............................  6-35 \n6.1.7.89. YEAR -TO-YYYY ( yy [, yy-cutoff ]) ................................ ................................ ................................ ........  6-35 \n6.1.8. Special Registers  ................................ ................................ ................................ ................................ .......  6-19 \n6.1.9. Controlling Concurrent Access to Files  ................................ ................................ ................................ ...... 6-13 \n6.1.9.1. File Sharing  ................................ ................................ ................................ ................................ .........  6-14 \n6.1.9.2. Record Locking  ................................ ................................ ................................ ................................ ... 6-14 \n6.1.10. Common Clauses On Executable Statements  ................................ ................................ ..........................  6-15 \n6.1.10.1. AT END / NOT AT END  ................................ ................................ ................................ ......................  6-15 \n6.1.10.2. ", "start_char_idx": 2825, "end_char_idx": 7763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef1e1449-a49e-4518-a4af-d31cc9ea583b": {"__data__": {"id_": "ef1e1449-a49e-4518-a4af-d31cc9ea583b", "embedding": null, "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "794b4324-268d-45a0-9c68-70b1f052249b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e399258bf36da5db8251b42cbe6cd9de7f2a67a1eef0234dd10e72b75813f8bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91b16fdf-df9a-4038-8c12-b7db61c7acf0", "node_type": "1", "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d1f4a8a74e22667c0df56e66f0b37f18d5a29acedca0946f2d5466e2022a5891", "class_name": "RelatedNodeInfo"}}, "text": "CORRESPONDING Option  ................................ ................................ ................................ .................  6-16 \n6.1.10.3. INVALID KEY / NOT INVALID KEY  ................................ ................................ ................................ ...... 6-17 \n6.1.10.4. ON EXCEPTION / NOT ON EXCEPTION  ................................ ................................ ..............................  6-17 \n6.1.10.5. ON O VERFLOW / NOT ON OVERFLOW  ................................ ................................ ..............................  6-17 \n6.1.10.6. ON SIZE ERROR / NOT ON SIZE ERROR  ................................ ................................ ..............................  6-18 \n6.1.10.7. Rounding Options  ................................ ................................ ................................ .............................  6-18 \n6.2. General Format of the PROCEDURE DIVISION  ................................ ................................ ................................ .... 6-1 \n6.2.1. General Format for Subprogram Arguments  ................................ ................................ ...............................  6-1 \n6.2.2. General Format for DECLARATIVES Procedures  ................................ ................................ ...........................  6-2 ", "start_char_idx": 7763, "end_char_idx": 9126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3e3e723-bcc1-47d2-953b-b80e3a304f12": {"__data__": {"id_": "a3e3e723-bcc1-47d2-953b-b80e3a304f12", "embedding": null, "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5", "node_type": "4", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c649bdb0c96650422ac7db5adccba17f8a0e263d603746753c93e8525cd31f82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff2574ca-dec7-46d1-b83b-de684c629ad8", "node_type": "1", "metadata": {}, "hash": "a16330c9d2b7cb7e1af97e91978145930ead683d051dc1461f0c1d90c51b8202", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   v 6.3. PROCEDURE DIVISION Sections and Paragraphs  ................................ ................................ ................................  6-2 \n6.4. GNU COBOL  Statements  ................................ ................................ ................................ ................................ .. 6-19 \n6.4.1. ACCEPT ................................ ................................ ................................ ................................ ......................  6-35 \n6.4.1.1. ACCEPT Format 1 \u2013 Read from Console  ................................ ................................ ..............................  6-35 \n6.4.1.2. ACCEPT Format 2 \u2013 Retrieve Command -Line Arguments  ................................ ................................ .... 6-36 \n6.4.1.3. ACCEPT Format 3 \u2013 Retrieve Environment Variable Values  ................................ ................................  6-36 \n6.4.1.4. ACCEPT Format 4 \u2013 Retrieve Full -Screen Data  ................................ ................................ ....................  6-37 \n6.4.1.5. ACCEPT Format 5 \u2013 Retrieve Date/Time  ................................ ................................ .............................  6-39 \n6.4.1.6. ACCEPT Format 6 - Retrieve Screen Information  ................................ ................................ ................  6-40 \n6.4.1.7. ACCEPT Format 7 \u2013 Retrieve Run -Time Information  ................................ ................................ ...........  6-40 \n6.4.2. ADD  ................................ ................................ ................................ ................................ ..........................  6-42 \n6.4.2.1. ", "start_char_idx": 0, "end_char_idx": 1780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff2574ca-dec7-46d1-b83b-de684c629ad8": {"__data__": {"id_": "ff2574ca-dec7-46d1-b83b-de684c629ad8", "embedding": null, "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5", "node_type": "4", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c649bdb0c96650422ac7db5adccba17f8a0e263d603746753c93e8525cd31f82", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3e3e723-bcc1-47d2-953b-b80e3a304f12", "node_type": "1", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d03cc69f7d22d963beac00d48fe2c6cbaa69a3b6ad763a8c84407b305b06f66e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7422710-ea6f-4dce-b24b-24cfa7952773", "node_type": "1", "metadata": {}, "hash": "fdc7bfae737112d74ab1bc210b2dde9673402c57d1cd209ca2744d146ba5a1a0", "class_name": "RelatedNodeInfo"}}, "text": "ADD Format 1 \u2013 ADD TO  ................................ ................................ ................................ .....................  6-42 \n6.4.2.2. ADD Format 2 \u2013 ADD GIVING  ................................ ................................ ................................ ..............  6-42 \n6.4.2.3. ADD Format 3 \u2013 ADD CORRESPONDING  ................................ ................................ .............................  6-43 \n6.4.3. ALLOCATE  ................................ ................................ ................................ ................................ .................  6-44 \n6.4.4. ALTER  ................................ ................................ ................................ ................................ ........................  6-45 \n6.4.5. CALL  ................................ ................................ ................................ ................................ ..........................  6-46 \n6.4.6. CANCEL  ................................ ................................ ................................ ................................ .....................  6-49 \n6.4.7. CLOSE  ................................ ................................ ................................ ................................ ........................  6-50 \n6.4.8. COMMIT  ................................ ................................ ................................ ................................ ...................  6-51 \n6.4.9. COMPUTE  ................................ ................................ ................................ ................................ .................  6-52 \n6.4.10. CONTINUE  ................................ ................................ ................................ ................................ ...............  6-53 \n6.4.11. DELETE  ................................ ................................ ................................ ................................ ....................  6-54 \n6.4.12. DISPLAY  ................................ ................................ ................................ ................................ ...................  6-55 \n6.4.12.1. DISPLAY Format 1 \u2013 \u201cUPON \u201c device \u201d ................................ ................................ ................................  6-55 \n6.4.12.2. DISPLAY Format 2 \u2013 Access Command -Line Arguments  ................................ ................................ .... 6-55 \n6.4.12.3. DISPLAY Format 3 \u2013 Access or Set Environment Variables  ................................ ................................  6-56 \n6.4.12.4. DISPLAY Format 4 \u2013 Screen Data  ................................ ................................ ................................ ...... 6-56 \n6.4.13. DIVIDE  ................................ ................................ ................................ ................................ .....................  6-58 \n6.4.13.1. DIVIDE Format 1 \u2013 DIVIDE INTO  ................................ ................................ ................................ ........  6-58 \n6.4.13.2. DIVIDE Format 2 \u2013 DIVIDE INTO GIVING  ................................ ................................ ...........................  6-58 \n6.4.13.3. DIVIDE Format 3 \u2013 DIVIDE BY GIVING  ................................ ................................ ...............................  6-59 \n6.4.14. ENTRY  ................................ ................................ ................................ ................................ .....................  6-60 \n6.4.15. ", "start_char_idx": 1780, "end_char_idx": 5391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7422710-ea6f-4dce-b24b-24cfa7952773": {"__data__": {"id_": "f7422710-ea6f-4dce-b24b-24cfa7952773", "embedding": null, "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5", "node_type": "4", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c649bdb0c96650422ac7db5adccba17f8a0e263d603746753c93e8525cd31f82", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff2574ca-dec7-46d1-b83b-de684c629ad8", "node_type": "1", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ec06ce8d213ed7f916f58bd9c92ddb9490d33a5784012bac20bf78c8aeffd8b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0296452a-2101-436c-9798-e1f7a0037c30", "node_type": "1", "metadata": {}, "hash": "ca76b0c1ac85bec1c91caa98444f89ce9940570e1767370a22838ffa50ec0633", "class_name": "RelatedNodeInfo"}}, "text": "EVALUATE  ................................ ................................ ................................ ................................ ...............  6-61 \n6.4.16. EXIT  ................................ ................................ ................................ ................................ .........................  6-63 \n6.4.17. FREE  ................................ ................................ ................................ ................................ ........................  6-65 \n6.4.18. GENERATE  ................................ ................................ ................................ ................................ ...............  6-66 \n6.4.19. GO BACK  ................................ ................................ ................................ ................................ ..................  6-67 \n6.4.20. GO TO  ................................ ................................ ................................ ................................ .....................  6-68 \n6.4.20.1. GO TO Format 1 \u2013 Simple GO TO  ................................ ................................ ................................ ...... 6-68 \n6.4.20.2. GO TO Format 2 \u2013 GO TO DEPENDING ON  ................................ ................................ ........................  6-68 \n6.4.21. IF  ................................ ................................ ................................ ................................ .............................  6-69 \n6.4.22. ", "start_char_idx": 5391, "end_char_idx": 6924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0296452a-2101-436c-9798-e1f7a0037c30": {"__data__": {"id_": "0296452a-2101-436c-9798-e1f7a0037c30", "embedding": null, "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5", "node_type": "4", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c649bdb0c96650422ac7db5adccba17f8a0e263d603746753c93e8525cd31f82", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7422710-ea6f-4dce-b24b-24cfa7952773", "node_type": "1", "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e14729808f9457a4f1b2b5931a7506cfe7fcc6ce2b944ddc583afaff8cb6ba87", "class_name": "RelatedNodeInfo"}}, "text": "INITIALIZE  ................................ ................................ ................................ ................................ ................  6-70 \n6.4.23. INITIATE  ................................ ................................ ................................ ................................ ..................  6-73 \n6.4.24. INSPECT  ................................ ................................ ................................ ................................ ...................  6-74 \n6.4.24.1. TALLYING Clause Syntax, Rules and Operation  ................................ ................................ .................  6-74 \n6.4.24.2. REPLACING Clause Syntax, Rules and Operation ................................ ................................ ...............  6-75 \n6.4.24.3. CONVERTING Clause Syntax, Rules and Operation  ................................ ................................ ...........  6-76 \n6.4.24.4. INSPECT Region Clause, Rules and Operation  ................................ ................................ ...................  6-76 \n6.4.25. MERGE  ................................ ................................ ................................ ................................ ....................  6-78 \n6.4.26. MOVE  ................................ ................................ ................................ ................................ ......................  6-80 \n6.4.26.1. MOVE Format 1 \u2013 Simple MOVE  ................................ ................................ ................................ .......  6-80 \n6.4.26.2. MOVE Format 2 \u2013 MOVE CORRESPONDING  ................................ ................................ ......................  6-80 \n6.4.27. MULTIPLY  ................................ ................................ ................................ ................................ ................  6-81 \n6.4.27.1. MULTIPLY Format 1 \u2013 MULTIPLY BY  ................................ ................................ ................................ .. 6-81 \n6.4.27.2. MULTIPLY Format 2 \u2013 MULTIPLY GIVING  ................................ ................................ ..........................  6-81 \n6.4.28. NEXT SENTENCE  ................................ ................................ ................................ ................................ ...... 6-82 ", "start_char_idx": 6924, "end_char_idx": 9308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6186cb44-bad4-41cd-9a15-66c17ad91737": {"__data__": {"id_": "6186cb44-bad4-41cd-9a15-66c17ad91737", "embedding": null, "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885", "node_type": "4", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f68801a7cd79539248001dcadb2b019b83eb4a37707dd3fed1616822d6bd7109", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "086c77bb-7cee-45c9-add7-e398ed4311ae", "node_type": "1", "metadata": {}, "hash": "d5cc02bc862261513c012ad3a35e67b77206760e86f3ec7622687d990b98e037", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   vi 6.4.29. OPEN  ................................ ................................ ................................ ................................ .......................  6-83 \n6.4.30. ", "start_char_idx": 0, "end_char_idx": 265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "086c77bb-7cee-45c9-add7-e398ed4311ae": {"__data__": {"id_": "086c77bb-7cee-45c9-add7-e398ed4311ae", "embedding": null, "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885", "node_type": "4", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f68801a7cd79539248001dcadb2b019b83eb4a37707dd3fed1616822d6bd7109", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6186cb44-bad4-41cd-9a15-66c17ad91737", "node_type": "1", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "529c7252b6182e327718ab7b501d5b6997bed0cce6b7597839e6914d4cd2f91c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d50ba49a-79dd-4a0b-9aba-906102ac40ce", "node_type": "1", "metadata": {}, "hash": "a9b71394e9dff5badd20caae7019d2745025db86fcb7662f8a400f9a63b74c21", "class_name": "RelatedNodeInfo"}}, "text": "PERFORM  ................................ ................................ ................................ ................................ ................  6-85 \n6.4.30.1. PERFORM Format 1 \u2013 Procedural  ................................ ................................ ................................ ..... 6-85 \n6.4.30.2. PERFORM Format 2 \u2013 Inline  ................................ ................................ ................................ ..............  6-88 \n6.4.31. READ  ................................ ................................ ................................ ................................ .......................  6-90 \n6.4.31.1. READ Format 1 \u2013 Sequential READ  ................................ ................................ ................................ ... 6-90 \n6.4.31.2. READ Format 2 \u2013 Random Read  ................................ ................................ ................................ ........  6-91 \n6.4.32. READY TRACE  ................................ ................................ ................................ ................................ ..........  6-93 \n6.4.33. RELEASE  ................................ ................................ ................................ ................................ ..................  6-94 \n6.4.34. RESET TRACE  ................................ ................................ ................................ ................................ ...........  6-95 \n6.4.35. RETURN  ................................ ................................ ................................ ................................ ...................  6-96 \n6.4.36. REWR ITE ................................ ................................ ................................ ................................ .................  6-97 \n6.4.37. ROLLBACK  ................................ ................................ ................................ ................................ ...............  6-98 \n6.4.38. SEARCH  ................................ ................................ ................................ ................................ ...................  6-99 \n6.4.38.1. SEARCH Format 1 \u2013 Sequential Search  ................................ ................................ ..............................  6-99 \n6.4.38.2. SEARCH Format 2 \u2013 Binary, or Half -interval Search (SEARCH ALL)  ................................ ...................  6-100 \n6.4.39. SET  ................................ ................................ ................................ ................................ ........................  6-102 \n6.4.39.1. ", "start_char_idx": 265, "end_char_idx": 2913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d50ba49a-79dd-4a0b-9aba-906102ac40ce": {"__data__": {"id_": "d50ba49a-79dd-4a0b-9aba-906102ac40ce", "embedding": null, "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885", "node_type": "4", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f68801a7cd79539248001dcadb2b019b83eb4a37707dd3fed1616822d6bd7109", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "086c77bb-7cee-45c9-add7-e398ed4311ae", "node_type": "1", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "06081212ad800442c0e7cc8259a33f15fe92ad6f352fadce700c04a8189c1f18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5525be1-bba8-43ca-ae22-bfd6b20d2ab3", "node_type": "1", "metadata": {}, "hash": "3bfb47f2319ab89ace901a08bd99f209cd088dc5c561c76e97cc40c31861b86a", "class_name": "RelatedNodeInfo"}}, "text": "SET Format 1 \u2013 SET ENVIRONMENT  ................................ ................................ ................................  6-102 \n6.4.39.2. SET Format 2 \u2013 SET Program -Pointer  ................................ ................................ ..............................  6-102 \n6.4.39.3. SET Format 3 \u2013 SET ADDRESS  ................................ ................................ ................................ ..........  6-102 \n6.4.39.4. SET Format 4 \u2013 SET Index  ................................ ................................ ................................ ................  6-103 \n6.4.39.5. SET Format 5 \u2013 SET UP/DOWN  ................................ ................................ ................................ .......  6-103 \n6.4.39.6. SET Format 6 \u2013 SET Condition Name  ................................ ................................ ...............................  6-104 \n6.4.39.7. SET Format 7 \u2013 SET Switch  ................................ ................................ ................................ ..............  6-104 \n6.4.39.8. SET Format 8 \u2013 SET ATTRIBUTE  ................................ ................................ ................................ .......  6-104 \n6.4.40. SORT  ................................ ................................ ................................ ................................ .....................  6-105 \n6.4.40.1. SORT Format 1 \u2013 File-based Sort ................................ ................................ ................................ ..... 6-105 \n6.4.40.2. SORT Format 2 \u2013 Table Sort  ................................ ................................ ................................ ............  6-107 \n6.4.41. START  ................................ ................................ ................................ ................................ ....................  6-108 \n6.4.42. ", "start_char_idx": 2913, "end_char_idx": 4810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5525be1-bba8-43ca-ae22-bfd6b20d2ab3": {"__data__": {"id_": "c5525be1-bba8-43ca-ae22-bfd6b20d2ab3", "embedding": null, "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885", "node_type": "4", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f68801a7cd79539248001dcadb2b019b83eb4a37707dd3fed1616822d6bd7109", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d50ba49a-79dd-4a0b-9aba-906102ac40ce", "node_type": "1", "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "10956f1d1699b453b51d6404f11e8cb1d3a7f5e8389c9cca3bbaf9deffbb1d1a", "class_name": "RelatedNodeInfo"}}, "text": "STOP  ................................ ................................ ................................ ................................ .....................  6-109 \n6.4.43. STRING  ................................ ................................ ................................ ................................ ..................  6-110 \n6.4.44. SUBTRACT  ................................ ................................ ................................ ................................ .............  6-111 \n6.4.44.1. SUBTRACT Format 1 \u2013 SUBTRACT FROM ................................ ................................ .........................  6-111 \n6.4.44.2. SUBTRACT Format 2 \u2013 SUBTRACT GIVING  ................................ ................................ .......................  6-111 \n6.4.44.3. SUBTRACT Format 3 \u2013 SUBTRACT CORRESPONDING  ................................ ................................ ...... 6-112 \n6.4.45. SUPPRESS  ................................ ................................ ................................ ................................ ..............  6-113 \n6.4.46. TERMINATE  ................................ ................................ ................................ ................................ ...........  6-114 \n6.4.47. TRANSFORM  ................................ ................................ ................................ ................................ .........  6-115 \n6.4.48. UNLOCK  ................................ ................................ ................................ ................................ ................  6-116 \n6.4.49. UNSTRING  ................................ ................................ ................................ ................................ .............  6-117 \n6.4.50. WRITE  ................................ ................................ ................................ ................................ ...................  6-119 \n7. SUB -PROGRAMMING WITH GNU COBOL  ................................ ................................ ....................  7-2 \n7.1. Subprograms, Subroutines and User -Defined Functions  ................................ ................................ ....................  7-2 \n7.2. Specifying and Using Alternate Entry Points  ................................ ................................ ................................ ...... 7-2 \n7.3. Dynamic Versus Static Subprograms  ................................ ................................ ................................ ..................  7-2 \n7.4. Subprogram Execution Flow  ................................ ................................ ................................ ..............................  7-3 \n7.4.1. Subroutine Execution Flow  ................................ ................................ ................................ .........................  7-3 \n7.4.2. User -Defined Function Execution Flow ................................ ................................ ................................ ........  7-4 \n7.5. Sharing Data Between Calling and Called Programs  ................................ ................................ ...........................  7-5 \n7.5.1. Subprogram Arguments  ................................ ................................ ................................ ..............................  7-5 \n7.5.1.1. Calling Program Considerations  ................................ ................................ ................................ ............  7-5 \n7.5.1.2. Called Program Considerations  ................................ ................................ ................................ ............  7-6 \n7.5.2. GLOBAL Data Items  ................................ ................................ ................................ ................................ ..... 7-6 \n7.5.3. EXTERNAL Data Items  ................................ ................................ ................................ ................................ . 7-7 \n7.6. Nested Subprograms  ................................ ................................ ................................ ................................ .........  7-8 \n7.7. Recursive GNU COBOL  Subprograms  ................................ ................................ ................................ .................  7-8 ", "start_char_idx": 4810, "end_char_idx": 9186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a362c72-7e9f-46b2-95ea-22a5ba53120d": {"__data__": {"id_": "7a362c72-7e9f-46b2-95ea-22a5ba53120d", "embedding": null, "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f663f423-4c30-491e-a148-7bf3cc75e128", "node_type": "4", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8541356011ba9b00ca10d4937e4ae12dc70d16c93f24791cf709999d4c72c8f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8", "node_type": "1", "metadata": {}, "hash": "804cd1ab51a6194d987a6ce4893a47d68e82a973b35b99f1c86a838c420aa329", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   vii 7.8. Combining COBOL and C Programs  ................................ ................................ ................................ ..................  7-10 \n7.8.1. GNU COBOL  Run-Time Library Requirements  ................................ ................................ ............................  7-10 \n7.8.2. String Allocation Differences Between GNU COBOL  and C  ................................ ................................ ........  7-10 \n7.8.3. Matching C Data Types with GNU COBOL  USAGEs  ................................ ................................ ....................  7-10 \n7.8.4. GNU COBOL  Main Programs CALLing C  Subprograms  ................................ ................................ ................  7-12 \n7.8.5. C Main Programs CALLing GNU COBOL  Subprograms  ................................ ................................ ................  7-13 \n8. THE GNU COBOL  SYSTEM INTERFACE  ................................ ................................ .........................  8-1 \n8.1. Using the GNU COBOL  Compiler (cobc)  ................................ ................................ ................................ ..............  8-1 \n8.1.1. Introduction  ................................ ................................ ................................ ................................ ................  8-1 \n8.1.2. Syntax and Options  ................................ ................................ ................................ ................................ ..... 8-1 \n8.1.3. Compiling GNU COBOL  Programs  ................................ ................................ ................................ ................  8-3 \n8.1.3.1. Compiling Directly -Executable GNU COBOL  Programs  ................................ ................................ ..........  8-3 \n8.1.3.2. Compiling Dynamically -Loadable GNU COBOL  Subprograms  ................................ ................................  8-3 \n8.1.3.3. Compiling Static GNU COBOL  Subprograms  ................................ ................................ ..........................  8-3 \n8.1.4. Important Compilation -Time Environment Variables  ................................ ................................ ..................  8-4 \n8.1.5. Locating Copybooks at Compilation Time  ................................ ................................ ................................ ... 8-5 \n8.1.6. Using Compiler Configuration Files  ................................ ................................ ................................ .............  8-6 \n8.2. Running GNU COBOL  Programs  ................................ ................................ ................................ .........................  8-7 \n8.2.1. Executing Programs Directly  ................................ ................................ ................................ .......................  8-7 \n8.2.2. Using the \u201ccobcrun\u201d Utility  ................................ ................................ ................................ .........................  8-8 \n8.2.3. Program Arguments  ................................ ................................ ................................ ................................ .... 8-9 \n8.2.4. ", "start_char_idx": 0, "end_char_idx": 3348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8": {"__data__": {"id_": "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8", "embedding": null, "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f663f423-4c30-491e-a148-7bf3cc75e128", "node_type": "4", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8541356011ba9b00ca10d4937e4ae12dc70d16c93f24791cf709999d4c72c8f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a362c72-7e9f-46b2-95ea-22a5ba53120d", "node_type": "1", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "963a56fee0b540feaab962e4dfec5d04cba94988ba41c1d54b2180a2f6b02fae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "656baed6-63a2-4973-8217-5bffcc746821", "node_type": "1", "metadata": {}, "hash": "24dfa58dfcd8a4a0ba28d77928398fe1d4b15bb0cf74945550f02fd3add2428b", "class_name": "RelatedNodeInfo"}}, "text": "Important Execution -Time Environment Variables  ................................ ................................ ......................  8-9 \n8.3. Built -In System Subroutines  ................................ ................................ ................................ .............................  8-11 \n8.3.1. ", "start_char_idx": 3348, "end_char_idx": 3670, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "656baed6-63a2-4973-8217-5bffcc746821": {"__data__": {"id_": "656baed6-63a2-4973-8217-5bffcc746821", "embedding": null, "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f663f423-4c30-491e-a148-7bf3cc75e128", "node_type": "4", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8541356011ba9b00ca10d4937e4ae12dc70d16c93f24791cf709999d4c72c8f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8", "node_type": "1", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ba6f4c96e990d70a906251851da48377fcb15d9a9cb67ffd4facad58e5df2438", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ca8be7d-338b-42b6-b681-eee221b84493", "node_type": "1", "metadata": {}, "hash": "ec5bc60f91a385d32529ebd8183c9b8975518c7c7c7e96bb83240c85d7fb7a18", "class_name": "RelatedNodeInfo"}}, "text": "\u201cCall by Name\u201d Routines  ................................ ................................ ................................ ...........................  8-11 \n8.3.1.1. CALL \u201cC$CALLEDBY\u201d USING prog -name -area  ................................ ................................ ......................  8-11 \n8.3.1.2. CALL \u201cC$CHDIR\u201d USING directory -path , result  ................................ ................................ ....................  8-12 \n8.3.1.3. CALL \u201cC$COPY\u201d USING src-file-path , dest -file-path , 0 ................................ ................................ .........  8-12 \n8.3.1.4. CALL \u201cC$DELETE\u201d USING file-path , 0 ................................ ................................ ................................ ... 8-12 \n8.3.1.5. C ALL \u201cC$FILEINFO\u201d USING file-path , file-info ................................ ................................ ......................  8-12 \n8.3.1.6. CALL \u201cC$GETPID\u201d  ................................ ................................ ................................ ................................  8-13 \n8.3.1.7. CALL \u201cC$JUSTIFY\u201d USING data -item , \u201cjustification -type \u201d ................................ ................................ .... 8-13 \n8.3.1.8. CALL \u201cC$MAKEDIR\u201d USING dir-path ................................ ................................ ................................ .... 8-13 \n8.3.1.9. CALL \u201cC$NARG\u201d USING arg-count -result ................................ ................................ .............................  8-13 \n8.3.1.10. CALL \u201cC$PARAMSIZE\u201d USING argument -number  ................................ ................................ ..............  8-13 \n8.3.1.11. CALL \u201cC$PRINTABLE\u201d USING data -item [ , char  ] ................................ ................................ ...............  8-13 \n8.3.1.12. CALL \u201cC$SLEEP\u201d USING seconds -to-sleep ................................ ................................ ..........................  8-14 \n8.3.1.13. CALL \u201cC$TOLOWER\u201d USING data -item , BY VALUE convert -length  ................................ .....................  8-14 \n8.3.1.14. CALL \u201cC$TOUPPER\u201d USING data -item , BY VALUE convert -length  ................................ ......................  8-14 \n8.3.1.15. CALL \u201cCBL_AND\u201d USING item -1, item -2, BY VALUE byte -length  ................................ ........................  8-14 \n8.3.1.16. CALL  \u201cCBL_CHANGE_DIR\u201d USING directory -path  ................................ ................................ ..............  8-14 \n8.3.1.17. CALL \u201cCBL_CHECK_FILE_EXIST\u201d USING file-path , file-info ................................ ................................ . 8-15 \n8.3.1.18. CALL \u201cCBL_CLOSE_FILE\u201d USING file-handle  ................................ ................................ .......................  8-15 \n8.3.1.19. CALL \u201cCBL_COPY_FILE\u201d USING src-file-path , dest -file-path  ................................ ...............................  8-15 \n8.3.1.20. CALL \u201cCBL_CREATE_DIR\u201d USING dir-path  ................................ ................................ ..........................  8-15 \n8.3.1.21. CALL \u201cCBL_CREATE_FILE\u201d USING file-path , 2, 0, 0, file-handle  ................................ ..........................  8-15 \n8.3.1.22. CALL \u201cCBL_DELETE_DIR\u201d USING dir-path  ................................ ................................ ..........................  8-16 \n8.3.1.23. CALL \u201cCBL_DELETE_FILE\u201d USING file-path  ................................ ................................ .........................  8-16 \n8.3.1.24. CALL \u201cCBL_ERROR_PROC\u201d USING function , program -pointer  ................................ ...........................  8-16 \n8.3.1.25. CALL \u201cCBL_EXIT_PROC\u201d USING function , program -pointer  ................................ ...............................  8-17 \n8.3.1.26. CALL \u201cCBL_EQ\u201d USING item -1, item -2, BY VALUE byte -length  ................................ ...........................  8-18 \n8.3.1.27. CALL \u201cCBL_FL USH_FILE\u201d USING file-handle  ................................ ................................ .......................  8-19 \n8.3.1.28. CALL \u201cCBL_GET_CURRENT_DIR\u201d USING BY VALUE 0, BY VALUE length , BY REFERENCE buffer  ..........  8-19 \n8.3.1.29. CALL \u201cCBL_GET_CSR_POS\u201d USING cursor -locn -buffer  ................................ ................................ .......  8-19 \n8.3.1.30. CALL \u201cCBL_GET_SCR_SIZE\u201d USING no-of-lines, no -of-cols ................................ ................................ . ", "start_char_idx": 3670, "end_char_idx": 8141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ca8be7d-338b-42b6-b681-eee221b84493": {"__data__": {"id_": "7ca8be7d-338b-42b6-b681-eee221b84493", "embedding": null, "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f663f423-4c30-491e-a148-7bf3cc75e128", "node_type": "4", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8541356011ba9b00ca10d4937e4ae12dc70d16c93f24791cf709999d4c72c8f9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "656baed6-63a2-4973-8217-5bffcc746821", "node_type": "1", "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9cc4720ef14b2711dc6e9b7a2f27c3f186c7d5ad369af4e3e35feaf64277d0cd", "class_name": "RelatedNodeInfo"}}, "text": "8-19 \n8.3.1.31. CALL \u201cCBL_IMP\u201d USING item -1, item -2, BY VALUE byte -length  ................................ .........................  8-20 \n8.3.1.32. CALL \u201cCBL_NIMP\u201d USING item -1, item -2, BY VALUE byte -length  ................................ ......................  8-20 ", "start_char_idx": 8141, "end_char_idx": 8420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e0fd98a-ec7e-4178-a35e-182eabdbea21": {"__data__": {"id_": "5e0fd98a-ec7e-4178-a35e-182eabdbea21", "embedding": null, "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e", "node_type": "4", "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "43f4ba7a6c5935d046e253acb1a578bc418d412620bb5052a6966542b92a40e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c8290b6-df0c-4508-b2f7-d07cdf24a088", "node_type": "1", "metadata": {}, "hash": "f263e49ad2e3d30b395c6d90922e04324ee9168edded2bdba99ea05291823bc0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   viii 8.3.1.33. CALL \u201cCBL_NOR\u201d USING item -1, item -2, BY VALUE byte -length  ................................ ........................  8-20 \n8.3.1.34. CALL \u201cCBL_NOT\u201d USING item -1, BY VALUE byte -length  ................................ ................................ .... 8-21 \n8.3.1.35. CALL \u201cCBL_OC_NANOSLEEP\u201d USING nanoseconds -to-sleep  ................................ ..............................  8-21 \n8.3.1.36. CALL \u201cCBL_OPEN_FILE\u201d file-path , access -mode , 0, 0, handle  ................................ ............................  8-21 \n8.3.1.37. CALL \u201cCBL_OR\u201d USING item -1, item -2, BY VALUE byte-length  ................................ ..........................  8-21 \n8.3.1.38. CALL \u201cCBL_READ_FILE\u201d USING handle , offset , nbytes , flag, buffer  ................................ ....................  8-22 \n8.3.1.39. CALL \u201cCBL_RENAME_FILE\u201d USING old-file-path , new -file-path  ................................ .........................  8-22 \n8.3.1.40. CALL \u201cCBL_TOLOWER\u201d USING data -item , BY VALUE convert -length  ................................ .................  8-22 \n8.3.1.41. CALL \u201cCBL_TOUPPER\u201d USING data -item , BY VALUE convert -length  ................................ ..................  8-22 \n8.3.1.42. CALL \u201cCBL_WRITE_FILE\u201d USING handle , offset , nbytes , 0, buffer  ................................ ......................  8-23 \n8.3.1.43. CALL \u201cCBL_XOR\u201d USING item -1, item -2, BY VALUE byte -length  ................................ ........................  8-23 \n8.3.1.44. CALL \u201cSYSTEM\u201d USING command  ................................ ................................ ................................ ..... 8-23 \n8.3.2. \u201cCall by Number\u201d Subroutines  ................................ ................................ ................................ ..................  8-23 \n8.3.2.1. CALL X\u201d91\u201d USING return -code , function -code , binary -variable -arg ................................ ...................  8-24 \n8.3.2.2. CALL X\u201cE4\u201d  ................................ ................................ ................................ ................................ .........  8-24 \n8.3.2. 3. CALL X\u201dE5\u201d  ................................ ................................ ................................ ................................ .........  8-24 \n8.3.2.4. CALL X\u201dF4\u201d USING byte , table  ................................ ................................ ................................ .............  8-25 \n8.3.2.5. CALL X\u201dF5\u201d USING byte , table  ................................ ................................ ................................ .............  8-25 \n8.4. Binary Truncation  ................................ ................................ ................................ ................................ ............  8-25 \n9. SAMPLE PROGRAMS  ................................ ................................ ................................ .......................  10-1 \n9.1. FileStat -Msgs.cpy \u2013 File Status Values  ................................ ................................ ................................ ..............  10-1 \n9.2. COBDUMP \u2013 A Hex/Char Data Dump Subroutine  ................................ ................................ .............................  10-2 \n9.3. DAY -FROM -DATE \u2013 Determine Day of Week From a Date  ................................ ................................ ..............  10-11 \n9.4. GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End ................................ ................................  10-15 \n9.5. ", "start_char_idx": 0, "end_char_idx": 3642, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c8290b6-df0c-4508-b2f7-d07cdf24a088": {"__data__": {"id_": "9c8290b6-df0c-4508-b2f7-d07cdf24a088", "embedding": null, "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e", "node_type": "4", "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "43f4ba7a6c5935d046e253acb1a578bc418d412620bb5052a6966542b92a40e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e0fd98a-ec7e-4178-a35e-182eabdbea21", "node_type": "1", "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30dbdae5c7485007c0ce79c8536c02a33b1c78708e9d001a3cee5990e487a030", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54890e7d-d970-480c-90de-8f5bd37cd356", "node_type": "1", "metadata": {}, "hash": "23a3e04c99916840cd460458656d5905462b29ca0385bf79b097c18518cbc2c1", "class_name": "RelatedNodeInfo"}}, "text": "STREAMIO \u2013 A Utility Subroutine to Simplify Stream I/O  ................................ ................................ .............  10-109 \n9.6. WINSYSTEM \u2013 Execute Windows Shell Commands (For Cygwin)  ...............................  Error! Bookmark not defined.  \n", "start_char_idx": 3642, "end_char_idx": 3913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54890e7d-d970-480c-90de-8f5bd37cd356": {"__data__": {"id_": "54890e7d-d970-480c-90de-8f5bd37cd356", "embedding": null, "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e", "node_type": "4", "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "43f4ba7a6c5935d046e253acb1a578bc418d412620bb5052a6966542b92a40e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c8290b6-df0c-4508-b2f7-d07cdf24a088", "node_type": "1", "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "472f75ec2b765aab611da4d4f8e1a96ef9a47237c112b71dde9926b8e812b059", "class_name": "RelatedNodeInfo"}}, "text": "10. GLOSSARY OF TERM S ................................ ................................ ................................ ..................  11-1 \nINDEX  ................................ ................................ ................................ ................................ ...............................  I \nGNU FREE DOCUMENTATI ON LICENSE  ................................ ................................ ..............................  IX \nFigures  \n \nFigure 1 -1 - A Sample TUI Screen  ................................ ................................ ................................ ................................ .. 1-12 \nFigure 1 -2 \u2013 General Format of a GNU COBOL  Program  ................................ ................................ ................................ . 1-4 \nFigure 1 -3 - Figurative Constants  ................................ ................................ ................................ ................................ ..... 1-8 \nFigure 2 -1 - COPY Syntax  ................................ ................................ ................................ ................................ .................  2-1 \nFigure 2 -2 - REPLACE (Format 1) Syntax  ................................ ................................ ................................ ..........................  2-2 \nFigure 2 -3 - REPLACE (Format 2) Syntax  ................................ ................................ ................................ ..........................  2-2 \nFigure 2 -4 - >>DEFINE Syntax  ................................ ................................ ................................ ................................ ..........  2-2 \nFigure 2 -5 - >>IF Syntax  ................................ ................................ ................................ ................................ ...................  2-3 \nFigure 2 -6 - >>IF constant -conditional -expression Format  ................................ ................................ .............................  2-3 \nFigure 2 -7 - >>SET Syntax  ................................ ................................ ................................ ................................ ................  2-4 \nFigure 2 -8 - >>SOURCE Syntax  ................................ ................................ ................................ ................................ .........  2-5 \nFigure 2 -9 - >>TURN Syntax  ................................ ................................ ................................ ................................ .............  2-5 \nFigure 3 -1 - IDENTIFICATION DIVISION Syntax  ................................ ................................ ................................ ................  3-1 \nFigure 4 -1 - ENVIRONMENT DIVISION Syntax  ................................ ................................ ................................ ..................  4-1 \nFigure 4 -2 - CONFIGURATION SECTION Syntax  ................................ ................................ ................................ ...............  4-1 \nFigure 4 -3 - SOURCE -COMPUTER Paragraph Syntax  ................................ ................................ ................................ .......  4-1 \nFigure 4 -4 - OBJECT -COMPUTER Paragraph Syntax  ................................ ................................ ................................ .........  4-2 \nFigure 4 -5 - REPOSITORY Paragraph Syntax  ................................ ................................ ................................ ....................  4-3 \nFigure 4 -6 - SPECIAL -NAMES Paragraph Syntax ................................ ................................ ................................ ...............  4-4 \nFigure 4 -7 \u2013 Typical Locale Codes  ................................ ................................ ................................ ................................ .... 4-5 \nFigure 4 -8 - Built -In GNU COBOL  Device Names  ................................ ................................ ................................ ..............  4-5 ", "start_char_idx": 3913, "end_char_idx": 8006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccf36001-b186-47c4-90b6-be7d62619e5c": {"__data__": {"id_": "ccf36001-b186-47c4-90b6-be7d62619e5c", "embedding": null, "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f4bf0e2-dc53-42dd-b7b5-073419444ff0", "node_type": "4", "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b5f7596f53c7af36f4ab1c85310cba1388c0d3447dc180a7554399d0494464ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d1a829e-a7fa-42a6-8df8-dd0b227282d3", "node_type": "1", "metadata": {}, "hash": "15f740d997698eca309c8dc138ad6fdcb9158285fcab9e92e8c622c18f15b2f2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   ix Figure 4 -9 - The SPECIAL -NAMES \"alphabet -name\" Clause  ................................ ................................ ............................  4-6 \nFigure 4 -10 - The SPECIAL -NAMES \"class -name\" Clause  ................................ ................................ ................................ . 4-6 \nFigure 4 -11 - The SPECIAL -NAMES \"switch -definition\" Clause  ................................ ................................ ........................  4-7 \nFigure 4 -12 - The SPECIAL -NAMES \"symbolic -characters\" Clause  ................................ ................................ ...................  4-7 \nFigure 4 -13 - INPUT -OUTPUT SECTION Syntax  ................................ ................................ ................................ ................  4-8 \nFigure 4 -14 \u2013 File SELECT Statement Syntax ................................ ................................ ................................ ....................  4-9 \nFigure 4 -15 \u2013 FILE STATUS Values  ................................ ................................ ................................ ................................ .. 4-10 \nFigure 4 -16 - SELECT \u201corganization -options\u201d For SEQUENTIAL Files  ................................ ................................ .............  4-11 \nFigure 4 -17 - SELECT \"organization -options\" for LINE SEQUENTIAL Files  ................................ ................................ ...... 4-12 \nFigure 4 -18 - SELECT \u201corganization options\u201d For RELATIVE Files  ................................ ................................ ..................  4-13 \nFigure 4 -19 - SELE CT \u201corganization options\u201d For INDEXED Files  ................................ ................................ ...................  4-14 \nFigure 4 -20 - I-O-CONTROL Paragraph Syntax  ................................ ................................ ................................ ...............  4-15 \nFigure 5 -1 - General DATA DIVISION Format  ................................ ................................ ................................ ...................  5-1 \nFigure 5 -2 - File Description (FD) and Sort Description (SD) Syntax  ................................ ................................ ................  5-2 \nFigure 5 -3- LINAGE -specified Page Structure  ................................ ................................ ................................ ..................  5-3 \nFigure 5 -4 \u2013 Non -SCREEN SECTION Data Item Description Syntax  ................................ ................................ ..................  5-6 \nFigure 5 -5 - Data Class -Specification PICTURE Symbols (A/X/9)  ................................ ................................ ......................  5-8 \nFigure 5 -6 - Numeric Option PICTURE Symbols (P/S/V)  ................................ ................................ ................................ .. 5-9 \nFigure 5 -7 - Numeric Editing PICTURE Symbols  ................................ ................................ ................................ .............  5-10 \nFigure 5 -8 - Sign -Encoding Characters  ................................ ................................ ................................ ...........................  5-14 \nFigure 5 -9 - Effect of the SYNCHRONIZED Clause  ................................ ................................ ................................ ..........  5-15 \nFigure 5 -10 - Summary of USAGE Specifications  ................................ ................................ ................................ ...........  5-15 \nFigure 5 -11 - SCREEN SECTION Data Item Description Syntax  ................................ ................................ ......................  5-20 \nFigure 5 -12 - The GNU COBOL  Color Palette (Windows Console)  ................................ ................................ .................  5-21 \nFigure 5 -13 - 01-Level Constant Description Syntax  ................................ ................................ ................................ ...... 5-26 \nFigure 5 -14 - 66-Level Data Description Syntax  ................................ ................................ ................................ .............  5-28 \nFigure 5 -15 - 78-Level Constant Description Syntax  ................................ ................................ ................................ ...... 5-29 \nFigure 5 -16 - 88-Level Condition Name Syntas  ................................ ................................ ................................ ..............  5-29 \nFigure 6 -1 - Reference Modifier Syntax  ................................ ................................ ................................ ...........................  6-5 \nFigure 6 -2 \u2013 Unary \u201cMinus\u201d ( -) Operator Syntax  ................................ ................................ ................................ .............  6-6 \nFigure 6 -3 \u2013 Unary \u201cPlus\u201d (+) Operator Syntax  ................................ ................................ ................................ ................  6-6 \nFigure 6 -4 - Exponentiation Operator (** or ^) Syntax  ................................ ................................ ................................ ... 6-6 \nFigure 6 -5 - Multiplication Operator (*) Syntax  ................................ ................................ ................................ ...............  6-6 \nFigure 6 -6 - Division Operator (/) Syntax  ................................ ................................ ................................ .........................  6-7 \nFigure 6 -7 - Addition Operator (+) Syntax  ................................ ................................ ................................ .......................  6-7 \nFigure 6 -8 - Subtraction Operator ( -) Syntax  ................................ ................................ ................................ ...................  6-7 \nFigure 6 -9 - Class Condition Syntax  ................................ ................................ ................................ ................................ . 6-9 \nFigure 6 -10 - Sign Condition Syntax  ................................ ................................ ................................ ................................ . ", "start_char_idx": 0, "end_char_idx": 6364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d1a829e-a7fa-42a6-8df8-dd0b227282d3": {"__data__": {"id_": "7d1a829e-a7fa-42a6-8df8-dd0b227282d3", "embedding": null, "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f4bf0e2-dc53-42dd-b7b5-073419444ff0", "node_type": "4", "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b5f7596f53c7af36f4ab1c85310cba1388c0d3447dc180a7554399d0494464ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccf36001-b186-47c4-90b6-be7d62619e5c", "node_type": "1", "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "26db177efc12a2353db99827b350cccaef7192e189f112f138e27dc440f7e8e7", "class_name": "RelatedNodeInfo"}}, "text": "6-9 \nFigure 6 -11 - Using Switch Conditions  ................................ ................................ ................................ ...........................  6-10 \nFigure 6 -12 - Relation Condition Syntax  ................................ ................................ ................................ ........................  6-10 \nFigure 6 -13 - Combined Condition Syntax  ................................ ................................ ................................ .....................  6-11 \nFigure 6 -14 - Negated Condition Syntax  ................................ ................................ ................................ ........................  6-11 \nFigure 6 -15 - Special Registers  ................................ ................................ ................................ ................................ .......  6-20 \nFigure 6 -16 - ROUNDED MODE Behavior  ................................ ................................ ................................ ......................  6-19 \nFigure 6 -17 - General PROCEDURE DIVISION Syntax  ................................ ................................ ................................ .......  6-1 \nFigure 6 -18 - Syntax of a PROCEDURE DIVISION U SING Argument  ................................ ................................ .................  6-1 \nFigure 6 -19 - General DECLARATIVES Procedure Syntax  ................................ ................................ ................................ . 6-3 \nFigure 6 -20 - ACCEPT (Read from Console) Syntax  ................................ ................................ ................................ ........  6-36 \nFigure  6-21 - ACCEPT (Command Line Arguments) Syntax ................................ ................................ ............................  6-36 \nFigure 6 -22 - ACCEPT (Environment  Variable Values) Syntax  ................................ ................................ .......................  6-37 \nFigure 6 -23 - ACCEPT (Retrieve Screen Data) Syntax ................................ ................................ ................................ ..... 6-38 \nFigure 6 -24 - Screen ACCEPT CRT STATUS Cod es ................................ ................................ ................................ ..........  6-39 \nFigure 6 -25 - ACCEPT (Retrieve Date/Time) Syntax  ................................ ................................ ................................ .......  6-39 \nFigure 6 -26 - ACCEPT Options for DATE/TIME Retrieval  ................................ ................................ ...............................  6-39 \nFigure 6 -27 - ACCEPT (Retrieve Screen Information) Syntax  ................................ ................................ .........................  6-40 \nFigure 6 -28 - ACCEPT (Retrieve Run -Time Information) Syntax  ................................ ................................ ....................  6-41 \nFigure 6 -29 - Run-Time Exception  Code Values  ................................ ................................ ................................ .............  6-41 ", "start_char_idx": 6364, "end_char_idx": 9496, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c715d56b-191f-4cce-83a9-3763ea361110": {"__data__": {"id_": "c715d56b-191f-4cce-83a9-3763ea361110", "embedding": null, "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32512d19-4b00-4786-92c1-c1b945618d7f", "node_type": "4", "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7047d5093843e34ffe4003468304e2f6be7ec659bddb17052d04ff7d973978e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a9190d7-cb06-44dc-a578-8fbb40aef3ff", "node_type": "1", "metadata": {}, "hash": "fc4b7628baa8e8070e300cae4cfbc9755a07b7681526e7cc83f4a7c48248f661", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   x Figure 6 -30 - ADD (TO) Syntax  ................................ ................................ ................................ ................................ .......  6-42 \nFigure 6 -31 - ADD (GIVING) Syntax  ................................ ................................ ................................ ................................  6-42 \nFigure 6 -32 - ADD (CORRESPONDING) Syntax  ................................ ................................ ................................ ...............  6-43 \nFigure 6 -33 - ALLOCATE Syntax ................................ ................................ ................................ ................................ ...... 6-44 \nFigure 6 -34 - ALTER Syntax  ................................ ................................ ................................ ................................ ............  6-45 \nFigure 6 -35 - CALL  Syntax  ................................ ................................ ................................ ................................ ..............  6-46 \nFigure 6 -36 - Argument Format When CALL ing a Subroutine  ................................ ................................ .......................  6-47 \nFigure 6 -37 - CANCEL Syntax  ................................ ................................ ................................ ................................ .........  6-49 \nFigure 6 -38 - CLOSE Syntax  ................................ ................................ ................................ ................................ ............  6-50 \nFigure 6 -39 - COMMIT Syntax  ................................ ................................ ................................ ................................ ........  6-51 \nFigure 6 -40 - COMPUTE Syntax  ................................ ................................ ................................ ................................ ..... 6-52 \nFigure 6 -41 - CONTINUE Syntax  ................................ ................................ ................................ ................................ ..... 6-53 \nFigure 6 -42 - DELETE Syntax  ................................ ................................ ................................ ................................ ..........  6-54 \nFigure 6 -43 - DISPLAY (Upon Co nsole) Syntax  ................................ ................................ ................................ ...............  6-55 \nFigure 6 -44 - DISPLAY (Access Command -line Arguments) Syntax ................................ ................................ ................  6-55 \nFigure 6 -45 - DISPLAY (Access / Set Environment Variables) Syntax  ................................ ................................ .............  6-56 \nFigure 6 -46 - DISPLAY (Screen Data) Syntax  ................................ ................................ ................................ ..................  6-56 \nFigure 6 -47 - DIVIDE INTO Syntax  ................................ ................................ ................................ ................................ .. 6-58 \nFigure 6 -48 - DIVIDE INTO GIVING Syntax  ................................ ................................ ................................ .....................  6-58 \nFigure 6 -49 - DIVIDE BY GIVING Syntax  ................................ ................................ ................................ .........................  6-59 \nFigure 6 -50 - ENTRY Syntax ................................ ................................ ................................ ................................ ............  6-60 \nFigure 6 -51 - ENTRY Statement Argument Syntax  ................................ ................................ ................................ .........  6-60 \nFigure 6 -52 - EVALUATE Syntax  ................................ ................................ ................................ ................................ ..... 6-61 \nFigure 6 -53 - EXIT Syntax  ................................ ................................ ................................ ................................ ...............  6-63 \nFigure 6 -54 - Using the EXIT Statement  ................................ ................................ ................................ .........................  6-63 \nFigure 6 -55 - Using EXIT PARAGRAPH  ................................ ................................ ................................ ............................  6-63 \nFigure 6 -56 - Using the EXIT PERFORM Statement  ................................ ................................ ................................ ........  6-64 \nFigure 6 -57 - FREE Syntax  ................................ ................................ ................................ ................................ ..............  6-65 \nFigure 6 -58 - GENERATE Syntax  ................................ ................................ ................................ ................................ ..... 6-66 \nFigure 6 -59 - GOBACK  Syntax  ................................ ................................ ................................ ................................ ........  6-67 \nFigure 6 -60 - Simple GO TO Syntax  ................................ ................................ ................................ ................................  6-68 \nFigure 6 -61 \u2013 GO TO DEPENDING ON Syntax  ................................ ................................ ................................ ................  6-68 \nFigure 6 -62 - GOTO DEPENDING ON vs IF vs EVALUATE ................................ ................................ ................................  6-68 \nFigure 6 -63 - IF Syntax  ................................ ................................ ................................ ................................ ...................  6-69 \nFigure 6 -64 - INITIALIZE Syntax  ................................ ................................ ................................ ................................ ...... 6-70 \nFigure 6 -65 - INITIATE Syntax  ................................ ................................ ................................ ................................ ........  6-73 \nFigure 6 -66 - INSPECT Syntax  ................................ ................................ ................................ ................................ .........  6-74 \nFigure 6 -67 - An INSPECT TALLYING Example  ................................ ................................ ................................ ................  6-75 \nFigure 6 -68 - MERGE Syntax  ................................ ................................ ................................ ................................ ..........  6-78 \nFigure 6 -69 - Simple MOVE  Syntax  ................................ ................................ ................................ ................................  6-80 \nFigure 6 -70 - MOVE  CORRESPONDING Syntax  ................................ ................................ ................................ ..............  6-80 \nFigure 6 -71 - MULTIPLY BY Syntax  ................................ ................................ ................................ ................................ . 6-81 \nFigure 6 -72 - MULTIPLY GIVING Syntax  ................................ ................................ ................................ .........................  6-81 \nFigure 6 -73 - NEXT SENTENCE Syntax  ................................ ................................ ................................ ............................  6-82 \nFigure 6 -74 - OPEN Syntax  ................................ ................................ ................................ ................................ .............  6-83 \nFigure 6 -75 - Procedural PERFORM  Syntax  ................................ ................................ ................................ ...................  6-85 \nFigure 6 -76 - Simp le PERFORM  ................................ ................................ ................................ ................................ ...... 6-85 \nFigure 6 -77 - PERFORM UNTIL EXIT  ................................ ................................ ................................ ...............................  6-86 \nFigure 6 -78 \u2013 PERFORM n TIMES  ................................ ................................ ................................ ................................ ... 6-86 \nFigure 6 -79 - PERFORM UNTIL  ................................ ................................ ................................ ................................ .......  6-87 \nFigure 6 -80 - PERFORM VARYING AFTER  ................................ ................................ ................................ .......................  6-87 \nFigure 6 -81 - Inline PERFORM Syntax  ................................ ................................ ................................ ............................  6-89 \nFigure 6 -82 \u2013 READ (Sequential) Syntax  ................................ ................................ ................................ ........................  6-90 \nFigure 6 -83 - READ (Random) Syntax  ................................ ................................ ................................ ............................  6-91 \nFigure 6 -84 - READY TRACE Syntax  ................................ ................................ ................................ ................................  6-93 \nFigure 6 -85 - RELEASE Syntax  ................................ ................................ ................................ ................................ ........  6-94 \nFigure 6 -86 - RESET TRACE Syntax  ................................ ................................ ................................ ................................ . ", "start_char_idx": 0, "end_char_idx": 9959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a9190d7-cb06-44dc-a578-8fbb40aef3ff": {"__data__": {"id_": "8a9190d7-cb06-44dc-a578-8fbb40aef3ff", "embedding": null, "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32512d19-4b00-4786-92c1-c1b945618d7f", "node_type": "4", "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7047d5093843e34ffe4003468304e2f6be7ec659bddb17052d04ff7d973978e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c715d56b-191f-4cce-83a9-3763ea361110", "node_type": "1", "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b690fe9c21a2d45c48b4fe4efeea1071583b307a5663b00f590e8a566eb1e79", "class_name": "RelatedNodeInfo"}}, "text": "6-95 ", "start_char_idx": 9959, "end_char_idx": 9964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "450e6967-e946-42ed-b197-0c8594c910c7": {"__data__": {"id_": "450e6967-e946-42ed-b197-0c8594c910c7", "embedding": null, "metadata": {"page_label": "15", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6290aa2c-f659-49fe-9ca3-c625bb1438ea", "node_type": "4", "metadata": {"page_label": "15", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "393d9f0e6fb068b6dea9d2be21cffb45f33c37422a6c96d9198337e712367198", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   xi Figure 6 -87 - RETURN Syntax  ................................ ................................ ................................ ................................ .........  6-96 \nFigure 6 -88 - REWRITE Syntax  ................................ ................................ ................................ ................................ .......  6-97 \nFigure 6 -89 - ROLLBACK Syntax  ................................ ................................ ................................ ................................ ..... 6-98 \nFigure 6 -90 - Sequential  SEARCH Syntax  ................................ ................................ ................................ .......................  6-99 \nFigure 6 -91 - Binary SEARCH (ALL) Syntax  ................................ ................................ ................................ ...................  6-100 \nFigure 6 -92 - SET ENVIRONMENT Syntax ................................ ................................ ................................ .....................  6-102 \nFigure 6 -93 - SET Prog ram Pointer Syntax  ................................ ................................ ................................ ...................  6-102 \nFigure 6 -94 - SET ADDRESS Syntax ................................ ................................ ................................ ...............................  6-103 \nFigure 6 -95 - SET Index Syntax  ................................ ................................ ................................ ................................ ..... 6-103 \nFigure 6 -96 - SET UP/DOWN Syntax  ................................ ................................ ................................ ............................  6-103 \nFigure 6 -97 - SET Condition Name Syntax  ................................ ................................ ................................ ...................  6-104 \nFigure 6 -98 - SET Switch Syntax  ................................ ................................ ................................ ................................ ... 6-104 \nFigure 6 -99 - SET ATTRIBUTE Syntax  ................................ ................................ ................................ ............................  6-104 \nFigure 6 -100 - File-Based SORT Syntax  ................................ ................................ ................................ ........................  6-105 \nFigure 6 -101 - Table SORT Syntax  ................................ ................................ ................................ ................................  6-107 \nFigure 6 -102 - START Syntax  ................................ ................................ ................................ ................................ ........  6-108 \nFigure 6 -103 - STOP Syntax  ................................ ................................ ................................ ................................ ..........  6-109 \nFigure 6 -104 - STRING Syntax  ................................ ................................ ................................ ................................ ...... 6-110 \nFigure 6 -105 - SUBTRACT FROM Syntax  ................................ ................................ ................................ ......................  6-111 \nFigure 6 -106 - SUBTRACT GIVING Syntax  ................................ ................................ ................................ ....................  6-111 \nFigure 6 -107 - SUBTRACT CO RRESPONDING Syntax  ................................ ................................ ................................ .... 6-112 \nFigure 6 -108 - SUPPRESS Syntax  ................................ ................................ ................................ ................................ .. 6-113 \nFigure 6 -109 - TERMINATE Syntax  ................................ ................................ ................................ ...............................  6-114 \nFigure 6 -110 - TRANSFORM Syntax  ................................ ................................ ................................ .............................  6-115 \nFigure 6 -111 - UNLOCK Syntax  ................................ ................................ ................................ ................................ .... 6-116 \nFigure 6 -112 - UNSTRING Syntax  ................................ ................................ ................................ ................................ . 6-117 \nFigure 6 -113 - WRITE Syntax  ................................ ................................ ................................ ................................ .......  6-119 \nFigure 7 -1 - C/GNU COBOL  Data Type Matches  ................................ ................................ ................................ ............  7-11 \nFigure 7 -2 - GNU COBOL  CALL ing C  ................................ ................................ ................................ ...............................  7-12 \nFigure 7 -3 - C CALL ing GNU COBOL  ................................ ................................ ................................ ...............................  7-13 \nFigure 8 -1 - Compiler Environment Variables  ................................ ................................ ................................ .................  8-4 \nFigure 8 -2 - Run-Time Environment Variables  ................................ ................................ ................................ .................  8-9 \nFigure 8 -3 - A Binary Truncation Demo Program  ................................ ................................ ................................ ..........  8-26 \nFigure 8 -4 - A Non -Scientific Comparison of Numeric Data Item USAGE Performance  ................................ ................  8-28 \n \n  ", "start_char_idx": 0, "end_char_idx": 5919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e7d6743-703c-49b2-845b-e767049a0112": {"__data__": {"id_": "0e7d6743-703c-49b2-845b-e767049a0112", "embedding": null, "metadata": {"page_label": "16", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "908ef37a-c50f-46bb-adef-ff36f7511ff1", "node_type": "4", "metadata": {"page_label": "16", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b5270db143f3f55b7f2e9e8cbfb360d59547638d100e8591cda06561530fac8d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Table of Contents  \n \n11FEB2012  Version   xii  \n ", "start_char_idx": 0, "end_char_idx": 84, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3daf8d19-ac8e-404a-ba5b-8e7648f36d3d": {"__data__": {"id_": "3daf8d19-ac8e-404a-ba5b-8e7648f36d3d", "embedding": null, "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43b05f27-24de-497f-850e-c2143875d6b7", "node_type": "4", "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "491e531239c545266e52ea94e5c1c7d491ee7180540b09b38166463f998e9c4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16e78e6f-4f02-46c1-9d90-cdc993c47940", "node_type": "1", "metadata": {}, "hash": "004efb4ba031ca2be496ecced6aee7f6934af6543e0790b418387e11b82e4a45", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-1 1. Introduction  \n1.1. What is GNU COBOL ? \nThis d ocument describes the syntax,  semantics and usage of the COBOL programming language as implemented by \nthe current version of GNU COBOL, formerly known as OpenCOBOL.   \nGNU COBOL  is an open -source COBOL compiler and runtime environment.  The GNU COBOL  compiler generates C \ncode which is automatically compiled and linked .  While originally developed for UNIX operating systems, GNU COBOL  \nhas also be en su ccessfully  built for OSX computers or Windows computers utilizing the UNIX -emulation features of \nsuch tools as Cygwin and MinGW1.  It has also been built  as a truly native Windows application  utilizing Microsoft\u2019s \nfreely -downloadable Visual Studio Express package  to provide the C compiler and linker/loader.    \nThe principal developers of GNU COBOL  are Keisuke Nishida and Roger While .  They may be contacted at the GNU \nCOBOL  website - www. ", "start_char_idx": 0, "end_char_idx": 995, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16e78e6f-4f02-46c1-9d90-cdc993c47940": {"__data__": {"id_": "16e78e6f-4f02-46c1-9d90-cdc993c47940", "embedding": null, "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43b05f27-24de-497f-850e-c2143875d6b7", "node_type": "4", "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "491e531239c545266e52ea94e5c1c7d491ee7180540b09b38166463f998e9c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3daf8d19-ac8e-404a-ba5b-8e7648f36d3d", "node_type": "1", "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "79427e82155d106626a7ab28e7babdf36f24bb9f7cd7b75f35fac1dce8096c5c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76cd7a76-0402-4cbd-b3ae-64654ad487f2", "node_type": "1", "metadata": {}, "hash": "5f63462908fd2997e5e07de74531c8edab9f1bc870beb7e51928671724dab935", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL .org. \nThis document was intended to serve as a full -function reference and user \u2019s guide suitable for both those readers \nlearni ng COBOL for the first time as well as those already familiar with some dialect of the COBOL language.   The \nauthor of this document is Gary Cutler, who may be reached via postings at the www. GNU COBOL .org forum, or by \nemail at CutlerGL@gmail.com .      \n1.2. Additional References and Documents  \nFor those wishing to learn COBOL for the first time, I can strongly recommend the following resources . \nIf you like to hold a book in your hands, I strongly recommend \u201cMurach\u2019s Structured COBOL\u201d, by Mike Murach, Anne \nPrince and Raul Menendez (2000) - ISBN 9781890774059.  Mike Murach and his various writing partners have been \nwriting outstanding COBOL textbooks for decades, and this text is no  exception.  It\u2019s an excellent book for those \nfamiliar with the concepts of programming in other languages , but unfamiliar with COBOL . \nWould you prefer  a web -based tutorial?  Try the University of Limerick (Ireland) COBOL web site - \nhttp://www.csis.ul.ie/ cobol /. \n1.3. Introducing COBOL  \nIf you already know a programming language, and that language isn\u2019t COBOL, chances are that language is Java, C or \nC++.  You will find COBOL a much different programming language than th ose \u2013 sometimes those differences are a \ngood thing and sometimes they aren\u2019t.  The thing to remember about COBOL is this \u2013 it was designed to solve business \nproblems.  It was desi gned to do that in the 1950s.   \nCOBOL was the first programming language to b ecome standardized such that a COBOL program written on computer \n\u201cA\u201d made by company \u201cX\u201d would be able to be compiled and executed on computer \u201cB\u201d made by company \u201cY\u201d.  This \nmay not seem like such a big deal today, but it was a radical departure from all p rogramming languages that came \nbefore it and even many that came after it.  \nThe name \u201cCOBOL\u201d actually says it all \u2013 COBOL is an acronym that stands for \u201cCOmmon Business Oriented Language\u201d.  \nNote the fact that the word \u201ccommon\u201d comes before all others.  The word \u201cbusiness\u201d is a close second.  Therein lies \nthe key to COBOL\u2019s success.  \n", "start_char_idx": 995, "end_char_idx": 3183, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76cd7a76-0402-4cbd-b3ae-64654ad487f2": {"__data__": {"id_": "76cd7a76-0402-4cbd-b3ae-64654ad487f2", "embedding": null, "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43b05f27-24de-497f-850e-c2143875d6b7", "node_type": "4", "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "491e531239c545266e52ea94e5c1c7d491ee7180540b09b38166463f998e9c4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16e78e6f-4f02-46c1-9d90-cdc993c47940", "node_type": "1", "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cf4a2dfc54bebfc02ab9bc6b7bc0ae576f4ba3787c1af279b2283976fd1ee940", "class_name": "RelatedNodeInfo"}}, "text": "1.3.1.  \u201cI Heard COBOL is a Dead Language !\u201d \nPhoenician is a dead language.  Mohegan  is a dead language.  Sanskrit  is a dead language.  What makes these \nlanguages dead is the fact that no one speaks them  anymore.  COBOL is NOT a dead language, and despite \npontifications that come down to us from the ivory towers of academia, it isn\u2019t even on life support.  \n                                                                 \n1 The MinGW approach is a personal favorite with the author of this manual because it creates a GNU COBOL  compiler and \nruntime that require only a single MinGW DLL to be available to GNU COBOL  tools and user programs.  That DLL is freely \ndistributable under the terms of the GNU General Public License.  A MinGW build of GNU COBOL  fits easily on and runs  from  a \n128MB flash drive with no need to install any software onto the Windows computer that will be using it.  Some functionality o f \nthe language, dealing with the sharing of files between concurrently executing GNU COBOL  programs and record locking on \ncertai n types of files, is sacrificed however as the underlying operating system routines needed to implement them aren\u2019t \navailable to Windows.  ", "start_char_idx": 3183, "end_char_idx": 4383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf126563-33ff-4a1c-b53b-d6c1ea665da1": {"__data__": {"id_": "bf126563-33ff-4a1c-b53b-d6c1ea665da1", "embedding": null, "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21a3898a-f12a-4794-a946-4ee34c183643", "node_type": "4", "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "278f4bc79fbcdbd0c70599655e61f60f2299cdf2060ff923abcbbb24e352f485", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d45a013-155d-43c1-b2d9-b0168d860764", "node_type": "1", "metadata": {}, "hash": "1bd0c0f84f603fec96a16024ddf373c86ea3a94a37fbf5439ee82136d0192456", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-2 What made t hose other languages die is the fact that they became both obsolete  and irrelevant .  As the peoples that \nspoke them were overrun or superseded by other populations that eventually replaced them, no one saw any need to \nspeak their languages.  \n COBOL is diffe rent.  Certainly, there were more people that \u201cspoke\u201d COBOL back in the 1980s than there are now.  \nRemember, however, the second word in COBOL\u2019s acronym \u2013 business.  Businesses are complex social and economic \norganisms that exist for but a single purpose \u2013 to make money.  One of the approaches businesses take to satisfy that \nall-important survival trait is the avoid ance of unnecessary  expense s. \nThis avoidance of expense turns out to have been key to the survival of COBOL because those programmers of the \n1980s (give or take a decade) were very  busy  programmers.    Estimates are that as many as several hundred billion \nlines of COBOL code were written for businesses world -wide.  Because of the first word in COBOL\u2019s name (\u201cCommon\u201d), \nas businesses replaced their older, slower and less -reliable computer systems with newer, faster and more -reliable \nones, they found that the massive investment they had in their COBOL software inventory paid dividends by remaining \nfunctional on those new systems - many times wi th no c hanges needed whatsoever!  \nUnwilling to endorse change merely for the sake of change, businesses replaced COBOL code only when absolutely \nnecessary and only when financially justifiable .  That justification appeared to have come  as the 20th century was \nnear ing the end.   \nWritten long before the end of the century was near, many COBOL applications used 2 -digit years instead of four digit \nyears because,  when the programs were written, computer storage of any kind was expensive .  Why should millions \nand million s of bytes of storage be wasted by all those \u201c19\u201d sequences when the software can just simply assume \nthem?  Since their software would suddenly think the current year was \u201c1900\u201d after the stroke of midnight, December \n31st 1999, businesses knew they were go ing to have to do something about the \u201cY2K\u201d (programmer \u201cgeek speak\u201d for \n\u201cYear 2000\u201d) problem.  \nAt last!  Y2K was going to be the massive asteroid strike that finally killed off the COBOL dinosaur.  \nUnfortunately for those seeking the extinction of COBOL, th at proved to be w ishful thinking.   \n", "start_char_idx": 0, "end_char_idx": 2478, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d45a013-155d-43c1-b2d9-b0168d860764": {"__data__": {"id_": "0d45a013-155d-43c1-b2d9-b0168d860764", "embedding": null, "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21a3898a-f12a-4794-a946-4ee34c183643", "node_type": "4", "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "278f4bc79fbcdbd0c70599655e61f60f2299cdf2060ff923abcbbb24e352f485", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf126563-33ff-4a1c-b53b-d6c1ea665da1", "node_type": "1", "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1c1afb5dd07724d623de6ee5d0ec4cdd8e62db2079876ab62d0b11244ca882ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6231e58-bc8b-44ec-8fc8-44341cc3b14a", "node_type": "1", "metadata": {}, "hash": "e08c5ccd6be90090dad72483c43a87eaf4a04112193defc7e8ac3d4a37da2193", "class_name": "RelatedNodeInfo"}}, "text": "Always concerned with the bottom line, businesses actually analyzed  the problems with their programs.  Many \napplications were  replaced with newer and \u201cbetter\u201d versions that used more appropriate (translation: more politi cally \ncorrect) languages  and computer systems .  BUT \u2026 many applications were not replaced.  ", "start_char_idx": 2478, "end_char_idx": 2797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6231e58-bc8b-44ec-8fc8-44341cc3b14a": {"__data__": {"id_": "e6231e58-bc8b-44ec-8fc8-44341cc3b14a", "embedding": null, "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21a3898a-f12a-4794-a946-4ee34c183643", "node_type": "4", "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "278f4bc79fbcdbd0c70599655e61f60f2299cdf2060ff923abcbbb24e352f485", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d45a013-155d-43c1-b2d9-b0168d860764", "node_type": "1", "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ea1556b9969101ac0ad63b8271451c400abb0b268f30b65f3871d03b1b430213", "class_name": "RelatedNodeInfo"}}, "text": "These were the absolutely \nessential applications whose replacement would cripple the business if everything didn\u2019t go absolutely perfectly.  \nThese COBOL application s were modified to use 4 -digit years instead of 2 -digit ones.  At the same time, many of them \nreceived cosmetic \u201cface lifts\u201d to make their computer/human interfaces more acceptable , frequently with the help of \nmodules developed in the newer languages.  \nThe result is that even today , after the Y2K \u201cextinction event\u201d,  there are , by some industry estimates , over 220 billion \nlines of COBOL code still running the businesses of the 21st century.  A fact that is disturbing to some is that \u2013 just as \ntiny little furry mammals evolved to cope with the original \u201cextinction event\u201d holocaust \u2013 COBOL has also evolved into \na leaner  and meaner \u201canimal\u201d capable of competing in niches and providing services unthought -of back in 1968.  That \nfact is confirmed by the fact that t hose lines of COBOL code being tracked by industry analysts are actually growing  at \nthe rate of about 4 billion a year . \nEvolution, you see, is in COBOLs DNA.  Over time, COBOL evolved in form and function, first via work done by the \nAmerican National Standards Institute (ANSI) and eventually through  the efforts of the International Standards \nOrganization (ISO).  \nThe first widely -adopted standard for COBOL was published by ANSI in 19682.  Named the ANS68 standard, this  \nversion of COBOL was originally standardized for use primarily as the business programming tool of the US Defense \nDepartment; it quickly was adopted by other Government agencies and private businesses alike.  \nSubsequent standards published in 1974 and 1985  (ANS74 and ANS85, respectively) added new features and evolved \nthe language toward adoption of the programmer -productivity tool of the time \u2013 \u201cStructured Programming\u201d.  \n                                                                 \n2 To that point, in 1968 the US Government made it a requirement that any computer system sold to them must  run a vers ion of \nCOBOL that adhered to the ANSI68 standard. The requirement that computers sold to the US Government had to support the \ncurrent COBOL standard remained for many, many years.  ", "start_char_idx": 2797, "end_char_idx": 5034, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86505ad7-4e6d-407a-a1d2-d59403ad3556": {"__data__": {"id_": "86505ad7-4e6d-407a-a1d2-d59403ad3556", "embedding": null, "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08233cc1-2ce5-4b1e-af95-c878148353a2", "node_type": "4", "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "58bdeffe815ae30b19812aac02ac807ce48985ff21b44376dba84b121f514d63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e64f7b9-c96b-410e-9a2d-510def4bb0d9", "node_type": "1", "metadata": {}, "hash": "6ffc840b4a6bf5a040757e14afede695557df3099cc0b4c9e2f287595134b41e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-3 As the 21st century dawned, programming had moved out of the board room and into the Ga me Room, the Living \nRoom and even the Kitchen .  As computers became more and more inexpensive they appeared in games, \nentertainment devices and appliances.  ", "start_char_idx": 0, "end_char_idx": 323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e64f7b9-c96b-410e-9a2d-510def4bb0d9": {"__data__": {"id_": "0e64f7b9-c96b-410e-9a2d-510def4bb0d9", "embedding": null, "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08233cc1-2ce5-4b1e-af95-c878148353a2", "node_type": "4", "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "58bdeffe815ae30b19812aac02ac807ce48985ff21b44376dba84b121f514d63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86505ad7-4e6d-407a-a1d2-d59403ad3556", "node_type": "1", "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0741370106594176720a6489376026b9d6c752ebe6445bd982214a86c86b60ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12296885-5b1a-4bc8-9f55-97433c1a5bf0", "node_type": "1", "metadata": {}, "hash": "dba621493901f2326bac13fc43c1433681b2eeafc18d14722819006a6c383b2f", "class_name": "RelatedNodeInfo"}}, "text": "Even the automobile became home to computers galore.  These computers \nneed software, and that softw are is written in the so -called \u201cmodern\u201d languages.  \nCombined with Y2K, these trends became the impetus for COBOL to evolve even newer features and capabilities. The \nCOBOL2002 standard3 introduced object -oriented features and syntax that make the language m ore programmer -\nfriendly to those trained by today\u2019s programming curricula.  The COBOL20xx standard, currently under development, \ncarries the evolution forward to the point where a COBOL20xx implementation will be fully as \u201cmodern\u201d as any other \nprogramming language.  \nThrough all this evolution, however, care was taken with each new standard to protect the investment business es (or \nanyone, for that matter) had  in COBOL software.  G enerally , a new COBOL standard \u2013 once implemented and adopted \nby a business - required minimal, if any, changes to existing applications.  When changes were  necessary, those \nchanges could frequently be made using tools that mechanically upgraded entire libraries of source code with little or \nno need for human intervention.  \nThe GNU COB OL implementation of the COBOL language supports virtually the entire ANS85 standard as well as some \nsignificant features of the COBOL2002 standard, although the truly object -oriented features are not there (yet).  \n1.3.2.  Programmer Productivity \u2013 The \u201cHoly Grail\u201d  \nThroughout the history of computer programming, the search for new ways to improve of the productivity of \nprogrammers has been the all -important consideration.  Sometimes this search has taken the form of introducing new \nfeatures in programming languages,  or even new languages altogether .  Sometimes it has evolved new ways of using \nthe existing languages.  Other than hobbyists, programming is an activity performed for money.  Businesses abhor \nspending anything more than is absolutely necessary.  Even gover nment agencies try to spend as little money on \nprojects as is absolutely necessary4.   \nThe amount of programming necessary to accomplish a given task \u2013 including rework needed by any errors found \nduring testing ( testing : \u201cthat time during which an application is actually in production use attempting to serve the \npurpose for which it was designed\u201d \uf04a) is the measure of programmer productivity .  Anything that reduces that effort \nwill therefore reduce the time spent in such activities  therefore r educing  the expense  of same .  When the expense of \nprogramming is reduced, programmer productivity is increased.  \nWhile many technological and procedural developments have made evolutionary  improvements to programmer \nproductivity, each of the following has been responsible for revolutionary  improvement s: \n The development of so -called \u201chigher -level\u201d programming languages that enable a programmer to specify in \na single statement of the language an action that would have required many more s eparate statements in a \nprior programming language.  The standardization of such languages, making them usable on a wide variety \nof computers and operating systems, was a key aspect of this development.  COBOL was a pioneering \ndevelopment in this area, bei ng one of the first higher -level languages  and the first to become standardized . \n The establishment of programming techniques that make programs easier to read and therefore easier to \nunderstand.  Not only do such techniques reduce the amount of rework nece ssary simply to make a program \nwork as designed, but they also reduce the amount of time a programmer needs to study an existing program \nin order how to best adapt it to changing business requirements.  The foremost development in this area was \nstructured programming .  Introduced in the late 1970s, this approach to programming spawned new \nprogramming languages (PASCAL, ALGOL , PL/1) designed around it.  With the ANSI85 standard, COBOL \nembraced the principles espoused by structured programming mavens as well as any of the languages \ndesigned strictly around it.  \n The establishment of programming techniques AND the introduction of programming language capabilities to \nfacilitate the reusability of program code.  Anything that supports code reusability  can have a pr ofound \n                                                                 \n3 \u201cPopular\u201d names for COBOL standards no longer include an organization\u2019s na me, and now use Y2K -compliant 4 -digit years.  \n4 This is a religious issue because it is an assertion that \u2013 sadly \u2013 must be taken purely on faith; there is, unfortunately, all too \nlittle real -world evidence to support it.  ", "start_char_idx": 323, "end_char_idx": 4959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12296885-5b1a-4bc8-9f55-97433c1a5bf0": {"__data__": {"id_": "12296885-5b1a-4bc8-9f55-97433c1a5bf0", "embedding": null, "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08233cc1-2ce5-4b1e-af95-c878148353a2", "node_type": "4", "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "58bdeffe815ae30b19812aac02ac807ce48985ff21b44376dba84b121f514d63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e64f7b9-c96b-410e-9a2d-510def4bb0d9", "node_type": "1", "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f2660f5b778847f1ce3ecbe31472ce4e2a8cce54d92944bad9f1bd7836df09ad", "class_name": "RelatedNodeInfo"}}, "text": "It makes sense though, so one can only hope it is true.  ", "start_char_idx": 4959, "end_char_idx": 5016, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e0684c0-625d-49b6-a914-5db9b1d4e101": {"__data__": {"id_": "8e0684c0-625d-49b6-a914-5db9b1d4e101", "embedding": null, "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5", "node_type": "4", "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "aa6ad079bb7b31379d16049ca038c723ac6b9c82247d60563b4df14b783dace2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688", "node_type": "1", "metadata": {}, "hash": "0e4518caea79bc423f959d745a32f63ed1f5481476164a3120926a589345c3a8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-4 impact to the amount of time it takes to develop new applications or to make significant changes to existing \nones.  In recent years, object -oriented programming has been the industry \u201cposter child\u201d for code reusability.  \nBy enabling program logic an d the data structures that logic manipulates to be encapsulated into easily \nstored and retrieved (and therefore \u201creusable\u201d) modules called classes , the object -oriented languages such as \nJava, C++ and C# have become the favorites of academia.  Since student s are being trained in these \ntechnologies and only these, by and large, it\u2019s no surprise that \u2013 today - object -oriented programming \nlanguages are the darlings of the industry.  \nThe reality is, however, that good programmers have been practicing code reusability for more than a half -\ncentury.  Up until recently, COBOL programmers have had some of the best code reusability tools available - \nthey\u2019ve been doing it with copybooks and subprograms  rather than classes, methods and attributes but the \nnet results have been similar.  With the COBOL2002 standard and the improvements made by the COBOL20xx \nstandard, the playing field is rapidly becoming leveled in this regard.  \n1.3.3.  Notable COBOL/ GNU COBOL  Features  \n1.3.3.1.  Basic Program Readability  \nThe most vociferous critics of COBOL always focus on the wordiness of the language, often citing the case of an \ninfamous \u201cHello World\u201d program as the \u201cproof\u201d that COBOL is so much more tedious to program in than mor e \n\u201cmodern\u201d languages.  This tedium is cited as such a significant impact to programmer productivity that \u2013 in their \nminds \u2013 the critics believe that COBOL can\u2019t go away quickly enough for them.  \nHere are two different \u201cHello World\u201d applications \u2013 one writte n in Java and the second in COBOL2002:  \nJava \u201cHello World\u201d  COBOL2002 \u201cHello World\u201d  (Free -form Mode)5 \nClass HelloWorld {  \n    public static void main(String[] args) {  \n        System.out.println(\u201cHello World!\u201d);  \n    } \n} identification division.  \nprogram-id. ", "start_char_idx": 0, "end_char_idx": 2101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688": {"__data__": {"id_": "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688", "embedding": null, "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5", "node_type": "4", "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "aa6ad079bb7b31379d16049ca038c723ac6b9c82247d60563b4df14b783dace2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e0684c0-625d-49b6-a914-5db9b1d4e101", "node_type": "1", "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "94f716a3323ac6010821eaf893043d7614fc5c8a127e83c60107cc40c8afd270", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9248cf3-d502-44c9-8496-b90ac5a02817", "node_type": "1", "metadata": {}, "hash": "d0bbe2a340f4341b0f10732490b7d6fb2490c666102506d58e392cd2c32bac3c", "class_name": "RelatedNodeInfo"}}, "text": "HelloWorld.  \nprocedure division.  \n    display \u201cHello World!\u201d.  \nBoth programs could have been written on a single line, if desired, and both languages allow a programmer to use (or \nnot use) indentation as they see fit to improve program readability.  Sounds like a tie so far.  \nLet\u2019s look at how much more \u201cwordy\u201d COBOL is than Java.  Count the characters in the two programs.  The Java \nprogram has 95 (not counting carriage returns and any indentation).  The COBOL program has 89 (again, not counting \ncarriage retu rns and indentation)!  Technically, it could have been only 65 because the \u201cidentification division.\u201d header \nis actually optional.  \nClearly, \u201cHello World\u201d doesn\u2019t look any better in Java than it does in COBOL.  \n", "start_char_idx": 2101, "end_char_idx": 2837, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9248cf3-d502-44c9-8496-b90ac5a02817": {"__data__": {"id_": "c9248cf3-d502-44c9-8496-b90ac5a02817", "embedding": null, "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5", "node_type": "4", "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "aa6ad079bb7b31379d16049ca038c723ac6b9c82247d60563b4df14b783dace2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688", "node_type": "1", "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d0affa146cd192f9b725d9b049bedfd215ca6560f4bfb808a1b9579ba71dae2d", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s look at a different problem.  Surely a pr ogram that asks a user to input a positive integer, generates the sum of all \npositive integers from 1 to that number and then prints the result will be MUCH easier to code in Java than in COBOL, \nright?  \n                                                                 \n5 One of the features of the COBOL2002 standard is its ability to allow programs to be coded in free -form mode, where line \nbreaks and indentation are pretty much left to the discretion of the programmer.  It wasn\u2019t always this way, an d the pre -2002 \nstandards for COBOL are quite rigid when it comes to that sort of thing.  Maybe the COBOL critics  ", "start_char_idx": 2837, "end_char_idx": 3510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83fef36d-cc10-4535-9e86-5177bf77c137": {"__data__": {"id_": "83fef36d-cc10-4535-9e86-5177bf77c137", "embedding": null, "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf", "node_type": "4", "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "77daa891afde7642d3f77070f6eabdc526588e8e1fc3d7f44a19ac5d14e58c8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f198b342-56f4-4ca1-a61e-8ff7edbd7480", "node_type": "1", "metadata": {}, "hash": "4bf96104a5f20c00e130af12aef6d6c293b89f2e77398ea1201d990729895735", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-5 You can be the judge.  \nJava Sum of Integers  COBOL2002 Sum of Integers (Free -form Mode)6 \nimport java.util.Scanner;  \npublic class sumofintegers {  \n  public static void main(String[] arg) {  \n    System.out.println(\u201cEnter a positive integer\u201d);  \n    Scanner scan=new Scanner(System.in);  \n    int n=scan.nextInt();  \n    int sum=0;  \n    for (int i=1;i<=n;i++) {  \n      sum=sum+i;  \n    } \n    System.out.println(\u201cThe sum is \u201c+sum);  \n  } \n} identification division.  \nprogram-id. ", "start_char_idx": 0, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f198b342-56f4-4ca1-a61e-8ff7edbd7480": {"__data__": {"id_": "f198b342-56f4-4ca1-a61e-8ff7edbd7480", "embedding": null, "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf", "node_type": "4", "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "77daa891afde7642d3f77070f6eabdc526588e8e1fc3d7f44a19ac5d14e58c8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83fef36d-cc10-4535-9e86-5177bf77c137", "node_type": "1", "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a6a1c6defb6e1b00e6ab047c2ecf35bf0aae391b9afa35735a3dbc49e9848e12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d95982f-3ccb-46ee-b574-24237710c1e6", "node_type": "1", "metadata": {}, "hash": "95a73ca32ea0d20550378e7e485ede84b1acfd8f7f08e250e16c2fb052782aba", "class_name": "RelatedNodeInfo"}}, "text": "sumofintegers.  \ndata division.  \nworking-storage section.  \n01 n   binary -int. \n01 i   binary -int. \n01 sum bin ary-int. \nprocedure division.  \ndisplay \u201cEnter a positive integer\u201d  \naccept n  \nperform varying i from 1 by 1 until i>n  \n  add i to sum  \nend-perform \ndisplay \u201cThe sum is \u201c sum.  \nMy familiarity with COBOL may be prejudicing my opinion, but it doesn\u2019t appear to me that the Java code is any \nsimpler than the COBOL code.   ", "start_char_idx": 560, "end_char_idx": 998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d95982f-3ccb-46ee-b574-24237710c1e6": {"__data__": {"id_": "3d95982f-3ccb-46ee-b574-24237710c1e6", "embedding": null, "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf", "node_type": "4", "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "77daa891afde7642d3f77070f6eabdc526588e8e1fc3d7f44a19ac5d14e58c8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f198b342-56f4-4ca1-a61e-8ff7edbd7480", "node_type": "1", "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "634fe0b9d9e8676058a583b910317ee76a81faee63e72184858f739a98d14ca8", "class_name": "RelatedNodeInfo"}}, "text": "In case you\u2019re interested in character counts, the Java code comes in at 2 81 (not \ncounting indentation characters).  The COBOL code is 28 7 (263 without the \u201cidentification division.\u201d header).  \nThe more  complex the programming logic being implemented, the more concise the Java code will appear to be, even \ncompared to 2002 -standard COBOL.  That conciseness comes with a price though \u2013 program code readability.  Java (or \nC or C++ or C#) programs are general ly intelligible only to trained programmers.  COBOL programs can be quite \nintelligible to non -programmers, however.  This is actually a side -effect of the wordiness of the language, where \nCOBOL statements use natural English words to describe their actions .  This inherent readability has come in handy \nmany times throughout my career when I\u2019ve had to learn obscure business (or legal) processes by reading COBOL \nprogram code that supports them.  \nThe \u201cmodern\u201d languages, like COBOL, also have their own \u201cboilerpla te\u201d infrastructure overhead that must be coded in \norder to write the logic that is necessary in the program.  Take for example the \u201c public static void \nmain(String[] arg) { \u201c and \u201cimport java.util.Scanner; \u201d statements .  The critics tend to forget \nabout this when they criticize COBOL for it\u2019s structural \u201coverhead.\u201d  \nWhen it first was developed, COBOL\u2019s easily -readable syntax made it profoundly different from  anything that had \nbeen seen before.  For the first time, it was possible to specify logic in a manner that was \u2013 at least to some extent \u2013 \ncomprehensible even to non -programmers.  Take for example, the following code written in FORTRAN \u2013 a language \ndevelo ped only a year before COBOL:  \nE = P * Q  \nI = I + E  \nWith its original limitation on the length of variable names (one letter or a letter followed by a number), and its use of \nalgebraic notation to express actions being taken, FORTRAN wasn\u2019t a particularly re adable language, even by \nprogrammers.  Compare this with the equivalent COBOL code:  \nMULTIPLY PRICE BY QUANTITY GIVING EXTENDED -AMOUNT \nADD EXTENDED -AMOUNT TO INVOICE -TOTAL \nClearly, even a non -programmer could at least conceptually understand what was going on!   Over time, languages like \nFORTRAN evolved more robust variable names, and COBOL introduced a more formula -based syntactical capability for \narithmetic operations, but FORTRAN was never as readable as COBOL.  \nBecause of its inherent readability, I would  MUCH rather be handed an assignment to make significant changes to a \nCOBOL program about which I know nothing than to be asked to do the same with a C, C++ , C# or Java program.  \nThose that argue that it is too boring/wasteful/time -consuming/insulting ( pick one) to have to code a COBOL program \n\u201cfrom scratch\u201d are clearly ignorant of the following facts:  \n                                                                 \n6 One of the features of the COBOL2002 standard is its ability to allow programs to be coded in free -form mode, where line \nbreaks and indentat ion are pretty much left to the discretion of the programmer.  It wasn\u2019t always this way, and the pre -2002 \nstandards for COBOL are quite rigid when it comes to that sort of thing.  Maybe the COBOL critics  ", "start_char_idx": 998, "end_char_idx": 4238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c14c6f73-d36a-48db-840d-6743f61fd983": {"__data__": {"id_": "c14c6f73-d36a-48db-840d-6743f61fd983", "embedding": null, "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79df2d75-a1a4-488f-8e9f-2c72cccf5ba6", "node_type": "4", "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7d563af510ff0a4066dcb397c1a5937551e3cc09849923726ed165b1962da3be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "392943af-341f-41c6-a778-1dbe790f1f51", "node_type": "1", "metadata": {}, "hash": "7d7e4876ba6eb01e16a94010af69310efe7b295d693166b051b5ffc801f8ed01", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-6 \n Many systems have program -development tools available to ease the task of coding programs; those tools \nthat concentrate on COBOL are capable of providing temp lates for much of the \u201coverhead\u201d verbiage of any \nprogram \u2026 \n Good programmers have \u2013 for decades \u2013 maintained their own skeleton \u201ctemplate\u201d programs for a variety of \nprogram types; simply load a template into a text edit or and you\u2019ve got a good start to the p rogram \u2026 \n Legend has it that there\u2019s actually only been ONE program ever  written in COBOL \u2013 all programs ever \n\u201cwritten \u201d there after were simply derivatives  of that one!  \n1.3.3.2.  COBOL Program  Structure  \nCOBOL programs are structured into four major areas of coding, each with its own purpose.  These four areas are \nknown as DIVISIONS.   \n", "start_char_idx": 0, "end_char_idx": 850, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "392943af-341f-41c6-a778-1dbe790f1f51": {"__data__": {"id_": "392943af-341f-41c6-a778-1dbe790f1f51", "embedding": null, "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79df2d75-a1a4-488f-8e9f-2c72cccf5ba6", "node_type": "4", "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7d563af510ff0a4066dcb397c1a5937551e3cc09849923726ed165b1962da3be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c14c6f73-d36a-48db-840d-6743f61fd983", "node_type": "1", "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3d48ff9cb1d1c8d56ffcbc9308d760fea6b5a46bcd921969968ff4854cc9aec", "class_name": "RelatedNodeInfo"}}, "text": "Each DIVISION may consist of a variety of SECTIONs and each SECTION consists of one or more PARAGRAPHs.  A \nPARARAPH consis ts of SENTENCEs, each of which consists of one or more STATEMENTs.   \nThis hierarchical structure of program components standardizes the composition of all COBOL programs.  Much of this \nmanual describes the various divisions, sections, paragraphs and statem ents that may comprise any COBOL program.  \nSee Also\u2026  \nThe Four Divisions of a Program  1.5 \nThe IDENTIFICATION DIVISION  3 \nThe ENVIRONMENT DIVISION  4 \n The DATA DIVISION  5 \nThe PROCEDURE DIVISION  6 \n \n1.3.3.3.  Copybooks  \nA \u201ccopybook\u201d is a segment of program code that may be utilized by multiple programs simply by having that program \nuse the COPY  statement to import that code into the program.  This code may define files, data structures or \nprocedural code.  \nToday\u2019s current programming languages have a statement (usually, this statement is named  \u201cimport\u201d,  \u201cinclude\u201d or \n\u201c#include\u201d) that performs this  same function.  What makes the COBOL copybook feature different than the \u201cinclude\u201d \nfacility in current languages, however, is the fact that the COBOL COPY  statement can edit the imported source code \nas it is being copied.    This capability makes  copybook libraries extremely valuable to making code reusable.  \nSee Also\u2026  \nThe COPY  Statement  2.1.1  \n  ", "start_char_idx": 850, "end_char_idx": 2213, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c4f3d48-06b8-48e8-bb72-65fba0b0ee2b": {"__data__": {"id_": "9c4f3d48-06b8-48e8-bb72-65fba0b0ee2b", "embedding": null, "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782", "node_type": "4", "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d85cbf1d2054209a743a20e0fc6a11ec33ddbde60fd13ff5c1b857a98dc73059", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "579c66b9-d1cf-4937-bbad-ea0cdb41c61e", "node_type": "1", "metadata": {}, "hash": "1a9bb274894f02a17655716f964b410290a52c09e555b6642bed06d65e9e87d6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-7 1.3.3.4.  Structured Data  \nCOBOL introduced the concept of structured data back in the 1960s.  Structured data is data which may be accessed \nas a single item or may be broken down into sub -items based upon their character position of occurrence within the \nstructure.  These structure s called group items .  At the bottom of any structure are data items that aren\u2019t broken \ndown into sub -items.  COBOL refers to these as elementary items . \n", "start_char_idx": 0, "end_char_idx": 521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "579c66b9-d1cf-4937-bbad-ea0cdb41c61e": {"__data__": {"id_": "579c66b9-d1cf-4937-bbad-ea0cdb41c61e", "embedding": null, "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782", "node_type": "4", "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d85cbf1d2054209a743a20e0fc6a11ec33ddbde60fd13ff5c1b857a98dc73059", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c4f3d48-06b8-48e8-bb72-65fba0b0ee2b", "node_type": "1", "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "271beb9c3d4a16cc5b323c8a804e5b95cce43ed61286c3244181124c7992a4df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "377a5ada-3fc8-49c4-a2a7-6d95e6c9cf2a", "node_type": "1", "metadata": {}, "hash": "d87ecafee064773afc7a5beb80e8d498870431dd0d7cad8aa42388ed1dcf4b2a", "class_name": "RelatedNodeInfo"}}, "text": "1.3.3.5.  Files  \nOne of COBOLs main strengths is the wide variety of files it is capable of accessing.  GNU COBOL  programs , like those \ncreated with other COBOL implementations, need to have the structure of any files they  will be reading and/or writing \ndescribed to them .  The highest -level characteristic of a file\u2019s structure is defined by specifying the ORGANIZATION  \n(section) of the file, as follows:  \nORGANIZATION IS \nLINE SEQUENTIAL  These are files with the simplest of all internal structures.  Their contents are structured simply \nas a series of data records, each terminated by a s pecial end -of-record delimiter character.  An \nASCII line -feed character (hexadecimal 0A) is the end -of-record delimiter character used by \nany UNIX or pseudo -UNIX (MinGW, Cygwin, OSX) GNU COBOL  build.  A truly native Windows \nbuild would use a carriage -retur n, line -feed (hexadecimal 0D0A) sequence.  \nRecords in this type of file need not be the same length.   \n", "start_char_idx": 521, "end_char_idx": 1497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "377a5ada-3fc8-49c4-a2a7-6d95e6c9cf2a": {"__data__": {"id_": "377a5ada-3fc8-49c4-a2a7-6d95e6c9cf2a", "embedding": null, "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782", "node_type": "4", "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d85cbf1d2054209a743a20e0fc6a11ec33ddbde60fd13ff5c1b857a98dc73059", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "579c66b9-d1cf-4937-bbad-ea0cdb41c61e", "node_type": "1", "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "605be476ff87f9dcf56f47ec1d2aacb0b5a0fbcebdb0b1021eed5eedd43a028a", "class_name": "RelatedNodeInfo"}}, "text": "Records must be read from or written to these files in a purely sequential manner.  The only \nway to read (or write) record number 100 would be to have rea d (or written) records number \n1 thru 99 first.  \nWhen the file is written by a GNU COBOL  program, the delimiter sequence will be \nautomatically added  to each data record as it is written to the file.   WRITE s to this type of file \nwill be done using an implied \u201cBEFORE ADVANCING 1 LINE \u201d clause in the absence of an \nexplicitly -specified ADVANCING  clause.  \nWhen the file is read, the GNU COBOL  runtime system will strip the trailing delimiter sequence \nfrom each record and pad the data (to the right) with SPACES   if the  data just read is shorter \nthan the area described for data records in the program.  If the data is too long, it will be \ntruncated and the excess will be lost.  \nThese files should not be defined to contain any exact binary data fields because the contents \nof those fields could inadvertently have the end -of-record sequence as part of their values \u2013 \nthis would confuse the runtime system when reading the file, and it  would interpret that value \nas an actual end -of-record sequence.  \nLINE ADVANCING  \nfiles These are files with an internal structure similar to that of the LINE SEQUENTIAL  file.  These \nfiles are defined (without  an explicit ORGANIZATION  specification ) using the LINE ADVANCING  \nclause on the ir SELECT  statement . \nWhen this kind of file is written by a GNU COBOL  program, the delimiter sequence will be \nautomatically added to each data record as it is written to the file.  WRITE s to this type of file \nwill be done using an implied \u201c AFTER  ADVANCING 1 LINE \u201d clause in the absence of an \nexplicitly -specified ADVANCING  clause.  \nLike ORGANIZATION LINE SEQUENTIAL  files, t hese files should not be defined to contain any \nexact binary data fields because the  contents of those fields could inadvertently have the end -\nof-record sequence as part of their values \u2013 this would confuse the runtime system when \nreading the file, and it would interpret that value as an actual end -of-record sequence.  \nORGANIZATION IS \nRECORD BINARY \nSEQUENTIAL  These files also have a  simple internal structure.  Their contents are structured simply as a n \narbitrarily -long sequence of data characters.  This sequence of data characters will be treat ed \nas a series of fixed -length data records  simply by logically splitting the sequence of data \ncharacters up into a series of fixed -length segments each as long as the maximum record size \ndefined in the program.  There are no special end -of-record delimite r characters in the file  and ", "start_char_idx": 1497, "end_char_idx": 4157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ad7cc27-28c8-4a79-b5f8-fe42d0d5f02c": {"__data__": {"id_": "6ad7cc27-28c8-4a79-b5f8-fe42d0d5f02c", "embedding": null, "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "593b56aa-e50f-46c1-8073-d7f991860c69", "node_type": "4", "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b48bf319f9f92ec86a002f1b3c9656984b80920eb50512c559f3ab290285fcf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df82032b-a91b-465e-a7cc-b7a245b711f1", "node_type": "1", "metadata": {}, "hash": "be32b5419fd226fdd926a72df3c8db04883187ca1d379b66ebdd46a727304e2f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-8 when the file is written to by a GNU COBOL  program , no delimiter sequence is appended to \nthe data . \nRecords in this type of file are all  the same physical length , except possibly for the very last \nrecord in the file, which may b e shorter than the others .  ", "start_char_idx": 0, "end_char_idx": 340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df82032b-a91b-465e-a7cc-b7a245b711f1": {"__data__": {"id_": "df82032b-a91b-465e-a7cc-b7a245b711f1", "embedding": null, "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "593b56aa-e50f-46c1-8073-d7f991860c69", "node_type": "4", "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b48bf319f9f92ec86a002f1b3c9656984b80920eb50512c559f3ab290285fcf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ad7cc27-28c8-4a79-b5f8-fe42d0d5f02c", "node_type": "1", "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "825435940164802e9bbaa2428bbbf3f8d6a92fa19b56ae2dcc61bdd8d68e9f64", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91d0b10a-4b26-4ba2-b202-2ac977800a94", "node_type": "1", "metadata": {}, "hash": "1928f2e23439a49d276dc9da06ff397012cdbd984dc0fa89a5a7be9f75de0a67", "class_name": "RelatedNodeInfo"}}, "text": "If variable -length logical records are \ndefined to the program, the space occupied by each physical record in the file will occupy the \nmaximum possible space.  \nSo, if a file contains 1275 characters of data, and a program defines the structure of that file as \ncontaining 100 -character records, then the file contents will consist of twelve (12) 100 -\ncharacter records with a final record containing only 75 characters.  \nEven though it appears that it should be possible to locate and proc ess any record in the file \ndirectly simply by calculating its starting character position based upon the program -defined \nrecord size, r ecords must be still be read or written to these files in a purely sequential \nmanner.  The only way to read (or write) re cord number 100 would be to have read (or \nwritten) records number 1 thru 99 first.  \nWhen the file is read, the data is transferred into the program exactly as it exists in the file.  In \nthe event that a short record is read as the very last record, that record will be SPACE  padded.  \nCare must be taken that programs reading such a file describe records whose length is exactly \nthe same as that used by the programs that created the file.  For example, the following shows \nthe contents of a RECORD BINARY SEQUENTIAL  file created by a progra m that wrote five 6 -\ncharacter records to it.  The \u201cA\u201d, \u201cB\u201d, \u2026 values and the background colors  reflect the records \nthat were written to the file:  \nA A A A A A B B B B B B C C C C C C D D D D D D E E E E E E \nNow, assume that another program reads this file, but described 10 -character records rather \nthan 6.  Here are the records that program will read:  \nA A A A A A B B B B \nB B C C C C C C D D \nD D D D E E E E E E \nThere may be times where this is exactly what you were looking for.  More often than not, \nhowever, this is not desirable behavior.  Suggestion : use a copybook to describe the record \nlayouts of any file; this guarantees that multiple programs accessing that  file will \u201csee\u201d the \nsame record sizes and layouts.  \nThese files can contain exact binary data fields  because t he contents of record  fields are \nirrelevant to the reading process as there is no end -of-record delimiter.  \nORGANIZATION IS \nRELATIVE  The contents of these files consist of a series of fixed -length data records prefixed with a four -\nbyte record header .  The record header contains the length of the data, in bytes.  The byte -\ncount does not include the four -byte rec ord header.  \nRecords in this type of file are all the same physical length.  If variable -length logical records \nare defined to the program , the space occupied by each physical record in the file will occupy \nthe maximum possible space.  \nThis file organization  was defined to accommodate either sequential or random processing .  \nWith a RELATIVE  file, it is possible to read or write record 100 directly, without having to have \nfirst read or written records 1 -99.  The GNU COBOL  runtime system uses the program -define d \nmaximum record size to calculate a relative byte position in the file where the record header \nand data begin, and then transfers the necessary data to or from the program.  \nWhen the file is written by a GNU COBOL  program, no delimiter sequence is appended  to the \ndata , but a record -length field is added to the beginning of each physical record.  \nWhen the file is read, the data is transferred into the program exactly as it exists in the file . \n", "start_char_idx": 340, "end_char_idx": 3812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91d0b10a-4b26-4ba2-b202-2ac977800a94": {"__data__": {"id_": "91d0b10a-4b26-4ba2-b202-2ac977800a94", "embedding": null, "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "593b56aa-e50f-46c1-8073-d7f991860c69", "node_type": "4", "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b48bf319f9f92ec86a002f1b3c9656984b80920eb50512c559f3ab290285fcf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df82032b-a91b-465e-a7cc-b7a245b711f1", "node_type": "1", "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "04a85550ac79ee725b1250192801bd53728f3301150915e20020fe4d8a7c60d5", "class_name": "RelatedNodeInfo"}}, "text": "Care must be taken that programs reading such a file describe recor ds whose length is exactly  \nthe same as that used by the programs that created the file.  It won\u2019t be a pretty site when the ", "start_char_idx": 3812, "end_char_idx": 4006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d106a2d-ed94-4cfc-9c9e-115d4cf2dfc3": {"__data__": {"id_": "2d106a2d-ed94-4cfc-9c9e-115d4cf2dfc3", "embedding": null, "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75bcae47-1f76-4533-ab12-aeadc92bd995", "node_type": "4", "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cee3a7b5fc6062dd8067f91333318d80a2264e6bdd5d4745a6dd6168afc1355e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03fc80b6-be2c-44ff-a04e-e3a870ccc7be", "node_type": "1", "metadata": {}, "hash": "c331f0d8f5b496f34821fa90d470494ae46a0f9e3d757fd044dbf58eadcd0fdf", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-9 GNU COBOL  runtime library ends up interpreting a four -byte ASCII character string as a record \nlength when it transfers data from the  file into the program!  \nSuggestion : use a copybook to describe the record layouts of any file; this guarantees that \nmultiple programs accessing that file will \u201csee\u201d the same record sizes and layouts.  \n", "start_char_idx": 0, "end_char_idx": 417, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03fc80b6-be2c-44ff-a04e-e3a870ccc7be": {"__data__": {"id_": "03fc80b6-be2c-44ff-a04e-e3a870ccc7be", "embedding": null, "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75bcae47-1f76-4533-ab12-aeadc92bd995", "node_type": "4", "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cee3a7b5fc6062dd8067f91333318d80a2264e6bdd5d4745a6dd6168afc1355e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d106a2d-ed94-4cfc-9c9e-115d4cf2dfc3", "node_type": "1", "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4d1b9fe77c91bbb9cae3fe47016466e4cb36ec835f9d6a51a0cfdc8adb229ba6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94c8ce6e-4439-4b83-999c-ab5895693c03", "node_type": "1", "metadata": {}, "hash": "fc7b829f7995ee20b71d2eb3660826654a1e97463f796cc1d9f1d94bd92fbafa", "class_name": "RelatedNodeInfo"}}, "text": "These files can contain exact binary data fields .  ", "start_char_idx": 417, "end_char_idx": 469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94c8ce6e-4439-4b83-999c-ab5895693c03": {"__data__": {"id_": "94c8ce6e-4439-4b83-999c-ab5895693c03", "embedding": null, "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75bcae47-1f76-4533-ab12-aeadc92bd995", "node_type": "4", "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cee3a7b5fc6062dd8067f91333318d80a2264e6bdd5d4745a6dd6168afc1355e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03fc80b6-be2c-44ff-a04e-e3a870ccc7be", "node_type": "1", "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc7944eb9c02acd7523bc50c4c06c0f056bc05b532eb061cf4c36bba37e2ad22", "class_name": "RelatedNodeInfo"}}, "text": "Th e contents of record fields are irrelevant to \nthe reading process as there is no end -of-record delimiter.  \nORGANIZATION IS \nINDEXED  This is the most advanced file structure available to GNU COBOL  programs.  It\u2019s not possible to \ndescribe the physical structure of such files because that structure will vary depending upon \nwhich advanced file -management facility was included into the GNU COBOL  build you will be \nusing (Berkeley Database [BDB], VBISAM,  etc.).  We will \u2013 instead \u2013 discuss the logical \nstructure of the file.  \nThere will be multiple structures stored for an INDEXED  file.  The first will be a data \ncomponent, which may be thought of as being similar to the internal structure of a RELATIVE  \nfile.  Data records may not, however, be directly accessed by their record number as would be \nthe case with a RELATIVE  file, nor may they be processed sequentially by their physical \nsequence in the file.  \nThe remaining structures will be one or more index components.  An index component is a \ndata structure that (somehow) enables the contents of a field, called a primary key , within \neach data record (a customer number, an employee number, a product code, a n ame, etc.) to \nbe converted to a record number so that the data record for any given primary key value can \nbe directly read, written and/or deleted.  Additionally, the index data structure is defined in \nsuch a manner as to allow the file to be processed seq uentially, record -by-record, in ascending \nsequence of the primary key field values.  Whether this index structure exists as a binary -\nsearchable tree structure (btree), an elaborate hash structure or something else is pretty much \nirrelevant to the programme r \u2013 the behavior  of the structure will be as it was just described.  \nThe runtime system will not allow two records to be written to an indexed file with the same \nprimary key value.  \nThe capability exists for an additional  field to be defined as what is know n as an alternate key .  \nAlternate key fields behave just like primary keys, allowing both direct and sequential access \nto record data based upon the alternate key field values, with one exception.  That exception \nis the fact that alternate keys may  be allo wed to have duplicate values, depending upon how \nthe alternate key field is described to the GNU COBOL  compiler.    \nThere may be any number of alternate keys, but each key field comes with a disk space \npenalty as well as an execution time penalty.  As the number of alternate key fields increases, \nit will take longer and longer to write and/or modify records in the file.  \nThese files can contain exact binary data fields.  The contents of record fields are irrelevant to \nthe reading process as there is no end -of-record delimiter.  \nAll files are initially described to a GNU COBOL  program using a SELECT  statement coded in the FILE-CONTROL  \nparagraph of the INPUT -OUTPUT SECTION  of the ENVIRONMENT DIVIS ION.  In addition to defining a name by which \nthe file will be referenced within the program, the SELECT  statement will specify the name and path by which the file \nwill be known to the operating system along with its ORGANIZATI ON, locking and sharing attributes.  \nA file description in the FILE SECTION  of the DATA DIVISION  will define the structure of records within the file, \nincluding whether or not variable -length records are possible and \u2013 if so \u2013 what the minimum and maximum length \nmight be.  In addition, the file description entry can specify file I/O block sizes.  \nSee Also\u2026  \nDefining the Characteristics of a File  4.2.1  \nDescribing the Structure of a File (FD/SD)  5.1 \n File Sharing  6.1.9.1  \nRecord Locking  6.1.9.2  \n \n1.3.3.6.  Table Handling  ", "start_char_idx": 469, "end_char_idx": 4204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14a0cc8d-80cb-4a8c-9028-d1266bda183c": {"__data__": {"id_": "14a0cc8d-80cb-4a8c-9028-d1266bda183c", "embedding": null, "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24e7fa0c-f784-4ead-8699-ce6204850d54", "node_type": "4", "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "22dcd97e5a2a69a6a4b8a4a483dec02152172ff9710c0f47ca86e6e1d7248352", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "765d5187-5a1d-40d7-afd9-0443b29d5240", "node_type": "1", "metadata": {}, "hash": "e3b3b07628f19aeb768e8bfa2fa275a9a1c7dcc70917cd0b558f84b80712b089", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-10 Other programming languages have arrays, COBOL has tables.  They\u2019re basically the same thing.  What makes COBOL \ntables special are two special statements that exist in the COBOL language \u2013 SEARCH  and SEARCH ALL .   \nThe first can search a table sequentially,  stopping only when either a table entry matching one of any number of \nsearch conditions is found, or when all table entries have been checked against the search criteria and none matched \nany of those criteria.  \n", "start_char_idx": 0, "end_char_idx": 552, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "765d5187-5a1d-40d7-afd9-0443b29d5240": {"__data__": {"id_": "765d5187-5a1d-40d7-afd9-0443b29d5240", "embedding": null, "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24e7fa0c-f784-4ead-8699-ce6204850d54", "node_type": "4", "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "22dcd97e5a2a69a6a4b8a4a483dec02152172ff9710c0f47ca86e6e1d7248352", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14a0cc8d-80cb-4a8c-9028-d1266bda183c", "node_type": "1", "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dcafb57adc26b27c37b14975134b403b45d9404cfdbd6a17310b2e832a22be55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47a391ae-874d-4eee-b669-bb7758b7a3d5", "node_type": "1", "metadata": {}, "hash": "427c8db35a9fb751c11d4544e5c24911603d7331f21ae111885f1336531c83d9", "class_name": "RelatedNodeInfo"}}, "text": "The second can perform an extremely  fast sear ch against a table sorted by and searched against a \u201ckey\u201d field \ncontained in each table entry.  The algorithm used for such a search is a binary search (also known as a half -interval \nsearch).  This algorithm ensures that only a small number of entries in t he table need to be checked in order to find a \ndesired entry or to determine that the desired entry doesn\u2019t exist in the table.  The larger the table, the more effective \nthis search becomes.  For example, a table containing 32,768 entries will be able to l ocate a particular entry or will \ndetermine the entry doesn\u2019t exist by looking at no more than fifteen (15) entries!  The algorithm is explained in detail \nin the SEARCH ALL  documentation.  \nSee Also\u2026  \nDefining Tables  0 \n The SEARCH  Statement  6.4.38.1  \nThe SEARCH ALL  Statement  6.4.38.2  \n \n1.3.3.7.  Sorting and Merging Data  \nThe COBOL language includes a powerful SORT  statement that can sort large amounts of data according to arbitrarily \ncomplex key structures.  This data may originate from within the program or may be contained in one or more \nexternal files.  The sorted data may be written automatically to one or more  output files or may be processed, record -\nby-record in the sorted sequence.  \nA special form of the SORT  statement also exists just to sort the data that resides in a table.  This is particularly useful \nif you wish to use SEARCH ALL  against the table.  \nA comp anion statement \u2013 MERGE \u2013 can combine the contents of multiple files together, provided those files are all \nsorted in a similar manner according to the same key structure(s).  The resulting output will consist of the contents of \nall of the input files, merg ed together and sequenced according to the common key structure(s).  The output of a \nMERGE  may be written automatically to one or more output files or may be processed internally by the program.  \nSee Also\u2026  \nThe MERGE  Statement  6.4.25  \n The SORT  Statement (File Sort)  6.4.40.1  \nThe SORT  Statement (Table Sort)  6.4.40.2  \n \n1.3.3.8.  String Manipulation  \nThere have been programming languages designed specifically for the processing of text strings, and there have been \nprogramming languages designed for the sole purpose of performing high -powered numerical computations.  ", "start_char_idx": 552, "end_char_idx": 2871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47a391ae-874d-4eee-b669-bb7758b7a3d5": {"__data__": {"id_": "47a391ae-874d-4eee-b669-bb7758b7a3d5", "embedding": null, "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24e7fa0c-f784-4ead-8699-ce6204850d54", "node_type": "4", "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "22dcd97e5a2a69a6a4b8a4a483dec02152172ff9710c0f47ca86e6e1d7248352", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "765d5187-5a1d-40d7-afd9-0443b29d5240", "node_type": "1", "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e9182a2953249eb0bb8778ec98446b470a8115ba88d85c6ac8ad298342978c71", "class_name": "RelatedNodeInfo"}}, "text": "Most \nprogramming languages fall some where in the middle, between these two extremes.  COBOL is no exception, \nalthough it does include some very powerful string manipulation capabilities; GNU COBOL  actually has even more \nstring -manipulation capabilities than many other COBOL implementations . \nSee Also\u2026  \nConcatenate Two Or More Strings  CONCATENATE  Intrinsic Function  6.1.7.9  \nSTRING  Statement  6.4.43  \nConversion Of A Numeric Time Or Date \nTo A Formatted Character String  LOCALE -TIME  Intrinsic Function  6.1.7.35  \nLOCALE -DATE  Intrinsic Function  6.1.7.32  \nConvert A Binary Value To Its \nCorresponding Character In The \nProgram\u2019s Characterset  CHAR  Intrinsic Function ; add 1 to argument before invoking \nthe function; The description of the CHAR  function shows a \ntechnique that utilizes the MOVE  statement that will \naccomplish the same thing without the need of adding 1 to \nthe numeric argument value first  6.1.7.7  ", "start_char_idx": 2871, "end_char_idx": 3815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2515558-dd2c-42bb-a49a-035b96fe7f4c": {"__data__": {"id_": "d2515558-dd2c-42bb-a49a-035b96fe7f4c", "embedding": null, "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4764088b-fe2b-4b30-bbd1-f9e96606d9a8", "node_type": "4", "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31e28d6d90e18eefda92dec5c0e84e9e1cd4652f0b9eb74429a27a7fc09552b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e35f5fa1-01c8-4de2-80a9-e63266d1b7a7", "node_type": "1", "metadata": {}, "hash": "e8b6c55b41efe804c0e644d4d6583f9c4e8e485b4de51f26cc3791149e11e287", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-11 Convert A Character String To Lower -Case  LOWER -CASE  Intrinsic Function  6.1.7.39  \nC$TOLOWER  Built -in Subroutine  8.3.1.13  \nCBL_TOLOWER  Built -in Subroutine  8.3.1.40  \nConvert A Character String To Upper -\nCase  UPPER -CASE  Intrinsic Function  6.1.7.87  \nC$TOUPPER  Built -in Subroutine  8.3.1.14  \nCBL_TOUPPER  Built -in Subroutine  8.3.1.41  \nConvert A Character String To Only \nPrintable Characters, Changing Any Non -\nPrintable Characters To A Default (\u201c.\u201d) Or \nProgrammer -Specified Replacement \nCharacter.  C$PRINTABLE  Built -in Subrouti ne 8.3.1.11  \nConvert A Character To Its  Numeric Value \nIn The Program\u2019s Characterset  ORD  Intrinsic Function; subtract 1 from the result; The \ndescription of the ORD  function shows a technique that \nutilizes the MOVE  statement that will accomplish the same \nthing without the need of adding 1 to the numeric argument \nvalue first  6.1.7  \nCount Occurrences Of Substrings In A \nLarger String  INSPECT  Statement with TALLYING  Option  6.4.24  \nDecode A Formatted Numeric String Back \nTo A Numeric Value (For Example, \nDecode \u201c$12,342.19 -\u201c To A -12342.19 \nValue)  NUMVAL  Intrinsic Function  6.1.7.54  \nNUMVAL -C Intrinsic Function (handles currency -formatted \nstrings)  6.1.7.59  \nDetermine The Length Of A String Or \nData -Item Capable Of Storing Strings  LENGTH  Intrinsic Function  6.1.7.31  \nBYTE -LENGTH  Intrinsic Function  6.1.7.6  \nExtract A Substring Of A String Based On \nIts Starting Character Position And Length  Use of a reference modifier on the string field.  ", "start_char_idx": 0, "end_char_idx": 1613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e35f5fa1-01c8-4de2-80a9-e63266d1b7a7": {"__data__": {"id_": "e35f5fa1-01c8-4de2-80a9-e63266d1b7a7", "embedding": null, "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4764088b-fe2b-4b30-bbd1-f9e96606d9a8", "node_type": "4", "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31e28d6d90e18eefda92dec5c0e84e9e1cd4652f0b9eb74429a27a7fc09552b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2515558-dd2c-42bb-a49a-035b96fe7f4c", "node_type": "1", "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c9ac31384dde831cb9cc4cfc66e38063d2673d0d3233a71eadd45975684b94a1", "class_name": "RelatedNodeInfo"}}, "text": "6.1.3  \nFormat A Numeric Item For Output, \nIncluding Thousands -Separators (\u201c,\u201d In \nThe USA), Currency Symbols (\u201c$\u201d In The \nUSA), Decimal Points, Credit/Debit \nSymbols, Leading Or Trailing Sign \nCharacters  MOVE  Statement with picture -symbol editing applied to the \nreceiving field  5.3 and \n6.4.26  \nJustification (Left, Right Or Centered ) Of \nA String Field  C$JUSTIFY  built -in subroutine  8.3.1.6  \nMonoalphabetic Substitution Of One Or \nMore Characters In A String With \nDifferent Characters  INSPECT  Statement with CONVERTING  Option  6.4.24  \nTRANSFORM  Statement  6.4.47  \nSUBSTITUTE  Intrinsic Function  6.1.7.77   \nSUBSTITUTE -CASE  Intrinsic Function  6.1.7.78  \nParse A String, Breaking It Up Into \nSubstrings Based Upon One Or More \nDelimiting Character Sequences; These \nDelimiters May Be Single Characters, \nMultiple -Character Strings Or Multiple \nConsecutive Occurrences Of Either  UNSTRING  Statement  6.4.49  \nRemoval Of Leading Or Trailing Spaces \nFrom A String  TRIM  Intrinsic Function  6.1.7.83  \nSubstitution Of A Single Substring With \nAnother Of The Same  Length , Based \nUpon The Substrings Starting Character MOVE  Statement with a reference modifier on the \n\u201creceiving \u201d field  6.1.3  \nand \n6.4.26.1  ", "start_char_idx": 1613, "end_char_idx": 2848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a6c5ae0-1742-4e39-b8fd-a84850816ca2": {"__data__": {"id_": "4a6c5ae0-1742-4e39-b8fd-a84850816ca2", "embedding": null, "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64f4fb18-b869-4677-bec2-b0344d985d20", "node_type": "4", "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14ed73917f10f38957c12af80046be8823b28e6497005625d2c8c1812d8b1649", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74c0b494-b40c-489e-82a7-85da3cf5892a", "node_type": "1", "metadata": {}, "hash": "e405e64e716fdfa31a36a449cdeb19aca42d76672e684fbf0ac2e2a9cf02823f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-12 Position And Length  \nSubstitution Of One Or More Substrings \nIn A String With Replacement Substrings \nOf The Same  Length , Regardless Of \nWhere They Occur  INSPECT  Statement with REPLACING  Option  6.4.24  \nSUBSTITUTE  Intrinsic Function  6.1.7.77  \nSUBSTITUTE -CASE  Intrinsic Function  6.1.7.78  \nSubstitution Of One Or More Substrings \nIn A String With Replacement Substrings \nOf A Potentially  Different  Length , \nRegardless Of Where They Occur  SUBSTITUTE  Intrinsic Function  6.1.7.77  \nSUBSTITUTE -CASE  Intrinsic Function  6.1.7.78  \n1.3.3.9.  Textual -User Interface (TUI) Features  \nThe COBOL2002 standard formalizes extensions to the COBOL language that allow for the definition and processing of \ntext-based screens , as is a typical function on mainframe computers .  ", "start_char_idx": 0, "end_char_idx": 861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74c0b494-b40c-489e-82a7-85da3cf5892a": {"__data__": {"id_": "74c0b494-b40c-489e-82a7-85da3cf5892a", "embedding": null, "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64f4fb18-b869-4677-bec2-b0344d985d20", "node_type": "4", "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14ed73917f10f38957c12af80046be8823b28e6497005625d2c8c1812d8b1649", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a6c5ae0-1742-4e39-b8fd-a84850816ca2", "node_type": "1", "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "00431aea4d207fde1deeafaeb787e3a409f37eb2a12d377fd95d416bbdc9ccf7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  implements virtually all the screen -\nhandling features described by COBOL2002.   Here is an example of such a screen as it might appear in the console \nwindow of a Windows computer:  \nFigure 1-1 - A Sample TUI Sc reen  \n \nScreens such as this7 are defined in the SCREEN SECTION  of the DATA DIVISION .  Once defined, screens are used at \nrun-time via the ACCEPT  and DISPLAY  statements.  \nThe COBOL2002 standard only covers textual -user interface (TUI) screens and not the more -advanced graphical -user \ninterface (GUI) screen design and processing capabilities built into most modern operating systems.  There are \nsubroutine -based packages available that can do full GUI development, but n one are open -source.  \nSee Also\u2026  \nDefining Screens  5.6 \n The ACCEPT Statement (Screen Data)  6.4.1.4  \nThe DISPLAY Statement (Screen Data)  6.4.12.4  \n \n                                                                 \n7 This screen comes from the program named GCic  \u2013 a full -screen front -end to the GNU COBOL  compiler \u2013 the source code of \nwhich is included as a sample in this manual.  See section 10.4  for the listi ng of the program.  \n", "start_char_idx": 861, "end_char_idx": 2017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a13fd38-7b38-461f-a123-2bd78f071214": {"__data__": {"id_": "9a13fd38-7b38-461f-a123-2bd78f071214", "embedding": null, "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5bea4f7c-4ab9-4985-83cd-383c96ced389", "node_type": "4", "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4f91070bfe8ba868b172174e01005fa9cb653c3c07ad1b1382fd35c38719ded0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afa8196b-95f5-45b7-8edc-46e159b9a77e", "node_type": "1", "metadata": {}, "hash": "e701e61feefbeb34f362249a4d8e675fb69a85bbcdb210214782ce09de562396", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-2 1.4. Syntax Description Conventions  \nSyntax of the GNU COBOL  language will be  described in this manual with  conventions familiar to COBOL programmers , \nwith a few coloring conventions throuwn in to aid in readability and interpretation .  The following is a description of \nthose syntactical -description techniques : \nBlack  Syntactical elements that are part of the GNU COBOL  language (including required \npunctuation symbols, operators and so on) will appear in black.  Other colors such as red \nand blue will be used to highlight those elements that are merely part of the syntax \ndescription.  \nUPPERCASE  COBOL language keywords and implementation -dependent names (the so -called \u201creserved \nwords\u201d of the COBOL language) will appear in BOLD UPPERCASE . \nUNDERLINING  reserved words that are UNDERLINED  are required in whatever syntactical context they are \nshown.  If a reserved word is not unde rlined, it is optional and its presence or absence has \nno effect on the program.  \nlowercase -italic  Generic terms representing substitutable items  will be shown in italic lowercase . \n[ optional -syntax  ] Red Square brackets  are used to enclose optional syntax .  Any clauses not enclosed in \nsquare brackets are mandatory.   These are also used sometimes in conjunction with the \nellipsis ( \u2026) to indicate an optional syntactical item that could be repeated.  \nchoice -1 | choice -2 Simple choices may be indicated with a red vertical bar  separating them.  Although not \ntypically used in COBOL syntactical diagrams, this convention is an effective alternative that \nmay be used when square brackets would make a syntax diagram too complicated.   For \nexample, THRU |THROUGH  would indicate that either of the required reserved words THRU  \nor THROUGH  may be used.   \n Red b races  are used to enclose choices .  Exactly  one of the choices  contained within the \nbraces must be selected.   These are also used sometimes in conjunction with the el lipsis ( \u2026) \nto indicate a choice of syntactical item s that may be repeated . \n \n\u2026 A red three -dot sequence  (called an \u201cellipsis\u201d) may appear following [ ], { } or lowercase  \nitalic  entries  to indicate that the syntax element preceding  the ellipsis may occur multiple  \ntimes.  \nShaded Areas  Shaded areas are used to highlight syntax elements that are recognized  by the GNU COBOL  \ncompiler but will either have no effect on the generated code  or will have a compiler \nwarning issued announcing that feature is  unsupported .  ", "start_char_idx": 0, "end_char_idx": 2579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "afa8196b-95f5-45b7-8edc-46e159b9a77e": {"__data__": {"id_": "afa8196b-95f5-45b7-8edc-46e159b9a77e", "embedding": null, "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5bea4f7c-4ab9-4985-83cd-383c96ced389", "node_type": "4", "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4f91070bfe8ba868b172174e01005fa9cb653c3c07ad1b1382fd35c38719ded0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a13fd38-7b38-461f-a123-2bd78f071214", "node_type": "1", "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0c1443f221c965495ad376159ab58e8f44afc84276e70681e543868fb13bfdae", "class_name": "RelatedNodeInfo"}}, "text": "Such elements are either present \nin the GNU COBOL  language to facilitate the porting of programs from other COBOL \nenvironments , reflect syntax elements that are not yet fully implemented  or syntax \nelements that have become obsolete . \n  \nchoice -1\nchoice -2", "start_char_idx": 2579, "end_char_idx": 2842, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44adaf06-e8bb-400a-a156-84cfeea90bff": {"__data__": {"id_": "44adaf06-e8bb-400a-a156-84cfeea90bff", "embedding": null, "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8f748c5-e7c2-48ee-8941-d57b63f0d234", "node_type": "4", "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9264fd77106acba041edbd0e9da3e944bf985568dabd9f579a82d9a25d6494d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77fc56da-5059-47ad-b2c7-6a483b2a0fd7", "node_type": "1", "metadata": {}, "hash": "51d6a6bef8e53cbc1a105165ea620c95597fcf2dfc0610d4c48cfb9f99c5da40", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-3 1.5. General GNU COBOL  Program Format  \n1.5.1.  Source Line Format  \n1.5.1.1.  Fixed Format  Mode  \nPrior to the COBOL2002 standard, source statements in COBOL programs were oriented around 80 -column punched \ncards.  This means that each source line in a COBOL program consisted o f five  different \u201c areas \u201d, defined by their \ncolumn number .   \nThis structure is enforced by GNU COBOL  when the compiler is operating in Fixed Format Mode ; Fixed Format Mode is \nthe default mode in effect when the compiler begins execution.  \nColumn \nNumbers  Area Name  Usage  \n1-6 Sequence \nNumber \nArea  Historically back in the days when punched -cards were used to submit COBOL program \nsource to a COBOL compiler , this part of a COBOL statement was reserved fo r a six -digit \nsequence number.  \nWhile the contents of this area are ignored by COBOL compilers, it existed so that a \nprogram actually punched on 80 -character cards could \u2013 if the card deck were dropped \non the floor \u2013 be run through a card sorter machine and restored to it\u2019s proper sequen ce.  \nOf course, this isn\u2019t necessary today; if truth be told, it hasn\u2019t been necessary for a long \ntime.   \n", "start_char_idx": 0, "end_char_idx": 1235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77fc56da-5059-47ad-b2c7-6a483b2a0fd7": {"__data__": {"id_": "77fc56da-5059-47ad-b2c7-6a483b2a0fd7", "embedding": null, "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8f748c5-e7c2-48ee-8941-d57b63f0d234", "node_type": "4", "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9264fd77106acba041edbd0e9da3e944bf985568dabd9f579a82d9a25d6494d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44adaf06-e8bb-400a-a156-84cfeea90bff", "node_type": "1", "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9b9d3b5d050aaea14674b7eac53d9f1be57ec70bc0766ac895fefb567e4063ab", "class_name": "RelatedNodeInfo"}}, "text": "See Section 9.1 for a discussion of how t his area tends to be used today.  \n7 Indicator  \nArea  Column 7 serves as an indicator in which one of five possible values will appear \u2013 space , \n\u201cD\u201d (or \u201cd\u201d), \u201c -\u201c (dash), \u201c/\u201d or \u201c*\u201d.  The vast majority of COBOL source file lines  have  a \nspace  in this position.  The values \u201cD\u201d, \u201c*\u201d and \u201c/\u201d are three different types of \n\u201ccomment\u201d indicators, telling the compiler to (normally) ignore this source line.   \nA value of \u201c -\u201c served as a continuation character in the event that a literal value, \nreserved wo rd or programmer -defined name needed to be split across two lines of code.  \nThis is/was rarely used and \u2013 when it does \u2013 is/was almost always used to continue an \nalphanumeric literal (character string).  \n8-11 \u201cArea A\u201d  Language DIVISION, SECTION and paragraph section headers must begin in Area A, as \nmust the level numbers 01, 77 in data description entries and the \u201c FD\u201d and \u201c SD\u201d file and \nSORT  description headers.   \n12-72 \u201cArea B\u201d  All other COBOL programming language components are coded in these column s. \n73-80 Program \nName Area  This is another area of COBOL statements that is ignored by COBOL compilers.  This part \nof every statement also hails back to the day when programs were punched on cards \u2013 it \nwas expected that the name of the program (or at least the first 8 characters of it) would \nbe punched here so that \u2013 if a dropped COBOL source deck contained more than one \nprogram, that handy card sorter machine could be used to first separate the cards by \nprogram name and then sort them by sequence numb er. \nToday\u2019s COBOL compilers (including GNU COBOL ) simply ignore anything past column 73  \nThe GNU COBOL  compiler (cobc) operates in fixed format mode by default  (you may explicitly specify the \u201c -fixed \u201d \nswitch , if you wish, but that is the default mode) , unless you specify otherwise in one of the following ways:  \n You run the compiler with the \u201c -free\u201d switch  to turn on free -format mode . \n You use the \u201c>>SET SOURCEFORMA T AS FREE \u201d CDF directive to turn on free -format mode  \n You use the \u201c>>SOURCE FORMAT IS FREE \u201d CDF directive to turn on free format mode  \nSee Also\u2026  ", "start_char_idx": 1235, "end_char_idx": 3409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98c865bd-8b82-4514-926d-a5a4eda8c9bb": {"__data__": {"id_": "98c865bd-8b82-4514-926d-a5a4eda8c9bb", "embedding": null, "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8", "node_type": "4", "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b86576ad98c33c91190f65675b5ac6bb589ccc3e85e51229fceb945929463de6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae", "node_type": "1", "metadata": {}, "hash": "a31d2f104d16d748fe98f1b2c7a36b2c183481000f41e4c76baef7cdbacef0bd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-4 Coding Comments in Programs  1.6 \nAlphanumeric Literals  1.8.2  \n The Compiler Directing Facility (CDF)  2.2 \n \n1.5.1.2.  Free Format Mode  \nAs of the COBOL2002  standard, a second mode now exists for COBOL source code statements \u2013 Free Format Mode . \nIn this mode of operation, GNU COBOL  statements may each be up to 255 characters long, with no specific \nrequirements as to what should appear in which columns.   \nThe GNU COBOL  compiler (cobc) can be commanded to operate in free format mode in any of the following ways:  \n You run the compiler with the \u201c -free\u201d switch  \n You use the >>SET SOURCEFORMAT AS FREE  CDF directive to turn on free -format mode  \n You use the >>SOURCE FORMAT IS FREE  CDF directive to turn on free format mode  \nUsing >>SET  and >>SOURCE  directives in your source code, you may switch back and forth between fixed and free \nformat mode at will.  \nSee Also\u2026  \nCoding Comments in Programs  1.6 \nAlphanumeric Literals  1.8.2  \n The Compiler Directing Facility (CDF)  2.2 \n \n1.5.2.  Program Structure  \nFigure 1-2 \u2013 General Format of a GNU COBOL  Progra m \n \nWhat you see here is the general format of a GNU COBOL  program .  Each program consists of up to four DIVISIONS \n(major groupings of language statements that all relate to a common purpose ).  ", "start_char_idx": 0, "end_char_idx": 1358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae": {"__data__": {"id_": "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae", "embedding": null, "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8", "node_type": "4", "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b86576ad98c33c91190f65675b5ac6bb589ccc3e85e51229fceb945929463de6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98c865bd-8b82-4514-926d-a5a4eda8c9bb", "node_type": "1", "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c1b8fc0a341331023358abbf11826fbc72f9a815c2fa94438dd7cf4080b42724", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e45e8786-86bc-46a6-9e27-807828a42f90", "node_type": "1", "metadata": {}, "hash": "8107707a4c70374bc9dc7848e3594048a32f24938fce93c172381f5a2a96ab55", "class_name": "RelatedNodeInfo"}}, "text": "Not all divisions are needed in every \nprogram , but they must be specified in the order shown when they are used.  \n[IDENTIFICATION DIVISION .]\nPROGRAM-ID.|FUNCTION -ID.name -1[options].\nENVIRONMENT DIVISION .\n[CONFIGURATION SECTION. program -configuration -specifications ]\n[INPUT-OUTPUTSECTION. general -file-descriptions ]\nDATADIVISION .\n[FILESECTION. detailed -file-descriptions ]\n[WORKING-STORAGE SECTION.permanent -data -definitions ]\n[LOCAL-STORAGE SECTION. temporary -data -definitions ]\n[LINKAGE SECTION. subprogram -argument -definitions ]\n[REPORTSECTION. report -definitions ]\n[SCREENSECTION. screen -layout -definitions ]\nPROCEDURE DIVISION [options].\nDECLARATIVES .\n", "start_char_idx": 1358, "end_char_idx": 2038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e45e8786-86bc-46a6-9e27-807828a42f90": {"__data__": {"id_": "e45e8786-86bc-46a6-9e27-807828a42f90", "embedding": null, "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8", "node_type": "4", "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b86576ad98c33c91190f65675b5ac6bb589ccc3e85e51229fceb945929463de6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae", "node_type": "1", "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "de07696bdb66acf04f5fc5e85e294ab4c361044570e6f559685b7b8998912142", "class_name": "RelatedNodeInfo"}}, "text": "event -handling -logic\nEND-DECLARATIVES .\ngeneral -program -logic\n[nested -opencobol -subprogram ]\u2026\n[ENDPROGRAM|FUNCTION name -1]", "start_char_idx": 2038, "end_char_idx": 2167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36f7ef5b-30ea-49ab-a6c5-e94d24ad668b": {"__data__": {"id_": "36f7ef5b-30ea-49ab-a6c5-e94d24ad668b", "embedding": null, "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e", "node_type": "4", "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b26d914259676db48b50e01aa0b52537392718dd3dda60c3a27671dd8de1f4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a02ee002-f4e1-43d8-8a96-1823ac1cadd1", "node_type": "1", "metadata": {}, "hash": "5de32065965b8f13b8430736703801ac1e4c2f7a66682950cc4f90ce6778f8e6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-5 This general program structure looks quite intimidating, but bear in mind that each DIVISION and SECTION you see \nhere serves a very specific function, and it is rare to find a program that needs each and every one of those functions!  \n1. A single file of COBOL source code may contain:  \na. A portion of a program; these files are known as copybooks  \nb. A single program.  In this case, the END PROGRAM  / END FUNCTION  statement is optional.  \nc. Multiple programs, separated from one another by END PROGRAM  / END FUNCTION  statements.  The fina l \nprogram in such a source code file need not have an END PROGRAM  / END FUNCTION  statement.  \n2. Program \u201cB\u201d may be nested  inside program \u201cA\u201d by including program B\u2019s source code at the end of program A\u2019s \nPROCEDURE DIVISION  without an intervening END PROGRAM A  / END FUNCTION  A statement.  For now, that\u2019s \nall that will be said about nesting.  Regardless of how many programs comprise a single GNU COBOL  source file \n(see #1c) , only a single output executable program will be generated  from that source file when the f ile is \ncompiled.  \n", "start_char_idx": 0, "end_char_idx": 1177, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a02ee002-f4e1-43d8-8a96-1823ac1cadd1": {"__data__": {"id_": "a02ee002-f4e1-43d8-8a96-1823ac1cadd1", "embedding": null, "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e", "node_type": "4", "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b26d914259676db48b50e01aa0b52537392718dd3dda60c3a27671dd8de1f4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36f7ef5b-30ea-49ab-a6c5-e94d24ad668b", "node_type": "1", "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f6f4e6040c7f8645985d7a1394d3f007bcd9e70ce67e1c6517fb9e17a590f29d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8515cb0e-0ea9-4ff6-8954-e3a765b56bf4", "node_type": "1", "metadata": {}, "hash": "63790fa5d6fe00098937cc9cb295cf9dfe085c94188087345d2fd840ed93594f", "class_name": "RelatedNodeInfo"}}, "text": "3. Here is a brief summary of the purpose of each DIVISION in a program:  \nDIVISION  Purpose  \nIDENTIFICATION  The IDENTIFICATION DIVISION  provides basic identification of the program (or function) by \ngiving it a name.   While the IDENTIFICATION DIVISION  is required in all programs, the actual \n\u201cIDENTIFICATION DIVISION \u201d header \u2013 as of the COBOL2002 standard \u2013 is not.  \nENVIRONMENT  The ENVIRONMENT DIVISION  defines the external computer environment in which the \nprogram will be operating.  This includes defining any files that the program may be accessing.  \nDATA  The DATA DIVISION  is used to define all data that will be processed by a program.   \nPROCEDURE  The PROCEDURE DIVISION  contains all executable program code.  \nSee Also\u2026  \nCopybooks  1.3.3.3  \nSubprograms  Subroutines vs Functions  7.1 \nDetails Of Nested Subprograms  7.6 \n The IDENTIFICATION DIVISION  3 \nThe ENVIRONMENT DIVISION  4 \nThe DATA DIVISION  5 \nThe PROCEDURE DIVISION  6 \n \n1.6. In-Program Documentation (i.e. \u201cComments\u201d)  \nThe following chart documents how comments may be imbedded into GNU COBOL  program source to provide \ndocumentation.  \nType of \nComment  When in \u201cFIXED\u201d Mode\u2026  When in \u201cFREE\u201d Mode\u2026  \nBlank lines  Blank lines may be inserted as desired.  Blank lines may be inserted as \ndesired.  \nFull-line \ncomments  An entire source line will be treated as a comment (and will \nbe ignored by the compiler) by coding an asterisk (\u201c*\u201d) in \ncolumn seven (7) . An entire source line will be treated \nas a comment (and will be ignored by \nthe compiler) by coding the sequence \n\u201c*>\u201d, starting in any column, as the \nfirst non -blank charac ters on the line.  \nFull-line \ncomments \nwith form -\nfeed  An entire source line will be treated as a comment by coding \na slash (\u201c/\u201d) in column seven (7).  In addition, most COBOL \ncompilers capable of generating source program listings will \nissue a form -feed in the listing so that the \u201c/\u201d line is at the \ntop of a n ew page of the listing.  The GNU COBOL  compiler \n(cobc) does not support this form -feed behavior, although it \ndoes treat \u201c/\u201d lines as comments.  The GNU COBOL  \nInteractive Compiler, or GCic , does  support this form -feed \nbehavior when it generates program sour ce listings!   GCic  is \na GNU COBOL  program that provides a full -screen front -end \nto the actual GNU COBOL  compiler.  You can see a \nscreenshot of it in section 1.3.3.9 . ", "start_char_idx": 1177, "end_char_idx": 3572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8515cb0e-0ea9-4ff6-8954-e3a765b56bf4": {"__data__": {"id_": "8515cb0e-0ea9-4ff6-8954-e3a765b56bf4", "embedding": null, "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e", "node_type": "4", "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b26d914259676db48b50e01aa0b52537392718dd3dda60c3a27671dd8de1f4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a02ee002-f4e1-43d8-8a96-1823ac1cadd1", "node_type": "1", "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "183e271cd24e928cfed0fcc78dcd2ec1e6a8f9a520cdb5bd4a9164f698a7b421", "class_name": "RelatedNodeInfo"}}, "text": "There is no FREE -mode equivalent to \n\u201c/\u201d. ", "start_char_idx": 3572, "end_char_idx": 3615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbff4355-39e8-47dd-8f60-2c44f97445ce": {"__data__": {"id_": "dbff4355-39e8-47dd-8f60-2c44f97445ce", "embedding": null, "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580", "node_type": "4", "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e65ae20d9da5820991dfe9f820148e54e62af08957f9b07034d17a8becba4d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8", "node_type": "1", "metadata": {}, "hash": "c9b7a99c43149269eb8316f6369c93394db2e13611000a8b6dd4a453e84299a8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-6 Type of \nComment  When in \u201cFIXED\u201d Mode\u2026  When in \u201cFREE\u201d Mode\u2026  \nPartial -line \ncomments  Any text following the character sequence \u201c*>\u201d on a source \nline will be treated as a comment.  The \u201c*\u201d must appear in \ncolumn seven (7) or beyond.  ", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8": {"__data__": {"id_": "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8", "embedding": null, "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580", "node_type": "4", "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e65ae20d9da5820991dfe9f820148e54e62af08957f9b07034d17a8becba4d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbff4355-39e8-47dd-8f60-2c44f97445ce", "node_type": "1", "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "52d0287ebf54dc0ebe95b1911d9da739ceefc1ebe82d128807d22ea524ef8ebc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5f22c47-f9bc-4ba3-9d99-32da291f9fc3", "node_type": "1", "metadata": {}, "hash": "e9dfe9c84fec14001b9e9293ca38dcac6e6c5da930c1980cd528dfbc5ea88cdd", "class_name": "RelatedNodeInfo"}}, "text": "Any text following the chara cter \nsequence \u201c*>\u201d on a source line will \nbe treated as a comment.  The \u201c*\u201d \nmay appear in any column.  \nComments \nthat may be \ntreated as \ncode \n(typically for \ndebugging \npurposes)  By coding a \u201cD\u201d in column 7  (upper - or lower -case), an \notherwise valid GNU COBOL  source line will be treated as a \ncomment  by the compiler.   By specifying the character sequence  \n\u201c>>D \u201d (upper - or lower -case) as the \nfirst non -blank characters on a source \nline, an otherwise  valid GNU COBOL  \nsource line will be treated as a \ncomment  by the compiler.   \nSuch statements may be compiled either by specifying the \u201c-fdebugging -line\u201d switch  on the GNU \nCOBOL  compiler or by adding the \u201c WITH DEBUGGING MODE \u201d clause to the SOURCE -COMPUTER  \nparagrap h. \nSee Also\u2026  \nThe SOURCE -COMPUTER  Paragraph  4.1.1  \n Sample Program Listing: GCic  9.4 \n \n1.7. Use of Commas  and Semicolons  \nA comma (\u201c,\u201d) or a semicolon (\u201c;\u201d) may be inserted into a GNU COBOL  program to improve readability at any spot \nwhere white space would be legal (except, of course, within alphanumeric literals ).  These  characters are always \noptional.    \nThe use of comma characters can cause \u201cconfusion\u201d to a COBOL  compiler if the DECIMAL PO INT IS COMMA  clause is \nused  in SPECIAL -NAMES .  The following statement, which calls a subroutine passing it two arguments (the numeric \nconstants 1 and 2):  \nCALL \u201cSUBROUTINE\u201d USING 1, 2 \nwould \u2013 with DECIMAL POINT IS COMMA  in effect \u2013 actually be interpreted as a subroutine call with ONE  argument \n(the non-integer numeric constant 1.2).  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n1.8. ", "start_char_idx": 313, "end_char_idx": 1964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5f22c47-f9bc-4ba3-9d99-32da291f9fc3": {"__data__": {"id_": "c5f22c47-f9bc-4ba3-9d99-32da291f9fc3", "embedding": null, "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580", "node_type": "4", "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e65ae20d9da5820991dfe9f820148e54e62af08957f9b07034d17a8becba4d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8", "node_type": "1", "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d578f465209316eeda93b156b7ea5442e2efc44d0ca89f867908a6a9849dcdc3", "class_name": "RelatedNodeInfo"}}, "text": "Use of Literals  \nLiterals are constant values that will not change during the execution of a program.  There are two fundamental types \nof literals \u2013 numeric and alphanumeric.  \n1.8.1.  Numeric Literals  \nNumeric literals  are numeric constants which may be used as array subscripts, as values in arithmetic expressions, or \nin any procedural statement where a numeric value may be used.  Numeric literals may take any of the following \nforms:  \n Integers such as 1, 56, 2192 or -54. \n Non -integer fixed point values such as 1.12 or -2.95.  \n Floating -point values using \u201c Enn\u201d notation such as 9.92E25 (representing 9.92 x 1025) or 5.7E -14 \n(representing 5.7 x 10-14).  Both the m antissa (the number before the E) and the  exponent (the number after \nthe E) may be explicitly specified as positive (with a +), negative or unsigned (and therefore implicitly \npositive).  A floating -point  literal \u2019s value must be within the range -1.7 x 10308  to +1.7 x 10308 with no more \nthan 15 d ecimal digits of precision . \n Hexadecimal numeric literals such as H\u201d1F\u201d (1F 16 = 31 10), h\u201922\u2019 (22 16 = 34 10) or H\u2019DEAD\u2019 (DEAD 16 = 57005 10).  \nThe H character may either be upper - or lower -case and either single quote (\u2018) or double -quote (\u201c) characters \nmay be u sed.  Hexadecimal numeric literals are limited to a maximum value of H\u2019FFFFFFFFFFFFFFF\u2019 (a 64 -bit \nvalue).   ", "start_char_idx": 1964, "end_char_idx": 3336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ac17321-2398-49c3-8ad4-836be1dbde5b": {"__data__": {"id_": "7ac17321-2398-49c3-8ad4-836be1dbde5b", "embedding": null, "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d", "node_type": "4", "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eebb856d378e6f4fd272d033e5a6631113ec05fd65929dcf25650f307fc801e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f", "node_type": "1", "metadata": {}, "hash": "38963d3814bd18438afb90d6e3dbc7c8a80ebdecabb50e03fe36c116fe7f4551", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-7 1.8.2.  Alphanumeric Literals  \nAlphanumeric  literals  are character string s suitable for display on a computer screen, printing on a report, \ntransmission through a communications connection or storage in PICTURE  X or PICTURE  A data items .  These are NOT \nvalid for use in arithmetic expressions unless they can first be converted t o their numeric computational equivalent via \nthe NUMVAL  and NUMVAL -C intrinsic functions . \nAlphanumeric literals may take any of the following forms:  \n Any sequence of characters enclosed by a pair of single -quote (\u2018) characters  or a pair of double -quote (\u201c) \ncharacters constitutes a string literal .  The double -quote character (\u201c) may be used as a data character within \nan apostrophe -delimited string litera l, and an apostrophe may be used as a data character within a double -\nquote -delimited string literal.   If an apostrophe  character must be included as a data character  within an \napostrophe -delimited string literal , express that character as two consecutive apostrophes  (\u2018\u2019).  If a double -\nquote character must be included as a data character  within a double -quote -delimited string litaral , express \nthat character as two consecutive double -quotes (\u201c\u201d).  \n A literal formed according to the same rules as for a string li teral (above), but prefixed with the letter \u201c Z\u201d \n(upper - or lower -case) constitutes a zero -delimited  string literal .  These literals differ from ordinary string \nliterals in that they will be explicitly terminated with a byte of hexadecimal value 00.  This facilitates the \n\u201csharing\u201d of such literals with C programs8. \n A hexadecimal literal such as X\u201d4A4B4C\u201d (4A4B4C 16 = the ASCII string \u2018JKL\u2019), x\u201920\u2019 (20 16 = a space) or \nX\u201930313233\u2019 (30313233 16 = the ASCII string \u20180123\u2019).  The \u201c X\u201d character may either be upper - or lower -case \nand either single quote (\u2018) or double -quote (\u201c) characters may be used.  These hexadecimal alphanumeric \nliterals should always consist of an even number of hexadecimal digits, because each character is \nrepresented by eight bits worth of data (2 hex digits).  Hexadecimal alphanumeric literals may be of almost \nunlimited length.  \nAlphanumeric literals too long to fit on a single line may be continued to the next line in one of two ways:  \n1. If you are using Fixed Format Mode , the alphanumeric literal can be run right up to and including column 72.  \nThe literal may then be continued on the next line anywhere after column 11 by coding another quote or \napostrophe (whichever was used to begin the literal originally).  The continuation line must also have a  \nhyphen ( -) coded in the indicator area ( column 7 ).  Here is an example:  \n         1         2         3         4         5         6         7         8  \n12345678901234567890123456789012345678901234567890123456789012345678901234567890  \n       01  LONG -LITERAL-VALUE-DEMO     PIC X(60) VALUE \u201cThis is a long l  \n      -                                                \u201citeral that must  \n      -                                                \u201c be continued.\u201d  \n2. Regardless of whether the compiler is operating in Fixed or  Free Format Mode , GNU COBOL  allows \nalphanumeric literals to be broken up into separate fragments.  These fragments have their own beginning \nand ending quote/apostrophe characters and are \u201cglued together\u201d at compilation time using \u201c &\u201d characters.  \n", "start_char_idx": 0, "end_char_idx": 3470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f": {"__data__": {"id_": "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f", "embedding": null, "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d", "node_type": "4", "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eebb856d378e6f4fd272d033e5a6631113ec05fd65929dcf25650f307fc801e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ac17321-2398-49c3-8ad4-836be1dbde5b", "node_type": "1", "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "75bae124686a61c10937326de83151d037be169e956127a0c55e0eba62b13a03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f69e0c80-4643-4ca2-bd70-817bd9941950", "node_type": "1", "metadata": {}, "hash": "3ab577cf98540b3966c13626c0b0687a72b6f8fe8257bfdadfe31737f6db883e", "class_name": "RelatedNodeInfo"}}, "text": "No conti nuation indicator is needed.  ", "start_char_idx": 3470, "end_char_idx": 3509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f69e0c80-4643-4ca2-bd70-817bd9941950": {"__data__": {"id_": "f69e0c80-4643-4ca2-bd70-817bd9941950", "embedding": null, "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d", "node_type": "4", "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eebb856d378e6f4fd272d033e5a6631113ec05fd65929dcf25650f307fc801e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f", "node_type": "1", "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "abbe0b268a6bd1e6c87c8d4464171166ac3bd5b4aa919b3c80c11b5838d0e715", "class_name": "RelatedNodeInfo"}}, "text": "Here\u2019s an example:  \n         1         2         3         4         5         6         7         8  \n12345678901234567890123456789012345678901234567890123456789012345678901234567890  \n       01  LONG -LITERAL-VALUE-DEMO     PIC X( 60) VALUE \u201cThis is a\u201d &  \n                                        \u201c long literal that must \u201c &  \n                                        \u201cbe continued.\u201d.  \nIf your program is using Free Format Mode , there\u2019s less need to continue long alphanumeric literals becau se \nstatements may be as long as 255 characters.  \nNumeric literals may be split across lines just as alphanumeric literals are, using either of the above techniques and \nboth reserved and user -defined words can be split across lines too (using the first techn ique).  The continuation of \nnumeric literals and user -defined/reserved words  is provided merely to provide compatibility with older COBOL \nversions  and programs, but should not be used with new programs  \u2013 it just m akes for ugly -looking programs.  \n                                                                 \n8 In the C programming language, strings must be terminated with a null byte (X\u201900\u2019).  ", "start_char_idx": 3509, "end_char_idx": 4676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb0b8114-1b87-4161-8e3c-9e7100c6f198": {"__data__": {"id_": "fb0b8114-1b87-4161-8e3c-9e7100c6f198", "embedding": null, "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de", "node_type": "4", "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fb6a19dc121cf5ce28c9b152cfb0093dd0f7738bb98ff85ad494406c85f3b5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e", "node_type": "1", "metadata": {}, "hash": "9d76420d21e5b82fbc8e96731b0d6f397c2756cb663f7216480878ff9593e06b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-8 See Also\u2026  \nFixed -Format Source Code  1.5.1.1  \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \n The NUMVAL  Intrinsic Function  6.1.14.58  \nThe NUMVAL -C Intrinsic Function  6.1.14.59  \n \n1.9. Use of Figurative Constants  \nFigurative constants  are reserved words that may be used in lieu of certain literals.  In general, a figurative constant \nmay be freely used anywhere its corresponding value could have been used; when used, their value is interpreted \nwere an arbitrarily long sequence of the ch aracters in question . \nThe following chart lists the GNU COBOL  figurative constants and their respective equivalent values.  \nFigure 1-3 - Figurative Constants  \nFigurative \nConstant  Type of \nLiteral  Equivalent Valu e \nZERO , ZEROS , \nZEROES  Numeric  0 \nSPACE , SPACES  Alphanumeric  Blank  \nQUOTE , \nQUOTES  Alphanumeric  Double -quote character(s)  \nLOW -VALUE , \nLOW -VALUES  Alphanumeric  The character whose value in the programs collating sequence  is lowest.  If a \nprogram is using the ASCII collating sequence , this will represent a sequence of \ncharacters comprised entirely of 0 -bits.  \nHIGH -VALUE , \nHIGH -VALUES  Alphanumeric  The character whose value in the programs collating sequence  is highest.  If a \nprogram is using the ASCII collating sequence , this will represent a sequence of \ncharacters comprised entirely of 1 -bits.  \nNULL  Alphanumeric  A character comprised entirely of zero -bits (regardless of the programs collating \nsequence ). \n1.10.  User-Defined Names  \nWhen you write GNU COBOL  programs, you\u2019ll need to create a variety of names to represent various aspects of the \nprogram, the programs data and the external environment in which the program is running.   \nUser -defined names may be composed f rom the characters \u201cA\u201d through \u201cZ\u201d (upper - and/or lower -case), \u201c0\u201d through \n\u201c9\u201d, dash (\u201c -\u201c) and underscore (\u201c_\u201d).  User -defined names may neither start nor end with hyphen or underscore \ncharacters.  \nWith the exception of proc edure names , user -defined names must  contain at least one letter.  \nWhen user -defined names are created  as names for data, they will be referenced in this document under the term \nidentifier . \n1.11.  Use of LENGTH OF  \n Alphanumeric literals and identifiers may optionally be prefixed with the clause \n\u201cLENGTH OF \u201d.  In such cases, the literal actually is a numeric  literal with a value \nequal to the number of bytes in the alphanumeric literal.  For example, the \nfollowing two GNU COBOL  statements both display the same result (27):  \n01  Demo -Identifier          PIC X(27).  *> This is a 27 -character data -item \n. \n", "start_char_idx": 0, "end_char_idx": 2680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e": {"__data__": {"id_": "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e", "embedding": null, "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de", "node_type": "4", "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fb6a19dc121cf5ce28c9b152cfb0093dd0f7738bb98ff85ad494406c85f3b5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb0b8114-1b87-4161-8e3c-9e7100c6f198", "node_type": "1", "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "019573e481146716b90f636e6a062e1874f2ac820070c51e31753d67860b8607", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4953c58-0a12-4cf8-b59e-d175bfd7315b", "node_type": "1", "metadata": {}, "hash": "0060c1c42a81daf9c3aea7547fc74ddaa62e7809dd6bbd8d2b3bc7ea4700a4c6", "class_name": "RelatedNodeInfo"}}, "text": ". \n", "start_char_idx": 595, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4953c58-0a12-4cf8-b59e-d175bfd7315b": {"__data__": {"id_": "a4953c58-0a12-4cf8-b59e-d175bfd7315b", "embedding": null, "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de", "node_type": "4", "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fb6a19dc121cf5ce28c9b152cfb0093dd0f7738bb98ff85ad494406c85f3b5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e", "node_type": "1", "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c08dbabc01220df19adb1cacdad5653da65beb0858382933e4f4711ed57d4800", "class_name": "RelatedNodeInfo"}}, "text": ". \nDISPLAY LENGTH OF \u201cThis is a LENGTH OF Example\u201d  \nDISPLAY LENGTH OF Demo -Identifier  \nDISPLAY 27  \nThe LENGTH OF  clause on a literal  or identifier  reference may generally be used anywhere a numeric literal might be \nspecified, with the following exceptions:  \nLENGTHOF numeric -literal -1\nidentifier -1", "start_char_idx": 2683, "end_char_idx": 2992, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78c07387-484f-4c71-8472-98df5d64fdda": {"__data__": {"id_": "78c07387-484f-4c71-8472-98df5d64fdda", "embedding": null, "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6ea936b-62b9-4bff-bd61-43280dbf3061", "node_type": "4", "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c396024e59a1d72a7a657ed4e8aa2e31835e303871d00f92dce561cada40eb2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdd3225a-c868-4dc8-bb2b-5d1fdede40a0", "node_type": "1", "metadata": {}, "hash": "cd2573fc5eac41de6ba46ba95cbd8ad49ecd1be959f72f88a3d01c8e2dee5555", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Introduction  \n \n11FEB2012 Version   1-9 1.  In place of a literal on a DISPLAY  statemen t. \n", "start_char_idx": 0, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdd3225a-c868-4dc8-bb2b-5d1fdede40a0": {"__data__": {"id_": "cdd3225a-c868-4dc8-bb2b-5d1fdede40a0", "embedding": null, "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6ea936b-62b9-4bff-bd61-43280dbf3061", "node_type": "4", "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c396024e59a1d72a7a657ed4e8aa2e31835e303871d00f92dce561cada40eb2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78c07387-484f-4c71-8472-98df5d64fdda", "node_type": "1", "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c9dc78f92e53b168174bda6a57042132d21373602c214b531d4f0e99ab2f1887", "class_name": "RelatedNodeInfo"}}, "text": "2. As part of a WRITE  or RELEASE  statement\u2019s FROM  clause.  \n3. As part of the TIMES  clause of a PERFORM . ", "start_char_idx": 128, "end_char_idx": 238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "305cb33c-21d1-43e9-a3f8-d801b2f2d2c8": {"__data__": {"id_": "305cb33c-21d1-43e9-a3f8-d801b2f2d2c8", "embedding": null, "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1196481d-c98a-4dd7-acbe-416a593ac148", "node_type": "4", "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c2f7cdfcae2ca3bdba27c8e3996fc4ddebc0ea834fef24a1ee3225772e764d8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d682d670-af5a-47ba-ab7b-b862b421158b", "node_type": "1", "metadata": {}, "hash": "1d4e251a628cf85ebb48189a3af18a13776e5c89ca7d0c5965baa621ba337fba", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-1 2. The GNU COBOL  Compiler Directing Facility  [CDF]  \nThe Compiler Directing Facility is a means of controlling the compilation  of GNU COBOL  programs  , providing a \nmechanism for dynamically setting or resetting certain compiler switches , introducing new source code from one or \nmore source code libraries, making dynamic source code modifications or conditionally processing / ignoring source \nstatements.  \nWhen the compiler is operating in FIXED mode, all CDF statements must begin in column eight (8) or beyond.  \nThere are two types of supported CDF statements in GNU COBOL  \u2013 Text Manipulation Statements and Compiler \nDirectives.  \n2.1. Text Manipulation Statements  \nCDF text manipulation statements are used to introduce new code into programs either with or without changes, or \nmay be used to modify existing statements already in the program.  \n2.1.1.  ", "start_char_idx": 0, "end_char_idx": 966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d682d670-af5a-47ba-ab7b-b862b421158b": {"__data__": {"id_": "d682d670-af5a-47ba-ab7b-b862b421158b", "embedding": null, "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1196481d-c98a-4dd7-acbe-416a593ac148", "node_type": "4", "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c2f7cdfcae2ca3bdba27c8e3996fc4ddebc0ea834fef24a1ee3225772e764d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "305cb33c-21d1-43e9-a3f8-d801b2f2d2c8", "node_type": "1", "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "59983d7e18b1271d7713aeae524a27c771181607bd88df44a96bc4c3b4530553", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31dc2b7d-f313-424b-9da6-d6077a5df683", "node_type": "1", "metadata": {}, "hash": "a5c74ac393c9f6dbe21883672dec3f23b40df6b4782dfa1c08258529550db833", "class_name": "RelatedNodeInfo"}}, "text": "The COPY  Statement  \nFigure 2-1 - COPY Syntax  \n \nCOPY  statements  are used to import copybooks into a program.  \nGNU COBOL  completely supports the use of copybooks .  These are separate source files containing ANY GNU COBOL  \nSYNTAX WHATSOEVER , including other CDF statements.  \n1. COPY  statements may be used anywhere within a COBOL program where the code contained within the copybook  \nwould be syntactically valid.  \n2. The syntax diagram above places great emphasis on a period at the end of the COPY  statement and any \nREPLACING  clauses it may have.  A period is absolutely  mandatory  at the end of every COPY  statement, even if \nthe COPY  statement occurs within the scope of a command where a period might appear disruptive (such as \nwithin the scope of an IF\u2026END -IF sequence; the perio d on the COPY  command will not, however, affect the \ncommand scope in which the COPY  occurs.  \n3. ", "start_char_idx": 966, "end_char_idx": 1872, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31dc2b7d-f313-424b-9da6-d6077a5df683": {"__data__": {"id_": "31dc2b7d-f313-424b-9da6-d6077a5df683", "embedding": null, "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1196481d-c98a-4dd7-acbe-416a593ac148", "node_type": "4", "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c2f7cdfcae2ca3bdba27c8e3996fc4ddebc0ea834fef24a1ee3225772e764d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d682d670-af5a-47ba-ab7b-b862b421158b", "node_type": "1", "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "db46354faa9a96ff41b189bf651d041623bba60685a059f81304d0a31ef1af27", "class_name": "RelatedNodeInfo"}}, "text": "All COPY  statements are resolved and the contents of the corresponding copybooks  inserted into the program \nsource code before the actual compilation process begins.    \n4. The optional \u201c REPLACING \u201d clause allows any reserved words ( word -1, word -2), data items ( identifier -1, identifier -\n2), literals ( literal -1, literal -2) or whitespace -delimited phrases to be replaced.  Any number of such substitutio ns \nmay be made as a copybook  is included into a program.  \nSee Also\u2026  \nCopybooks  1.3.3.3  \n How the Compiler Finds Copybooks  8.1.5  \n \n2.1.2.  The REPLACE Statement  \nCOPY copybook -name IN|OFlibrary -name -1[SUPPRESS PRINTING ]\nREPLACING .\nLEADING\nTRAILING==partial -word -1== BY==partial -word -2====pseudo -text-1==\nidentifier -1\nliteral -1\nword -1==pseudo -text-2==\nidentifier -2\nliteral -2\nword -2BY\n\u2026", "start_char_idx": 1872, "end_char_idx": 2699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ca029cb-150b-4694-9f18-2ffc8c186250": {"__data__": {"id_": "4ca029cb-150b-4694-9f18-2ffc8c186250", "embedding": null, "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2022255a-bde6-4818-9325-b9f396edb043", "node_type": "4", "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f7e8380493375510fda7d14c81e43685d38bc92a9dbc116ae11aba28c616c494", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce640a28-3108-4b3d-afd8-3495e7073dbb", "node_type": "1", "metadata": {}, "hash": "68f2a77a6bf1b0bb05c492040daddded7292fcb59638a28ba7385f1aebffdd26", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-2 Format 1:  \nFigure 2-2 - REPLACE (Format 1) Syntax  \n \nFormat 2:  \nFigure 2-3 - REPLACE (Format 2) Syntax  \n \nThe REPLACE  statement provides a mechanism for changing all or part of one or more GNU COBOL  statements.  \n1. The syntax diagrams above place great emphasis on a period at the end of the REPLACE .  A period is absolutely  \nmandatory  at the end of every REPLACE  statement , even if the REPLACE  statement occurs within the scope of a \ncommand where a period might appear di sruptive (such as within the scope of an IF\u2026END -IF sequence; the \nperiod on the REPLACE  command will not, however, affect the command scope in which the REPLACE  occurs.  \n2. The REPLACE  statement can be used to make changes to program source code in much the sam e way as the \nREPLACING  option of the COPY  statement can.  \n3. Once a Format 1 REPLACE  statement is encountered in the compilation unit, it will remain in -effect \u2013 continuing \nto make those source code changes it specifies \u2013 until one of the following occurs:  \na. Another Format 1 REPLACE  is encountered; in such a case, the change rules defined by the former Format 1 \nREPLACE  will be replaced by those defined by the new REPLACE , unless the newly -encountered REPLACE  \nstatement includes the \u201c ALSO \u201d keyword; in this instance , the REPLACE  currently in -effect will be \n\u201cremembered\u201d and then replaced by one combining the effects of the currently in -effect REPLACE  and the \nnew one.  \nb. A Format 2 REPLACE  is encountered .  If the Format 2 REPLACE  includes the \u201c LAST \u201d keyword, the currently  in-\neffect REPLACE  will be terminated and the most -recently \u201cremembered\u201d REPLACE  will be re -activated.  If the \nFormat 2 REPLACE does not include the \u201c LAST \u201d keyword, the currently in -effect REPLACE will be terminated \nand all \u201cremembered\u201d prior REPLACE s will be discarded ; no further changes will be made until such a point as \nanother Format 1 REPLACE  (if any) is encountered.  \nc. The last line of source code in the compilation unit has been processed.  \n", "start_char_idx": 0, "end_char_idx": 2129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce640a28-3108-4b3d-afd8-3495e7073dbb": {"__data__": {"id_": "ce640a28-3108-4b3d-afd8-3495e7073dbb", "embedding": null, "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2022255a-bde6-4818-9325-b9f396edb043", "node_type": "4", "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f7e8380493375510fda7d14c81e43685d38bc92a9dbc116ae11aba28c616c494", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ca029cb-150b-4694-9f18-2ffc8c186250", "node_type": "1", "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "18f92368d047e16d594fd7ed5e833c57525c2cf57b52088c601a5c553dd28c08", "class_name": "RelatedNodeInfo"}}, "text": "2.2. CDF  Directives  \nCompiler Directing Facility directives, or  statem ents , are denoted by the presence of a \u201c>>\u201d character sequence as part \nof the statement name itself \u2013 are used to influence the process of program compilation.  \n2.2.1.  The >>DEFINE Directive  \nFigure 2-4 - >>DEFINE Syntax  \n  \nUse >>DEFINE  to create CDF variables and (optionally) assign them either literal or environment variable values.  \n1. CDF variables defined in this way become undefined once an END PROGRAM  or END FUNCTION  directive is \nencountered in the input source.  \nREPLACE [ALSO] .==pseudo -text-1==BY==pseudo -text-2==\nLEADING\nTRAILING==partial -word -1== BY==partial -word -2==\nREPLACE [LAST]OFF.\n>>DEFINE [CONSTANT ]cdf-variable -1AS                           PARAMETER\nliteral -1OFF\n[OVERRIDE ]", "start_char_idx": 2129, "end_char_idx": 2924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c49d3d30-223a-460a-8999-6105b1e29408": {"__data__": {"id_": "c49d3d30-223a-460a-8999-6105b1e29408", "embedding": null, "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169", "node_type": "4", "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dfce65a79d0997282914a72175f2a472b33cd042dcef28445358aaf6dc4229f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e", "node_type": "1", "metadata": {}, "hash": "378ca9ab755f20cbe2beac2e5d0000dce91188496842709d0e6cbb4967be704c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-3 2. The >>DEFINE  statement is one way to create CDF variables that may be processed by other CDF statements such \nas >>IF .  The >>SET  statement provides another way to create them.  \n3. CDF variable names follow the rules for standard GNU COBOL  user -defined names , and may not duplicate any CDF \nreserved word.  CDF variable names may duplicate COBOL reserved words, provided the CONSTANT  option is not \nspecified , but such names are not recomme nded.   \n4. The CONSTANT  option, valid only in conjunction with literal -1, defines a CDF variable that may be used within \nyour regular COBOL code as if it were a literal value.  Without the CONSTANT  option, the CDF variable may only \nbe referenced on other CDF statements.  \n5. The OFF option is used to create a variable without assigning it any value.  \n6. The PARAMETER  option is used to create a variable whose value is that of the environ ment variable of the same \nname.  Note that this value assignment occurs at compilation  time, not program execution time.  \n", "start_char_idx": 0, "end_char_idx": 1122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e": {"__data__": {"id_": "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e", "embedding": null, "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169", "node_type": "4", "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dfce65a79d0997282914a72175f2a472b33cd042dcef28445358aaf6dc4229f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c49d3d30-223a-460a-8999-6105b1e29408", "node_type": "1", "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "45f6623c1ca43e8b95fa8a326a0f50c09bc43e7213cae3cb1f67ec9bd56e8abe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98848281-538c-4bb4-8b9e-df079994e3cf", "node_type": "1", "metadata": {}, "hash": "82a9446fffa27fb6d836c0bbc89255878e234b838e0bcf47b7e196e5ea9bcd5a", "class_name": "RelatedNodeInfo"}}, "text": "7. The \u201c literal -1\u201d option is used to specify a numeric or alphanumeric literal , as previously discussed . \n8. In the absence of the OVERRIDE  option, cdf-variable -1 must not yet have been DEFINE d. \n9. When the OVERRIDE  option is specified, cdf-variable -1 will be created with the specified value, if it had not yet \nbeen DEFINE d, or it will be re -DEFINE d with the new value if it had already been DEFINE d. \n10. See Also\u2026  \nLiterals  1.8 \nUser -defined Names  1.10  \n The >>SET  CDF Statement  2.2.3  \n \n2.2.2.  The >>IF Directive  \nFigure 2-5 - >>IF Syntax  \n Conditionally process or ignore COBOL source \nstatements and/or CDF text -manipulation \nstatements depending upon the value of one or \nmore conditional expressions based upon CDF \nvariables.  \n1. ", "start_char_idx": 1122, "end_char_idx": 1889, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98848281-538c-4bb4-8b9e-df079994e3cf": {"__data__": {"id_": "98848281-538c-4bb4-8b9e-df079994e3cf", "embedding": null, "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169", "node_type": "4", "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dfce65a79d0997282914a72175f2a472b33cd042dcef28445358aaf6dc4229f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e", "node_type": "1", "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "265990970fdf05349fdc96fb600602b2ca8df18a3dcea7f1ac87436d474f65cb", "class_name": "RelatedNodeInfo"}}, "text": "Each  >>IF  statement must be terminated by \nan >>END -IF statement.  \n2. There may be any number of >>ELI F clauses \nfollowing an >>IF , including zero.  \n3. The syntax of a constant -conditional expression  is as follows:  \nFigure 2-6 - >>IF constant -conditional -expression Format  \n \n4. The text-1, text-2 and text-n entries represent lines of source code that may consist of any number of GNU COBOL  \nstatements and/or CDF text-manipulation statements (including none at all).   Currently, text-1, text-2 and text-n \nshould not contain any CDF compiler directives (\u201c>>\u201d state ments).  \n5. Each constant -conditional -expression  will be evaluated in the sequence in which they are coded in the >>IF  \nstatement  and any >>ELIF  clauses that may be present  until one evaluates to TRUE .  Once one of them evaluates \nto TRUE , the corresponding text block of statements will be processed by the compiler and all others within the \nscope of the  >>IF  statement will be skipped.   If none of them evaluate to TRUE , the text-n block of statements \n(following the >>ELSE  clause) will be processed by the compiler and all others within the scope of the >>IF  \n>>IF constant -conditional -expression -1\n[program -source -lines -1]\n>>ELIF constant -conditional -expression -1     \n[program -source -lines -2]\n>>ELSE\n[program -source -lines -n]\n>>END-IF\u2026\nIS [NOT]cdf-variable -1\nliteral -1DEFINED\nSET\ncdf-relational -operatorcdf-variable -2\nliteral -2", "start_char_idx": 1889, "end_char_idx": 3340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1cec0df-a2b0-4f39-8d00-2987fba5d005": {"__data__": {"id_": "b1cec0df-a2b0-4f39-8d00-2987fba5d005", "embedding": null, "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aec78c57-43e3-4618-8cfd-45cbdabae0b4", "node_type": "4", "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9240989974ef8b5dfa5e0ac574111b78153156c47c1890911f77f7a40fdc1ac3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8dbccb6c-8829-4ec7-b228-b5cc36f13e4e", "node_type": "1", "metadata": {}, "hash": "724c3b294ca06d57804a6d5af6e15a763e56fb80837f516371715a4e42f3affa", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-4 statement will be skipped.  If none of the constant -conditional -expression s  evaluate to TRUE  and there is no \n>>ELSE  clause, then none of the text blocks of statements within the scope of the >>IF  will be processed by the \ncompiler.  \n6. The following rules pertain to constant -conditional -Expressions  \na. The DEFINED  option tests for whether variable -1 has been defined, but not yet assigned a value (>>DEFINE \u2026 \nOFF); use the NOT  option to test for the variable not being defined.  \nb. The SET option tests for whether variable -1 has been given a value, either via a >>SET  statement or via a \n>>DEFINE  without the OFF option.  \nc. Two CDF variables, two literals or a sing le CDF variable and a single literal may be compared against each \nother using a relational operator.  Unlike the standard GNU COBOL  IF statement, multiple comparisons \ncannot be \u201c AND \u201ded or \u201c OR\u201ded together ; you may  nest a second >>IF  inside the first, howeve r, to simulate an \n\u201cAND \u201d and an \u201c OR\u201d may be simulated via the >>ELIF  option .  Valid relational operators are as follows  (you \nmay use either words or symbols) : \nGREATER  THAN OR EQUAL  TO >= \nGREATER  THAN  > \nLESS  THAN OR EQUAL  TO <= \nLESS  THAN  < \nEQUAL  TO = \n <> (meaning \u201cnot equal\u201d)  \n2.2.3.  The >>SET Directive  \nFigure 2-7 - >>SET Syntax  \n The >>SET  statement provides an \nalternate means of performing the \nactions of the >>DEFINE  and \n>>SOURCE  statements, as well as a \nmeans of controlling the \u201c -free\u201d , \u201c-\nfixed \u201d  and \u201c -ffold-copy \u201d  compiler \nswitc hes from within program source \ncode itself.  \n1. CDF variables defined in this way become undefined once an END PROGRAM  or END FUNCTION  directive is \nencountered in the input source.  \n2. The FOLDCOPYNAME  option provides the equivalent of specifying the compiler \u201c -ffold -copy= xxx\u201d switch, where \n\u201cxxx\u201d is either \u201c UPPER \u201d or \u201c LOWER \u201d. \n3. The NOFOLDCOPYNAME  option turns off the effect of either the >>SET FOLDCOPYNAME  statement or the \u201c -\nffold -copy\u201d switch.  \n4. ", "start_char_idx": 0, "end_char_idx": 2107, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8dbccb6c-8829-4ec7-b228-b5cc36f13e4e": {"__data__": {"id_": "8dbccb6c-8829-4ec7-b228-b5cc36f13e4e", "embedding": null, "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aec78c57-43e3-4618-8cfd-45cbdabae0b4", "node_type": "4", "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9240989974ef8b5dfa5e0ac574111b78153156c47c1890911f77f7a40fdc1ac3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1cec0df-a2b0-4f39-8d00-2987fba5d005", "node_type": "1", "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4a26b7d13f15953383c55c5b5bb8cf0d814c796172a550316e1085556c23f1e9", "class_name": "RelatedNodeInfo"}}, "text": "If the \u201c CONSTANT \u201d option is used, the \u201c AS\u201d option must  also be used.  \n5. The remaining options of the >>SET  statement provide equivalent functionality to the >>DEFINE  and >>SOURCE  \nstatements, as shown in the following table:  \n>>SET Statement  Equiva lent >>DEFINE or >>SOURCE Statement  \n>>SET cdf-variable  >>DEFINE cdf-variable  AS OFF  \n>>SET  cdf-variable AS literal -1 >>DEFINE  cdf-variable  AS literal -1 \n>>SET CONSTANT  cdf-variable -1 AS literal -1 >>DEFINE CONSTANT  cdf-variable -1 AS literal -1 \n>>SET SOURCEFORMAT AS FIXED  >>SOURCE FORMAT IS FIXED ; sets the \u201c -fixed \u201d \ncompiler switch  \n>>SET SOURCEFORMAT AS FREE  >>SOURCE FORMAT IS FREE ; sets the \u201c -free\u201d compiler \nswitch  \n[CONSTANT ]cdf-variable -1[AS literal -1]\nSOURCEFORMAT AS\nNOFOLDCOPYNAME\nFOLDCOPYNAME AS>>SET\nUPPER\nLOWERFIXED\nFREE", "start_char_idx": 2107, "end_char_idx": 2927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cda2cc47-2c5e-4996-af74-d02ad23fb162": {"__data__": {"id_": "cda2cc47-2c5e-4996-af74-d02ad23fb162", "embedding": null, "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fb48588d-51c1-4fa3-9bf6-bf2456f5f318", "node_type": "4", "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1ac592866ba68864acb99063708403030a01afef5dcb32257b1c02fb00986b1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fbb17fb-46ab-40f7-9581-e6b608124c23", "node_type": "1", "metadata": {}, "hash": "26918caa741e8e513416c24d207167344167b9a677f2cb03383f288e1018023a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-5 See Also\u2026  \nCompiler Switches Reference  8.1.2  \n  \n2.2.4.  The >>SOURCE Directive  \nFigure 2-8 - >>SOURCE  Syntax  \n The >>SOURCE  statement pu ts the compiler into FIXED or FREE \nsource -code format mode.   This, in effect, provides yet another \nmechanism for controlling the \u201c -free\u201d  and \u201c -fixed \u201d  compiler \nswitches.  \n", "start_char_idx": 0, "end_char_idx": 421, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fbb17fb-46ab-40f7-9581-e6b608124c23": {"__data__": {"id_": "0fbb17fb-46ab-40f7-9581-e6b608124c23", "embedding": null, "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fb48588d-51c1-4fa3-9bf6-bf2456f5f318", "node_type": "4", "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1ac592866ba68864acb99063708403030a01afef5dcb32257b1c02fb00986b1f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cda2cc47-2c5e-4996-af74-d02ad23fb162", "node_type": "1", "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcd80ed69f9b97c599306c8d3a34444aec9c107a22e49c2ea60a22f232761e3c", "class_name": "RelatedNodeInfo"}}, "text": "1. You may switch between FIXED  and FREE  mode as desired.  \n2. You may also use the >>SET  statement to perform this function.  \n3. If the compiler is already in the specified mode, this statement will have no effect.  \nSee Also\u2026  \nThe >>SET  CDF Statement  2.2.3  \n Compiler Switches Reference  8.1.2  \n \n2.2.5.  The >>TURN Directive  \nFigure 2-9 - >>TURN Syntax  \n  \nThe >>TURN  statement, while accepted syntactically, is currently non -functional.  \n  \n>>SOURCE FORMAT IS        FIXED\nFREE\n>>TURN{exception -name -1[file-name -1] \u2026 } \u2026 CHECKINGON [WITH LOCATION ]\nOFF", "start_char_idx": 421, "end_char_idx": 994, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1c7d8ed-4a2e-44c4-a139-28d4262e1415": {"__data__": {"id_": "f1c7d8ed-4a2e-44c4-a139-28d4262e1415", "embedding": null, "metadata": {"page_label": "42", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c12024f-4f17-462e-b46b-5c394949acca", "node_type": "4", "metadata": {"page_label": "42", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e342b0341ff7e45610a47c49ea5b235146f6126f77c3344f53b10ca6abef8f83", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The Compiler -Directing Facility  \n \n11FEB2012 Version   2-6  ", "start_char_idx": 0, "end_char_idx": 96, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69445069-1300-4b56-b3cc-1225106eea99": {"__data__": {"id_": "69445069-1300-4b56-b3cc-1225106eea99", "embedding": null, "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "311c96b3-6dc5-4b37-8922-609126f3132e", "node_type": "4", "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "34a296ada95e36f0b9f3f01761e85fb102363d7a8ef2946a06ddcea2bad21959", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c321f11a-6fbf-493b-b668-31c45a9392d2", "node_type": "1", "metadata": {}, "hash": "a54307a320e7aca022e3c362a36dc3e9c3b19bbf5f2671f56d3739864c5ea597", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  IDENTIFICATION DIVISION  \n \n11FEB2012 Version   3-1 3. IDENTIFICATION DIVISION  \nFigure 3-1 - IDENTIFICATION DIVISION Syntax  \n \nThe IDENTIFICATION DIVISION  provides basic identification of the program by giving it a name, and optionally defining \nsome high -level characteristics.  \n1. While the actual IDENTIFICATION DIVISION  header is optional, the PROGRAM -ID / FUNCTION -ID clause is not. \n2. The AUTHOR , DATE -COMPILED , DATE -WRITTEN , FUNCTION -ID, INSTALLATION , PROGRAM -ID, REMARKS  and \nSECURITY  clauses may be specified in any sequence.   These  clauses are supported by GNU COBOL  only to provide \ncompatibility with programs written for the ANS1974 (or earlier) standards.  As of  the ANS1985 standard, these \nclauses have been obsolete and should not be used in new programs.  \nThe \u201c -Wobsolete \u201d compilation switch  will cause the GNU COBOL  compiler to issue warnings messages if these (or \nany other obsolete syntax) is used in a program.  \n3. ", "start_char_idx": 0, "end_char_idx": 1001, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c321f11a-6fbf-493b-b668-31c45a9392d2": {"__data__": {"id_": "c321f11a-6fbf-493b-b668-31c45a9392d2", "embedding": null, "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "311c96b3-6dc5-4b37-8922-609126f3132e", "node_type": "4", "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "34a296ada95e36f0b9f3f01761e85fb102363d7a8ef2946a06ddcea2bad21959", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69445069-1300-4b56-b3cc-1225106eea99", "node_type": "1", "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2cd5fd0a13d41ac05f080d9a4f5ba642f975f08af5648f6b646cd6c36cb156b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "707d8363-4c58-419b-bc35-26e9706cc16a", "node_type": "1", "metadata": {}, "hash": "8fcd22d3c6d20c6a7faaba69e361383bd9d5625f8d777965b812f9caf26e3ab7", "class_name": "RelatedNodeInfo"}}, "text": "Both literal -1 and literal -2 must be actual alphanumeric literals and may not be figurative constants.  \n4. The PROGRAM -ID and FUNCTION -ID clause serve to identify the program to the external (i.e. operating system ) \nenvironment.  If there is no AS clause present, the program -name or function -name will serve as that external \nidentification.  If there is an AS clause specified, that specified literal will serve as the external identification.  For \nthe remainder of this document, that \u201cexternal identification\u201d will be referred to as the primary entry -point  name . \n5. The INITIAL , COMM ON and RECURSIVE  clauses are used only within subprograms  serving as subroutines .  The \nCOMMON  clause should be used only within subprograms that are nested subprograms .  The INITIAL  clause, if \nspecified, guarantees the subprogram will be in its initial (i.e. compiled) state each and every time it is executed, \nnot just the first time.   The COMMON  clause  may only be specified within a nested subprogram.  A nested \nsubprog ram declared as COMMON  may be called from any nested program in the source file being compiled, not \njust those \u201cabove\u201d it in the nesting structure.  The RECURSIVE  clause, if any, marks a subprogram as being able to \ninvoke  itself.  User -defined functions ar e always RECURSIVE . \nSee Also\u2026  \nSubprograms  Subroutines vs Functions  7.1 \nDetails Of Nested Subprograms  7.6 \n Recursive Subprogramming  7.7 \n \n \n \nIDENTIFICATION DIVISION .\nPROGRAM-ID. program -name[AS  literal -1]IS            PROGRAM .\nFUNCTION -ID.function -name[AS  literal -2].INITIAL\nCOMMON\nRECURSIVE\n[ AUTHOR. comment-1.]\n", "start_char_idx": 1001, "end_char_idx": 2636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "707d8363-4c58-419b-bc35-26e9706cc16a": {"__data__": {"id_": "707d8363-4c58-419b-bc35-26e9706cc16a", "embedding": null, "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "311c96b3-6dc5-4b37-8922-609126f3132e", "node_type": "4", "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "34a296ada95e36f0b9f3f01761e85fb102363d7a8ef2946a06ddcea2bad21959", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c321f11a-6fbf-493b-b668-31c45a9392d2", "node_type": "1", "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92d1cefe83f2f720c240abd14646bcfad7cf8712ce38da1bfd9085c913cfc2f8", "class_name": "RelatedNodeInfo"}}, "text": "[DATE-COMPILED . comment-2.]\n[DATE-WRITTEN. comment-3.]\n[INSTALLATION . comment-4.]\n[REMARKS. comment-5.]\n[SECURITY . comment-6.]", "start_char_idx": 2636, "end_char_idx": 2765, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d006e56-d3c9-4295-aec8-d288f06925a8": {"__data__": {"id_": "1d006e56-d3c9-4295-aec8-d288f06925a8", "embedding": null, "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06e5e280-d852-4b5f-910c-637ac3a0a938", "node_type": "4", "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a38859ee5f9dd6a393084c41e03ce9c6d4e9f69772de71722cde413668ff805", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1505259f-6e10-414e-862b-5713cdf28754", "node_type": "1", "metadata": {}, "hash": "c55f2ea9b20d6db362561bd4ca5568ed4d6989b76d9f545a3b1570d074b6f96d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-1 4.  ENVIRONMENT DIVISION  \nFigure 4-1 - ENVIRONMENT DIVISION Syntax  \n The ENVIRONMENT \nDIVISION  defines the \nexternal computer \nenvironment in which the \nprogram will be operating.  \nThis includes defining any \nfiles that the program may \nbe accessing.   \n \n1. If none of the features provided by the ENVIRONMENT DIVISION  are required by a program, the ENVIRONMENT \nDIVISION  may be omitted from the program.  \n4.1. CONFIGURATION SECTION  \nFigure 4-2 - CONFIGURATION SECTION Syntax  \n \nThe CONFIGURATION DIVISION  defines the computer system upon which the program is being compiled and \nexecuted and also specifies any special environmental configuration or compatibility characteristics.  \n1. The CONFIGURATION SECTION  is not allowed in a nested subprogram \u2013 nested program s will inherit the \nCONFIGURATION SECTION  settings of their parent program.   \n2. If none of the features provided by the CONFIGURATION SECTION  are required by a program, the entire \nCONFIGURATION SECTION  may be omitted from the program.  \n3. The sequence in which the CONFIGURATION SECTION  paragraphs are specified is irrelevant . \nSee Also\u2026  \nDetails Of Nested Subprograms  7.6 \n  \n4.1.1.  SOURCE -COMPUTER Paragraph  \nFigure 4-3 - SOURCE -COMPUTER Paragraph Syntax  \n The SOURCE -COMPUTER  paragraph defines \nthe computer upon which the program is \nbeing compiled and provides one way in \nwhich debugging code imbedded within the \nprogram may be activated.  \n1. The SOURCE -COMPUTER  paragraph is not allowed in a nested subprogram \u2013 nested programs will inherit the \nSOURCE -COMPUTER  settings of their parent program.   \nENVIRONMENT DIVISION .\n", "start_char_idx": 0, "end_char_idx": 1716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1505259f-6e10-414e-862b-5713cdf28754": {"__data__": {"id_": "1505259f-6e10-414e-862b-5713cdf28754", "embedding": null, "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06e5e280-d852-4b5f-910c-637ac3a0a938", "node_type": "4", "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a38859ee5f9dd6a393084c41e03ce9c6d4e9f69772de71722cde413668ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d006e56-d3c9-4295-aec8-d288f06925a8", "node_type": "1", "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f34f368d01578bb7b0661278a7ceabf524a6558205e0bd42435d8dd6bc647303", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cabb71c1-61e6-4106-b43b-6a3a94fe41d7", "node_type": "1", "metadata": {}, "hash": "cf406455c42349e9d7fa117620760a2870b0a356267a868a4f17395db864c9a5", "class_name": "RelatedNodeInfo"}}, "text": "CONFIGURATION SECTION.\n[ SOURCE-COMPUTER .compilation -computer -specifications ] \n[ OBJECT-COMPUTER .execution -computer -specifications ] \n[ REPOSITORY . function -specifications ] \n[ SPECIAL-NAMES. ", "start_char_idx": 1716, "end_char_idx": 1917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cabb71c1-61e6-4106-b43b-6a3a94fe41d7": {"__data__": {"id_": "cabb71c1-61e6-4106-b43b-6a3a94fe41d7", "embedding": null, "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06e5e280-d852-4b5f-910c-637ac3a0a938", "node_type": "4", "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a38859ee5f9dd6a393084c41e03ce9c6d4e9f69772de71722cde413668ff805", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1505259f-6e10-414e-862b-5713cdf28754", "node_type": "1", "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ffd9b1a024ab005db80fe7d896026d6a28d05e37f5a672dd56165db6c4de0915", "class_name": "RelatedNodeInfo"}}, "text": "program -configuration -specifications ] \nINPUT-OUTPUTSECTION.\n[ FILE-CONTROL. general -file-descriptions ] \n[ I-O-CONTROL. file-buffering -specifications ] \nCONFIGURATION SECTION.\n[ SOURCE-COMPUTER .compilation -computer -specifications ] \n[ OBJECT-COMPUTER .execution -computer -specifications ] \n[ REPOSITORY . function -specifications ] \n[ SPECIAL-NAMES. program -configuration -specifications ] \nSOURCE-COMPUTER . \ncomputer -name[WITH DEBUGGING MODE] .", "start_char_idx": 1917, "end_char_idx": 2374, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3ae7623-8ccd-4941-a3a9-b7ef867328df": {"__data__": {"id_": "f3ae7623-8ccd-4941-a3a9-b7ef867328df", "embedding": null, "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98744e3c-0ffe-40b9-b36c-fc769785a068", "node_type": "4", "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "66796f1a3c7f11ae91a7b00a63d0596d7887e3f0c7e5ad2fc8ba32d68b449a9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01a70e21-7d61-4caf-9607-c264d6044c75", "node_type": "1", "metadata": {}, "hash": "81dbe00ab79cc490345e196e346d52bc4626ec9adc8161b531b5225b9864f0cd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-2 2. The value specified for computer -name  is irrelevant, provided it is a valid COBOL word that does not match any \nGNU COBOL  reserved word.   The computer -name  may include spaces.   This need not match the computer -name  \nused with the OBJECT -COMPUTER  paragraph, if any  \n3. The WITH DEBUGGING M ODE  clause, if present , will signal the compiler that debugging lines \u2013 normally treated \nas comments - are to be compiled .   \n4. Even without the WITH DEBUGGING MODE  clause, it is still possible to compile debugging lines.  D ebugging lines  \nmay  also be compiled by specifying the \u201c-fdebugging -line\u201d switch to the GNU COBOL  compiler.  \n5. ", "start_char_idx": 0, "end_char_idx": 735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01a70e21-7d61-4caf-9607-c264d6044c75": {"__data__": {"id_": "01a70e21-7d61-4caf-9607-c264d6044c75", "embedding": null, "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98744e3c-0ffe-40b9-b36c-fc769785a068", "node_type": "4", "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "66796f1a3c7f11ae91a7b00a63d0596d7887e3f0c7e5ad2fc8ba32d68b449a9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3ae7623-8ccd-4941-a3a9-b7ef867328df", "node_type": "1", "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4f272ee32017189187d866fac4d7f33b57e4e5df402ae86da9215912f201e6c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e0f8acc-c042-460a-a6b2-a8b78b6916b7", "node_type": "1", "metadata": {}, "hash": "725c571c1cedd8672e9d4937ca4bf2f70eb229e734a758feeaf518ef27851733", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nCoding Comments in Programs  1.6 \n Details Of Nested Subprograms  7.6 \n \n4.1.2.  OBJECT -COMPUTER  Paragraph  \nFigure 4-4 - OBJECT -COMPUTER Paragraph Syntax  \n The OBJECT -COMPUTER  \nparagraph describes the \ncomputer upon which the \nprogram will execute.  This \nparagraph is not merely \ndocumentation.  \n", "start_char_idx": 735, "end_char_idx": 1052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e0f8acc-c042-460a-a6b2-a8b78b6916b7": {"__data__": {"id_": "9e0f8acc-c042-460a-a6b2-a8b78b6916b7", "embedding": null, "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98744e3c-0ffe-40b9-b36c-fc769785a068", "node_type": "4", "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "66796f1a3c7f11ae91a7b00a63d0596d7887e3f0c7e5ad2fc8ba32d68b449a9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01a70e21-7d61-4caf-9607-c264d6044c75", "node_type": "1", "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "33730137f66f000596d0063f25e337e5757fe05cf5afd35973ea434053a1cb7e", "class_name": "RelatedNodeInfo"}}, "text": "1. The value specified for computer -name , if any, is irrelevant provided it is a valid COBOL word that does not match \nany GNU COBOL  reserved w ord.  The computer -name  may include spaces.   This need not match the computer -\nname  used with the SOURCE -COMPUTER  paragraph, if any  \n2. The OBJECT -COMPUTER  paragraph is not allowed in a nested subprogram \u2013 nested programs will inherit the \nOBJECT -COMPUTER  settin gs of their parent program.   \n3. The MEMORY SIZE  and SEGMENT -LIMIT  clauses are supported for compatibility purposes, but are non -functional \nin GNU COBOL . \n4. The PROGRAM COLLATING SEQUENCE  clause allows you to specify a customized character collating sequence  to \nbe used when alphanumeric values are compared to one another.  Data will still be stored in the characterset \nnative to the computer, but the logical sequence in which characters are  ordered for comparison purposes can be \naltered from that inherent to the computer\u2019s native characterset.  The alphabet -name -1 you specify needs to be \ndefined in the SPECIAL -NAMES  paragraph.    \n5. If no PROGRAM COLLATING SEQUENCE  clause is specified, the colla ting sequence implied by the characterset \nnative to the computer (usually ASCII) will be used.  \n6. The optional CHARACTER CLASSIFICATION  clause may be used to specify a locale for the environment in which \nthe program will be executing , for the purpose of influencing the uppercase and lowercase mappings of \ncharacters for the UPPER -CASE  and LOWER -CASE  intrinsic functions and the classification of characters for the \nALPHABETIC , ALPHABETIC -LOWER  and ALPHABETIC -UPPER  class tests.  \nThe definitio ns of these classes will be taken from the cultural  convention specification (LC_CTYPE) from the \nspecified locale.  \nlocale -name -1\nLOCALE\nUSER-DEFAULT\nSYSTEM-DEFAULTOBJECT-COMPUTER .\n[computer -name]\nMEMORYSIZEIS integer -1 \n[PROGRAM COLLATING SEQUENCE IS alphabet -name -1]\n[ SEGMENT-LIMITIS integer -2 ]\n[CHARACTER CLASSIFICATION IS                  ]\n.WORDS\nCHARACTERS", "start_char_idx": 1052, "end_char_idx": 3086, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12bd91db-e6bd-4f91-be01-6d3e6c63dcd0": {"__data__": {"id_": "12bd91db-e6bd-4f91-be01-6d3e6c63dcd0", "embedding": null, "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "833f8234-8abe-4ba2-ad44-316f42e4b104", "node_type": "4", "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fde645b13a81bcb7724edc9b4ae8ec1e32dc011a8e2f47369b28a48a42d09c6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "135de2cf-a0a7-4e8f-8126-84c07a03c770", "node_type": "1", "metadata": {}, "hash": "5b50308ea47754912bddd4f5f2421070386ff28a52e9c5938a64b010ad6980b8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-3 The meanings of the four locale specifications are as follows:  \n locale -name -1 references a LOCALE  definition that must occur within the SPECIA L-NAMES  paragraph.  \n The keyword LOCALE  refers to the current locale (in effect at the time the program is executed)  \n The keyword USER -DEFAULT  references the default locale specified for the user currently executing this \nprogram.  \n The keyword SYSTEM -DEFAULT  denotes the default locale specified for the computer upon which the \nprogram is executing.  \nAbsence of a CHARACTER CLAS SIFICATION  clause will cause character classification to occur according to the \nrules for the computer\u2019s native characterset (ASCII, EBCDIC, \u2026).  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nClass Tests  6.1.4.2.2  \nLOWER -CASE  Intrinsic Function  6.1.7.39  \n UPPER -CASE  Intrinsic Function  6.1.7.87  \nDetails Of Nested Subprograms  7.6 \n \n4.1.3.  REPOSITORY Paragraph  \nFigure 4-5 - REPOSITORY Paragraph Syntax  \n The REPOSITORY  \nparagraph provides a \nmechanism for \ncontrolling access to \nthe various built -in \nintrinsic functions  and \nany user -defined \nfunctions that your \nprogram will be using . \n1. The REPOSITORY  paragraph is not allowed in a nested subprogram \u2013 nested programs will inherit the \nREPOSITORY  settings of their parent program.   \n2. The \u201c INTRINSIC \u201d clause allows y ou to flag one or more (or ALL) built -in intrinsic functions as being usable without \nthe need to code the keyword \u201c FUNCTION \u201d in front of the function names.    \n3. As an alternative to using the \u201cFUNCTION ALL INTRINSIC \u201d clause , you may instead compile your GNU COBOL  \nprograms using the \u201c-ffunctions -all\u201d switch . \n4. The function -prototype -name -1 option is required to specify the name of a user -defined function your program \nwill be using.  Optionally, should you desire, you may specify an alias name by which you will reference that user -\ndefined function.  Should you wish, you may also use the \u201c AS\u201d clause to provide an alias name for a built -in \nintrinsic function.  \nThe following example accomplishes these object ives:  \n It enables all intrinsic functions to be specified without the use of the \u201c FUNCTION \u201d keyword.  \n It names two user -defined functions that will be used by the program: \u201cMY -FUNCTION -1\u201d and \u201cUSER -\nDEFINED -FUNCTION -NUMBER -2\u201d \n It specifies the alias names \u201cSIG MA\u201d for the intrinsic function \u201cSTANDARD -DEVIATION\u201d and \u201cUDF2\u201d for \n\u201cUSER -DEFINED -FUNCTION -NUMBER -2\u201d. \nREPOSITORY.  \n    ", "start_char_idx": 0, "end_char_idx": 2570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "135de2cf-a0a7-4e8f-8126-84c07a03c770": {"__data__": {"id_": "135de2cf-a0a7-4e8f-8126-84c07a03c770", "embedding": null, "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "833f8234-8abe-4ba2-ad44-316f42e4b104", "node_type": "4", "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fde645b13a81bcb7724edc9b4ae8ec1e32dc011a8e2f47369b28a48a42d09c6c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12bd91db-e6bd-4f91-be01-6d3e6c63dcd0", "node_type": "1", "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8ace983bdce90f79c1e6718a8dd346363330204d215844ef2d3a1ffbad161b5c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d082fda5-fd23-44ec-a71d-6d2590a0d6e0", "node_type": "1", "metadata": {}, "hash": "791cfa562a0388f44d2ffa93d8fb581705b6f136a57938a45e48bdd00e288302", "class_name": "RelatedNodeInfo"}}, "text": "FUNCTION ALL INTRINSIC.  \n    FUNCTION MY -FUNCTION -1. \n    FUNCTION USER -DEFINED-FUNCTION -NUMBER-2 AS \u201cUDF2\u201d.  \n    FUNCTION STANDARD -DEVIATION AS \u201cSIGMA\u201d.  \nREPOSITORY .\n", "start_char_idx": 2570, "end_char_idx": 2746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d082fda5-fd23-44ec-a71d-6d2590a0d6e0": {"__data__": {"id_": "d082fda5-fd23-44ec-a71d-6d2590a0d6e0", "embedding": null, "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "833f8234-8abe-4ba2-ad44-316f42e4b104", "node_type": "4", "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fde645b13a81bcb7724edc9b4ae8ec1e32dc011a8e2f47369b28a48a42d09c6c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "135de2cf-a0a7-4e8f-8126-84c07a03c770", "node_type": "1", "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "62a58fb0724db113a6a6a3d1d7c371c373925ceb536f66b0eaac68590a4ca124", "class_name": "RelatedNodeInfo"}}, "text": "FUNCTION . \u2026\n[AS literal -1]Intrinsic -function -name -2\nFunction -prototype -name -1intrinsic -function -name -1\nALLINTRINSIC", "start_char_idx": 2746, "end_char_idx": 2872, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3609ee8e-144a-4f7b-8d56-c80a1d003afe": {"__data__": {"id_": "3609ee8e-144a-4f7b-8d56-c80a1d003afe", "embedding": null, "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d", "node_type": "4", "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0043b0eb025901f149d93d7fa4ad3b917943fa952f0f14d134b4f4c1f302049d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98750ad1-899a-4e7e-ba94-20eb01bac3fa", "node_type": "1", "metadata": {}, "hash": "bbe8967d8848962cc567942f52c92d155a84e841c1f5b8638b8be40d06cf2c35", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-4 A SPECIAL NOTE ABOUT USER -DEFINED FUNCTIONS  \u2013 because you must  name a user -defined function that your \nprogram will be using in the REPOSITORY  paragraph, you may always  reference that function from your program\u2019s \nPROCEDURE DIVISION  without needing to use the \u201c FUNCTION \u201d keyword.  \nSee Also\u2026  \nIntrinsic Functions  6.1.7  \nUser -defined Functions  7.4.2  \n Details Of Nested Subprograms  7.6 \n \n4.1.4.  SPECIAL -NAMES Paragraph  \nFigure 4-6 - SPECIAL -NAMES Paragraph Syntax  \n The SPECIAL -NAMES  paragraph \nprovides a means for specifying \nvarious program and operating \nenvironment configuration options.  \n1. The SPECIAL -NAMES  paragraph is \nnot allowed in a nested \nsubprogram \u2013 nested programs \nwill inherit the SPECIAL -NAMES  \nsettings of their parent program.   \n2. The various clauses that may be \nspecified within the SPECIAL -\nNAMES  paragraph may b e coded \nin any order.  \n3. Only the final clause specified \nwithin the SPECIAL -NAMES  \nparagraph should be terminated \nwith a period.  \n4. The CALL -CONVENTION  clause \nallows a decimal integer, \nrepresenting a series of ON/OFF \nswitch settings, to be associated \nwith a mnemonic name which \nmay then be coded on CALL  \nstatements.  The switch settings \ndefined by this mnemonic will \nthen control how the linkage to \nthe subroutine ( invoked by the \nCALL  statement that references \nmnemonic -name -1) will be \nhandled.   \n5. The CONSOLE IS CRT  clause, if specified, will cause any DISPLAY  or ACCEPT  statements lacking explicit \u201c UPON \u201d \nclauses to be treated as full -screen DISPLAY s or ACCEPT s. \n6. If the CRT STATUS  clause is not specified, an implicit COB -CRT-STATUS  identifier  (with a PICTURE  of 9(4)) will be \nallocated for the purpose of receiving screen ACCEPT  statuses.   If it is specif ied, then identifier -1 must be defined \nin the program as a PIC 9(4)  field.   \n", "start_char_idx": 0, "end_char_idx": 1947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98750ad1-899a-4e7e-ba94-20eb01bac3fa": {"__data__": {"id_": "98750ad1-899a-4e7e-ba94-20eb01bac3fa", "embedding": null, "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d", "node_type": "4", "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0043b0eb025901f149d93d7fa4ad3b917943fa952f0f14d134b4f4c1f302049d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3609ee8e-144a-4f7b-8d56-c80a1d003afe", "node_type": "1", "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1dabbda5d95042bc883b1098bae9dc59f62e1f533136e12a9113e96aa4b9cfa2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c69d095-4aa5-4303-9365-624c4c4c884a", "node_type": "1", "metadata": {}, "hash": "9c2d57b2412482c7ec3fc3429da880a5d82dfda7e2ab344d6a13c89376435862", "class_name": "RelatedNodeInfo"}}, "text": "7. The CURRENCY SIGN  clause may be used to define any single character as the currency sign used in PICTURE  \nsymbol editing .  The default currency sign is a dollar -sign ($).  \n8. The CURSOR IS  clause allows you to specify a 4 - or 6-character data item into which the cursor screen location at \nthe time a screen ACCEPT   is satisfied.  The value will be returned as rrcc or rrrccc, depending upon the length of \nthe speci fied identifier -2, where \u201crr\u201d and \u201crrr\u201d represent the row number (starting at zero) and \u201ccc\u201d and \u201cccc\u201d \nrepresent the column number (also starting at zero).  There is no default data item allocated for this data if the \nCURSOR IS  clause is not specified.  \n", "start_char_idx": 1947, "end_char_idx": 2634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c69d095-4aa5-4303-9365-624c4c4c884a": {"__data__": {"id_": "7c69d095-4aa5-4303-9365-624c4c4c884a", "embedding": null, "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d", "node_type": "4", "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0043b0eb025901f149d93d7fa4ad3b917943fa952f0f14d134b4f4c1f302049d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98750ad1-899a-4e7e-ba94-20eb01bac3fa", "node_type": "1", "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dab397690c98b9fb91ca6499e9282418355521edfb4776521041310f1d77f2ea", "class_name": "RelatedNodeInfo"}}, "text": "SPECIAL-NAMES.\n[CALL-CONVENTION integer -1ISmnemonic -name -1]\n[CONSOLE IS CRT]\n[CRTSTATUSIS identifier -1]\n[CURRENCY SIGN IS literal -1]\n[CURSORIS identifier -2]\n[DECIMAL-POINTIS COMMA]\n[EVENTSTATUSIS identifier -3]\n[LOCALE locale -name -1 IS literal -2]\u2026\n[NUMERIC SIGNIS TRAILING SEPARATE ]\n[SCREENCONTROL IS identifier -4]\n[device -name -1 IS mnemonic -name -2 ]\u2026 \n[feature -name -1 IS mnemonic -name -3 ]\u2026 \n[alphabet -name -clause ]\u2026 \n[class -definition -clause ]\u2026 \n[switch -definition -clause ]\u2026 \n[symbolic -characters -clause ]\u2026 \n.", "start_char_idx": 2634, "end_char_idx": 3171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3ebb17f-e94b-4aa4-b19a-8426ee72873b": {"__data__": {"id_": "b3ebb17f-e94b-4aa4-b19a-8426ee72873b", "embedding": null, "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e77ed84-971b-426f-bda3-61f7e9532626", "node_type": "4", "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "15960a05a53e16ecd09ae1c4400da679b7f05e0ab09db50289419e505a6ed712", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "088e581f-85c9-4c7f-a6e9-47f69494d773", "node_type": "1", "metadata": {}, "hash": "ae6bff24199fd7187d382caba11b2da24cb85defca822084f5bc3017723fd2a2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-5 9. The DECIMAL POINT IS COMMA  clause reverses the definition of the \u201c,\u201d and \u201c.\u201d characters when they are used as \nPICTURE  editing symbols  and numeric literals .  This can have unwanted side -effects.  \n", "start_char_idx": 0, "end_char_idx": 288, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "088e581f-85c9-4c7f-a6e9-47f69494d773": {"__data__": {"id_": "088e581f-85c9-4c7f-a6e9-47f69494d773", "embedding": null, "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e77ed84-971b-426f-bda3-61f7e9532626", "node_type": "4", "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "15960a05a53e16ecd09ae1c4400da679b7f05e0ab09db50289419e505a6ed712", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3ebb17f-e94b-4aa4-b19a-8426ee72873b", "node_type": "1", "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b422da8a1e7237ac69d4fb07e68a0bf064356ae1d21d8ecd601c4f0151e10117", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f10a04ff-54a8-4845-8156-0c14bedfc2d9", "node_type": "1", "metadata": {}, "hash": "84f9c733376c29f8a311bd6704b088e3b8108c5ea12d2cd60ed1aea0bad27202", "class_name": "RelatedNodeInfo"}}, "text": "10. The LOCALE  clause m ay be used to associate external OS -defined locale names ( literal -6) with an internal name \n(locale -name -1) that may then be  referenced within the program .  Locale names are defined by the Operating \nSystem and/or C compiler GNU COBOL  will be utilizing on yo ur computer.  \nThe following table provides a list of possible locale codes, fgor example, that would be available on a Windows \ncomputer running a GNU COBOL  that was built utilizing the MinGW Unix -emulator and the GNU C compiler (gcc):  \nFigure 4-7 \u2013 Typical Locale Codes  \naf_ZA  \nam_ET  \nar_AE  \nar_BH  \nar_DZ  \nar_EG  \nar_IQ  \nar_JO  \nar_KW  \nar_LB  \nar_LY  \nar_MA  \nar_OM  \nar_QA  \nar_SA  \nar_SY  \nar_TN  \nar_YE  \narn_CL  \nas_IN  \naz_Cyrl_AZ  \naz_Latn_AZ  \nba_R  be_BY  \nbg_BG  \nbn_IN \nbo_BT  \nbo_CN  \nbr_FR  \nbs_Cyrl_BA  \nbs_Latn_BA  \nca_ES  \ncs_CZ  \ncy_GB  \nda_DK  \nde_AT  \nde_CH  \nde_DE  \nde_LI  \nde_LU  \ndsb_DE  \ndv_MV  \nel_GR  \nen_029  \nen_AU  \nen_BZ  en_CA  \nen_GB  \nen_IE  \nen_IN  \nen_JM  \nen_MY \nen_NZ  \nen_PH  \nen_SG  \nen_TT  \nen_US  \nen_ZA  \nen_ZW  \nes_AR  \nes_BO  \nes_CL  \nes_CO  \nes_CR  \nes_DO  \nes_EC  \nes_ES  \nes_GT  \nes_HN  es_MX  \nes_NI  \nes_PA  \nes_PE  \nes_PR  \nes_PY  \nes_SV  \nes_US  \nes_UY \nes_VE  \net_EE  \neu_ES  \nfa_IR  \nfi_FI  \nfil_PH  \nfo_FO  \nfr_BE  \nfr_CA  \nfr_CH  \nfr_FR  \nfr_LU  \nfr_MC  \nfy_NL  ga_IE  \ngbz_AF  \ngl_ES  \ngsw_FR  \ngu_IN  \nha_Latn_NG  \nhe_IL  \nhi_IN  \nhr_BA  \nhr_HR  \nhu_HU  \nhy_AM \nid_ID  \nig_NG  \nii_CN  \nis_IS  \nit_CH  \nit_IT  \niu_Cans_CA  \niu_Latn_CA  \nja_JP  \nka_GE  \nkh_KH  kk_KZ  \nkl_GL  \nkn_IN  \nko_KR  \nkok_IN  \nky_KG  \nlb_LU  \nlo_LA  \nlt_LT  \nlv_LV  \nmi_NZ  \nmk_MK  \nml_IN  \nmn_Cyrl_MN  \nmn_Mong_CN \nmoh_CA  \nmr_IN  \nms_BN  \nms_MY  \nmt_MT  \nnb_NO  \nne_NP  \nnl_BE  nl_NL  \nnn_NO  \nns_ZA  \noc_FR  \nor_IN  \npa_IN  \npl_PL  \nps_AF  \npt_BR  \npt_PT  \nqut_GT  \nquz_BO  \nquz_EC  \nquz_PE  \nrm_CH  \nro_RO  \nru_RU  \nrw_RW \nsa_IN  \nsah_RU  \nse_FI  \nse_NO \nse_SE  si_LK  \nsk_SK  \nsl_SI  \nsma_NO  \nsma_SE  \nsmj_NO  \nsmj_SE  \nsmn_FI  \nsms_FI  \nsq_AL  \nsr_Cyrl_BA  \nsr_Cyrl_CS  \nsr_Latn_BA  \nsr_Latn_CS  \nsv_FI  \nsv_SE  \nsw_KE \nsyr_SY  \nta_IN  \nte_IN  \ntg_Cyrl_TJ  \nth_TH tk_TM  \ntmz_Latn_DZ  tn_ZA  \ntr_IN  \ntr_TR  \ntt_RU  \nug_CN  \nuk_UA  \nur_PK  \nuz_Cyrl_UZ  \nuz_Latn_UZ  \nvi_VN  \nwen_DE  \nwo_SN  \nxh_ZA \nyo_NG  \nzh_CN  \nzh_HK  \nzh_MO  \nzh_SG  \nzh_TW  \nzu_ZA  \n11. The NUMERIC SIGN IS TRAILING SEPARATE  specification causes all signed numeric USAGE DISPLAY  data items to \nbe created as if the SIGN IS TRAILING SEPARATE CHARACTER  clause was included in their definitions.  \n", "start_char_idx": 288, "end_char_idx": 2799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f10a04ff-54a8-4845-8156-0c14bedfc2d9": {"__data__": {"id_": "f10a04ff-54a8-4845-8156-0c14bedfc2d9", "embedding": null, "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e77ed84-971b-426f-bda3-61f7e9532626", "node_type": "4", "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "15960a05a53e16ecd09ae1c4400da679b7f05e0ab09db50289419e505a6ed712", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "088e581f-85c9-4c7f-a6e9-47f69494d773", "node_type": "1", "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcf4e2228265b34884e7cf95fe78c7813a6c4a0b629ec89dee376dfb531dfb6e", "class_name": "RelatedNodeInfo"}}, "text": "12. While the SCREEN CONTROL  and EVENT STATUS  clauses are clearly noted at compilation time as being \nunsupported, the CURSOR IS  clause is not; currently, however, it appears to be non -functional at runtime.  \n13. The \u201c device -name  IS mnemonic -name -2\u201d clause allows you to specify an alternate name for one of the built -in \nGNU COBOL  device names specified before the \u201c IS\u201d.  The list of device names built -into GNU COBOL , and the \nphysical device associated with that name, are as follows:  \nFigure 4-8 - Built -In GNU COBOL  Device Names  \nBuilt -In GNU COBOL  Device Name  Associated Actual Device  \nCONSOLE  This is the (screen -mode) display of the PC or Unix \nsystem  \nSTDIN  \nSYSIN  \nSYSIPT  Standard system input (pipe 0).  On a PC or UNIX \nsystem, this is typically the keyboard.  Can be specified \nto a GNU COBOL  program from a file by adding the \nsequence \u201c 0< filename \u201d to the end of the programs \nexecution command.  \nPRINTER  \nSTDOUT  \nSYSLIST  \nSYSLST  \nSYSOUT  Standard system output (pipe 1).  On a PC or UNIX \nsystem, this is typically the display.  Can be sent to a file \nby adding the sequence \u201c 1> filename \u201d to the end of the \nprograms execution command.  \nSTDERR  \nSYSERR  Standard system error output (pipe 2).  On a PC or \nUNIX system, this is typically the display.  Can be sent \nto a file by adding the sequence \u201c 2> filename \u201d to th e \nend of the programs execution command.  \n14. The \u201c feature -name -1 IS mnemonic -name -3\u201d clause allow for mnemonic names to be assigned to up to the 13 \nprinter channel (i.e. vertical page positioning) position feature names \u201c C01\u201d through \u201c C12\u201d and \u201c CSP\u201d.  Once a \nchannel position has been assigned a mnemonic name, statements of the form \u201c WRITE record -name  AFTER ", "start_char_idx": 2799, "end_char_idx": 4549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7df5b83-59d3-4c44-b5c8-e51191e9d2e5": {"__data__": {"id_": "d7df5b83-59d3-4c44-b5c8-e51191e9d2e5", "embedding": null, "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32", "node_type": "4", "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "293db280cb4fcb4673316d8844673b8296c4447d605cb5c05b8ab8ede0d5b44b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18a29e23-8309-48d6-b9f8-8b3a756cd854", "node_type": "1", "metadata": {}, "hash": "80d561a6808f225db48c8167baa19c0a06b3a936d8cebeecc30a250f3fe1f85d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-6 ADVANCING mnemonic -name -3\u201d9 may be coded to write the specified print record at the channel position \nassigned to mnemonic -name -3. \nPrinters supporting channe l positioning are generally mainframe -type line printers.  ", "start_char_idx": 0, "end_char_idx": 306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18a29e23-8309-48d6-b9f8-8b3a756cd854": {"__data__": {"id_": "18a29e23-8309-48d6-b9f8-8b3a756cd854", "embedding": null, "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32", "node_type": "4", "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "293db280cb4fcb4673316d8844673b8296c4447d605cb5c05b8ab8ede0d5b44b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7df5b83-59d3-4c44-b5c8-e51191e9d2e5", "node_type": "1", "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "baf46d78c31b8942a2757529e70c5095af0e57ba50dcd0886e4e30c23eb281cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd253342-4f9a-4571-b24b-1b8580531029", "node_type": "1", "metadata": {}, "hash": "3b5a9da6927bcee9a0575c13905eec9739e0273284af10e979a7f5a13753e21b", "class_name": "RelatedNodeInfo"}}, "text": "When writing to printers that \ndo not support channel positioning, a formfeed will be issued to the printer.  \nThe CSP positioning option stands for \u201cNo Spacing\u201d.  Testing on a MinGW build of GNU COBO L shows that this too \nresults in a formfeed being issued.  \nSee Also\u2026  \nUsing Commas and Semicolons  1.7 \nOBJECT -COMPUTER  And LOCALE s 4.1.2  \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \n The ACCEPT Statement (Screen Data)  6.4.1.4  \nThe CALL  Statement  6.4.5  \nDetails Of Nested Subprograms  7.6 \n \n4.1.4.1.  The alphabet -name  Clause  \nFigure 4-9 - The SPECIAL -NAMES \"alphabet -name\" Clause  \n \n The ALPHABET  clause provides a means for \nrelating a name to a specified character code set \nor collating sequence, including those you define \nyourself using the \u201c literal -1\u201d option.  You may \nspecify an alphanumeric literal  for any of the \nliteral -1, literal -2 or literal -3 specifications.  You \nmay also specify any of the figurative  constants  \nSPACE , SPACES , ZERO , ZEROS , ZEROES , QUOTE , \nQUOTES , HIGH -VALUE , HIGH -VALUES , LOW -\nVALUE  or LOW -VALUES . \n1. The reserved word \u201c THROUGH \u201d may be used \ninterchangeably with \u201c THRU \u201d. \n4.1.4.2.  The class -name  Clause  \nFigure 4-10 - The SPECIAL -NAMES \"class -name\" Clause  \n User -defined classes are defined using the \nCLASS  clause.   \n1. The reserved word THROUGH  may be used interchangeably with THRU . \n2. Both literal -1 and literal -2 must be alphanumeric literals of length 1.  \n3. The literal(s) specified on that clause define the possible characters that may be found in a data item\u2019s value in \norder to be considered part of the class.  \nFor example, the foll owing defines a class called \u201cHexadecimal\u201d, the definition of which specifies the only \ncharacters that may be present in an alphanumeric data item if that data item is to be part of the \u201cHexadecimal\u201d \nclass:  \nCLASS Hexadecimal IS \u20180\u2019 THRU \u20189\u2019  \n                     \u2018A\u2019 THRU \u2018F\u2019  \n                     \u2018a\u2019 THRU \u2018f\u2019  \n4. See section  for an example of how this user -defined class might be used.  \n                                                                 \n", "start_char_idx": 306, "end_char_idx": 2418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd253342-4f9a-4571-b24b-1b8580531029": {"__data__": {"id_": "dd253342-4f9a-4571-b24b-1b8580531029", "embedding": null, "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32", "node_type": "4", "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "293db280cb4fcb4673316d8844673b8296c4447d605cb5c05b8ab8ede0d5b44b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18a29e23-8309-48d6-b9f8-8b3a756cd854", "node_type": "1", "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3268cfcea5783b29bee563930b62ace58983a9bc552ae73719101fb946f29a23", "class_name": "RelatedNodeInfo"}}, "text": "9 BEFORE ADVANCING  is possible also.  See the WRITE  statement in section 6.2.50  for additional information.  \nALPHABET alphabet -name -1IS\nNATIVE\nSTANDARD -1\nSTANDARD -2\nEBCDIC\nliteral -1 \u2026THRU|THROUGH literal -2\n{ALSO literal -3} \u2026\nCLASS class -name -1IS\n{literal -1[THRU|THROUGH literal -2]} \u2026", "start_char_idx": 2418, "end_char_idx": 2716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b9a7327-79ba-4269-8ad0-143db0b2b441": {"__data__": {"id_": "5b9a7327-79ba-4269-8ad0-143db0b2b441", "embedding": null, "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "53b8222b-b9cf-47a8-be90-cff719188640", "node_type": "4", "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a37f85238c60064b85b10649da704c0029778f7fc7fdbaed655bf814fdf7ab2a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e60225a-4904-4b4e-b6cf-20a71a424683", "node_type": "1", "metadata": {}, "hash": "40772a8a91c2d0e21f753cc53d120977a7474d9ac68a6aa6ccbe3c89258a6475", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-7 See Also\u2026  \nClass Tests  6.1.4.2.2  \n  \n4.1.4.3.  The switch -definition  Clause  \nFigure 4-11 - The SPECIAL -NAMES \"switch -definition\" Clause  \n The switch -definition  clause associates a condition -name  with \na run -time execution switch so that the status of that switch \nmay be tested from within a program.   \n \n1. ", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e60225a-4904-4b4e-b6cf-20a71a424683": {"__data__": {"id_": "3e60225a-4904-4b4e-b6cf-20a71a424683", "embedding": null, "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "53b8222b-b9cf-47a8-be90-cff719188640", "node_type": "4", "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a37f85238c60064b85b10649da704c0029778f7fc7fdbaed655bf814fdf7ab2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b9a7327-79ba-4269-8ad0-143db0b2b441", "node_type": "1", "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8cce499b6a418958a92e151b97cdbb2a2662efb18adca66b8e8c8f38f28211be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "253912bf-973a-4f5c-9f10-e706af5312a3", "node_type": "1", "metadata": {}, "hash": "115462eb5339126cecbf70ab842086ddd56dea0e410de6463f044bfb3d769844", "class_name": "RelatedNodeInfo"}}, "text": "The valid switch -names are SWITCH -0 through SWITCH -15. \n2. If the program is compiled with the \u201c -fsyntax -extension \u201d compiler switch, the switch names \u201c SW0 \u201d through \n\u201cSW15 \u201d are also valid; they correspond to \u201c SWITCH -0\u201d through \u201c SWITCH -15\u201d, respectively.  \n3. At execution time, each switch will be associated with an environment variable named \u201c COB_SWITCH_ n\u201d, where \n\u201cn\u201d will have the value \u201c0\u201d through \u201c15\u201d.  Any of these sixteen environment variables that have the value \u201cON\u201d \n(regardless of upper - or lower -case value) will be considered to be set \u201con\u201d.  Any of th ese sixteen environment \nvariables having no value at all or a value other than \u201cON\u201d will be considered \u201coff\u201d.  \n4. Each specified switch must have at least one of a \u201c IS mnemonic -name \u201d, ON STATUS  or an OFF STATUS  option \ndefined for it (otherwise there will be no  way to reference the switch from within a GNU COBOL  program).  \n5. The \u201c IS mnemonic -name \u201d syntax provides a means for setting the switch to either an ON or OFF value via the SET \nstatement.  \n6. The ON STATUS  and OFF STATU S syntax provides a way of associating a condition -name with either the on  or off \nstatus of the switch, so that status may be tested at execution time via the IF statement.  \nSee Also\u2026  \nCondition Names  6.1.4.2.1  \nSwitch -Status Conditions  6.1.4.2.4  \n The IF Statement  6.2.21  \nThe SET SWITCH  Statement  6.4.39.7  \n \n4.1.4.4.  The symbolic -characters  clause  \nFigure 4-12 - The SPECIAL -NAMES \"symbolic -characters \" Clause  \n The SYMBOLIC CHARACTERS  \nclause may be used to define your \nown figurative constants.   \n1. ", "start_char_idx": 406, "end_char_idx": 2019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "253912bf-973a-4f5c-9f10-e706af5312a3": {"__data__": {"id_": "253912bf-973a-4f5c-9f10-e706af5312a3", "embedding": null, "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "53b8222b-b9cf-47a8-be90-cff719188640", "node_type": "4", "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a37f85238c60064b85b10649da704c0029778f7fc7fdbaed655bf814fdf7ab2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e60225a-4904-4b4e-b6cf-20a71a424683", "node_type": "1", "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "afce61de4d4aa0cbc34a5e23420e674f68467ede107f8e967f22ada1a5ad7625", "class_name": "RelatedNodeInfo"}}, "text": "The word IS may be substituted for the word ARE, if desired.  \n2. There must be exactly as many integer -1 values specified after the word ARE (or IS) as there are symbolic -\ncharacter -1 names specified before it.  \n3. Each symbolic character name will be associated with the corresponding \u201c integer -1\u201dth characte r in the alphabet \nnamed in the IN clause.  The integer va lues are selecting characters from the alphabet by their ordinal position \nand not by their numeric value; thus, an integer of 15 will select the 15th character in the specified alphabet, \nregardless of the actual numeric value of the bit pattern that consti tutes that character.  \n4. If no alphabet -name -1 is specified, the systems native characterset will be assumed.  \nThe following two code examples define the same set of figurative constant names for five ASCII control characters  \n(assuming that ASCII is the system\u2019s native characterset).  The two examples are identical in their effects, even though \nthe manner in which the figurative constants are defined is different.  \nswitch -name -1[IS mnemonic -name -1]\nONSTATUS IS condition -name -1\nOFFSTATUS IS condition -name -2\u2026\nSYMBOLIC CHARACTERS \n{ { symbolic -character -1} \u2026ARE {integer -1} \u2026 } \u2026\n[INalphabet -name -1]", "start_char_idx": 2019, "end_char_idx": 3277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c2b90a2-7388-40a4-8856-8cbc9cfd732d": {"__data__": {"id_": "2c2b90a2-7388-40a4-8856-8cbc9cfd732d", "embedding": null, "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e0d35c0-9cbb-4e61-8d59-cdc6b72b4feb", "node_type": "4", "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1d64ad70d0c5124f4dad4a9a2dcafc9312672921f47a6d41210b97884d2e1540", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d3e660e-c78d-4f92-ba68-5a725b486553", "node_type": "1", "metadata": {}, "hash": "0309686f6e36c409670277c7d0d37b324f9d1b122fc3880921e6c06f0e68ea89", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-8 SPECIAL-NAMES. \n    SYMBOLIC CHARACTERS NUL IS 1  \n                        SOH IS 2  \n                        BEL IS 8  \n                        DC1 IS 18  \n                        DC2 IS 19.  SPECIAL-NAMES. \n    SYMBOLIC CHARACTERS NUL SOH BEL DC1 DC2  \n                    ARE   1   2   8  18  19.  \n4.2. INPUT -OUTPUT SECTION  \nFigure 4-13 - INPUT -OUTPUT SECTION Syntax  \n The INPUT -OUTPUT  section provides \nfor the definition of any files the \nprogram will be accessing  as well as \ncontrol of the I/O buffering process \nagainst those files .  \n1. If the compiler \u201cconfig\u201d file you are using has \u201crelaxed -syntax -check\u201d set to \u201cyes\u201d, the FILE-CONTROL  and I-O-\nCONTROL  paragraphs may be specified without the INPUT -OUTPUT SECTION heade r having been specified.   \n2. If the program uses no files, it needs neither a FILE-CONTROL  or I-O-CONTROL  paragraph.  \nSee Also\u2026  \nGNU COBOL  \u201cconfig\u201d Files  8.1.6  \n  \nINPUT-OUTPUTSECTION.\n[ FILE-CONTROL. ", "start_char_idx": 0, "end_char_idx": 1039, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d3e660e-c78d-4f92-ba68-5a725b486553": {"__data__": {"id_": "6d3e660e-c78d-4f92-ba68-5a725b486553", "embedding": null, "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e0d35c0-9cbb-4e61-8d59-cdc6b72b4feb", "node_type": "4", "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1d64ad70d0c5124f4dad4a9a2dcafc9312672921f47a6d41210b97884d2e1540", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c2b90a2-7388-40a4-8856-8cbc9cfd732d", "node_type": "1", "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07f50be60100204805fe403bef0acc3a11c7894e2909d6e751bf47f49b9079d1", "class_name": "RelatedNodeInfo"}}, "text": "general -file-descriptions ] \n[ I-O-CONTROL. file-buffering -specifications ] ", "start_char_idx": 1039, "end_char_idx": 1117, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a762e93-d847-4fee-8174-092eaaf04f15": {"__data__": {"id_": "9a762e93-d847-4fee-8174-092eaaf04f15", "embedding": null, "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f307ca91-ac27-45d7-b22c-1b99431135d5", "node_type": "4", "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6fe953f8baa31cf8815a2abf0d79e5f62545aceb5209b4f9bf1bf302c0903d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c2d232d-3c81-43cd-bd99-46486b49df19", "node_type": "1", "metadata": {}, "hash": "759e9a357807ea934bc2f5eb18dd82f1fb0fc54b3eaaa91de205035a6f2310a6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-9 4.2.1.  File SELECT Statement  \nFigure 4-14 \u2013 File SELECT Statement  Syntax  \n The SELECT  \nstatement of \nthe FILE-\nCONTROL  \nparagraph \ncreates a \ndefinition of a \nfile and links \nthat COBOL \ndefinition to \nthe external \noperating \nsystem \nenvironment.  \nWhat is shown \nhere are those \nclauses of the \nSELECT  \nstatement \nthat are \ncommon to all \ntypes of files.  \nUpcoming \nsections will \ndiscuss speci al \nSELECT  \nclauses that \nonly pertain to \ncertain types \nof files.  \n1. The COLLATING SEQUENCE , RECORD DELIMITER , RESERVE  and SHARING WITH ALL OTHER  clauses, as well as the \nspecification of a secondary FILE-STATUS  field and LOCK MODE \u2026 WITH ROLLBACK , while syntactically \nrecognized, are not currently supported by GNU COBOL . \n2. The OPTIONAL  clause, to be used only for files that will be used to provide input data to the program, indicates \nthe file may or may not actually be available at run -time.  Attempts to OPEN  an OPTIONAL  file when the file does \nnot exist will receive a special non -fatal  file status value (see status 05 in Figure 4-15 below ) indicating the file is \nnot available; a subsequent attempt to READ  that file will return an AT END  (end-of-file) condition.   Optionally, \nfiles may be designated as NOT OPTIONAL , if desired.  This is useful when specifying the \u201c -foptional -file\u201d compiler \nswitch . \n3. The file-name -1 value that you specify will be the name by which you will reference the file within your program.  \nThis name should be formed according to the rules for user -defined names.  \n", "start_char_idx": 0, "end_char_idx": 1630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c2d232d-3c81-43cd-bd99-46486b49df19": {"__data__": {"id_": "5c2d232d-3c81-43cd-bd99-46486b49df19", "embedding": null, "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f307ca91-ac27-45d7-b22c-1b99431135d5", "node_type": "4", "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6fe953f8baa31cf8815a2abf0d79e5f62545aceb5209b4f9bf1bf302c0903d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a762e93-d847-4fee-8174-092eaaf04f15", "node_type": "1", "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6be97c0ac4a15d1d492da55505c3fa3b23202a0aacdc96ecef3d8d82d2dbfa9f", "class_name": "RelatedNodeInfo"}}, "text": "4. The EXTERNAL  option flags the file as being sharable  with  other GNU COBOL  programs  that include the same \nSELECT  statement .  Those other programs must either be executed as subprograms from this one or must execute \nthis one as a subprogram.   Once an EXTERNAL  file has been OPEN ed by one of the programs SELECT ing the \nEXTER NAL  file, that file is available for READ ing, WRITE ing and the like from any of the programs that share it.  \nSimilarly, once one program CLOSE s the file, no other program sharing that file may access the file further unless \nthe file is re -OPEN ed. \nSELECT[ [NOT]OPTIONAL ]file-name -1\nASSIGNTO \nSTATUSIS identifier -2[identifier -3]\n[COLLATING SEQUENCE IS alphabet -name -1]\nLOCKMODE IS\nEXCLUSIVE\nMANUAL\nAUTOMATIC\n[RECORDDELIMITER IS STANDARD -1]\n[RESERVE integer -1AREAS]\nSHARING WITH\n[organization -clause ].EXTERNAL\nDYNAMICDISC|DISK\nTAPE\nRANDOM\nDISPLAY\nKEYBOARD\nLINE ADVANCING\nPRINTERliteral -1\nidentifier -1\nFILE\nSORT\nWITH LOCKONMULTIPLE RECORDS\nWITH LOCKONRECORD\nWITH ROLLBACK\nALLOTHER\nNO OTHER\nREADONLY", "start_char_idx": 1630, "end_char_idx": 2684, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84704abc-f5b7-445a-bc35-f0047c4a2f00": {"__data__": {"id_": "84704abc-f5b7-445a-bc35-f0047c4a2f00", "embedding": null, "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c", "node_type": "4", "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e3855e71efddd193445fa7058d39784b932e066fc42a795356f705745259bfcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf721ced-9e2b-4ca0-8369-c690258bf35b", "node_type": "1", "metadata": {}, "hash": "73777d66d4d351a2e280fb50b62f731724048b92f69b85ca8cfe43f466eb6754", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-10 5. The DYNAM IC option specifies that the actual pathname of the file being SELECT ed will be specified at execution \ntime as the contents of identifier -1.  If you use the DYNAMIC  option, you must specify identifier -1.  If you specify \nidentifier -1 on the SELECT , the DYNA MIC option will be assumed if not specified.  \n6. Optionally, you may define the type of device the file will be assigned to, as follows.  \na. The DISK  and DISC  devices (the two are synonymous with one another) are typically used in conjunction with \na \u201cliteral -1\u201d or \u201c identifier -1\u201d option.  If neither the \u201c literal -1\u201d nor \u201c identifier -1\u201d option is provided, the SELECT  \nwill reference a file named \u201c file-name -1\u201d in wha tever folder is current at the time the file is OPEN ed. \nb. The TAPE  and RANDOM  devices behave in a manner similar to DISC  (or DISK ) and are included into GNU \nCOBOL  to facilitate the compilation of COBOL source from other COBOL impl ementations . \nc. The KEYBOARD , DISPLAY  and PRINTER  devices refer to the PC keyboard and display and STDOUT devices, \nrespectively.  When either literal -1 or identifier -1 are specified with these device types, the effect will be the \nsame as if DISC or DISK had been used.  When neither literal -1 nor identifier -1 are used, these devices will be \nassociated with the STDIN  (KEYBOARD )and STDOUT  (DISPLAY  or PRINTER ) devices, resp ectively (see Figure \n4-8). \nd. A file ASSIGN ed to the PRINTER  device must be defined with an ORGANIZATION IS LINE SEQUENTIAL  (if no \nORGANIZATION is specif ied, LINE SEQUENTIAL  will be assumed).  \ne. The LINE ADVANCING  device defines the file as a special form of LINE SEQUENTIAL  file.  When this device is \nused, either literal -1 or identifier -1 must  be specified.  \n", "start_char_idx": 0, "end_char_idx": 1852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf721ced-9e2b-4ca0-8369-c690258bf35b": {"__data__": {"id_": "cf721ced-9e2b-4ca0-8369-c690258bf35b", "embedding": null, "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c", "node_type": "4", "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e3855e71efddd193445fa7058d39784b932e066fc42a795356f705745259bfcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84704abc-f5b7-445a-bc35-f0047c4a2f00", "node_type": "1", "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d9136778ac42d4ed5b81653e4cdad43db07ec8e01906c6da639438829259a034", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1847468-3f90-44d3-9174-2c4c0b2be703", "node_type": "1", "metadata": {}, "hash": "fb30893dc3e3a8a1eac743581d99ec1ed9435e38459f7a8a7e716f4ffbb390a2", "class_name": "RelatedNodeInfo"}}, "text": "7. The \u201c identifier -1\u201d option references an alphanumeric  data item, the contents of which at the time the file is \nOPEN ed will define the path and filename of the actual data file to be processed.  \n8. If the \u201c literal -1\u201d option is used on the ASSIGN  clause, it defines the linkage of the COBOL file to an actual \noperating system file as follows:  \na. If an environment variable named \u201c DD_ literal -1\u201d exists, its value will be treated as the full path/filename of \nthe file.  If not, then \u2026  \nb. If an environment variable named \u201c dd_literal -1\u201d exists, its value will be treated as the full path/filename of \nthe file.  If not, then \u2026  \nc. If an environment variable named \u201c literal -1\u201dexists, it s value will be treated as the full path/filename of the \nfile.  If not, then\u2026  \nd. The literal itself will be treated as the full path/filename to the file.  \nThis behavior will be influenced by the \u201cfilename -mapping\u201d setting in the config file you are using when  \ncompiling your programs.  The behavior stated above applies only if \u201cfilename -mapping: yes\u201d is in -effect.  If \n\u201cfilename -mapping: no\u201d is used, only the last option (treating the literal itself as the full name of the file) is \npossible.    \n9. The FILE STATUS  or SORT STATUS  clause (they are both equivalent and only one or the other, if any, should be \nspecified) is used to specify the name of a PIC 9(2)  data item into which an I/O status code will be saved after \nevery I/O verb that is executed against the file.  This does not actually allocate the data item \u2013 you still need to \nallocate the item yourself somewhere in the DATA DIVISION .   \n", "start_char_idx": 1852, "end_char_idx": 3481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1847468-3f90-44d3-9174-2c4c0b2be703": {"__data__": {"id_": "c1847468-3f90-44d3-9174-2c4c0b2be703", "embedding": null, "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c", "node_type": "4", "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e3855e71efddd193445fa7058d39784b932e066fc42a795356f705745259bfcf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf721ced-9e2b-4ca0-8369-c690258bf35b", "node_type": "1", "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ba658016f11feb37c580da405e13cab552aaab1d3948e292efd1b1aa0bb54694", "class_name": "RelatedNodeInfo"}}, "text": "10. Possible status codes that can be returned to a FILE STATUS  data item are as f ollows:  \nFigure 4-15 \u2013 FILE STATUS Values  \nStatus  \nValue  Meaning   Status  \nValue  Meaning  \n00 Success   39 Conflicting attribute  \n02 Success (Duplicate Record Key Written)   41 File already OPEN  \n05 Success (Optional  File Not Found)   42 File not OPEN  \n07 Success (No Unit)   43 Read not done  \n10 End of file  reached if READ ing forward or \nbeginning -of-file reached if READ ing \nbackward   44 Record overflow  \n14 Out of key range   46 READ error  ", "start_char_idx": 3481, "end_char_idx": 4027, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9d480bc-ac6b-4a06-8916-0ed7afc81c14": {"__data__": {"id_": "f9d480bc-ac6b-4a06-8916-0ed7afc81c14", "embedding": null, "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "569818b3-cffa-4713-a187-bcea79695568", "node_type": "4", "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5879432b80c8570981602b3d46c09d6f3a83fcbc8451b6a5f13eaa3c1b7db33f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a07a261a-2bb4-4e42-ab1e-d94471c9fee8", "node_type": "1", "metadata": {}, "hash": "ff2ecbbb36433b92dbbab793d8ed01108f4ef1df78dd32cd1ddbf3019e62f8fb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-11 11. The LOCK  and SHARING  clauses define the conditions under which this file will be usable by other programs \nexecuting concurrently with this one.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nUser -defined Names  1.10  \nFile Sharing  6.1.9.1  \nRecord Locking  6.1.9.2  \nHandling End -of-File Conditions (AT END ) 6.1.12.1  \n The OPEN  Statement  6.4.29  \nThe READ Statement  6.4.31  \nCompiler Switches Reference  8.1.2  \nGNU COBOL  \u201cconfig\u201d Files  8.1.6  \n \n4.2.1.1.  SELECT Without an \u201corganization -clause\u201d  \nA SELECT statement coded without an ORGANIZATION explicitly coded will be handled as if the following \nORGANIZATION clause had been specified:  \nORGANIZATION IS RECORD BINARY SEQUENTIAL  \n    ACCESS MODE IS SEQUENTIAL  \n    PADDING CHARACTER IS \u201c \u201c  \n4.2.1.2.  ORGANIZATION S EQUENTIAL Files  \nFigure 4-16 - SELECT  \u201corganization -options\u201d For  SEQUENTIAL Files  \n Files declared as ORGANIZATION RECORD \nBINARY SEQUENTIAL  will consist of \nrecords with no explicit end -of-record \ndelimiter character sequences; records in \nsuch files are \u201cdelineated\u201d by a calculated \nbyte -offset (based on record length) into \nthe file .   \n1. The keyword \u201c ORGANIZATION \u201d is optional to provide compatibility with those (few) COBOL implementations that \nconsider that word to be optional.  Most COBOL implementations do require the word ORGANIZATION , so it \nshould be used in new programs.  \n2. These  files cannot be prepared with an y standard text -editing or word processing software as all such programs \nwill imbed delimiter characters  at the end of records .  Such files may contain either USAGE DISPLAY  or USAGE \nCOMPUTATIONAL  (of any variety) data since no character sequence can be accidentally interpreted as an end -of-\nrecord delimiter.  \n3. ", "start_char_idx": 0, "end_char_idx": 1840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a07a261a-2bb4-4e42-ab1e-d94471c9fee8": {"__data__": {"id_": "a07a261a-2bb4-4e42-ab1e-d94471c9fee8", "embedding": null, "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "569818b3-cffa-4713-a187-bcea79695568", "node_type": "4", "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5879432b80c8570981602b3d46c09d6f3a83fcbc8451b6a5f13eaa3c1b7db33f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9d480bc-ac6b-4a06-8916-0ed7afc81c14", "node_type": "1", "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6904d7d2b2fa7d14964579edc7cd8de6455a0324a3b7e4ef8024e30a455a1cca", "class_name": "RelatedNodeInfo"}}, "text": "Both fixed - and variable -length record formats are supported.   Variable -length records will always be written in \ntheir maximum size, however.  \n4. Specifying ORGANIZATION IS RECORD BINARY SEQUENTIAL  is the same as specifying ORGANIZATION \nSEQUENTIAL . \n5. The ACCESS MODE  IS SEQUENTIAL  clause is optional because, if absent, it will be assumed anyway for this type of \nfile.  The inte rnal structure of RECORD BINARY SEQUENTIAL  files is such that the data in those files can only be \n[ORGANIZATION IS ]RECORD BINARY SEQUENTIAL\n[ACCESSMODE IS SEQUENTIAL ]21 Key invalid   47 OPEN INPUT denied  \n22 Attempt to duplicate key value   48 OPEN OUTPUT denied  \n23 Key not found   49 OPEN I -O denied  \n30 Permanent I/O error   51 Record locked  \n31 Inconsistent filename   52 End of page  \n34 Boundary violation   57 LINAGE specifications invalid  \n35 File not  found   61 File sharing failure  \n37 Permission denied   91 File not available  \n38 Closed with lock     ", "start_char_idx": 1840, "end_char_idx": 2809, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e60815f-54e4-4645-92ce-a3195a9f54b0": {"__data__": {"id_": "4e60815f-54e4-4645-92ce-a3195a9f54b0", "embedding": null, "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a064895-f3c9-4808-ab79-103bc8b553d4", "node_type": "4", "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "38266f2c2860d202028e78490719f1828844622022202042ec69c7e06b552f34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247", "node_type": "1", "metadata": {}, "hash": "69b67ee997df6b00bf6569d0539aeb368e7dac8c696b337221a65cd0f0e8ca46", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-12 processed in a sequential manner; in order to read the 100th record in such a file, for example, you first must read \nrecords 1 through 99.  \n6. ", "start_char_idx": 0, "end_char_idx": 229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247": {"__data__": {"id_": "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247", "embedding": null, "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a064895-f3c9-4808-ab79-103bc8b553d4", "node_type": "4", "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "38266f2c2860d202028e78490719f1828844622022202042ec69c7e06b552f34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e60815f-54e4-4645-92ce-a3195a9f54b0", "node_type": "1", "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0725c309272d05ed1e6aa683c01569d4e67f6d4ab0e33905562814726387d815", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85336622-3b81-4b92-b412-626dd96168a9", "node_type": "1", "metadata": {}, "hash": "aecc1c4e2613e4810b6a9a0cb6dbedab193b5e4feaac85244caec8d8152049f5", "class_name": "RelatedNodeInfo"}}, "text": "SEQUENTIAL  files ar e processed using the CLOSE , COMMIT , DELETE , MERGE , OPEN , READ , REWRITE , SORT , \nUNLOCK  and WRITE  statements.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nHandling End -of-File Conditions (AT END ) 6.1.12.1  \nThe CLOSE  Statement  6.4.7  \nThe COMMIT  Statement  6.4.8  \nThe DELETE  Statement  6.4.11  \nThe MERGE  Statement  6.4.25  \n The OPEN  Statement  6.4.29  \nThe READ Statement  6.4.31  \nThe REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \n \n4.2.1.3.  ORGANIZATION LINE SEQUENTIAL Files  \nFigure 4-17 - SELECT \"organization -options\" for LINE SEQUENTIAL Files  \n Files declared as ORGANIZATION LINE \nSEQUENTIAL  will consist of records terminated by \nan end -of-record deli miter character  or character \nsequence . \n1. ", "start_char_idx": 229, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85336622-3b81-4b92-b412-626dd96168a9": {"__data__": {"id_": "85336622-3b81-4b92-b412-626dd96168a9", "embedding": null, "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a064895-f3c9-4808-ab79-103bc8b553d4", "node_type": "4", "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "38266f2c2860d202028e78490719f1828844622022202042ec69c7e06b552f34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247", "node_type": "1", "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "52a3b0a4f04ca76c234f6a578c50ce1b42474f5bbf44aceac210d7134fdc29c7", "class_name": "RelatedNodeInfo"}}, "text": "The keyword \u201c ORGANIZATION \u201d is optional to provide compatibility with those (few) COBOL implementations that \nconsider that word to be optional.  Most COBOL implementations do require the word ORGANIZATION , so it \nshoul d be used in new programs.  \n2. This is the only ORGANIZATION  valid for files that are assigned to the PRINTER  device.  \n3. These  files could  be prepared with any standard text -editing or word processing software capable of writing text \nfiles.  Such files should not contain any USAGE COMPUTATIONAL  or BINARY  (of any variety) data since such fields \ncould accidentally contain byte sequences that could be interpreted as an end -of-record delimiter.  \n4. Both fixed - and variable -length record formats are supported.    \n5. The end -of-record delimiter sequence will be X\u20190A\u2019 (an ASCII line -feed character) or a X\u20190D0A\u2019 (an ASCII carriage -\nreturn/line -feed sequence).   \n6. The PADDING CHARACTER  clause, while syntactically recognized, is  currently non -functional.  \n7. When reading a LINE SEQUENTIAL  file, records in excess of the size implied by the file\u2019s FD will be truncated while \nrecords shorter than that size will be padded to the right with SPACES . \n8. The ACCESS MODE  IS SEQUENTIAL  clause is optional because, if absent, it will be assumed anyway for this type of \nfile.  The internal structure of LINE  SEQUENTIAL  files is such that the data in those files can only be processed in a \nsequential manner; in order to read  the 100th record in such a file, for example, you first must read records 1 \nthrough 99.  \n9. Files ASSIGNed to PRINTER  or CONSOLE should be specified as ORGANIZATION LINE SEQUENTIAL.  \n10. LINE SEQUENTIAL  files are processed using the CLOSE , COMMIT , DELETE , MERGE , OPEN , READ , REWRITE , SORT , \nUNLOCK  and WRITE  statements.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nStorage Format of Data ( USAGE ) 5.2.1.11  The OPEN  Statement  6.4.29  \nThe READ Statement  6.4.31  \n[ORGANIZATION IS ]LINESEQUENTIAL\n[ACCESSMODE IS SEQUENTIAL ]\nPADDING CHARACTER ISliteral -1\nidentifier -1", "start_char_idx": 1111, "end_char_idx": 3170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84166803-206c-4cb8-94b1-edc180afabf6": {"__data__": {"id_": "84166803-206c-4cb8-94b1-edc180afabf6", "embedding": null, "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328", "node_type": "4", "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3e8de3dcfee97fa58cc10fc31acd0202ee597b9f3d0ef4ac230bd5dbda27b38a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdbf07a9-232a-460e-8494-113112583e22", "node_type": "1", "metadata": {}, "hash": "a9963c766875216784a76d59f2fc15c0b84b6364e360af8a7bb1121af1f72ace", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-13 Handling End -of-File Conditions (AT END ) 6.1.12.1  \nThe CLOSE  Statement  6.4.7  \nThe COMMIT  Statement  6.4.8  \nThe DELETE  Statement  6.4.11  \nThe MERGE  Statement  6.4.25  \n The REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \n \nORGANIZATION RELATIVE Files  \nFigure 4-18 - SELECT  \u201corganization options\u201d For  RELATIVE  Files  \n RELATIVE  files are files with an internal organization such \nthat records may be processed in a sequential manner \nbased upon their physical location in the file or in a  \nrandom manner  by allowing  records to be read, written \nor updated by specifying the relative record number in \nthe file.  \n \n1. ", "start_char_idx": 0, "end_char_idx": 807, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdbf07a9-232a-460e-8494-113112583e22": {"__data__": {"id_": "fdbf07a9-232a-460e-8494-113112583e22", "embedding": null, "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328", "node_type": "4", "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3e8de3dcfee97fa58cc10fc31acd0202ee597b9f3d0ef4ac230bd5dbda27b38a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84166803-206c-4cb8-94b1-edc180afabf6", "node_type": "1", "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "594ae672a3bde4b4fdbc2bd1e5775c72e17b8ee7a56d5cc65a14f3b502825cf9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "524d1c43-a6db-4f4e-8d0e-91f1b299575d", "node_type": "1", "metadata": {}, "hash": "2409794619bb13da6871f928a3b4f03a8ecc9a876bbc247ecb985b5db5558e4d", "class_name": "RelatedNodeInfo"}}, "text": "The keyword \u201c ORGANIZATION \u201d is optional to provide compatibility with those (few) COBOL implementations that \nconsider that word to be optional.  Most COBOL implementations do require the word ORGANIZATION , so it \nshould be used in new programs.  \n2. ORGANIZATION RELATIVE  files cannot be assigned to CONSOLE , DISPLAY , LINE  ADVANCING  or PRINTER . \n3. The RELATIVE KEY  clause is optional only if ACCESS MODE SEQUENTIAL  is specified.    \n4. While records in a ORGANIZATION RELATIVE  file may  be defined as having variable -length records, the file will be \nstructured in such a manner as to reserve the maximum possible space for each record.  \n5. An ACCESS MODE  of SEQUENTIAL  indicates that the records of the file will be processed i n a sequential manner, \naccording to their physical sequence in the file.   \nAn ACCESS MODE  of RANDOM  means that records will be processed in random sequence  by specifying their \nrecord number in the file every time the file is read or written .   \nA DYNAMIC  ACCESS MODE  indicates the program will switch back and forth between SEQUENTIAL  and RANDOM  \nmode during execution.  The file starts out initially in SEQUENTIAL mode when first OPEN ed but the program may \nuse the START  verb to swi tch between the other two access modes . \n6. The default ACCESS MODE  is SEQUENTIAL . \n7. The RELATIVE KEY  data item is a numeric data item that cannot be a field within records of this file.  Its purpose is \nto return the curr ent relative record number of a RELATIVE  file that is being processed in SEQUENTIAL  access \nmode and to be a retrieval key that specifies the relative record number to be read or written when processing a \nRELATIVE file in RANDOM  access mode.  \n8. ", "start_char_idx": 807, "end_char_idx": 2531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "524d1c43-a6db-4f4e-8d0e-91f1b299575d": {"__data__": {"id_": "524d1c43-a6db-4f4e-8d0e-91f1b299575d", "embedding": null, "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328", "node_type": "4", "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3e8de3dcfee97fa58cc10fc31acd0202ee597b9f3d0ef4ac230bd5dbda27b38a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdbf07a9-232a-460e-8494-113112583e22", "node_type": "1", "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c8d73ede380443c6b9f4ae3fc3b09b14d1ce935043be61214a494b6c6361c0ae", "class_name": "RelatedNodeInfo"}}, "text": "RELATIVE  files are processed using the CLOSE , COMMIT , DELETE , MERGE , OPEN , READ , REWRITE , SORT , START , \nUNLOCK  and WRITE  statements.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nHandling End -of-File Conditions (AT END ) 6.1.12.1  \nThe CLOSE  Statement  6.4.7  \nThe COMMIT  Statement  6.4.8  \nThe DELETE  Statement  6.4.11  \nThe MERGE  Statement  6.4.25  \nThe OPEN  Statement  6.4.29  \n The READ Statement  6.4.31  \nThe REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe START  Statement  6.2.41  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \n \n[ORGANIZATION IS ]RELATIVE\nACCESSMODE IS\n[RELATIVE KEY IS identifier -1]SEQUENTIAL\nDYNAMIC\nRANDOM", "start_char_idx": 2531, "end_char_idx": 3224, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a75cdc2-a802-4a19-9173-f3ed02d184c3": {"__data__": {"id_": "5a75cdc2-a802-4a19-9173-f3ed02d184c3", "embedding": null, "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a963ae3-330a-44df-b99e-4e9b571155fe", "node_type": "4", "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63ed1a5016ca8b50cc6c86df36a249f38b8e5dbf6069800191a443a3a0129539", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e396bc62-209f-4ed2-8703-3ee551782d47", "node_type": "1", "metadata": {}, "hash": "726fcb4e7084d3a8a54cf56b4ad2b1fc12e6a193f874bb98ed971218c0cb2b37", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-14 4.2.1.4.  ORGANIZATION INDEXED Files  \nFigure 4-19 - SELECT \u201corganization options\u201d For INDEXED Files  \n \nINDEXED  files, like RELATIVE  files, may have their records processed either sequentially or in a random manner.  \nUnlike RELATIVE  files, however, the actual location of a record in an INDEXED  file is based upon the value(s) of one or \nmore alphanumeric fields within records of the file.  \nFor example, an INDEXED  file containing product data might use the product identification code as  a RECORD KEY .  \nThis means you may read, write or update the \u201cA6G4328\u201dth record or the \u201cZ8X7723\u201dth record directly, based upon \nthe product id value of those records!  \n", "start_char_idx": 0, "end_char_idx": 753, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e396bc62-209f-4ed2-8703-3ee551782d47": {"__data__": {"id_": "e396bc62-209f-4ed2-8703-3ee551782d47", "embedding": null, "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a963ae3-330a-44df-b99e-4e9b571155fe", "node_type": "4", "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63ed1a5016ca8b50cc6c86df36a249f38b8e5dbf6069800191a443a3a0129539", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a75cdc2-a802-4a19-9173-f3ed02d184c3", "node_type": "1", "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8f2ce05410e816fb18a68d04e44ebb58dcd19e2951465b6346886ce85ee95117", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fcc7fa3-3d15-41b8-a7ac-df99606b1dbf", "node_type": "1", "metadata": {}, "hash": "9be90e885855928e9ee4c42cde20dbe36a9ec799721fadced92f9a0b64ef5b37", "class_name": "RelatedNodeInfo"}}, "text": "1. The keyword \u201c ORGANIZATION \u201d is optional to provide compatibility with those (few) COBOL imp lementations that \nconsider that word to be optional.  Most COBOL implementations do require the word ORGANIZATION , so it \nshould be used in new programs.  \n2. ORGANIZATION INDEXED  files cannot be assigned to CONSOLE , DISPLAY , LINE  ADVANCING  or PRINTER . \n3. The speci fication of so -called \u201csplit keys\u201d , while syntactically recognized (the \u201c= / SOURCE IS\u201d clauses), are not \ncurrently supported by GNU COBOL . \n4. ", "start_char_idx": 753, "end_char_idx": 1272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fcc7fa3-3d15-41b8-a7ac-df99606b1dbf": {"__data__": {"id_": "1fcc7fa3-3d15-41b8-a7ac-df99606b1dbf", "embedding": null, "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a963ae3-330a-44df-b99e-4e9b571155fe", "node_type": "4", "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63ed1a5016ca8b50cc6c86df36a249f38b8e5dbf6069800191a443a3a0129539", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e396bc62-209f-4ed2-8703-3ee551782d47", "node_type": "1", "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d38fdec53967265716245f6844fa6ff8626a6129d45c860cde6d1f3531787b6", "class_name": "RelatedNodeInfo"}}, "text": "An ACCESS MODE of SEQUENTIAL  indicates that the records of the file will be processed in a sequential manner \nwith respect to the values of the RECORD KEY  or an ALTERNATE RECORD KEY . \nAn ACCESS MODE of RANDOM  means that rec ords will be processed in random sequence by accessing the record \nwith specific RECORD KEY  or ALTERNATE RECORD KEY  values .   \nDYNAMIC  ACCESS MODE  allows  the file will be processed either in RANDOM  or SEQUENTIAL  mode ; the program \nmay switch between the two modes as needed.   The START  verb is used to make the switch between modes . \n5. The default ACCESS MODE  is SEQUENTIAL . \n6. The PRIMARY KEY  clause defines the field(s) within the record used to provide the primary access to records \nwithin the file .  No two records may have the same PRIMARY KEY  field value.  \n7. The ALTERNATE RECORD KEY  clause, if used, defines an additional field within the record  that provides an \nalternate means of directly accessing records or an additional field by which the file\u2019s contents may be processed \nsequentially.  You have the choice of allowing records to have duplicate alternate key values, if necessary.  \n8. There may be m ultiple ALTERNATE RECORD KEY  clauses, each defining an additional alternate key for the file.  \n9. INDEXED  files are processed using the CLOSE , COMMIT , DELETE , MERGE , OPEN , READ , REWRITE , SORT , START , \nUNLOCK  and WRITE  statements.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nHandling End -of-File Conditions (AT END ) 6.1.12.1  \nThe CLOSE  Statement  6.4.7  The READ Statement  6.4.31  \nThe REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \n[ORGANIZATION IS ]INDEXED\nACCESSMODE IS \nRECORDKEY IS identifier -1                                  identifier -2\nALTERNATE RECORDKEY IS identifier -3                                     identifier -4\n[WITH DUPLICATES ]=\nSOURCEIS\n=\nSOURCEISSEQUENTIAL\nDYNAMIC\nRANDOM\n\u2026", "start_char_idx": 1272, "end_char_idx": 3181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f88655e-f3ac-4827-a01e-f70c448e5552": {"__data__": {"id_": "7f88655e-f3ac-4827-a01e-f70c448e5552", "embedding": null, "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6973ece1-a08b-43b1-9bba-5893762a10e6", "node_type": "4", "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b9fc6e1a246d6a0e805a0fa9eb3fd3129cf9a141501f98e7e8bdab9c8a827981", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bf7c7d1-cdc2-479b-951a-0f96f1dcd34a", "node_type": "1", "metadata": {}, "hash": "f83a5dd4a21b94ef9efcb9d786ed95781fb40d0c36621b8aa712950e3496ad33", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-15 The COMMIT  Statement  6.4.8  \nThe DELETE  Statement  6.4.11  \nThe MERGE  Statement  6.4.25  \nThe OPEN  Statement  6.4.29  \n The START  Statement  6.2.41  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \n \n4.2.2.  I-O-CONTROL  Paragraph  \nFigure 4-20 - I-O-CONTROL Paragraph Syntax  \n The I-O-CONTROL  Paragraph can be used \nto optimize certain aspects of file \nprocessing.  \n", "start_char_idx": 0, "end_char_idx": 475, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bf7c7d1-cdc2-479b-951a-0f96f1dcd34a": {"__data__": {"id_": "3bf7c7d1-cdc2-479b-951a-0f96f1dcd34a", "embedding": null, "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6973ece1-a08b-43b1-9bba-5893762a10e6", "node_type": "4", "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b9fc6e1a246d6a0e805a0fa9eb3fd3129cf9a141501f98e7e8bdab9c8a827981", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f88655e-f3ac-4827-a01e-f70c448e5552", "node_type": "1", "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d1ccfd7e58cda08da88fa784373ab10d6f5acaf9fffa9d8b70c8ac00f56a98b4", "class_name": "RelatedNodeInfo"}}, "text": "1. The SAME SORT AREA  and SAME \nSORT -MERGE AREA  clauses are non -\nfunctional.   The SAME RECORD AREA  \nis functional, however.  \n2. The MULTIPLE FILE TAPE  clause is \nobsolete and is therefore recognized \nbut not functional . \n3. The SAME RECORD AREA  clause allows you to specify that multiple files should share the same input and output \nmemory buffers.  These buffers can sometimes get quite large, and by having multiple files share the same buffer \nmemory you may  significantly cut down the amount of me mory the program is using (thus making \u201croom\u201d for \nmore procedural code or data).  If you do use this feature, take care to ensure that no more than one of the \nspecified files are ever OPEN  simultaneously.  \n  \nI-O-CONTROL.\nSAME AREA FOR file-name -1   \u2026\nMULTIPLE FILE TAPE CONTAINS\n{file-name -2[POSITION integer -1] } \u2026\n.RECORD\nSORT\nSORT-MERGE", "start_char_idx": 475, "end_char_idx": 1336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a2871e6-5bf5-4947-b02b-a389ba5b2b1d": {"__data__": {"id_": "2a2871e6-5bf5-4947-b02b-a389ba5b2b1d", "embedding": null, "metadata": {"page_label": "59", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe952172-5caf-4ebd-a9d6-6e9c38b1538c", "node_type": "4", "metadata": {"page_label": "59", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3702c632e4d1ab4948cace69f00f5101237c15ccf93a2138144da73a0618e87b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  ENVIRONMENT DIVISION  \n \n11FEB2012 Version   4-16  ", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15af85a1-ae76-4a90-ba69-2626be4999fa": {"__data__": {"id_": "15af85a1-ae76-4a90-ba69-2626be4999fa", "embedding": null, "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825", "node_type": "4", "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a3d7438df3c6acf59727bb0d6b3dc1bde3e9a7c0a399c6293ea872d136710220", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05161677-6e60-4c6f-b117-2ad6b0b285f9", "node_type": "1", "metadata": {}, "hash": "b6c3aad16bf3e03e2e4b3d017893c1f52c7dee5a6483f2edd22b331f91a54309", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-1 5. DATA DIVISION  \nFigure 5-1 - General DATA DIVISION Format  \n The DATA DIVISION  is used to define all data \nthat will be processed by a program.  The \ncontents of the various sections are as follows:  \nFILE SECTION  \nProvides a detailed specification as to the \nblocking characteristics and record layouts of \neach SELECTed file.  \nWORKING -STORA GE SECTION  \nDefinitions of the various internal data items \nused by the program.  \nLOCAL -STORAGE SECTION  \nSimilar to WORKING -STORAGE, but describes \ndata within a subprogram that will be  \ndynamically allocated and initialized \n(automatically) each time the subprog ram is \nexecuted (WORKING -STORAGE is automatically \ninitialized only the 1st time a subprogram is \nexecuted).  \nLINKAGE SECTION  \nDescribes data within a subprogram that serves \nas input arguments to or output arguments \nfrom the subprogram.  \nREPORT SECTION  \nDescribe s the layout of printed reports as well \nas many of the functional aspects of the \ngeneration of reports.  \nSCREEN SECTION  \nDescribes the visual layout of entire screens .   \n1. Any SECTION s that are used  must  be specified in the order shown.  If no DATA DIVISION  sections are needed, the \nDATA DIVISION  header itself may be omitted.  \n2. ", "start_char_idx": 0, "end_char_idx": 1312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05161677-6e60-4c6f-b117-2ad6b0b285f9": {"__data__": {"id_": "05161677-6e60-4c6f-b117-2ad6b0b285f9", "embedding": null, "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825", "node_type": "4", "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a3d7438df3c6acf59727bb0d6b3dc1bde3e9a7c0a399c6293ea872d136710220", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15af85a1-ae76-4a90-ba69-2626be4999fa", "node_type": "1", "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4c4100248c36b24cae8d876ff3dd485e37f367cd3d64f15f32bf24fe48fa9eb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d241c4cc-c10e-46e5-9745-106fd60cfce5", "node_type": "1", "metadata": {}, "hash": "5dc49e2cc4df839c150e347fef13a5cdbd11c4560ebb613857f5881aa617a228", "class_name": "RelatedNodeInfo"}}, "text": "The REPORT SECTION  is syntactically recognized but will \u2013 if used \u2013 be rejected as unsupported.  GNU COBOL  \ndoes not support the RWCS10 (it does  support the LINAGE  clause in an FD, however).  \n3. LOCAL -STORAGE  cannot be used in nested subprograms.  \nSee Also\u2026  \nA Sample GNU COBOL  Screen  1.3.3.9  \nDefining Data Items  5.2 \n Defining Screens  5.2.2  \n \n  \n                                                                 \n10 Report -Writer Control System  \nDATADIVISION .\nFILESECTION.\n", "start_char_idx": 1312, "end_char_idx": 1805, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d241c4cc-c10e-46e5-9745-106fd60cfce5": {"__data__": {"id_": "d241c4cc-c10e-46e5-9745-106fd60cfce5", "embedding": null, "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825", "node_type": "4", "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a3d7438df3c6acf59727bb0d6b3dc1bde3e9a7c0a399c6293ea872d136710220", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05161677-6e60-4c6f-b117-2ad6b0b285f9", "node_type": "1", "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3ec516fee6d17780dfcccb1028116b360c5dbad3b0218c384564df441013f37a", "class_name": "RelatedNodeInfo"}}, "text": "file-or-sort/merge -file-description\nconstant -description\nrecord -description\nWORKING-STORAGE SECTION.\nconstant -description\n77-level -data -description\n01-level -data -description\nLOCAL-STORAGE SECTION.\nconstant -description\n77-level -data -description\n01-level -data -description\nLINKAGE SECTION.\nconstant -description\n77-level -data -description\n01-level -data -description\nREPORTSECTION.\nreport -description\nconstant -description\n01-level -data -description\nSCREENSECTION.\nconstant -description\nscreen -description\u2026\u2026\n\u2026\n\u2026\n\u2026\n\u2026\u2026\n\u2026", "start_char_idx": 1805, "end_char_idx": 2337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04432928-5a20-422b-aa51-27c495f178b4": {"__data__": {"id_": "04432928-5a20-422b-aa51-27c495f178b4", "embedding": null, "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2eaa3724-3d41-49b5-8e58-12ce9434f6be", "node_type": "4", "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ee7596cdb3bf3cf3016bee32255cb3b82da2d318ada2f0fd974008597ddb9350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e58056ef-bcc5-437f-98a8-701e3c254124", "node_type": "1", "metadata": {}, "hash": "c1be3106ec9b3a3e2023f9f8448e051dceed8e19e50c0be3a91c873706e49379", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-2 5.1. File Or Sort/Merge File Descriptions  \nEvery file that has been SELECT ed in the FILE-CONTROL  paragraph must be described in the FILE SECTION  of the DATA \nDIVISION .  Files destined for use as sort/merge work files must be described with a Sort/Merge File Description ( SD) \nwhile every other file is  described with a File Description ( FD).  Each of these descriptions will be followed with at least \none Record Description.  \nFigure 5-2 - File Description (FD) and Sort Description (SD) Syntax  \n There must be \na detailed \ndescription \nfor every file \nSELECT ed in \nyour program.  \nThese \ndetailed \ndescriptions \nwill be coded \nin the FILE \nSECTION . \n \n1. A file description for a file used as a sort/merge work file must be specified as an SD.  The descriptions of all other \nfiles must be specified as FDs. \n", "start_char_idx": 0, "end_char_idx": 898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e58056ef-bcc5-437f-98a8-701e3c254124": {"__data__": {"id_": "e58056ef-bcc5-437f-98a8-701e3c254124", "embedding": null, "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2eaa3724-3d41-49b5-8e58-12ce9434f6be", "node_type": "4", "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ee7596cdb3bf3cf3016bee32255cb3b82da2d318ada2f0fd974008597ddb9350", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04432928-5a20-422b-aa51-27c495f178b4", "node_type": "1", "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3020e62341c994df56adde26753c1c9617f888d977da1a6ff08834f278347060", "class_name": "RelatedNodeInfo"}}, "text": "2. The name specified as file-name -1 must exactly match the name specified on the file\u2019s SELECT  statement.  \n3. By specifying the EXTERNAL  clause, the file description is capable of being shared between all program s executed \nfrom the same execution thread, provided the file description is coded  (with an EXTERNAL  clause) in each \nprogram  requiring it.  This sharing allows the file to be OPEN ed, read and/or written and CLOS Ed in different \nprogram s.  This sharing applies to the record descriptions subordinate to the file description too.  \n4. By specifying the GLOBAL  clause, the file description is capable of being shared between a program and any \nnested subprogr ams within it , provided the file description is coded  (with a GLOBAL  clause) in each program  \nfile-name -1IS\nRECORD\n[CODE-SETIS alphabet -name -1]EXTERNAL\nGLOBAL\nCONTAINS integer -1[TOinteger -2]CHARACTERS\nIS VARYING IN SIZE\nFROM integer -3[TOinteger -4]CHARACTERS\nDEPENDING ON identifier -1\nLINAGEIS             LINES\nWITH FOOTING AT \nLINES AT TOP\nLINES AT BOTTOMinteger -5\nidentifier -2\ninteger -8\nIdentifier -5integer -6\nidentifier -3\ninteger -7\nIdentifier -4\n.BLOCKCONTAINS integer -9[TOinteger -10]\nLABEL\nDATA identifier -6\u2026\nVALUEOF implementor -name -1IS\n[RECORDING MODE IS recording -mode -1]\nidentifier -8\u2026literal -1\nidentifier -7RECORDIS\nRECORDS AREOMITTED\nSTANDARD\nRECORDIS\nRECORDS ARE\nREPORTIS\nREPORTS ARECHARACTERS\nRECORDSFD\nSD", "start_char_idx": 898, "end_char_idx": 2324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d89acea1-7647-4879-bee1-98c8eeb7870b": {"__data__": {"id_": "d89acea1-7647-4879-bee1-98c8eeb7870b", "embedding": null, "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b", "node_type": "4", "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17428e3ef19affadfc0aacf76d645c7d241458f1a97e788759bc204b8f24676d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4814d3d-8615-4bc9-8413-21db8e3d9696", "node_type": "1", "metadata": {}, "hash": "8a54a9bdcea7daa4c35ea3e5d447f7529073fa1032805f029059d36063ad4d2a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-3 requiring it.  This sharing allows the file to be OPEN ed, read and/or written and CLOSE d in different program s.  \nSeparately compiled programs cannot share a GLOBAL  file description, but they can share an EXTERNAL  file \ndescription .  This sharing applies to the record descriptions subordinate to the file description too.  \n", "start_char_idx": 0, "end_char_idx": 407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4814d3d-8615-4bc9-8413-21db8e3d9696": {"__data__": {"id_": "f4814d3d-8615-4bc9-8413-21db8e3d9696", "embedding": null, "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b", "node_type": "4", "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17428e3ef19affadfc0aacf76d645c7d241458f1a97e788759bc204b8f24676d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d89acea1-7647-4879-bee1-98c8eeb7870b", "node_type": "1", "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f4dd4f94f80dfea6b7267dbbf3fb2f52c4cc4d46bbccf9eea3959bad5a391996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75fd92b1-b8f6-4041-8396-b20f6645ae6a", "node_type": "1", "metadata": {}, "hash": "0eed9d32c27c33797ac1d157236756140b10e28dd03a037993bc82f01e823d51", "class_name": "RelatedNodeInfo"}}, "text": "5. The RECORD CONTAINS  and RECORD IS VARYING  clauses are ignored (with a warning message issued) when used \nwith  LINE SEQUENTIAL  files.   With other file organizations these mutually -exclusive clauses define the length of \ndata records within the file.  The data item specified as identifier -1 must be d efined within one of the record \ndescriptions of file-name -1. \n6. The CODE -SET, clause allows a custom alphabet (defined in the SPECIAL -NAMES  paragraph of the \nCONFIGURATION SECTION ) to be associated with a file.  This clause is valid only when used with RECORD BINARY \nSEQUENTIAL  or LINE SEQUENTIAL  files.  \n", "start_char_idx": 407, "end_char_idx": 1033, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75fd92b1-b8f6-4041-8396-b20f6645ae6a": {"__data__": {"id_": "75fd92b1-b8f6-4041-8396-b20f6645ae6a", "embedding": null, "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b", "node_type": "4", "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17428e3ef19affadfc0aacf76d645c7d241458f1a97e788759bc204b8f24676d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4814d3d-8615-4bc9-8413-21db8e3d9696", "node_type": "1", "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ea54983b4f4be441ce56caab24869d333b506161d506d34c4531d9203e52cdb9", "class_name": "RelatedNodeInfo"}}, "text": "7. The REPORT IS  clause is syntactically recognized but will cause an error since the R eport Writer Control System \n(RWCS)  is not currently supported  by GNU COBOL . \n8. The BLOCK CONTAIN S clause is syntactically recognized by the GNU COBOL  compiler, but is currently non -\nfunctional.  \n9. The LABEL RECORD , DATA RECORD , RECORDING MODE  and VALUE OF  clauses are obsolete.  If used, they will \nhave no impact on the generated code.  The identifiers specified on the DATA RECORD  clause will be verified as \nbeing defined within the program, but the compiler won\u2019t care whether they are actual ly specified as records of \nthe file or not.  \n10. The LINAGE  clause can only be specified for ORGANIZATION RECORD BINARY SEQUENTIAL  or ORGANIZATION \nLINE SEQUENTIAL  files.  It cannot be used within an SD.  If used on an ORGANIZATION RECORD BINARY \nSEQUENTIAL  file, the definition of that file will be implicitly changed to LINE SEQUENTIAL . \n11. The LINAGE  clause is used to specify \nthe logical boundaries (in terms of \nnumbers o f lines) of various areas on \na printed page, as shown in Figure \n5-3. \nThis page structure \u2013 once defined - \ncan be automatically enforced by the \nthe WRITE  statement.  \n Figure 5-3- LINAGE -specified Page Structure  \n \n12. The following special rules apply only to sort/merge work files ( SDs): \na. Sort/merge work  files should be assigned to DISK  (or DISC ). \nb. SORT s and MERGE s will be performed in memory , if the amount of data being sorted allows.   \nc. Should actual disk work files be necessary due to the amount of data being SORT ed or MERGE d, they will be \nautomatically allocated to disk in a folder defined by the TMPDIR , TMP  or TEMP  environment variables .  \nThese disk files will be automatically purged upon SORT / MERGE termination .  They will also be purged i f the \nprogram terminates abnormally  before the SORT  or MERGE  finishes.  Should you ever need to know, \ntemporary sort /merge  work files will be named \u201ccob*.tmp\u201d.  \nTop Margin (unprintable) \nBottom Margin (unprintable) -Page Body (printable )LINES AT TOP t\nDefault = 0\nLINES AT BOTTOM b\nDefault = 0Page Footing area (if any)WITH FOOTING AT fDefault = no page footerLINAGE IS nLINES", "start_char_idx": 1033, "end_char_idx": 3246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bfa7abb-8fcf-439c-9c3c-4c540a24b754": {"__data__": {"id_": "7bfa7abb-8fcf-439c-9c3c-4c540a24b754", "embedding": null, "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5802a35-05e1-4dcf-b160-b13eb39f6910", "node_type": "4", "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d880b25f75edd402457eb0b894d1b5d3faa6e13de5c868c8de438b6007f05a04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50fb184c-ecb8-4e47-a778-fb4358036ce2", "node_type": "1", "metadata": {}, "hash": "7eca548af8f12fe8120422b1e8ac4e4c6631e183f1b6f143ec7ed0f156cac697", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-4 d. If you specify a specific filename in the sort /merge work  file\u2019s SELECT , it will be ignored.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nDefining File Characteristics (SELECT)  4.2.1  \nDescribing Record Layouts  5.1.1  \nThe CLOSE  Statement  6.4.7  \nThe MERGE  Statement  6.4.25  \n The OPEN  Statement  6.4.29  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe WRITE  Statement  6.4.50  \nExecution -time Environment Variables  8.2.4  \n \n \n5.1.1.  Record Descriptions  \nEvery file description  must be followed by at least one record description.  ", "start_char_idx": 0, "end_char_idx": 637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50fb184c-ecb8-4e47-a778-fb4358036ce2": {"__data__": {"id_": "50fb184c-ecb8-4e47-a778-fb4358036ce2", "embedding": null, "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5802a35-05e1-4dcf-b160-b13eb39f6910", "node_type": "4", "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d880b25f75edd402457eb0b894d1b5d3faa6e13de5c868c8de438b6007f05a04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bfa7abb-8fcf-439c-9c3c-4c540a24b754", "node_type": "1", "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6f1cb6c26c84d1f5e8658f74fdeac0114c5cd8382a17424e8088139672827fcd", "class_name": "RelatedNodeInfo"}}, "text": "If there are multiple record descriptions \npresent, the one with the longest length will define the size of the record buffer into which READ  statements deliver \ndata read from the file and fr om which WRITE  statements take the data to be written to the file.  The various record \ndescriptions for a file description implicitly share  that one common record buffer (thus, they provide different ways to \nview the structure of data that can exist within  the file).  Record buffers can be shared between files by using the \nSAME RECORD AREA  clause within the I-O-CONTROL  paragraph of the ENVIRONMENT DIVISION . \nRecord descriptions for all files take the form of 01 -level data items that are coded immediately fol lowing the file \ndescription.  These data items are constructed according to all the rules specified for defining non SCREEN SECTION  \ndata items , except that the VALUE  clause may not be used.  \nSee Also\u2026  \nSharing Record Buffers Between Files  4.2.2  \n Defining Records And Their Fields  5.2.1  \n \n5.2. Describing Data Items  \nGNU COBOL  data items , like those of other COBOL implementations,  are described in  a hierarchical manner .  This \naccommodates the fact that data item s frequently need to be  able to be broken up into subordinate items.  Take for \nexample, the following logical layout of a portion of a data item named \u201cEmployee\u201d : \n \nThe \u201cEmployee\u201d data item consists of two subordinate data items \u2013 an \u201cEmployee -Name\u201d and an \u201cEmployment -\nDates\u201d data item (presumably there would be a lot of others too, but we don\u2019t care about them right now).  As the \ndiagram shows, each of those data item s are \u2013 in turn \u2013 broken down into subordinate data items.  This hierarchy of \ndata items can get rather \u201cdeep\u201d, and GNU COBOL  has no problem dealing with it.  \nIn GNU COBOL , data items that are broken down into other data items are referred to as group items , while those \nthat aren\u2019t broken down are called elementary items .  A group item that doesn\u2019t belong to any other data item (the \none at the top of a chart like this one) is called a record .  In the chart above, the names of all the elementary items are \nshown in red (without a box around it), the names of all the group items are shown in blue  (with a box around it) and \nthe record data item\u2019s box is shaded yellow.  \nGNU COBOL  uses the concept of a \u201clevel number\u201d to indicate the level at which a data item occurs in a data structure \nsuch as the example shown above.  Then these data items are defined, they are all defined together with a number in \nthe range 1 -49 specified in fron t of their names.  Over the years, a convention has come to exist among COBOL \nFrom -DateEmployee\nYearLast-Name First -Name Middle -InitialEmployee -Name Employment -Dates\nTo-Date\nMonth Day Year Month Dayadditional data items \u2026", "start_char_idx": 637, "end_char_idx": 3453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41e0379d-5298-47a6-b88e-6bb84210084e": {"__data__": {"id_": "41e0379d-5298-47a6-b88e-6bb84210084e", "embedding": null, "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abcbbb41-6aa6-4384-a954-54e782116937", "node_type": "4", "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0bafc29619a1a5331bffbb750cf182391fdc3cffeb71616eb3a08b4f76c884e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "982075c9-50d6-4bb8-bf3f-f8f7b9ada977", "node_type": "1", "metadata": {}, "hash": "80c851b046e6d1fef5ae0cf9d5f38e43d7573649e1892d1bde61d48426c13f2d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-5 programmers that level numbers are always coded as two -digit numbers \u2013 they don\u2019t have to be specified as two -digit \nnumbers, but every example you see in this document will take that approach!  \nThe record data item (the one at the top) always  has a level number of 01.  After that, you may assign level numbers \nas you wish (01 \u2013 02 \u2013 03 \u2013 04 - \u2026, 01 \u2013 05 \u2013 10 \u2013 15 - \u2026, etc.) as you see fit, as long as you follow these simple rules:  \n1. Every data item at the same \u201clevel\u201d of a hierarchy diagram such as the one you see here (if you were to make one \nwhich you rarely \u2013 if ever \u2013 will once you get used to this concept) must have the same level number.  \n2. Every level uses a level number that is st rictly greater than the one used in the prior (next higher) level.  \n3. ", "start_char_idx": 0, "end_char_idx": 857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "982075c9-50d6-4bb8-bf3f-f8f7b9ada977": {"__data__": {"id_": "982075c9-50d6-4bb8-bf3f-f8f7b9ada977", "embedding": null, "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abcbbb41-6aa6-4384-a954-54e782116937", "node_type": "4", "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0bafc29619a1a5331bffbb750cf182391fdc3cffeb71616eb3a08b4f76c884e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41e0379d-5298-47a6-b88e-6bb84210084e", "node_type": "1", "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "73d420df7b07c7c3139dc7630530bdc04267de843909c52cffe7863fb9f22c0f", "class_name": "RelatedNodeInfo"}}, "text": "You never use a level number greater than 49.  \nSo, the definition of these data items in a GNU COBOL  program would go something like this:  \n01  Employee  \n    05 Employee -Name \n       10 Last-Name \n       10 First -Name \n       10 Middle -Initial \n    05 Employment -Dates \n       10 From-Date \n          15 Year \n          15 Month  \n          15 Day \n       10 To-Date \n          15 Year \n          15 Month  \n          15 Day \nThe indentation is purely at the discretion of the programmer to make things easier for humans to read (the compiler \ncouldn\u2019t care less).  Historically, COBOL implementations that required Fixed Format Mode source programs required \nthat the \u201c01\u201d level begi n in Area A and that everything else begin in Area B.  GNU COBOL  only requires that all data \ndefinition syntax occur in columns 8 -72.  In Free Format Mode, of course, there aren\u2019t even those limitations.  \nThe coding example shown above is incomplete \u2013 it on ly describes the data item names and their hierarchical \nrelationships to one other.  In addition, any valid data item definitions will also need to describe what type of data is \nto be contained in a data item ( Numeric? Alphanumeric? Alphabetic?), how much data can \u201cfit\u201d and a multitude of \nother characteristics.  \nSee Also\u2026  \nFixed -Format Source Code  1.5.1.1  \n Defining Data Items  5.2 \n ", "start_char_idx": 857, "end_char_idx": 2208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36a60426-eedc-4d66-9a64-566a6273a98d": {"__data__": {"id_": "36a60426-eedc-4d66-9a64-566a6273a98d", "embedding": null, "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63afd7a0-2212-475d-a3ca-62be5bee3de4", "node_type": "4", "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "caf266024b6a5a20072d0895c99a8484b4cdc4219ecb537f4889fe9c74101b33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41bb89f4-5f89-4835-95f2-aa3e5148e46d", "node_type": "1", "metadata": {}, "hash": "c09e7f754f586c2bf8bc27d7e06942b9a751389464d76b441075c691d5275838", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-6 5.2.1.  Defining  non -SCREEN SECTION Data Items  \nFigure 5-4 \u2013 Non-SCREEN SECTION Data Item Description Syntax  \n \nThe syntax skeleton shown here describes the manner in which data items are defined in all DATA DIVISION sections \nexcept the SCREEN SECTION . \n1. ", "start_char_idx": 0, "end_char_idx": 339, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41bb89f4-5f89-4835-95f2-aa3e5148e46d": {"__data__": {"id_": "41bb89f4-5f89-4835-95f2-aa3e5148e46d", "embedding": null, "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63afd7a0-2212-475d-a3ca-62be5bee3de4", "node_type": "4", "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "caf266024b6a5a20072d0895c99a8484b4cdc4219ecb537f4889fe9c74101b33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36a60426-eedc-4d66-9a64-566a6273a98d", "node_type": "1", "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9751bec7fe6a672ab5cb4083999ba196a0f8233a018fad6232b4180d93660415", "class_name": "RelatedNodeInfo"}}, "text": "The only valid level numbers are 01 -49, 66, 77, 78 and 88.  Level numbers 01 through 49 are used to define data \nitems that may be part of a hierarchical structure of data items .  Level number 01 can also be used to define a \nconstant \u2013 an item with an unchangable value specified at compilation time.  Level numbers  66, 77, 78 and 88 all \nhave special uses, and are covered  in upcoming sections (the \u201cSee Also\u201d table at the end of this section provides \nlinks to those discussions) . \n2. Not specifying an  identifier -name -1 or FILLER  immediately after the level number has the same effect as if FILLER  \nwere specified.   A data item named FILLER  cannot be referenced  directly; these items are generally used to \nspecify an unused portion of the total storage allocated to a group item.  \n3. By specifying the EXTERNAL  clause, the data item is capable of being s hared between all program s executed from \nthe same execution thread, provided the data item is coded  (with an EXTERNAL  clause) in each program  requiring \nit. \n4. By specifying the GLOBAL  clause, the data item is capable of being shared between a program and any nested \nsubprograms within it , provided the data item is coded  (with a GLOBAL  clause) in each program requiring it.  \n5. The EXTERNAL  clause may only be specified at the 77 or 01 level.  \n6. An EXTERNAL  item must  have a data name (i .e. identifier -1) and that name cannot be FILLER . \nlevel -number IS\n[ANYLENGTH]\n[BASED]\n[BLANKWHEN ZERO]\n[JUSTIFIED RIGHT ]\nOCCURS integer -1[TOinteger -2]TIMES [DEPENDING ON identifier -2]\n[INDEXED BY identifier -4]\n[PICTURE picture -string]\n[REDEFINES identifier -2]\n[RENAMES identifier -3[THRU|THROUGH identifier -4]\nSIGNIS             [SEPARATE CHARACTER ]\nSYNCHRONIZED\n[USAGEIS data -item -usage]\n[VALUEIS [ALL]literal -1]\n.ASCENDING\nDESCENDINGKEY IS identifier -3\nLEADING\nTRAILING\nLEFT\nRIGHTIdentifier -1\nFILLEREXTERNAL\nGLOBAL", "start_char_idx": 339, "end_char_idx": 2254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9e86f49-e9b6-4c3d-9726-24d61783565c": {"__data__": {"id_": "c9e86f49-e9b6-4c3d-9726-24d61783565c", "embedding": null, "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2080a320-4179-40bb-842a-9c0903ad88b3", "node_type": "4", "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6eb707353e4f8c186ee38eb49fba7d450dcb0ceb06e85efe3f0f61053fdc8a3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3111054e-fdcb-4527-a214-a07cd5936527", "node_type": "1", "metadata": {}, "hash": "c207c9cd677512ad526455a590568a3f954bfcd73296b92dd8f5a7eea5d3b3a0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-7 7. EXTERNAL  cannot be combined with GLOBAL , REDEFINES  or BASED .  \n", "start_char_idx": 0, "end_char_idx": 146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3111054e-fdcb-4527-a214-a07cd5936527": {"__data__": {"id_": "3111054e-fdcb-4527-a214-a07cd5936527", "embedding": null, "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2080a320-4179-40bb-842a-9c0903ad88b3", "node_type": "4", "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6eb707353e4f8c186ee38eb49fba7d450dcb0ceb06e85efe3f0f61053fdc8a3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9e86f49-e9b6-4c3d-9726-24d61783565c", "node_type": "1", "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2651bd9ef45ef48ad4aff372602ff6e5f64facbc2377ca4a1fc8ef905242fd6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3068bab1-2b93-425e-a48f-b9e96183c573", "node_type": "1", "metadata": {}, "hash": "2fb7aac72cd9cdd2f0451cda84bf1f5d3243b005415ad3d51b5766d3504ddbdc", "class_name": "RelatedNodeInfo"}}, "text": "8. Every data item description must be terminated with a period.  \nSee Also\u2026  \nDescribing Record Layouts  5.1.1  \nDefining Screens  5.2.2  \nDefining Level -01 Constants  5.2.3  \nDefining Level -66 RENAMES  Data Items  5.2.4  \n Defining Level -77 Data Items  5.2.5  \nDefining Level 78 Constants  5.2.6  \nDefining Level -88 Condition Names  5.2.7  \n \n5.2.1.1.  ANY LENGTH Clause  \n1. ", "start_char_idx": 146, "end_char_idx": 528, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3068bab1-2b93-425e-a48f-b9e96183c573": {"__data__": {"id_": "3068bab1-2b93-425e-a48f-b9e96183c573", "embedding": null, "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2080a320-4179-40bb-842a-9c0903ad88b3", "node_type": "4", "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6eb707353e4f8c186ee38eb49fba7d450dcb0ceb06e85efe3f0f61053fdc8a3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3111054e-fdcb-4527-a214-a07cd5936527", "node_type": "1", "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "262b3359b03d2064689299c984c6a3d6cd8c1b1e46f00bf9dc4e19a6825605e4", "class_name": "RelatedNodeInfo"}}, "text": "Data items declared with the ANY LENGTH  attribute have no fixed compile -time length.  \nSuch items may only be defined in the LINKAGE SECTION  of a subprogram as they may only \nserve as subroutine argument descriptions.  ANY LENGTH  items must have a PICTURE  \nclause that specifies exactly one A, X or  9 symbol.  \n2. The ANY LENGTH  and BASED  clauses cannot be used together  in the same data item description . \n5.2.1.2.  BASED Clause  \n1. Data items declared with BASED  are allocated no storage at compilation time.  At run -time, the \nALLOCATE  or SET ADDRESS  verb s are  used to allocate space for and (optionally) initialize such \nitems.  \n2. The BASED  and ANY LENGTH  clauses cannot be used together  in the same data item description . \n3. The BASED  clause may only be used on level 01 and level 77 data items.  \nSee Also\u2026  \nThe ALLOCATE  Statement  6.4.3  \n The SET ADDRESS  Statement  6.4.39.3  \n \n5.2.1.3.  BLANK WHEN ZERO Clause  \n1. The BLANK WHEN ZERO  clause can only be used with a PIC 9 USAGE DISPLAY  data \nitem; it will cause that item\u2019s value to be automatically transformed into SPACES if a \nvalue of 0 is ever MOVE d to the item.  \n5.2.1.4.  JUSTIFIED Clause  \n1. The JUSTIFIED RIGHT  clause, valid only on an alphabetic ( PIC A ) or alphanumeric \n(PIC X ) data item, will cause values shorter than the length of the data item to be \nright -justified and space -filled when they are MOVE d into the data item (the \ndefault behavior is to left-justify and space fill).  \n2. The word JUSTIFIED  may be abbreviated as JUST. \n  \nANYLENGTH\nBASED\nBLANKWHEN ZERO\nJUSTIFIED RIGHT", "start_char_idx": 528, "end_char_idx": 2128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2655990a-d19e-45d1-9469-ca81c80c80f6": {"__data__": {"id_": "2655990a-d19e-45d1-9469-ca81c80c80f6", "embedding": null, "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1c38257-179e-4213-ac89-7f82c6502517", "node_type": "4", "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07b70f04851f432454dff67d19bb4c2f2224c04de4204fcb258f8eef95944115", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "215a06b8-a874-4cad-af08-4733556e867f", "node_type": "1", "metadata": {}, "hash": "9caebf93ec17ae3d7724d4f3125e4550bafeda0014ebe9aee812117c4438dd32", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-8 5.2.1.5.  OCCURS Clause  \n1. The OCCURS  \nclause is used \nto create a \ndata \nstructure \ncalled a \ntable11 that \nrepeats multiple times.  For example:  \n05 QUARTLY -REVENUE OCCURS 4 TIMES PIC 9(7)V99.  \nWill allocate the following:  \n QUARTLY -REVENUE (1)  QUARTLY -REVENUE (2)  QUARTLY -REVENUE (3)  QUARTLY -REVENUE (4)   \nEach occurrence is referenced using the subscript syntax (a numeric literal, arithmetic expression or numeric \nidentifier  enclosed within parenthesis) shown in the diagram.  The OCCURS  clause may be used at the group level \ntoo, in which case the entire group structure repeats, as follows:  \n05 X OCCURS 3 TIMES.  \n    10 A     PIC X(1).  \n    10 B     PIC X(1).  \n    10 C     PIC X(1).  \n X (1)  X (2)  X (3)   \nA (1)  B (1)  C (1)  A (2)  B (2)  C (2)  A (3) B (3)  C (3)  \n2. The optional DEPENDING ON  clause can be added to an OCCURS  to create a variable -length table.  Such tables \nwill be allocated out to the maximum size specified as integer -2.  At execution time the value of identifier -2 will \ndetermine how many of the table elements are accessible.  \n3. See the documentation of the SEARCH , SEARCH ALL  and SORT  verbs for explanations of the KEY and INDEXED BY  \nclauses.  \n4. The OCCURS  clause cannot be specified i n a data description entry that  has a level number of 01, 66, 77, or 88.  \n5.2.1.6.  ", "start_char_idx": 0, "end_char_idx": 1427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "215a06b8-a874-4cad-af08-4733556e867f": {"__data__": {"id_": "215a06b8-a874-4cad-af08-4733556e867f", "embedding": null, "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1c38257-179e-4213-ac89-7f82c6502517", "node_type": "4", "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07b70f04851f432454dff67d19bb4c2f2224c04de4204fcb258f8eef95944115", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2655990a-d19e-45d1-9469-ca81c80c80f6", "node_type": "1", "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f549cb2820fcce9de53d75dc2948e091b477316ef5ec64311116e93f96303268", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9bcbf03-27e4-4df1-ac28-89a5dab2e657", "node_type": "1", "metadata": {}, "hash": "31f8a4d36631394b40fb39e391bebad135d7fdc912966f4602e58f13dda1e30c", "class_name": "RelatedNodeInfo"}}, "text": "PICTURE Clause  \n1. The word PICTURE  may be abbreviated as PIC. \n2. The PICTURE  clause defines the class (numeric, alphabetic or alphanumeric) of \nthe data that may be contained by the data item being defined.  A PICTURE  also \n(som etimes in conjunction with USAGE ) defines the amount of storage reserved for the data item.  The three \nbasic class -specification PICTURE  symbols have the following uses:  \nFigure 5-5 - Data Class -Specification PICTURE Symbols (A/X/9)  \nBasic \nSymbol  Meaning and Usage  \n9 Defines a spot reserved for a single decimal digit.  The actual amount of storage occupied will \ndepend on the specified USAGE . \n", "start_char_idx": 1427, "end_char_idx": 2070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9bcbf03-27e4-4df1-ac28-89a5dab2e657": {"__data__": {"id_": "d9bcbf03-27e4-4df1-ac28-89a5dab2e657", "embedding": null, "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1c38257-179e-4213-ac89-7f82c6502517", "node_type": "4", "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07b70f04851f432454dff67d19bb4c2f2224c04de4204fcb258f8eef95944115", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "215a06b8-a874-4cad-af08-4733556e867f", "node_type": "1", "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eb0b7ef7928bf45f23e9c02d3186a7178a6514c5c38a25540d73818751259337", "class_name": "RelatedNodeInfo"}}, "text": "A Defines a place reserved for a single alphabetic character (\u201cA\u201d -\u201cZ\u201d, \u201ca\u201d -\u201cz\u201d).  Each \u201cA\u201d represents a \nsingle byte of storage.  \nX Defines a place reserved for a single character of storage.  Each \u201cX\u201d represents a single byte of \nstorage.  \nThese three symbols are used repeatedly in a PICTURE  clause to define how many of each class of data may be \ncontained within the field.  For example:  \nPIC 9999  Allocates a data item that can store four -digit positive numbers (we\u2019ll see shortly how negative \n                                                                 \n11 Other programming languages with which you might be familiar refer to this sort of structure as an array . \nOCCURS integer -1[TOinteger -2]TIMES [DEPENDING ON identifier -2]\n[INDEXED BYidentifier -4]ASCENDING\nDESCENDINGKEY IS identifier -3\nPICTURE picture -string", "start_char_idx": 2070, "end_char_idx": 2910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdff6f58-e1b9-401e-ac58-450e19067007": {"__data__": {"id_": "bdff6f58-e1b9-401e-ac58-450e19067007", "embedding": null, "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62", "node_type": "4", "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8b0c70fdc0e6fb90ba7d71c07676773e8e51ddb9f35a9f89992f06e72290aaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae2c6c99-b42b-4b39-a1aa-723e47cea682", "node_type": "1", "metadata": {}, "hash": "79b525ff727014483cc02690bf4876654e2578fbf45ba6dab3b61fa709404556", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-9 values can be accounted for).  If the USAGE  of the field is DISPLAY  (the default), four bytes of \nstorage will be allocated and each byte may contain the character  \u201c0\u201d, \u201c1\u201d, \u201c2\u201d, \u2026 , \u201c8\u201d or \u201c9\u201d.  \nThere is no run -time enforcement of the fact that only digits are allowed.  ", "start_char_idx": 0, "end_char_idx": 353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae2c6c99-b42b-4b39-a1aa-723e47cea682": {"__data__": {"id_": "ae2c6c99-b42b-4b39-a1aa-723e47cea682", "embedding": null, "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62", "node_type": "4", "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8b0c70fdc0e6fb90ba7d71c07676773e8e51ddb9f35a9f89992f06e72290aaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdff6f58-e1b9-401e-ac58-450e19067007", "node_type": "1", "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e6b3eaa7e535ffbcd9d645dd0dfb33c9441fb23e98451ab614fe9115b069199", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9248c451-833a-48d5-a4d4-6fc72a14c1cf", "node_type": "1", "metadata": {}, "hash": "7d25bb79d15a772a532e68327996353fb8eca7390502d36e91741df13aa1c9e5", "class_name": "RelatedNodeInfo"}}, "text": "A compilation -time \nWARNING will be issued if literal value that violates the digits -only rule is MOVE d to the field.  A \nrun-time violation is detec table using a class condition test . \nPIC 9(4)  Identical to the above \u2013 a repeat count enclosed within parenthesis can be used with any PICTURE  \nsymbols that allows repetition.  \nPIC X(10)  This data item can hold a string of any ten characters.  \nPIC A(10)  This data item can hold a string of any ten letters .  There is no enforcement of the fact that only \nletters are allowed, but a violation is detectable via a class condition test . \nPIC AA9(3)A  This is exactly the same as specifying X(6), but it documents th e fact that values should be two \nletters followed by 3 digits followed by a single letter.  There is no enforcement and no capability \nof detecting violations other than a \u201cbrute force\u201d check by character position.  \nData items containing \u201cA\u201d or \u201cX\u201d PICTURE  symbols cannot be used in arithmetic calculations.  \nIn addition to the above Figure 5-6 shows the numeric option PICTURE  symbols that may be used with \u201cPIC 9 \u201d \nData Items  \nFigure 5-6 - Numeric Option PICTURE Symbols (P/S/V)  \nNumeric \nOption \nSymbol  Meaning and Usage  \nP Defines an implied digit position that will be considered to be a 0 when the data item is referenced \nat run -time.  This symbol is used to allow data items that will contain very large values to be \nallocated using less storage by assuming a certain number of trailing zeros (one per \u201cP\u201d) to exist at \nthe end of values.  \nAll computations and other o perations performed against such a data item will behave as if the \nzeros were actually there.  \nWhen values are stored into such a field they will have the digit positions defined by the \u201cP\u201d \nsymbols stripped from the values as they are stored.  \nFor example, l et\u2019s say you need to allocate a data item that contains however many millions of \ndollars of revenue your company has in gross revenues this year:  \n01  Gross -Revenue    PIC 9(9).  \nIn which case 9 bytes of storage will be reserved.  The values 000000000 thru 999999999 will \nrepresent the gross -revenues.   But, if only the millions  are tracked (meaning the last six digits are \nalways going to be 0), you could define the field as:  \n01  Gross-revenue  PIC 9(3)P(6).  \nWhenever Gross -Revenue is referenced in the program, the actual value in storage will be treated \nas if each P symbol (6 of them, in this case) were a zero.  \nIf you wanted to store the value 128 million into that field, you would d o so as if the \u201cP\u201ds were \n\u201c9\u201ds:  \nMOVE 128000000 TO Gross -Revenue.  \nS This symbol, which if used must be the very first symbol in the PICTURE value, indicates that \nnegative values are possible for this data item.  ", "start_char_idx": 353, "end_char_idx": 3106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9248c451-833a-48d5-a4d4-6fc72a14c1cf": {"__data__": {"id_": "9248c451-833a-48d5-a4d4-6fc72a14c1cf", "embedding": null, "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62", "node_type": "4", "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8b0c70fdc0e6fb90ba7d71c07676773e8e51ddb9f35a9f89992f06e72290aaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae2c6c99-b42b-4b39-a1aa-723e47cea682", "node_type": "1", "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "98d680da72dfeeff04547c928b6f1adc172f716405a4b554db6d3dd0e15e0321", "class_name": "RelatedNodeInfo"}}, "text": "Without an \u201cS\u201d, any negative values stored into this \ndata item via a MOVE  or arithmetic statement will have the negative sign stripped from it (in effect \nbecoming the absolute value).  \nV This symbol is used to define where an implied decimal -point (if any) is located in a numeric item.  \nJust as there may only be a single decimal point in a number so may there be no  more than one \n\u201cV\u201d in a PICTURE .  Implied decimal points occupy no space in storage \u2013 they just specify how values \nare used.  For example, if the value \u201c1234\u201d is in storage in a field defined as PIC 999V9, that value \nwould be treated as 123.4 in any statem ents that referenced it.  ", "start_char_idx": 3106, "end_char_idx": 3767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7d83f9f-2e12-4b12-a45a-d40a68434e38": {"__data__": {"id_": "e7d83f9f-2e12-4b12-a45a-d40a68434e38", "embedding": null, "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4", "node_type": "4", "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "169f8d114647306b0861bb323c620a613d49649386ed069db58b88e9635ab22e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48ae22d9-68b3-4c7f-855a-586146f490e0", "node_type": "1", "metadata": {}, "hash": "6332d5b2d073dd5faa15f557eccb11b61f61a500be42b3163b325f1abaa27b1b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-10 3. GNU COBOL  supports all standard COBOL PICTURE editing symbols, namely \u201c$\u201d, comma, asterisk (*), decimal -\npoint, CR, DB, + (plus), - (minus), \u201cB\u201d , \u201c0\u201d (zero) and \u201c/\u201d, as follows:  \nFigure 5-7 - Numeric Editing PICTURE Symbols  \nEditing \nSymbol  Meaning and Usage  \n- (minus)  This symbol must be used either at the very beginning of a PICTURE  or at the very end.  If \u201c -\u201c is used, none \nof \u201c+\u201d, \u201c CR\u201d or \u201c DB\u201d may be used.   ", "start_char_idx": 0, "end_char_idx": 508, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48ae22d9-68b3-4c7f-855a-586146f490e0": {"__data__": {"id_": "48ae22d9-68b3-4c7f-855a-586146f490e0", "embedding": null, "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4", "node_type": "4", "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "169f8d114647306b0861bb323c620a613d49649386ed069db58b88e9635ab22e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7d83f9f-2e12-4b12-a45a-d40a68434e38", "node_type": "1", "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1746db92cfb99e37d6a5f56dfccafd6c0c07fa7c8b3c5eef90f52af230e4d0ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "829be7fd-c7ba-42f7-8bf4-51bb11b812fd", "node_type": "1", "metadata": {}, "hash": "746bfc55fcb99e5008d4903d1d934631c421c37d23787ad9da59bcebed87699d", "class_name": "RelatedNodeInfo"}}, "text": "It is used to edit numeric values.  \nMultiple consecutive \u201c -\u201c symbols are allowed only at the very beginning of the field.  This is called a \nfloating minus sign . \nEach \u201c -\u201c symbol will count as one character position in the size of the data item.  \nIf only a single \u201c -\u201c symbol is specified, that symbol will be \u201creplaced\u201d by a \u201c -\u201c if the value moved to the \nfield is negative, or a SPACE  otherwise.  \nIf a floating minus sign is used, think of the editing process as if it worked like this:  \n1. Determine what th e edited value would be if each \u201c -\u201c were actually a \u201c9\u201d.  \n2. Locate the digit in the edited result that corresponds to the right -most \u201c -\u201c and scan the edited value \nback to the left from that point until you come to a \u201c0\u201d that has nothing but \u201c0\u201d characters to the left of \nit. \n3. Replace that \u201c0\u201d with a \u201c -\u201c if the value moved to the field is negative or a SPACE  otherwise.  \n4. Replace all remaining \u201c0\u201d characters to the left of that position by SPACES . \nSome examples (the symbol b denotes a space):  \nIf this value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026 this value in storage  will \nresult : \n17 -999 b017 \n-17 -999 -017 \n265 -----99 bbbb265 \n-265 -----99 bbb-265 \n51 999- 051b \n-51 999- 051- \n \n$12 This symbol must be only be used at the very beginning of a PICTURE  except that a \u201c+\u201d or \u201c -\u201c may appear \nto the left of it.   It is used to edit numeric values.  \n", "start_char_idx": 508, "end_char_idx": 1913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "829be7fd-c7ba-42f7-8bf4-51bb11b812fd": {"__data__": {"id_": "829be7fd-c7ba-42f7-8bf4-51bb11b812fd", "embedding": null, "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4", "node_type": "4", "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "169f8d114647306b0861bb323c620a613d49649386ed069db58b88e9635ab22e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48ae22d9-68b3-4c7f-855a-586146f490e0", "node_type": "1", "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63acc79e89b43ccf8a44f23490267dd2da6400f24318158dc593acd41c8d4578", "class_name": "RelatedNodeInfo"}}, "text": "Multiple consecutive \u201c$\u201c symbols are allowed.  This is called a floating currency symbol . \nEach \u201c$\u201c symbol will count as one character position in the size of the da ta item.  \nIf only a single \u201c$\u201c symbol is specified, that symbol will be inserted into the edited value at that position \nunless there are so many significant digits to the field value that the position occupied by the \u201c$\u201d is needed \nto represent a leading non -zero digit.  In such cases, the \u201c$\u201d will be treated as a \u201c9\u201d.  \nIf a floating currency sign is used, think of the editing process as if it worked like this:  \n1. Determine what the edited value would be if each \u201c$\u201c were actually a \u201c9\u201d.  \n2. Locate the digit in the ed ited result that corresponds to the right -most \u201c$\u201c and scan the edited value \nback to the left from that point until you come to a \u201c0\u201d that has nothing but \u201c0\u201d characters to the left of \nit. \n3. Replace that \u201c0\u201d with a \u201c$\u201c.  \n4. Replace all remaining \u201c0\u201d characters t o the left of that position by SPACES . \nSome examples (the symbol b denotes a space):  \nIf this value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026 this value in storage  will \nresult : \n17 $999  $017 \n265 $$$$$99  bbb$265 \n \n                                                                 \n12 The default currency sign used is \u201c$\u201d.  Other countries use different currency signs.  The SPECIAL -NAMES  paragraph allows any \nsymbol to be defined as a currency symbol.  If the currency sign is defined to the character \u2018#\u2019, for example, then you would  \nuse the \u2018#\u2019 character as a PICTURE  editing symbol.  ", "start_char_idx": 1913, "end_char_idx": 3485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27302734-5021-45ee-8eea-7584bb59d288": {"__data__": {"id_": "27302734-5021-45ee-8eea-7584bb59d288", "embedding": null, "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e262974-ee9f-492a-a794-5cd1bf50972e", "node_type": "4", "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "54b68190336b5a93e549e4c160d921b1ae8f8e3500a93b1a588230e493ecc93e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4f83fe2-ae09-4750-81da-83ab942f21f2", "node_type": "1", "metadata": {}, "hash": "10801fa776f5adc29fd99cb920a4d5405476a51a7211c4fe3dfb6532abb35384", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-11 Editing \nSymbol  Meaning and Usage  \n* (asterisk)  This symbol must be only be used at the very beginning of a PICTURE  except that a \u201c+\u201d or \u201c -\u201c may appear \nto the left of it.   It is used to edit numeric values.  \n", "start_char_idx": 0, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4f83fe2-ae09-4750-81da-83ab942f21f2": {"__data__": {"id_": "a4f83fe2-ae09-4750-81da-83ab942f21f2", "embedding": null, "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e262974-ee9f-492a-a794-5cd1bf50972e", "node_type": "4", "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "54b68190336b5a93e549e4c160d921b1ae8f8e3500a93b1a588230e493ecc93e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27302734-5021-45ee-8eea-7584bb59d288", "node_type": "1", "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e7c11c02bcfe957fab57b55f28ad600f618e2361d159d95534f724617c9eedc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "299e58de-46de-430b-b9db-e87ad56ccf3a", "node_type": "1", "metadata": {}, "hash": "0660d8cbb361a9f3b8bdaa8f9edf5a687871a1d6cc0b1df26d7f4a60c5194a6e", "class_name": "RelatedNodeInfo"}}, "text": "Multiple consecutive \u201c*\u201c symbols are not only allowed, but are the typical usage.  This is called  a floating \ncheck protection symbol . \nEach \u201c*\u201c symbol will count as one character position in the size of the data item.  \nThink of the editing process as if it worked like this:  \n1. Determine what the edited value would be if each \u201c*\u201c were actually a \u201c9\u201d.  \n2. Locate  the digit in the edited result that corresponds to the right -most \u201c*\u201c and scan the edited value \nback to the left from that point until you come to a \u201c0\u201d that has nothing but \u201c0\u201d characters to the left of \nit. \n3. Replace that \u201c0\u201d with a \u201c*\u201c.  \n4. Replace all remain ing \u201c0\u201d characters to the left of that position by \u201c*\u201d also.  \nAn example:  \nIf this value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026 this value in storage  will \nresult : \n265 *****99  ****265 \n \n, \n(comma)13 Each comma (,) in the PICTURE  string represents a character position into which  the character \u201c,\u201d will be  \ninserted.  This character position is counted in the size of the  item.   The \u201c,\u201d symbol is a \u201csmart symbol\u201d \ncapable of masquerading as the floating  symbol to its left and right sho uld there be insufficient digits of \nprecision to the numeric value being edited to require the insertion of a \u201c,\u201d character.  \nFor example (the symbol b denotes a space) : \nIf this value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026 this value in storage  will \nresult: \n17 $$,$$$,$99  bbbbbbb$17 \n265 $$,$$$,$99 bbbbbb$265 \n1456  $$,$$$,$99  bbbb$1,456 \n \n. (period)13 This symbol inserts a decimal point into the edited value at the point where an implied decimal point exists \nin the value.    It is used to edit numeric values.   Note that the period specifie d at the end of every data \nitem definition IS NOT treated as an editing symbol!  \nAn example:  \n01  Edited -Value     PIC 9(3).99.  \n01  Payment          PIC 9(3)V99  VALUE 152.19.  \n... \n    MOVE Payment TO Edited -Value. \n    DISPLAY Edited -Value. \nWill display 152.19  \n/ (slash)  This symbol \u2013 usually used when editing dates for printing \u2013 inserts a \u201c/\u201d character into the edited value.  \nThe inserted \u201c/\u201d character will occupy a byte of storage in the edited result.  \nAn example:  \n01  Edited -Date    PIC 99/99/9999.  \n\u2026 \n    MOVE 08182009 TO Edited -Date. \n    DISPLAY Edited -Date. \n", "start_char_idx": 293, "end_char_idx": 2599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "299e58de-46de-430b-b9db-e87ad56ccf3a": {"__data__": {"id_": "299e58de-46de-430b-b9db-e87ad56ccf3a", "embedding": null, "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e262974-ee9f-492a-a794-5cd1bf50972e", "node_type": "4", "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "54b68190336b5a93e549e4c160d921b1ae8f8e3500a93b1a588230e493ecc93e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4f83fe2-ae09-4750-81da-83ab942f21f2", "node_type": "1", "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "05a1e7327767a335515664b4cf1d2296a5eae08ba0e685ea280bf97b27aee8d6", "class_name": "RelatedNodeInfo"}}, "text": "The displayed value will be 08/18/2009.  \n                                                                 \n13 If DECIMAL -POINT IS COMMA  is specified in the SPECIAL -NAMES  paragraph, the meanings and usages of the \u201c.\u201d and \u201c,\u201d \ncharacters will be reversed  ", "start_char_idx": 2599, "end_char_idx": 2858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1df2c793-0a6f-4473-b967-3346ff53f383": {"__data__": {"id_": "1df2c793-0a6f-4473-b967-3346ff53f383", "embedding": null, "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6", "node_type": "4", "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5840edd214f982009b9b765f2567f49d6a9546d142cb06a5996366769947523f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0457547f-b5cf-495b-9af9-63e5140e0d09", "node_type": "1", "metadata": {}, "hash": "582389f6c8cc88f1cc8670ce0c391f6df721f5d0c86fc4f4ed7a9b3205f376ca", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-12 Editing \nSymbol  Meaning and Usage  \n+ (plus)  This symbol must be used either at the very beginning of a PICTURE  or at the very end.  If \u201c+\u201c is used, none \nof \u201c-\u201d, \u201cCR\u201d or \u201c DB\u201d may be used.   ", "start_char_idx": 0, "end_char_idx": 272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0457547f-b5cf-495b-9af9-63e5140e0d09": {"__data__": {"id_": "0457547f-b5cf-495b-9af9-63e5140e0d09", "embedding": null, "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6", "node_type": "4", "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5840edd214f982009b9b765f2567f49d6a9546d142cb06a5996366769947523f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1df2c793-0a6f-4473-b967-3346ff53f383", "node_type": "1", "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "90640a82bbb9e0904e866571f6034dd4402571057b96c0f44d66ba52c2637532", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27d84622-9b52-4e64-a4e5-07017cd3f1eb", "node_type": "1", "metadata": {}, "hash": "7f505447f8c5d0c4170f91a44325332517a2c1f77075f430ba71278ce6f5893d", "class_name": "RelatedNodeInfo"}}, "text": "It is used to edit numeric values.  \nMultiple consecutive \u201c+\u201c symbols are allowed only at the very beginning of the field.  This is called a \nfloating plus sign . \nEach \u201c+\u201c symbol will count as one character position in the size of the data item.   If only a s ingle \u201c+\u201c \nsymbol is specified, that symbol will be replaced by a \u201c -\u201c if the value moved to the field is negative, or a \u201c+\u201d \notherwise.  \nIf a floating plus sign is used, think of the editing process as if it worked like this:  \n1. Determine what the edited value w ould be if each \u201c+\u201c were actually a \u201c9\u201d.  \n2. Locate the digit in the edited result that corresponds to the right -most \u201c+\u201c and scan the edited value \nback to the left from that point until you come to a \u201c0\u201d that has nothing but \u201c0\u201d characters to the left \nof it.  \n3. Replace that \u201c0\u201d with a \u201c -\u201c if the value moved to the field is negative or a \u201c+\u201d otherwise.  \n4. Replace all remaining \u201c0\u201d characters to the left of that position by SPACES . \nSome examples (the symbol b denotes a space):  \nIf this value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026 this value in storage  will \nresult : \n17 +999  +017 \n-17 +999  -017 \n265 +++++99  bbb+265 \n-265 +++++99  bbb-265 \n51 999+  051+ \n-51 999- 051- \n \n0 (zero)  This symbol inserts a \u201c0\u201d character into the edited value.  The inserted \u201c0\u201d character will occupy a byte of \nstorage in the edited result.  \nAn example:  \n01  Edited -Phone-Number    PIC 9(3)B9(3)B9(4).  \n\u2026 \n    MOVE 5185551212 TO Edited -Phone-Number. \n    DISPLAY Edited -Phone-Number. \nThe displayed value will be 518 555 1212 . \nB This symbol inserts a SPACE  character into the edited value.  The inserted SPACE  character will occupy a \nbyte of storage in the edited result.  \nAn example:  \n01  Edited -Phone-Number    PIC 9(3)B9(3)B9(4).  \n", "start_char_idx": 272, "end_char_idx": 2059, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27d84622-9b52-4e64-a4e5-07017cd3f1eb": {"__data__": {"id_": "27d84622-9b52-4e64-a4e5-07017cd3f1eb", "embedding": null, "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6", "node_type": "4", "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5840edd214f982009b9b765f2567f49d6a9546d142cb06a5996366769947523f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0457547f-b5cf-495b-9af9-63e5140e0d09", "node_type": "1", "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a1a1bf37255ee79706cc50af9c2c604d8a6423713e6c74b5af0a856dd72cf081", "class_name": "RelatedNodeInfo"}}, "text": "\u2026 \n    MOVE 5185551212 TO Edited -Phone-Number. \n    DISPLAY Edited -Phone-Number. \nThe displayed value will be 518 555 1212 . \nCR This symbol must be used only  at the very end  of a PICTURE .  If \u201c CR\u201c is used, none of \u201c -\u201d, \u201c+\u201d or \u201c DB\u201d may \nbe used.   It is used to edit numeric values.  \nMultiple \u201c CR\u201c symbols are  not allowed in one PICTURE  clause.  \nA \u201cCR\u201c symbol will count as two character position s in the size of the data item.  \nIf the value moved into the field is negative, the characters \u201c CR\u201d will be inserted into the edited value, \notherwise two SPACES  will be inserted.  \nSome examples (the symbol b denotes a space):  \nThis value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026resulting in this value in \nstorage:  \n17 99CR  17bb \n-17 99CR  17CR  \n ", "start_char_idx": 2059, "end_char_idx": 2830, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fa85137-7f34-4aa8-b1fb-ba1fbbe1963b": {"__data__": {"id_": "7fa85137-7f34-4aa8-b1fb-ba1fbbe1963b", "embedding": null, "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6a7198b-f62d-4349-9240-e7ab7888122a", "node_type": "4", "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2bd0042eef9087a0b20d5aebe309ba8caaa92861bf0cc970fea8a665a0973f1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "140ddc32-1e79-40d3-a1a3-56de924e83b2", "node_type": "1", "metadata": {}, "hash": "83173e0bd611a8fc2fe5506bc7eb8146918cd594a6d3a2c5546b67c4ceb5c290", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-13 Editing \nSymbol  Meaning and Usage  \nDB This symbol must be used only at the very end of a PICTURE .  If \u201c DB\u201c is used, none of \u201c -\u201d, \u201c+\u201d or \u201c CR\u201d may \nbe used.  It is used to edit numeric values.  \nMultiple \u201c DB\u201c symbols are not allowed in one PICTURE clause.  \nA \u201cDB\u201c symbol will count as two character positions in the size of the data item.  \nIf the value moved into the field is negative, the characters \u201c DB\u201d will be inserted into the edited value, \notherwise two SPACES  will be inserted.  \nSome examples (the symbol b denotes a space):  \nThis value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026resulting in this value in \nstorage:  \n17 99DB 17bb \n-17 99DB 17DB \n \nZ This symbol must be only be used at the very beginning of a PICTURE  except that a \u201c+\u201d or \u201c -\u201c may appear \nto the left of it.   It is used to edit numeric values.  \n", "start_char_idx": 0, "end_char_idx": 916, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "140ddc32-1e79-40d3-a1a3-56de924e83b2": {"__data__": {"id_": "140ddc32-1e79-40d3-a1a3-56de924e83b2", "embedding": null, "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6a7198b-f62d-4349-9240-e7ab7888122a", "node_type": "4", "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2bd0042eef9087a0b20d5aebe309ba8caaa92861bf0cc970fea8a665a0973f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fa85137-7f34-4aa8-b1fb-ba1fbbe1963b", "node_type": "1", "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5bcf8a807f55ed244208dde5e021a9eedbe7d6beceeea213f28e9566a316b9ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f629b0be-5f4a-4c82-82a1-1cfc72240e49", "node_type": "1", "metadata": {}, "hash": "cb7310c9ff550e9771d4edc5473f85123affaba5820fc7fd2ba2893bd95e21e3", "class_name": "RelatedNodeInfo"}}, "text": "Multiple consecutive \u201c Z\u201c symbols are not only allowed , but are the  typical manner in which this editing \nsymbol is used .  This is called a floating zero suppression . \nEach \u201c Z\u201c symbol will count as one character position in the size of the data item.  \nThink of the editing process as if it worked like this:  \n1. Determine what the  edited value would be if each \u201cZ\u201c were actually a \u201c9\u201d.  \n2. Locate the digit in the edited result that corresponds to the right -most \u201cZ\u201c and scan the edited value \nback to the left from that point until you come to a \u201c0\u201d that has nothing but \u201c0\u201d characters to t he left \nof it.  \n3. Replace that \u201c0\u201d with a SPACE . \n4. Replace all remaining \u201c0\u201d characters to the left of that position by SPACES . \nSome examples (the symbol b denotes a space):  \nThis value\u2026  \u2026is moved to a field with \nthis PICTURE\u2026  \u2026resulting in this value in \nstorage:  \n17 Z999 b017 \n265 ZZZZZ 99 bbbb265 \n \nNo more than one editing symbol may be used in a floating manner in the same PICTURE  clause.  \n4. ", "start_char_idx": 916, "end_char_idx": 1934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f629b0be-5f4a-4c82-82a1-1cfc72240e49": {"__data__": {"id_": "f629b0be-5f4a-4c82-82a1-1cfc72240e49", "embedding": null, "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6a7198b-f62d-4349-9240-e7ab7888122a", "node_type": "4", "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2bd0042eef9087a0b20d5aebe309ba8caaa92861bf0cc970fea8a665a0973f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "140ddc32-1e79-40d3-a1a3-56de924e83b2", "node_type": "1", "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "953d86f99f1ac36c35cd94acb18a85f1efafe3154441c46dee8f8fa59459e5e1", "class_name": "RelatedNodeInfo"}}, "text": "Numeric data items containing editing symbols are referred to as numeric edited fields.  Such data items may \nreceive values in the various arithmetic statements but may not be used as sources of data in those same \nstatements.  The statements in question ar e ADD , COMPUTE , DIVIDE , MULTIPLY  and SUBTRACT .  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nClass Tests  6.1.4.2.2  \nThe ADD  Statement  6.4.2  \n The COMPUTE  Statement  6.4.9  \nThe DIVIDE  Statement  6.4.13  \nThe MULTIPLY  Statement  6.4.27  \nThe SUBTRACT  Statement  6.4.44  \n \n5.2.1.7.  REDEFINES Clause  \n1. The REDEFINES  clause causes identifier -1 (the data item in which the \nREDEFINES clause is specified) to occupy the same physical storage space as \nidentifier -2, so that storage may be defined in a different manner with a \n(probably) different structure.  The following must all be true in order to use REDEFINES : \na. The level number of identifier -2 must be the same as that of identifier -1. \nb. The level number of identifi er-2 (and identifier -1) cannot be 66, 78 or 88.  \nREDEFINES identifier -2", "start_char_idx": 1934, "end_char_idx": 3067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d11edba-ea18-4bd7-9976-8c83dcbae78a": {"__data__": {"id_": "5d11edba-ea18-4bd7-9976-8c83dcbae78a", "embedding": null, "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79528cad-cde0-411d-b1a4-7b42aff7d60f", "node_type": "4", "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7c0a7a44d81951dd77778df4cc22885542f53393b6f21d849e853f4a1c9a2631", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72aa2711-db7e-4061-ae98-efda8b970bfd", "node_type": "1", "metadata": {}, "hash": "8c9b4590af5f8961d404cee901e2055a2a8c3fc97d8cafdb61a87996c0e9bb8b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-14 c. If \u201cn\u201d represents the level number of identifier -2 (and identifier -1), then no other data items with level \nnumber \u201cn\u201d may be defined between identifier -1 and identifier -2. \nd. The total allocated size of identifi er-1 must be the same as the total allocated size of identifier -2. \ne. No OCCURS  clause may be defined on identifier -2.  There may \u2013 however \u2013 be items defined with OCCURS  \nclauses subordinate  to identifier -2.   \nf. No VALUE  clause may be defined on identifier -2.  No data items subordinate to identifier -2 may have VALUE  \nclauses, with the exception of level -88 condition names.  \n5.2.1.8.  RENAMES Clause  \nThe RENAMES  clause regroups previously \ndefined items by specifying alternative, possibly \noverlapping, groupings of elementary data items  \nin a record . \n \nSee Also\u2026  \nDefining Level -66 RENAMES  Data Items  5.2.4  \n  \n5.2.1.9.  ", "start_char_idx": 0, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72aa2711-db7e-4061-ae98-efda8b970bfd": {"__data__": {"id_": "72aa2711-db7e-4061-ae98-efda8b970bfd", "embedding": null, "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79528cad-cde0-411d-b1a4-7b42aff7d60f", "node_type": "4", "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7c0a7a44d81951dd77778df4cc22885542f53393b6f21d849e853f4a1c9a2631", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d11edba-ea18-4bd7-9976-8c83dcbae78a", "node_type": "1", "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0b2caa9737b49c6d1b15613da61e1b046e322ede7b893a73229fe3df27fc1af5", "class_name": "RelatedNodeInfo"}}, "text": "SIGN Clause  \n1. The SIGN  clause, allowable only for USAGE \nDISPLAY  numeric data items, specifies how an \u201cS\u201d \nsymbol will be interpreted  in a data item\u2019s \nPICTURE  clause .  Without the SEPARATE \nCHARACTER  option, the sign of the data item\u2019s \nvalue will be encoded by transforming the last ( TRAILING ) or first ( LEADING ) digit as follows:  \nFigure 5-8 - Sign-Encoding Characters  \nFirst/Last  \nDigit  Encoded Value  \nFor POSITIVE  Encoded Value  \nFor NEGATIVE  \n0 0 p \n1 1 q \n2 2 r \n3 3 s \n4 4 t \n5 5 u \n6 6 v \n7 7 w \n8 8 x \n9 9 y \nIf the SEPARATE CHARACTER  clause is used, then an actual \u201c+\u201d or \u201c -\u201c sign will be inserted into the field\u2019s value as \nthe first ( LEADING ) or last ( TRAILING ) character.   \n2. When SEPARATE CHARACTER  is specified, the \u201cS\u201d symbol in the data item\u2019s PICTURE must be counted when \ndetermining the data item\u2019s size.  \nSee Also\u2026  \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \n  \n  \nRENAMES identifier -3[ THRU|THROUGH identifier -4]\nSIGNIS             [SEPARATE CHARACTER ]LEADING\nTRAILING", "start_char_idx": 950, "end_char_idx": 1974, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7de06d75-68b5-4082-a658-154f65b407f4": {"__data__": {"id_": "7de06d75-68b5-4082-a658-154f65b407f4", "embedding": null, "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5b5f064-0c2c-43a5-8d28-14f171386095", "node_type": "4", "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14a2c90efd8a4a8770c92ba420b97c4e369d9b3a1709e8376e531603dd171fb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4747856f-2007-4e23-908f-6224909878e4", "node_type": "1", "metadata": {}, "hash": "3c9623e06f1d12b56aced421de90ec860b6c4308cc13cbb71ce7e4638ebc6754", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-15 5.2.1.10.  SYNCHRONIZED Clause  \n1. The SYNCHRONIZED  clause (which may be abbreviated as SYNC ) \noptimizes the storage of binary numeric items to store them in such \na manner as to make it as fast as possible for the CPU to fetch them.  \nThis synchronization is performed as follows:  \na. If the binary item occupies one byte of storage, no synchronization is performed.  \nb. If the binary item occupies two bytes of storage, the binary item is allocated at the next half -word boundary.  \nc. If the bin ary item occupies four  bytes of storage, the binary item is allocated at the next word boundary.  \nd. If the binary item occupies four bytes of storage, the binary item is allocated at the next word boundary.  \nFigure 5-9 provides an example of a group item\u2019s storage allocation with and without using SYNCHRONIZED . \nFigure 5-9 - Effect of the SYNCHRONIZED Clause  \n \nThe grey blocks represent the unused \u201cslack\u201d bytes that are allocated in the Group -Item -2 structure because of \nthe SYNC  clauses.  \nThe LEFT  and RIGHT  options to the SYNCHRONIZED  clause are recognized for syntactical compatibility with other \nCOBOL implementat ions, but are otherwise non -functional.  \n5.2.1.11.  ", "start_char_idx": 0, "end_char_idx": 1273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4747856f-2007-4e23-908f-6224909878e4": {"__data__": {"id_": "4747856f-2007-4e23-908f-6224909878e4", "embedding": null, "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5b5f064-0c2c-43a5-8d28-14f171386095", "node_type": "4", "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14a2c90efd8a4a8770c92ba420b97c4e369d9b3a1709e8376e531603dd171fb5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7de06d75-68b5-4082-a658-154f65b407f4", "node_type": "1", "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9521b911db016cc0c0d8dd3ade10480c3517b6a53fb224417f1d2036f7fbad0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed2475a8-734b-43eb-b215-f963e9d4611f", "node_type": "1", "metadata": {}, "hash": "8cd61c2faadc1289d568123af0754d0d49ea4cd625eb5d6d20b9e497951e1e89", "class_name": "RelatedNodeInfo"}}, "text": "USAGE Clause  \n1. The following table summarizes the various possible USAGE  \nspecifications:  \n \nFigure 5-10 - Summary of USAGE Specifications  \nUSAGE  Range of Possible Values  Format  \n(See note #2 ,#4) Allows \nNegative \nValues?  \n(See note #3) Used w/ \nPICTURE ? \nBINARY  Defined by the quantity of \u201c9\u201ds in the PICTURE  and the \npresence or absence of an \u201cS\u201d in the PICTURE  Compatible Binary \nInteger  If PICTURE  \ncontains \u201cS\u201d  Yes \nA C E B D F\nA C E B D F01  Group -Item-1.\n05 A            PIC X(1).\n", "start_char_idx": 1273, "end_char_idx": 1780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed2475a8-734b-43eb-b215-f963e9d4611f": {"__data__": {"id_": "ed2475a8-734b-43eb-b215-f963e9d4611f", "embedding": null, "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5b5f064-0c2c-43a5-8d28-14f171386095", "node_type": "4", "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14a2c90efd8a4a8770c92ba420b97c4e369d9b3a1709e8376e531603dd171fb5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4747856f-2007-4e23-908f-6224909878e4", "node_type": "1", "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1b5a46e04f547279d151322c5f340a5f8b98ef13f2a645342369b4761b36d105", "class_name": "RelatedNodeInfo"}}, "text": "05 B            USAGE BINARY -SHORT.\n05 C            PIC X(2).\n05 D            USAGE BINARY -LONG.\n05 E            PIC X(3).\n05 F            USAGE BINARY -DOUBLE.01  Group -Item-2.\n05 A            PIC X(1).\n05 B    SYNC    USAGE BINARY -SHORT.\n05 C            PIC X(2).\n05 D    SYNC    USAGE BINARY -LONG.\n05 E            PIC X(3).\n05 F    SYNC    USAGE BINARY -DOUBLE.\nGroup -Item -1\nGroup -Item -2Word\u00bd\nWord\u00bd\nWord\u00bd\nWord\u00bd\nWord\u00bd\nWord\u00bd\nWord Word Word Word Word Word Word\nBytes Bytes Bytes\nDouble\nWordDouble\nWordDouble\nWordDouble\nWord\nSYNCHRONIZEDLEFT\nRIGHT\nUSAGEIS data -item -usage", "start_char_idx": 1780, "end_char_idx": 2361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "461760cb-70a7-4fd1-a9db-db27ca193db0": {"__data__": {"id_": "461760cb-70a7-4fd1-a9db-db27ca193db0", "embedding": null, "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf682347-a278-45ef-adde-c627a3564272", "node_type": "4", "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e962c895e5e45127d0bbb5cbf9cf71112f3c65868f19a0b42c49c8a44968cab6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56f741d1-413b-471a-a1bf-e82c1b921cdf", "node_type": "1", "metadata": {}, "hash": "f635714b006e23f59a682085ddb8051a93d7cfe590464b37bd045eb5a98e97bf", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-16 USAGE  Range of Possible Values  Format  \n(See note #2 ,#4) Allows \nNegative \nValues?  \n(See note #3) Used w/ \nPICTURE ? \n", "start_char_idx": 0, "end_char_idx": 199, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56f741d1-413b-471a-a1bf-e82c1b921cdf": {"__data__": {"id_": "56f741d1-413b-471a-a1bf-e82c1b921cdf", "embedding": null, "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf682347-a278-45ef-adde-c627a3564272", "node_type": "4", "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e962c895e5e45127d0bbb5cbf9cf71112f3c65868f19a0b42c49c8a44968cab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "461760cb-70a7-4fd1-a9db-db27ca193db0", "node_type": "1", "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "baed06c3d4e388a8f5a4f5f80607aefa1456daf452b515109195e149ab3baf28", "class_name": "RelatedNodeInfo"}}, "text": "BINARY -C-LONG  [ SIGNED  ]  Same as BINARY -DOUBLE SIGNED  \nBINARY -C-LONG  UNSIGNED  Typically 0 to 4,294,967,295  Native Binary Integer  No \u2013 see #3 No \nBINARY -CHAR  [ SIGNED  ] -128 to 127  Native Binary Integer  Yes No \nBINARY -CHAR UNSIGNED  0 to 255  Native Binary Integer  No \u2013 see #3 No \nBINARY -DOUBLE  [ SIGNED  ] -9,223,372,036,854,775,808 to \n9,223,372,036,854,775,807 Native Binary Integer  Yes No \nBINARY -DOUBLE  UNSIGNED  0 to 18,446,744,073,709,551,615 Native Binary Integer  No \u2013 see #3 No \nBINARY -INT Same as BINARY -LONG SIGNED  \nBINARY -LONG  [ SIGNED  ] -2,147,483,648 \u2013 2,147,483,647  Native Binary Integer  Yes No \nBINARY -LONG  UNSIGNED  0 to 4,294,967,295  Native Binary Integer  No \u2013 see #3 No \nBINARY -LONG -LONG  Same as BINARY -DOUBLE SIGNED  \nBINARY -SHORT  [ SIGNED  ] -32,768 to 32,767  Native Binary Integer  Yes No \nBINARY -SHORT  UNSIGNED  0 to 65,535  Native Binary Integer  No \u2013 see #3 No \nCOMP UTATIONAL  Same as BINARY  \nCOMP UTATIONAL -1 Same as FLOAT -SHORT  \nCOMP UTATIONAL -2 Same as FLOAT -LONG  \nCOMP UTATIONAL -3 Same as PACKED -DECIMAL  \nCOMP UTATIONAL -4 Same as BINARY  \nCOMP UTATIONAL -5 Depends on number of \u201c9\u201ds in PICTURE  and the \u201dbinary -\nsize\u201d setting of the configuration file used to compile the \nprogram  Native Binary Integer  If PICTURE  \ncontains \u201cS\u201d  Yes \nCOMP UTATIONAL -6 Defined by the quantity of \u201c9\u201ds in the PICTURE  and the \npresence or absence of an \u201cS\u201d in the PICTURE  (see # 1) Unsigned Packed \nDecimal14 No Yes \nCOMP UTATIONAL -X If used with \u201c PIC X \u201d, allocates one  byte of storage per \u201cX\u201d; \nrange of values is 0 to max storable in that many bytes  \nIf used with \u201c PIC 9 \u201d, range of values depends on number \nof \u201c9\u201ds in PICTURE  Native unsigned (X) \nor signed (9) Binary  If PICTURE 9  \nand contains \n\u201cS\u201d Yes \nDISP LAY Depends on PICT URE  \u2013 One character15 per X, A, 9, period, \n$, Z, 0, *, S (if SEPARATE CHARACTER  specified), +, - or B \nsymbol in PICTURE ; Add 2 more bytes if DB or CR symbol \nused  Characters16 If PICTURE  \ncontains \u201cS\u201d  Yes \n                                                                 \n14 No half -byte is reserved for a sign as is the case with PACKED -DECIMAL  \n15 In this context, one character is the same as one byte, unless you\u2019ve built yourself a GNU COBOL  system that uses Unicode \n(unlikely), in which case 1 character = two bytes.  \n16 This is the most reliable format, combined with a ORGANIZATION IS RECOR D BINARY SEQUENTIAL file format to use for data \nthat is being shared between different computer systems because values encoded in this format may be represented exactly, \nwithout the possibility of having special control -characters (which could disrupt FTP transmissions or confuse run -time library \nsoftware) as part of the data.  ", "start_char_idx": 199, "end_char_idx": 2962, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24aa729a-99e1-49df-88cb-912befa237af": {"__data__": {"id_": "24aa729a-99e1-49df-88cb-912befa237af", "embedding": null, "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b509944-1d03-49a0-a4c4-09781bbdc385", "node_type": "4", "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "400a079871927e67ebd5280ab194910a41a95be77b99d7a77119878fc4890cca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45bf727d-0730-4a1f-b3a3-0c1c873c2fab", "node_type": "1", "metadata": {}, "hash": "3c43d86fc64b5f7aac60f12bda4bdffd55adb4a1745329fdac8e8eea6ff29fba", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-17 USAGE  Range of Possible Values  Format  \n(See note #2 ,#4) Allows \nNegative \nValues?  \n(See note #3) Used w/ \nPICTURE ? \nFLOAT -DECIMAL -1617 -9.999999999999999\u00d710384 to 9.999999999999999\u00d710384 Native IEEE 754 \nDecimal6417 Floating -\npoint  Yes No \nFLOAT -DECIMAL -3417 -9.999999999999999999999999999999999\u00d7106144 to \n9.999999999999999999999999999999999\u00d7106144 Native IEEE 754  \nDecimal12817 \nFloating -point  Yes No \nFLOAT -LONG18 Approximately  \n-1.797693134862316 \u00d710308 to  \n1.797693134862316 \u00d710308 Native IEEE 754 \nBinary6418 Floating -\npoint  Yes No \nFLOAT -SHORT18 Approximately  \n-3.4028235 \u00d71038 to \n3.4028235 \u00d71038 Native IEEE 754 \nBinary3218 Yes No \nINDEX  0 to maximum address possible (32 or 64 bits)  Native Binary Integer  No No \nNATIONAL  USAGE NATIONAL , while syntactically recognized, is not supported by GNU COBOL  \nPACKED -DECIMAL  Defined by the quantity of \u201c9\u201ds in the PICTURE  and the \npresence or absence of an \u201cS\u201d in the PICTURE  (see # 1) Signed Packed \nDecimal  If PICTURE  \ncontains \u201cS\u201d  No \nPOINTER  0 to maximum address possible (32 or 64 bits)  Native Binary Integer  No No \nPROGRAM -POINTER  0 to maximum address possible (32 or 64 bits)  Native Binary Integer  No No \nSIGNED -INT Same as BINARY -LONG SIGNED  \nSIGNED -LONG  Same as BINARY -DOUBLE  SIGNED  \nSIGNED -SHORT  Same as BINARY -SHORT SIGNED  \nUNSIGNED -INT Same as BINARY -LONG UNSIGNED  \nUNSIGNED -LONG  Same as BINARY -DOUBLE  UNSIGNED  \nUNSIGNED -SHORT  Same as BINARY -SHORT UNSIGNED  \n2. Binary data (integer or floating -point) can be stored in either a \u201cBig -Endian \u201d or \u201cLittle -Endian\u201d form .   \n", "start_char_idx": 0, "end_char_idx": 1678, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45bf727d-0730-4a1f-b3a3-0c1c873c2fab": {"__data__": {"id_": "45bf727d-0730-4a1f-b3a3-0c1c873c2fab", "embedding": null, "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b509944-1d03-49a0-a4c4-09781bbdc385", "node_type": "4", "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "400a079871927e67ebd5280ab194910a41a95be77b99d7a77119878fc4890cca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24aa729a-99e1-49df-88cb-912befa237af", "node_type": "1", "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "52d6bb3ab7154562dab5d344e21d9fcf8f0bc1210e17ea79db8bb540a306aff6", "class_name": "RelatedNodeInfo"}}, "text": "Big-endian data allocation calls for the bytes that comprise a binary item to be allocated such that the least -\nsignificant byte is the right -most byte.  For example, a four -byte binary item having a value of decimal 20 would \nbe big -endian allocated as 00000014 (shown in hexadecimal notation).  \nLittle -endian  data allocation calls for the bytes that comprise a binary item to be allocated such that the least -\nsignificant byte is the left-most byte.  For example, a four -byte binary item having a value of decimal 20 would be \nlittle -endian allocated as 14000000 (shown in hexadecimal notation).    \nAll CPUs are capable of \u201cunderstanding\u201d big -endian format, which makes it the \u201cmost -compatible\u201d form of binary \nstorage acros s computer systems.   \n                                                                 \n17 The USAGE  specifications FLOAT -DECIMAL -16 and FLOAT -DECIMAL -34 will encode data using IEEE 754 \u201cDecimal64\u201d and \n\u201cDecimal128\u201d format, respectively.  The former allows for up to 16 di gits of exact precision while the latter offers 34.  The \nphrase \u201cexact precision\u201d is used because the traditional binary renderings of decimal real numbers in a floating -point format \n(FLOAT -LONG  and FLOAT -SHORT , for example) only yield an approximation of the actual value because many decimal \nfractions cannot be precisely rendered in binary.  The Decimal64 and Decimal128 renderings, however, render decimal real \nnumbers in encoded decimal form in much the same way that PACKED -DECIMAL  renders a decimal intege r in digit -by-digit \ndecimal form.  The exact manner in which this rendering is performed is complex (Wikipedia has an excellent article on the \nsubject \u2013 just search for \u201cDecimal64\u201d), and in fact the IEEE 754 standard allows Decimal64 and Decimal128 encodin gs to be \nperformed in two ways.  GNU COBOL  stores FLOAT -DECIMAL -16 and FLOAT -DECIMAL -34 data items using Native byte \nordering techniques (see #2).  \n18 The USAGE  specifications FLOAT -LONG  and FLOAT -SHORT  use the IEEE 754 \u201cBinary64\u201d and \u201cBinary32: formats, respectively.  \nThese are binary encodings of real decimal numbers, and as such cannot represent every possible value between the minimum \nand maximum values in the range for those USAGE s.  Wikipedia has a n excellent artuicle on the Binary64 and Binary32 \nencoding schemes \u2013 just searc h on \u201cBinary32\u201d or \u201cBinary64\u201d.  GNU COBOL  stores FLOAT -LONG  and FLOAT -SHORT  data items \nusing Native byte ordering techniques (see #2 ). ", "start_char_idx": 1678, "end_char_idx": 4179, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c221451-8201-4c08-99c4-304999a527c0": {"__data__": {"id_": "0c221451-8201-4c08-99c4-304999a527c0", "embedding": null, "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e", "node_type": "4", "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f1f6ae8740ada7e2b00f31685492e064ce1d71ba29a5c4e97addc60e226f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3", "node_type": "1", "metadata": {}, "hash": "afa0502b5880be6d01125ed040de5d9ebcbcb82ecd07827b277924dabde74b1c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-18 Some CPUs \u2013 such as the Intel/AMD i386/x64 architecture processors such as those used in most Windows PCs  \u2013 \nprefer to process binary data stored in a little -endian format.  Since that format is more efficient on those \nsystems, it is r eferred to as the \u201cnative\u201d binary format.  \nOn a system supporting only one format of binary storage (generally, that would be big -endian), the terms \u201cmost -\nefficient\u201d format and \u201cnative format\u201d are synonymous.  \n3. Data  items that have the UNSIGNED  attribute expl icitly coded, or DISPLAY /PACKED -DECIMAL /COMP -5/COMP -X \nitems that do not have an \u201cS\u201d symbol in their PICTURE  clause cannot preserve negative values that may be stored \ninto them.  Storing a negative value into such a field will actually result in the sign being stripped, essentially \nsaving the absolute value in the data item.  \n4. ", "start_char_idx": 0, "end_char_idx": 925, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3": {"__data__": {"id_": "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3", "embedding": null, "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e", "node_type": "4", "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f1f6ae8740ada7e2b00f31685492e064ce1d71ba29a5c4e97addc60e226f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c221451-8201-4c08-99c4-304999a527c0", "node_type": "1", "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8d3d3d4ff8d3370e36f34543476cd7b4b1f26a5a13002f33c04808ab8d7cc432", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5aa3b179-ae61-4a99-9d2c-a6f00681ccf1", "node_type": "1", "metadata": {}, "hash": "039b937305cbd4734b1519294ca4af70f0d1a6e113f8822537dd6486df72230f", "class_name": "RelatedNodeInfo"}}, "text": "Packed -decimal (i.e. USAGE PACKED -DECIMAL , COMP -3 or COMP -6) data is stored as a series of bytes such that \neach  byte contains two 4 -bit fields, referred to as \u201cnibbles\u201d (since they com prise half a \u201cbyte\u201d) with each nibble  \nrepresenting a \u201c9\u201d in the PICTURE  and each holding  a single decimal digit  encoded as its binary value (0 = 0000, 1 \n= 0001, \u2026 , 9 = 1001) .  The last byte of a PACKED -DECIMAL  or COMP -3 data item will always have its left  nibble \ncorresponding to the last  \u201c9\u201d in the PICTURE  and its right nibble reserved as a sign indicator .  This sifgn indicator is \nalways present regardless of whether or not the PICTURE  included an \u201cS\u201d symbol.   The first byte of the data item \nwill contain a n unused left  nibble if the PICTURE  had an even number of \u201c9\u201d symbols in it.   The sign indicator will \nhave a value of a hexadecimal A thru F .  Traditional packed decimal encoding rules call for  hecadecimal values of \nC, A, F and E in the sign nibble to indi cate a positive value  and B or D to represent a negative value  (hexadecimal \ndigits 0 -9 are undefined) .  Testing with a Windows MinGW/ GNU COBOL  implementation shows that \u2013 in fact \u2013 hex \ndigit D represents a negative number and any other hexadecimal digit de noting a positive number.  Therefore, a \nPIC S9(3) COMP -3 packed -decimal field with a value of -15 would be stored internally as a hexadecimal  015D in \nGNU COBOL .  If you attempt to store a negative number into a packed decimal field that has no \u201cS\u201d in its PICTURE , \nthe absolute value of the negative number will actually be stored.   A USAGE of COMP -6 does not allow for \nnegative values, therefore no sign nibble will be allocated.  A USAGE COMP -6 data item containing an odd \nnumber of \u201c9\u201d symbols in its PICTURE  will leave its leftmost nibble unused.  \n5. A USAGE  clause specified at the group item level will apply that USAGE  to all subordinate data items, except those \nthat themselves have a USAGE  clause.  \nSee Also\u2026  \nGNU COBOL  \u201cconfig\u201d Files  8.1.6  \n  \n5.2.1.12.  VALUE Clause  \n1. The VALUE  clause is ignored on EXTERNAL  data items or on any data \nitems defines as subordinate to an EXTERNAL  data item.  \n2. The VALUE  clause may not be used anywhere in the description of an \n01 item serving as an FD or SD record description.  \n3. VALUE  specifies an initial compilation -time value that will be assigned to the storage occupied by the data item in \nthe program object code generat ed by the compiler.  If the optional \u201c ALL\u201d clause is used, it may only be used with \nan alphanumeric literal  value; the value will be repeated as needed to completely fill the data item.  Here are \nsome examples with and without ALL: \nPIC X(5) VALUE \u201cA\u201d  *> will have the value \u201cA\u201d,SPACE,SPACE,SPACE,SPACE  \nPIC X(5) VALUE ALL \u201cA\u201d  *> will have the value \u201cA\u201d,\u201dA\u201d,\u201dA\u201d,\u201dA\u201d,\u201dA\u201d  \nPIC 9(3) VALUE 1  *> will have the value 001  \nPIC 9(3) VALUE ALL \u201c1\u201d  *> will have the value 111  \n4. Giving a table an initial, compil e-time value is one of the trickier aspects of COBOL data definition.  ", "start_char_idx": 925, "end_char_idx": 3978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5aa3b179-ae61-4a99-9d2c-a6f00681ccf1": {"__data__": {"id_": "5aa3b179-ae61-4a99-9d2c-a6f00681ccf1", "embedding": null, "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e", "node_type": "4", "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f1f6ae8740ada7e2b00f31685492e064ce1d71ba29a5c4e97addc60e226f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3", "node_type": "1", "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9cbf9b51f94c3b652f48f52f124b04193029aa757fe188852a68abf3666c7108", "class_name": "RelatedNodeInfo"}}, "text": "There are \nbasically three standard techniques and a fourth that people familiar with other COBOL implementations but new \nto GNU COBOL  may find interesting.  So, here are the three \u201cstan dard\u201d approaches:  \na. Don\u2019t bother worrying about it at compile -time.  Use the INITIALIZE  statement  to initialize all data item \noccurrences in a table (at run -time) to their data -type -specific default values (numerics:  0, alphabetic and \nalphanumerics: SPACES ). \nVALUEIS [ALL]literal -1", "start_char_idx": 3978, "end_char_idx": 4463, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e96693b2-6e3b-4c10-a9e7-95aa3ca66f55": {"__data__": {"id_": "e96693b2-6e3b-4c10-a9e7-95aa3ca66f55", "embedding": null, "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29d6156b-9fe0-48e4-b151-b22423846b47", "node_type": "4", "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "929714098127f758cc0d6c6c22b013a072e5da05b419c7414bda2484afb46cdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d0670bf-5b33-425a-ad02-b23de7a05c0b", "node_type": "1", "metadata": {}, "hash": "4755e14302428a891247b9b15e82dbf8cd50e0b34c48c008dcfcb7cfead4cc5b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-19 b. Initialize small tables at compile time by including a VALUE  clause on the group item that serves as a \u201cparent\u201d \nto the table, as follows:  \n05  SHIRT -SIZES          VALUE \u201cS 14M 15L 16XL17\u201d.  \n    10 SHIRT -SIZE-TBL    OCCURS 4 TIMES.  \n       ", "start_char_idx": 0, "end_char_idx": 327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d0670bf-5b33-425a-ad02-b23de7a05c0b": {"__data__": {"id_": "0d0670bf-5b33-425a-ad02-b23de7a05c0b", "embedding": null, "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29d6156b-9fe0-48e4-b151-b22423846b47", "node_type": "4", "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "929714098127f758cc0d6c6c22b013a072e5da05b419c7414bda2484afb46cdb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e96693b2-6e3b-4c10-a9e7-95aa3ca66f55", "node_type": "1", "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2e3a0a97ca65f91e2ebe386438a82c2d9e13552950d6d0e290275889a48d27bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d17772e-d222-4829-b32d-9fb1b869415a", "node_type": "1", "metadata": {}, "hash": "9defa4e7892af49eca92033def358594b5ee123f960e721110a180ae80940e6f", "class_name": "RelatedNodeInfo"}}, "text": "15 SST-SIZE       PIC X(2).  \n       15 SST-NECK       PIC 9(2).  \nc. Initialize tables of almost any size at compilation time by utilizing the REDEFINES  clause:  \n05  SHIRT -SIZE-VALUES. \n    10 PIC X(4)          VALUE \u201cS 14\u201d.  \n    10 PIC X(4)          VALUE \u201cM 15\u201d.  \n    10 PIC X(4)          VALUE \u201cL 16\u201d.  \n    10 PIC X(4)          VALUE \u201cXL17\u201d.  \n05  SHIRT -SIZES          REDEFINES SHIRT -SIZE-VALUES. \n    10 SHIRT -SIZE-TBL    OCCURS 4 TIMES.  \n       15 SST-SIZE       PIC X(2).  \n       15 SST-NECK       PIC 9(2).  \nAdmittedly, the table shown in #3c  is much more verbose than # 3b.  What is good about # 3c, however, is that \nyou can have as man y FILLER /VALUE  items as you need for a larger table (and those values can be as long as \nnecessary!  \nMany COBOL compilers do not allow the use of VALUE  and OCCURS  on the same data item; additionally, they \ndon\u2019t allow a VALUE  clause on a data item subordinate  to an OCCURS .  GNU COBOL , however, has neither of \nthese restrictions!   \nObserve the following example, which illustrates the fourth manner in which tables may be initialized in GNU \nCOBOL : \n05  X           OCCURS 6 TIMES.  \n    10 A        PIC X(1) VALUE \u2018?\u2019.  \n    ", "start_char_idx": 327, "end_char_idx": 1526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d17772e-d222-4829-b32d-9fb1b869415a": {"__data__": {"id_": "7d17772e-d222-4829-b32d-9fb1b869415a", "embedding": null, "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29d6156b-9fe0-48e4-b151-b22423846b47", "node_type": "4", "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "929714098127f758cc0d6c6c22b013a072e5da05b419c7414bda2484afb46cdb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d0670bf-5b33-425a-ad02-b23de7a05c0b", "node_type": "1", "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "99d2556bc318e4f78ba6fe0a9a6013340fe8c62ddd89794972ead595f7da05c7", "class_name": "RelatedNodeInfo"}}, "text": "10 B        PIC X(1) VALUE \u2018%\u2019.  \n    10 N        PIC 9(2) VALUE 10.  \nIn this example, all six \u201cA\u201d items will be initialized to \u201c?\u201d, all six \u201cB\u201d items will be initialized to \u201c%\u201d and all six \u201cN\u201d \nitems will be initialized to 10.  It\u2019s not clear exactly how  many times this sort of initialization will be useful, but it\u2019s \nthere if you need it.  \nSee Also\u2026  \nThe INITIALIZE  Statement  6.2.22  \n  \n  ", "start_char_idx": 1526, "end_char_idx": 1926, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e85a0f35-0808-4674-a533-97540fc31dec": {"__data__": {"id_": "e85a0f35-0808-4674-a533-97540fc31dec", "embedding": null, "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99a9535d-02bb-4140-92cd-a10d2a1654db", "node_type": "4", "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "114d1053ad3e442d02ad8d24f9d13f7675663543a77429ca92373ca450bc3b70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0031d59-a62c-4993-a5b8-823104cc208a", "node_type": "1", "metadata": {}, "hash": "f05b5e72d5fcb3e4dac2040706ad27273c280182ddf33274ad3e4085d9cd73d9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-20 5.2.2.  Defining SCREEN SECTION Data Items  \nFigure 5-11 - SCREEN SECTION Data Item Description Syntax  \n The syntax skeleton shown \nhere describes how data \nitems are defined in the \nSCREEN SECTION . \nThese data items are used \nvia special forms of the \nACCEPT  and DISPLAY  verbs \nto create full -screen TUI \n(\u201cTextual User Interface\u201d) \nprograms.  \n1. Data items defined in the SCREEN SECTION  describe input, output or combination screen layouts to be used with \nDISPLA Y or ACCEPT  statements.  These screen layouts may define the entire available screen area or any subset \nof it.  \n", "start_char_idx": 0, "end_char_idx": 665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0031d59-a62c-4993-a5b8-823104cc208a": {"__data__": {"id_": "c0031d59-a62c-4993-a5b8-823104cc208a", "embedding": null, "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99a9535d-02bb-4140-92cd-a10d2a1654db", "node_type": "4", "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "114d1053ad3e442d02ad8d24f9d13f7675663543a77429ca92373ca450bc3b70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e85a0f35-0808-4674-a533-97540fc31dec", "node_type": "1", "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6717e516233f085ac375372b94b2cb24142a98aacab659e179d097392e325ac9", "class_name": "RelatedNodeInfo"}}, "text": "2. The term \u201cavailable screen area\u201d is a nebulous one in those environments where command -line shell sessions are \ninvoked within a graphical user -interface environment (as will be the case on Windows, OSX and most Unix/Linux \nsystems) \u2013 these environments allow command -line session windows to exist with a variable number of available \nscreen rows and columns.  When you are designing GNU COBOL  screens, y ou need to do so with an awareness of \nthe logical row/column geometry the program will be executing within.  \nlevel -number[identifier -1|FILLER]\n[AUTO|AUTO-SKIP|AUTOTERMINATE ]\n[BELL|BEEP]\n[BACKGROUND -COLORIS integer -1|identifier -2]\n[BLANKLINE|SCREEN]\n[BLANKWHEN ZERO]\n[BLINK]\n[COLUMN NUMBER IS [ PLUS|+ ]integer -2|identifier -3]\n[ERASEEOL|EOS]\n[FOREGROUND -COLORIS integer -3|identifier -4]\nFROM literal -1|identifier -5\n[TO identifier -6 ]\nUSING identifier -7\n[FULL|LENGTH-CHECK]\n[HIGHLIGHT |LOWLIGHT ]\n[JUSTIFIED RIGHT ]\n[LEFTLINE ]\n[LINENUMBER IS [PLUS|+ ]integer -4|identifier -8]\n[OCCURS integer -5TIMES ]\n[OVERLINE ]\n[PICTURE picture -string]\n[PROMPT[CHARACTER IS literal -2|identifier -9]\n[REQUIRED |EMPTY-CHECK]\n[REVERSE-VIDEO]\n[SECURE|NO-ECHO]\n[SIGNIS LEADING|TRAILING [SEPARATE CHARACTER ]\n[UNDERLINE ]\n[VALUEIS [ALL]literal -3]\n.", "start_char_idx": 665, "end_char_idx": 1924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "183e79e1-433d-4390-b4b4-b2197db392fd": {"__data__": {"id_": "183e79e1-433d-4390-b4b4-b2197db392fd", "embedding": null, "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "033f9051-4452-48d6-ba5c-2cf30cb3235c", "node_type": "4", "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "64da567bd33475c46bc9c7f791a6d13ba091c37a8e6c8069556b6df2d6e3cb67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa0c3897-d6ed-44d2-85d7-36f1d313246a", "node_type": "1", "metadata": {}, "hash": "9ef7acb98ca93112539d0a261e9a7b6c50f636830be176d0adc83cbf59c828f8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-21 3. Data items with level numbers 01 (Constants), 66, 78 and 88 may be used in the SCREEN SECTION ;  they have the \nsame syntax, rules and usage as they do in the other DATA DIVISION  sections.  \n4. Without LINE  or COLUMN  clauses, SCREEN SECTION  fields will display on the console window beginning at \nwhatever line/column coordinate is stated or implied by the ACCEPT  or DISPLAY  statement that presents the \nscreen item.  After a field is presented to the console window,  the next field will be presented immediately \nfollowing that field.  \n5. A LINE  clause explicitly stated in the definition of a SCREEN SECTION  data item will override any LINE  clause \nincluded on the ACCEPT  or DISPLAY  statement that presents that data item to th e screen.  The same is true of \nCOLUMN  clauses.  \n", "start_char_idx": 0, "end_char_idx": 874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa0c3897-d6ed-44d2-85d7-36f1d313246a": {"__data__": {"id_": "fa0c3897-d6ed-44d2-85d7-36f1d313246a", "embedding": null, "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "033f9051-4452-48d6-ba5c-2cf30cb3235c", "node_type": "4", "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "64da567bd33475c46bc9c7f791a6d13ba091c37a8e6c8069556b6df2d6e3cb67", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "183e79e1-433d-4390-b4b4-b2197db392fd", "node_type": "1", "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4935a3feb30644ea827a0411369e88b0a5f7d9de6367e49712d6cb60a53c37bd", "class_name": "RelatedNodeInfo"}}, "text": "6. The T ab and B ack-Tab (Shift -Tab) keys will position the cursor from field to field in the line/column sequence in \nwhich the fields occur on the screen  at execution time , regardless of the sequence in which they were defined in \nthe SCREEN SECTION . \nSee Also\u2026  \nDefining Level -01 Constants  5.2.3  \nDefining Level -66 RENAMES  Data Items  5.2.4  \nDefining Level 78 Constants  5.2.6  \n Defining Level -88 Condition Names  5.2.7  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \nThe DISPLAY Statement (Screen Data)  6.4.12.4  \n \n5.2.2.1.  AUTO | AUTO -SKIP | AUTOTERMINATE Clause  \n1. The AUTO  clause (the three forms are all equivalent) will \ncause the cursor to automatically advance to the next \ninput -enabled field if the field having the AUTO  clause is \ncompletely filled.  \n5.2.2.2.  BACKGROUND -COLOR Clause  \n1. The BACKGROUND -COLOR  clause is used to specify the \nscreen background color of the screen data item or the \ndefault screen background color of subordinate items if \nBACKGROUND -COLOR  is used on a group item .  You \nspecify colors by number (0 -7), or by usin g the constant names provided in the \u201cscreenio.cpy\u201d copybook (which is \nprovided with all GNU COBOL  source distributions).  \n2. BACKGROUND -COLOR  values  are inheritable from previous  fields  - they are not inherited from the prior field \nencountered but rather from parent data items (data items with numerically lower level numbers).   \n3. The following is the GNU COBOL  color palette:  \nFigure 5-12 - The GNU COBOL  Color Palette (Windows Console)  \nColor Integer Value  \u201cscreenio.cpy\u201d Constant Name  Normal or LOWLIGHT \nAppearance  HIGHLIGHT \nAppearance  \n0 COB -COLOR -BLACK   \n  \n \n1 COB -COLOR -BLUE   \n  \n \n2 COB -COLOR -GREEN   \n  \n \n3 COB -COLOR -CYAN   \n  \n \n4 COB -COLOR -RED   \n  \n \n5 COB -COLOR -MAGENTA   \n  \n \n6 COB -COLOR -YELLOW   \n  \n \n7 COB -COLOR -WHITE   \n  \n \n5.2.2.3.  BEEP | BELL Clause  \n[ BACKGROUND -COLORIS             ]integer -1\nidentifier -2\n[ AUTO|AUTO-SKIP| AUTOTERMINATE ]", "start_char_idx": 874, "end_char_idx": 2876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93aa3599-33f0-49eb-866f-b2e25e60ad01": {"__data__": {"id_": "93aa3599-33f0-49eb-866f-b2e25e60ad01", "embedding": null, "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38cd6045-a758-4735-82bb-225459cc76ee", "node_type": "4", "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f2ca2b09ad1197268df8476be52afdbb6daba2c86f52e589f9a4c70a438545f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df940fd3-0b18-4a78-bf06-a8d65c422922", "node_type": "1", "metadata": {}, "hash": "6082e0206391a373b380ced61031b040d52c474fe5a56d44ff5891f113b736f0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-22 1. Use the BELL  or BEEP  clauses (they are synonymous) to cause an audible tone to occur \nwhen the screen item is DISPLAY ed (). \n5.2.2.4.  BLANK LINE  and  BLANK SCREEN  Clause s \n1. The BLANK SCREEN  clause will blank -out the entire screen prior to displaying the \nnew screen contents described by the screen data item whose description this \nclause is part of.  \n2. The BLANK LINE  clause will blank out the entire screen line upon which the screen \ndata item whose description contains this clause prior to displaying this screen data item.  \n3. Blanked -out areas will have their foreground and background colors set to the attributes of the field containing \nthe BLANK  clause.  \n4. This clause is useful when one SCREEN SECTION  item is being DISPLAY ed over the top of a previously -DISPLAY ed \none.  \n5.2.2.5.  BLANK WHEN ZERO Clause  \n1. The BLANK WHEN ZERO  will cause that screen data item\u2019s value to be automatically \ntransformed into SPACES if a value of 0 is ever put into the field via a FROM, USING or \nVALUE clause.  \n5.2.2.6.  ", "start_char_idx": 0, "end_char_idx": 1125, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df940fd3-0b18-4a78-bf06-a8d65c422922": {"__data__": {"id_": "df940fd3-0b18-4a78-bf06-a8d65c422922", "embedding": null, "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38cd6045-a758-4735-82bb-225459cc76ee", "node_type": "4", "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f2ca2b09ad1197268df8476be52afdbb6daba2c86f52e589f9a4c70a438545f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93aa3599-33f0-49eb-866f-b2e25e60ad01", "node_type": "1", "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f1ec2b65fad533b2f929f4d01523e07cc2e0ab2a3c36e63af820fa8db178f582", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "282bafe0-723c-46c1-81ed-c5d6c9854999", "node_type": "1", "metadata": {}, "hash": "3b324296aa4c64bad9f4c373e6fa1308aef65a23ddf1c60f0a539ac80e2d770d", "class_name": "RelatedNodeInfo"}}, "text": "BLINK Clause  \n1. The BLINK  clause  modifies the visual appearance of the displayed field by making the field \ncontents blink.  The manner in which the blinking is accomplished will vary, depending upon \nthe \u201ccurses\u201d package built into the GNU COBOL  implementation you\u2019re using, as wel l as the \nvisual presentation capabilities of the command window shell you\u2019re using.  The Windows console , for example,  \ndoes not support blinking, so the visual effect of BLINK  in a native  Windows or MinGW version of GNU COBOL  is \nto elevate the  BACKGROUND -COLOR  intensity (normally low) to high intensity .   \n2. See Figure 5-12.for the GNU COBOL  color palette .  The \u201cHIGHLIGHT\u201d column shows the effe ct the BLINK clause \nwill have on BACKGROUND -COLOR  when running within a Windows console window.  \n5.2.2.7.  ", "start_char_idx": 1125, "end_char_idx": 1937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "282bafe0-723c-46c1-81ed-c5d6c9854999": {"__data__": {"id_": "282bafe0-723c-46c1-81ed-c5d6c9854999", "embedding": null, "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38cd6045-a758-4735-82bb-225459cc76ee", "node_type": "4", "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f2ca2b09ad1197268df8476be52afdbb6daba2c86f52e589f9a4c70a438545f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df940fd3-0b18-4a78-bf06-a8d65c422922", "node_type": "1", "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b7763921fd0e0e4dc7b75ab8ccf81727d53e96d69deeef880686bc42c4085bce", "class_name": "RelatedNodeInfo"}}, "text": "COLUMN Clause  \n1. The COLUMN  clause provide s a means of \nexplicitly stating in which column a field \nshould be presented on the console window  \n(it\u2019s l ine location will be determined by the \nLINE  clause) .   \n2. You may abbreviate COLUMN  as COL. \n3. The value of integer -2 must be 1 or greater.  \n4. If identifier -3 is used  to specify either an absolute or relative column position, identifier -3 must be defined as a PIC \n9 item without editing symbols .  The value of identifier -3 at the time the screen data item is presented must be 1 \nor greater.  \n5. Any numeric USAGE  is allowed for identifier -3 except for COMPUTATIONAL -1 or COMPUTATIONAL -2.  Note that  \neither of these floating -point USAGE  specifications will be accepted, but will produce unpredictable results.  \n6. Coordinates may be stated on an absolute basis (i.e. \u201c COLUMN 5 \u201d) or on a relative basis based upon the end of \nthe previously -presented field (i.e . \u201cCOLUMN PLUS 1 \u201d). \n7. The symbol \u201c+\u201d may be used in lieue of the word PLUS , if desired; if \u201c+\u201d is used  in combination with integer -2, \nhowever, there must be at least one space separating it from integer -2.  Failure to include this space will cause \n[BELL|BEEP]\nLINE\nSCREEN[ BLANK ]\n[ COLUMN NUMBER IS [ PLUS| + ]            ]integer -2\nidentifier -3\nBLANKWHEN ZERO\n[ BLINK]", "start_char_idx": 1937, "end_char_idx": 3263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fad1b8ee-881b-4ebd-b2d5-bdcd8aa629c5": {"__data__": {"id_": "fad1b8ee-881b-4ebd-b2d5-bdcd8aa629c5", "embedding": null, "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe", "node_type": "4", "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17354cfd77a2c3cb29bf498199ffd6132f9a131802101bc6077f345ee0195ef9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b047a9aa-ff56-4208-bff6-4fa756ca94fb", "node_type": "1", "metadata": {}, "hash": "09048825973c3578409bbb4a079ccf007c31bfca4d5c66802ca16db0cf9b1b84", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-23 the \u201c+\u201d si gn to be simply treated as part of integer -2 and will treat the COLUMN  clause as an absolute column \nspecification rather than a relative one.  \n8. If a screen data items description includes the FROM , TO, USING  or VALUE  clause but has no COLUMN  clause, \n\u201cCOLUMN PLUS 1 \u201d will be assumed.  \n5.2.2.8.  ERASE EOL and ERASE EOS Clause s \n1. The ERASE  EOS clause will blank -out screen contents from the location where the \nscreen data item whose description contains this clause will be displayed, forward until \nthe end of the screen prior to displaying this screen data item.  \n2. The ERASE  EOL clause will blank -out screen contents from the location where the \nscreen data item whose description contains this clause will be displayed, forward until the end of that  screen line \nprior to displaying this screen data item.  \n3. Erased - areas will have their foreground and background colors set to the attributes of the field containing the \nERASE  clause.  \n4. This clause is useful when one SCREEN SECTION  item is being DISPLAY ed ove r the top of a previously -DISPLAY ed \none.  \n5.2.2.9.  FOREGROUND -COLOR Clause  \n1. The FORE GROUND -COLOR  clause is used to specify the \ntext color of the screen data item or the default text color \nof subordinate items if FORE GROUND -COLOR  is used on a \ngroup item .  You specify colors by number (0 -7), or by \nusing the constant names provided in the \u201cscreenio.cpy\u201d copybook (which is provided with all GNU COBOL  source \ndistributions).  \n2. FORE GROUND -COLOR  values  are inheritable from previous  fields  - they are not inherited from the prior field \nencountered but rather from parent data items (data items with numerically lower level numbers).   \n3. See Figure 5-12.for the GNU COBOL  color palette . \n5.2.2.10.  ", "start_char_idx": 0, "end_char_idx": 1868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b047a9aa-ff56-4208-bff6-4fa756ca94fb": {"__data__": {"id_": "b047a9aa-ff56-4208-bff6-4fa756ca94fb", "embedding": null, "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe", "node_type": "4", "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17354cfd77a2c3cb29bf498199ffd6132f9a131802101bc6077f345ee0195ef9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fad1b8ee-881b-4ebd-b2d5-bdcd8aa629c5", "node_type": "1", "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b759a88462925f17241c7f893bda66a554856e854acabcce14fcf353172f3ef0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f66b7df8-e3ee-4505-a023-f73fb7a9ed53", "node_type": "1", "metadata": {}, "hash": "0fb971c7806e79261d60e424d399baed48aebb9057d9b90cc0cb4f036b87fae7", "class_name": "RelatedNodeInfo"}}, "text": "FROM, TO and USING Clauses  \n1. The FROM  clause is used to define a field whose contents should come \nfrom the specified literal or identifier.  \n2. The TO clause is used to define a data -entry field with no initial value; \nwhen a value is entered, it will be saved to the specified identifier.  \n3. The USING  clause is a combination of \u201c FROM  identifier -6\u201d and \u201c TO \nidentifier -6\u201d. \n5.2.2.11.  ", "start_char_idx": 1868, "end_char_idx": 2269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f66b7df8-e3ee-4505-a023-f73fb7a9ed53": {"__data__": {"id_": "f66b7df8-e3ee-4505-a023-f73fb7a9ed53", "embedding": null, "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe", "node_type": "4", "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17354cfd77a2c3cb29bf498199ffd6132f9a131802101bc6077f345ee0195ef9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b047a9aa-ff56-4208-bff6-4fa756ca94fb", "node_type": "1", "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eb2ff27d4493796c5cb5781a8a3a3ac03a36f21c28ea721da9db28c8912a6210", "class_name": "RelatedNodeInfo"}}, "text": "FULL | LENGTH -CHECK Clause  \n1. The FULL  or LENGTH -CHECK clause forces the user to enter data into the \nfield it is specified on (or into all subordinate input -capable fields if \nspecified on a group item) sufficient to fill every  character position of the field.  In order to take effect, the user \nmust move the cursor into the field having the FULL /LENGTH -CHECK  clause in its definition.  The ACCEPT  \nstatement will ignore the Enter key and any other cursor -moving keystrokes that would cause the cursor to move \nto another screen item unless the proper amount of data has been entered into the field.  Function keys will still \nbe allowed to terminate the ACCEPT , however.  In order to be functional, this attribute must be supported by the \nunderlying \u201ccurses\u201d package your GNU COBOL  package was built with.  As of this time, the PDCurses package \n(used for native Windows or MinGW builds) does  not support FULL /LENGTH -CHECK . \n[ ERASE ]EOL\nEOS\n[ FULL| LENGTH-CHECK]\n[ FOREGROUND -COLORIS             ]integer -3\nidentifier -4\nFROM\nTO\nUSINGliteral -1\nidentifier -5\nidentifier -6", "start_char_idx": 2269, "end_char_idx": 3367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3011061-df16-4446-9d53-966433b10dc4": {"__data__": {"id_": "c3011061-df16-4446-9d53-966433b10dc4", "embedding": null, "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "734ec8ee-a25a-497b-9218-b70c189de4e3", "node_type": "4", "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f2d2dd11e956ecb8c13db80ba1e232585118a91fb88ffef0686856357ce8d822", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d8acc0a-0d20-4862-9220-2404a0da4ad5", "node_type": "1", "metadata": {}, "hash": "187ec47e18e763825d9746a8ca76d565c6cc494de5c46fb0e96a0c33f976aea8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-24 See Also\u2026  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \n  \n5.2.2.12.  HIGHLIGHT and LOWLIGHT Clauses  \n1. The HIGHLIGHT  and LOWLIGHT  clauses  control the intensity of text ( FOREGROUND -\nCOLOR ).  This is intended to provide a three -level intensity scheme ( LOWLIGHT  \u2026 \nnothing  (Normal) \u2026 HIGHLIGHT ).  In environments such as a Windows console where \nonly two levels of intensity are supported, LOWLIGHT  is the same as leavi ng this \nclause off altogether.  \n2. See Figure 5-12.for the GNU COBOL  color palette  and the effect the HIGHTLIGHT clause has on it in 2 -level \nintensity environment s such as Windows.  \n5.2.2.13.  ", "start_char_idx": 0, "end_char_idx": 712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d8acc0a-0d20-4862-9220-2404a0da4ad5": {"__data__": {"id_": "5d8acc0a-0d20-4862-9220-2404a0da4ad5", "embedding": null, "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "734ec8ee-a25a-497b-9218-b70c189de4e3", "node_type": "4", "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f2d2dd11e956ecb8c13db80ba1e232585118a91fb88ffef0686856357ce8d822", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3011061-df16-4446-9d53-966433b10dc4", "node_type": "1", "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "202aa98a5473724f41cb3c3a6823062b5815640d014adc24ae93ede2ef5774a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c880062-31d3-4e09-bee7-3fff90468af8", "node_type": "1", "metadata": {}, "hash": "81bffe146975dbb2d78b3d738c0a08f2cadc421bd6608afcca568940da961074", "class_name": "RelatedNodeInfo"}}, "text": "JUSTIFIED Clause  \n1. The JUSTIFIED RIGHT  clause, valid only on an alphabetic ( PIC A ) or alphanumeric ( PIC \nX) data item, will cause values shorter than the length of the data item to be right -\njustified and space -filled when they are transferred  into the screen data item via the \nFROM  or USING  clause (the default behavior is to left-justify and space fill).  \n2. The word JUSTIFIED  may be abbreviated as JUST . \n5.2.2.14.  LEFTLINE , OVERLINE and UNDERLINE  Clause s \n1. The LEFTLINE , OVERLINE  and UNDERLINE  clauses will introduce a horizontal line at the \nleft, top or bottom edge of a screen field, respectively.  \n2. These clauses may be used in any combination in a single field\u2019s description.  \n3. These clauses are essentially non -functional when used within Windows command shell \n(cmd.exe) environments;  those video attributes are not currently supported  by the \nWindows console window API.  \n4. Whether or not these clauses operate on Cygwin or UNIX /Linux  systems will depend upon the video attribute  \ncapabilities  of the terminal output drivers  being used.  \n5.2.2.15.  LINE Clause  \n1. The LINE  clause provide s a means of explicitly \nstating on which line a field should be presented \non the console window  (it\u2019s column locat ion will \nbe determined by the COLUMN  clause) .   \n2. ", "start_char_idx": 712, "end_char_idx": 2031, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c880062-31d3-4e09-bee7-3fff90468af8": {"__data__": {"id_": "2c880062-31d3-4e09-bee7-3fff90468af8", "embedding": null, "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "734ec8ee-a25a-497b-9218-b70c189de4e3", "node_type": "4", "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f2d2dd11e956ecb8c13db80ba1e232585118a91fb88ffef0686856357ce8d822", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d8acc0a-0d20-4862-9220-2404a0da4ad5", "node_type": "1", "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "68e8d59ddc02843cde769522944d61bd41d0fe48a6dc3168a9adfe189821bf84", "class_name": "RelatedNodeInfo"}}, "text": "The value of integer -4 must be 1 or greater.  \n3. If identifier -7 is used  to specify either an absolute or relative column position, identifier -7 must be defined as a PIC \n9 item without editing symbols .  The value of identifier -7 at the time the screen data item is presented must be 1 \nor greater.  \n4. Any numeric USAGE is allowed for identifier -7 except for COMPUTATIONAL -1 or COMPUTATIONAL -2.  Note that \neither of these floating -point USAGE  specifications wil l be accepted, but will produce unpredictable results.  \n5. Coordinates may be stated on an absolute basis (i.e. \u201c COLUMN 5 \u201d) or on a relative basis based upon the end of \nthe previously -presented field (i.e. \u201c COLUMN PLUS 1 \u201d). \n6. The symbol \u201c+\u201d may be used in lieue of the word PLUS , if desired; if \u201c+\u201d is used  in combination with integer -4, \nhowever, there must be at least one space separating it from integer -4.  Failure to include this space will cause \nthe \u201c+\u201d sign to be simply treated as part of integer -4 and will tr eat the LINE  clause as an absolute line specification \nrather than a relative one.  \n[ LEFTLINE ]\n[ OVERLINE ]\n[UNDERLINE ]\n[ LINENUMBER IS [ PLUS| + ]            ]integer -4\nidentifier -7\nHIGHLIGHT\nLOWLIGHT[ ]\nJUSTIFIED RIGHT", "start_char_idx": 2031, "end_char_idx": 3270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2073834d-f536-4833-ad59-f863ec0aef8d": {"__data__": {"id_": "2073834d-f536-4833-ad59-f863ec0aef8d", "embedding": null, "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022", "node_type": "4", "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d94bca1c67795ce86ec248eb47f33086fa3ab17f30f5ebacb58d075e586ead91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d154734-b071-46e0-bb94-b26622a3ef7c", "node_type": "1", "metadata": {}, "hash": "914c5b44f98d3910644350b6334df25288b9f5534875a2770f11e60ea9cec5b8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-25 7. If a screen data items description includes the FROM , TO, USING  or VALUE  clause but has no LINE  clause, the \n\u201ccurrent screen line\u201d  will be assumed.  \n5.2.2.16.  OCCURS Clause  \n1. An OCCURS  clause can be used to repeat screen field definitions.  It may \nbe used on either elementary or group data items.  \n2. If an identifier -1 was included in the description of the data item \ncontaining the OCCURS  clause, references to identifier -1 will need to be subscripted.  \n5.2.2.17.  ", "start_char_idx": 0, "end_char_idx": 566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d154734-b071-46e0-bb94-b26622a3ef7c": {"__data__": {"id_": "4d154734-b071-46e0-bb94-b26622a3ef7c", "embedding": null, "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022", "node_type": "4", "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d94bca1c67795ce86ec248eb47f33086fa3ab17f30f5ebacb58d075e586ead91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2073834d-f536-4833-ad59-f863ec0aef8d", "node_type": "1", "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37171513e2ef69bfd36965726c04862d2937a8c899ee0d1e6c6ce74c65a659f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62007527-e2b3-486a-9a12-5d565536440f", "node_type": "1", "metadata": {}, "hash": "0332298d5ec0794cf90118bdeb207f732d5e650c9526a8e26914aef9ae900004", "class_name": "RelatedNodeInfo"}}, "text": "PICTURE Clause  \n1. The PICTURE  clause specifies the type (A=Alphabetic, 9=Numeric, \nX=Alphanumeric) and size of a screen field.  \n2. If the screen data item whose description contains the PICTURE clause is an input field (meaning its defi nition \nincludes either the TO or USING  clause), the type specified by the PICTURE  (A or 9) will be enforced on the user.  \nFor example, if the PICTURE  is 9, only numeric characters (digits, decimal point, sign) will be accepted.  If the \nPICTURE  is A, only l etters and spaces will be accepted.  \n3. If a screen data item does not have a PICTURE  clause, its size will be inferred from the literal or identifier \nassociated with the field via a FROM , TO or USING  clause.  If there is no such clause, then length will be in ferred \nfrom the VALUE  clause.  If there is no VALUE  clause, the screen data item will be treated as a group item (if data \nitems that follow have a higher level number) or an elementary item of length 0 (if data items that follow have a \nsmaller or equal level number).  \n5.2.2.18.  PROMPT Clause  \n1. This clause defines the character that will be used as \nthe fill -character for any input fields on the screen.  \n2. The default character , should no CHARACTER  \nspecification be coded, or should the PROMPT  clause \nbe absent altogether, is an underscore (\u201c_\u201d).  \n3. PROMPT character s will be aut omatically transformed into SPACES upon input.  \n5.2.2.19.  REQUIRED | EMPTY -CHECK Clause  \n1. The REQUIRED  or EMPTY -CHECK  clauses force the user to enter data \ninto the field it is specified on (or into all subordinate input -capable \nfields if REQUIRED /EMPTY -CHECK  is specified on a group item).  In \norder to take effect, the user must move the cursor into the field having the REQUIRED /EMPTY -CHECK  clause in \nits definition.  The ACCEPT  statement will ignore the Enter key and any other cursor -moving keystrokes that \nwould cause the cursor to move to another screen item unless data has been entered into the field.  Function \nkeys will still be allowed to terminate the ACCEPT , however.  In order to be functional, this attribute must be \nsupported b y the underlying \u201ccurses\u201d package your GNU COBOL  package was built with.  As of this time, the \nPDCurses package (used for native Windows or MinGW builds) does  not support REQUIRED /EMPTY -CHECK . \nSee Also\u2026  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \n  \n5.2.2.20.  ", "start_char_idx": 566, "end_char_idx": 2983, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62007527-e2b3-486a-9a12-5d565536440f": {"__data__": {"id_": "62007527-e2b3-486a-9a12-5d565536440f", "embedding": null, "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022", "node_type": "4", "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d94bca1c67795ce86ec248eb47f33086fa3ab17f30f5ebacb58d075e586ead91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d154734-b071-46e0-bb94-b26622a3ef7c", "node_type": "1", "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "366b00c27f3db4f956759b765aa01add056ae08916ac1d2a04946cb9ac49d825", "class_name": "RelatedNodeInfo"}}, "text": "REVERSE -VIDEO Clause  \n1. The REVERSE -VIDEO  attribute reverses the meaning of the specified or implied \nFOREGROUND -COLOR  and BACKGROUND -COLOR  attributes  for the field (or all \nsubordinate fields if used on a group item) . \n[ REQUIRED | EMPTY-CHECK]\n[ REVERSE-VIDEO]\n[ PICTURE picture -string]\n[ OCCURS integer -1TIMES]\n[PROMPT[ CHARACTER IS ] ]literal -2\nidentifier -8", "start_char_idx": 2983, "end_char_idx": 3359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c107b52-f97c-442e-a2a3-dfe1aa6e703b": {"__data__": {"id_": "9c107b52-f97c-442e-a2a3-dfe1aa6e703b", "embedding": null, "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d", "node_type": "4", "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa0726b6e19c4dcb41981d9fa0f94eea7cf202d04d28f405fc2f59cc05615a11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f661e17-8bc8-44ac-8d5d-ffe3a071296e", "node_type": "1", "metadata": {}, "hash": "ace772b486c129501cb618a2645b2c2ef4692905d004902c53bcf69d87fb85a3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-26 5.2.2.21.  SECURE | NO -ECHO Clause  \n1. The SECURE  or NO-ECHO  clause (they are synonymous with each other)  may \nonly be used on a field allowing data entry ( USING  or TO).  This attribute will \ncause all data entered into the field to appear as asterisks.  \n5.2.2.22.  ", "start_char_idx": 0, "end_char_idx": 351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f661e17-8bc8-44ac-8d5d-ffe3a071296e": {"__data__": {"id_": "3f661e17-8bc8-44ac-8d5d-ffe3a071296e", "embedding": null, "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d", "node_type": "4", "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa0726b6e19c4dcb41981d9fa0f94eea7cf202d04d28f405fc2f59cc05615a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c107b52-f97c-442e-a2a3-dfe1aa6e703b", "node_type": "1", "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ae20c68ed05de05509192b56fec725f2741f775727b7702e57a13d76d417237", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "003239ab-620b-41b1-903d-68265a69b7e7", "node_type": "1", "metadata": {}, "hash": "16d74c35b6c7f5323bb39911422ffcad8d80690593213fa4bfe6e9fd7dc529d4", "class_name": "RelatedNodeInfo"}}, "text": "SIGN Clause  \n1. The SIGN  clause  specifies how an \u201cS\u201d \nsymbol (see section) within a PICTURE  \nclause will be interpreted.  Without the \nSEPARATE CHARACTER  option, the sign of \nthe screen data item\u2019s value will be encoded by transforming the last ( TRAILING ) or first (LEADING ) digit . \nIf the SEPARATE CHARACTER  clause is used, then an actual \u201c+\u201d or \u201c -\u201c sign will be inserted into the field\u2019s value as \nthe first ( LEADING ) or last ( TRAILING ) character.   \n2. When SEPARATE CHARACTER  is specified, the \u201c S\u201d symb ol in the data item\u2019s PICTURE  must be counted when \ndetermining the data item\u2019s size.  \nSee Also\u2026  \nDefining Signed Data Items ( SIGN ) 5.2.1.9  \n  \n5.2.2.23.  VALUE Clause  \n1. The VALUE  clause specifies an alphanumeric literal that will appear on \nthe screen at the explicit or implicit line/column position of the screen \ndata item.  \n2. ", "start_char_idx": 351, "end_char_idx": 1218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "003239ab-620b-41b1-903d-68265a69b7e7": {"__data__": {"id_": "003239ab-620b-41b1-903d-68265a69b7e7", "embedding": null, "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d", "node_type": "4", "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa0726b6e19c4dcb41981d9fa0f94eea7cf202d04d28f405fc2f59cc05615a11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f661e17-8bc8-44ac-8d5d-ffe3a071296e", "node_type": "1", "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b8d629894e4329acf3d7de093ae8985f59e8f4274253f03f276f591f6aee8b84", "class_name": "RelatedNodeInfo"}}, "text": "A figurative constant may NOT be supplied as literal -2. \n3. The inclusion of a VALUE  clause into a screen data item\u2019s description overrides any FROM , TO or USING  clause \nthat may be present.  \n4. If there is no PICTURE  clause supplied, the size of the screen data it em will be the length of the literal -2 value.  If \nthere is no PICTURE  clause and the ALL option is specified, the ALL option will be ignored.  \n5. If there is a PICTURE  clause specified along with the VALUE  clause, then the ALL option, if any, will fill the fie ld (up \nto the size specified by the PICTURE ) with repeated instances of literal -2 (including a possible trailing partial \ninstance).  \n5.2.3.  01-Level Constant  Descriptions  \nFigure 5-13 - 01-Level Constant Description Syntax  \n The 01 -level constant is one of four types of \ncompilation -time constants that can be \ndeclared within a program.  The other three \ntypes are CDF >>DEFINE  constants , CDF >>SET  \nconstants  and 78 -level constants . \nThis pa rticular type of constant declaration \nprovides the ability to determine the length of \na data item or the storage size associated with \na particular numeric USAGE  type \u2013 something \nnot possible with the other types of constants.  \n1. The optional IS GLOBAL clause will make the constant\u2019s value available to any nested subprograms.   \n2. Constants defined in this way become undefined once an END PROGRAM  or END FUNCTION  directive is \nencountered in the input source.  \n01 constant -name -1CONSTANT [ IS GLOBAL] \nASBYTE-LENGTH\nLENGTHOFidentifier -1\nusage -name\nliteral -1\nFROM compilation -variable -name -1.\n[ SIGNIS            [ SEPARATE CHARACTER ] ]LEADING\nTRAILING\n[ VALUEIS[ ALL] literal -2]\n[SECURE| NO-ECHO]", "start_char_idx": 1218, "end_char_idx": 2938, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7685b032-465c-4619-925c-cf52ece4837b": {"__data__": {"id_": "7685b032-465c-4619-925c-cf52ece4837b", "embedding": null, "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2", "node_type": "4", "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37d05e2f1ae6abdf6e672681941f6c4609c9c7234b2cb6d630ffa96bf503da9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0cac3f0-0153-446e-9f7a-146f42f69196", "node_type": "1", "metadata": {}, "hash": "df784b8c4168ed42d17486101e5d566b5e11ad1c1278ef1364adcddcde0e48d6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-27 3. Data descriptions of this form do not actually allocate any storage  \u2013 they merely define a name ( constant -name -1) \nthat may be used anywhere a numeric literal ( BYTE -LENGTH  or LENGTH  options) or a literal of the same type as \nliteral -1 may be used.  \n4. The constant -name -1 name may not be r eferenced on a CDF statement.  \n5. Care must be taken that constant -name -1 does not duplicate any other data item name that has been defined in \nthe program as references to that data item name will refer to the constant and not the data item.  The GNU \nCOBOL  com piler will not issue a warning about this condition.  \n6. The value specified for usage -name -1 may be any of the  USAGE s that do not use a PICTURE clause.  \n7. The BYTE -LENGTH  clause will produce a numeric value for constant -name -1 identical to that which would be \nreturned by the BYTE -LENGTH  intrinsic function executed against identifier -1 or a data item declared with a \nUSAGE  of usage -name . \n8. The LENGTH  clause will produce a numeric value for constant -name -1 identical to that which wo uld be returned \nby the LENGTH  intrinsic function executed against identifier -1 or a data item declared with a USAGE  of usage -\nname . \n9. If used, usage -name  may be any of BINARY -C-LONG , BINARY -CHAR , BINARY -DOUBLE , BINARY -LONG , BINARY -\nSHORT , COMP -1 (or COMPUTATIO NAL -1), COMP -2 (or COMPUTATIONAL -2), FLOAT -DECIMAL -16, FLOAT -\nDECIMAL -34, FLOAT -LONG , FLOAT -SHORT , POINTER , or PROGRAM -POINTER . \nHere is the listing of a GNU COBOL  program that uses 01 -level constants to DISPLAY the length (in bytes) of the various \nPICTURE -less USAGE types.  \n       IDENTIFICATION DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 1777, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0cac3f0-0153-446e-9f7a-146f42f69196": {"__data__": {"id_": "d0cac3f0-0153-446e-9f7a-146f42f69196", "embedding": null, "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2", "node_type": "4", "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37d05e2f1ae6abdf6e672681941f6c4609c9c7234b2cb6d630ffa96bf503da9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7685b032-465c-4619-925c-cf52ece4837b", "node_type": "1", "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fb9877a84636d29b80c2f96cfe7c955a8c46c3e91d4f80e9f549b01b5a779030", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67bbf578-2c5d-40b5-be0d-eb71d2326a28", "node_type": "1", "metadata": {}, "hash": "43887979a5eff67cc22d121657a729fadc762358aedea1d1046a8179ef3886f3", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. USAGELengths.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Len-BINARY-C-LONG    CONSTANT AS LENGTH OF BINARY -C-LONG. \n       01  Len-BINARY-CHAR      CONSTANT AS LENGTH OF BINARY -CHAR. \n       01  Len-BINARY-DOUBLE    CONSTANT AS LENGTH OF BINARY -DOUBLE. \n       01  Len-BINARY-LONG      CONSTANT AS LENGTH OF BINARY -LONG. \n       01  Len-BINARY-SHORT     CONSTANT AS LENGTH OF BINARY -SHORT. \n       01  Len-COMP-1           CONSTANT AS LENGTH OF COMP -1. \n       01  Len-COMP-2           CONSTANT AS LENGTH OF COMP -2. \n       01  Len-FLOAT-DECIMAL-16 CONSTANT AS LENGTH OF FLOAT -DECIMAL-16. \n       01  Len-FLOAT-DECIMAL-34 CONSTANT AS LENGTH OF FLOAT -DECIMAL-34. \n       01  Len-FLOAT-LONG       CONSTANT AS LENGTH OF FLOAT -LONG. \n       01  Len-FLOAT-SHORT      CONSTANT AS LENGTH OF FLOAT -SHORT. \n       01  Len-POINTER          CONSTANT AS LENGTH OF POINTER.  \n       01  Len-PROGRAM-POINTER  CONSTANT AS LENGTH OF PROGRAM -POINTER.  \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 1777, "end_char_idx": 2801, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67bbf578-2c5d-40b5-be0d-eb71d2326a28": {"__data__": {"id_": "67bbf578-2c5d-40b5-be0d-eb71d2326a28", "embedding": null, "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2", "node_type": "4", "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37d05e2f1ae6abdf6e672681941f6c4609c9c7234b2cb6d630ffa96bf503da9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0cac3f0-0153-446e-9f7a-146f42f69196", "node_type": "1", "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfcbc8e03fffc7a781ef0fcdd8cd785cad7e3093c543ce13e883f06659fecbee", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n           DISPLAY \"On this system, with this build of GNU COBOL , the\" \n           DISPLAY \"PICTURE -less USAGEs have these lengths  (in bytes):\"  \n           DISPLAY \" \"  \n           DISPLAY \"BINARY -C-LONG:    \" Len -BINARY-C-LONG    \n           DISPLAY \"BINARY -CHAR:      \" Len -BINARY-CHAR            \n           DISPLAY \"BINARY -DOUBLE:    \" Len -BINARY-DOUBLE    \n           DISPLAY \"BINARY -LONG:      \" Len -BINARY-LONG            \n           DISPLAY \"BINARY -SHORT:     \" Len -BINARY-SHORT     \n           DISPLAY \"COMP -1:           \" Len -COMP-1                 \n           DISPLAY \"COMP -2:           \" Len -COMP-2           \n           DISPLAY \"FLOAT -DECIMAL-16: \" Len -FLOAT-DECIMAL-16       \n           DISPLAY \"FLOAT -DECIMAL-34: \" Len -FLOAT-DECIMAL-34 \n           DISPLAY \"FLOAT -LONG:       \" Len -FLOAT-LONG             \n           DISPLAY \"FLOAT -SHORT:      \" Len -FLOAT-SHORT      \n           DISPLAY \"POINTER:          \" Len-POINTER                \n           DISPLAY \"PROGRAM -POINTER:  \" Len -PROGRAM-POINTER  ", "start_char_idx": 2801, "end_char_idx": 3851, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "642a1e57-460f-4958-83cd-a6c5dcfa09be": {"__data__": {"id_": "642a1e57-460f-4958-83cd-a6c5dcfa09be", "embedding": null, "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b448c3b1-c3cf-4092-81c2-c51818539ad8", "node_type": "4", "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c8635ae412a6d883122ffc42776bd460cad81e911018dd020684f86cbd1bd6f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3615cbe-932f-4daa-b2f4-4b6d0d11580a", "node_type": "1", "metadata": {}, "hash": "cb0facd26a85064a3ee7606fbfdd3b4cafef82ae13a847c0cd6f117371b759a5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-28            STOP RUN  \n           . \nThe output of this program, on my Windows 7 system with a 32 -bit MinGW build of GNU COBOL  is: \nOn this system, with this build of GNU COBOL , the \nPICTURE-less USAGEs have these lengths (in bytes):  \n \nBINARY-C-LONG:    4  \nBINARY-CHAR:      1  \nBINARY-DOUBLE:    8  \nBINARY-LONG:      4  \nBINARY-SHORT:     2  \nCOMP-1:           4  \nCOMP-2:           8  \nFLOAT-DECIMAL-16: 8 \nFLOAT-DECIMAL-34: 16 \nFLOAT-LONG:       8  \nFLOAT-SHORT:      4  \nPOINTER:          4  \nPROGRAM-POINTER:  4  \nSee Also\u2026  \nNested Subprograms  7.6 \nThe CDF >>DEFINE  Statement  2.2.1  \nThe CDF >>SET  Statement  2.2.3  \nStorage Format of Data ( USAGE ) 5.2.1.11  \n Defining Level 78 Constants  5.2.6  \nThe BYTE -LENGTH  Intrinsic Function  6.1.14.6  \nThe LENGTH  Intrinsic Function  6.1.14.31  \n \n5.2.4.  66-Level Data Descriptions  (RENAMES)  \nFigure 5-14 - 66-Level Data Description  Syntax  \n A 66 -level data item regroups previously defined \nitems by specifying alternative, possibly \noverlapping, groupings of elementary data \nitems.  \n", "start_char_idx": 0, "end_char_idx": 1132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3615cbe-932f-4daa-b2f4-4b6d0d11580a": {"__data__": {"id_": "f3615cbe-932f-4daa-b2f4-4b6d0d11580a", "embedding": null, "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b448c3b1-c3cf-4092-81c2-c51818539ad8", "node_type": "4", "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c8635ae412a6d883122ffc42776bd460cad81e911018dd020684f86cbd1bd6f7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "642a1e57-460f-4958-83cd-a6c5dcfa09be", "node_type": "1", "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2c2684934c8f7d5c0cd002fbeaf6062dc138c0a4087f7dd9c7acb95ea03149da", "class_name": "RelatedNodeInfo"}}, "text": "1. You must use the level number 66 for data description entries that contain the RENAMES  clause.  \n2. A level -66 data item  cannot rename a level -66, level -01, level -77, or level -88 data item .   \n3. The identifier -2 and identifier -3 data items, along with all data it ems defined between those two data items in the \nprogram source, must all be contained within the same 01 -level record description.  \n4. There may be multiple level -66 data items that rename data items contained within the same 01-level record \ndescription . \n5. All RENAMES  entries associated with one logical record must immediately follow that record's last data \ndescription entry.  \n5.2.5.  77-Level Data Descriptions  \n1. A 77 -level data item is one described using the syntax covered in section  where all of the following are true:  \na. The level -number  used is 77 . \nb. The data item is described in the WORKING -STORAGE , LOCAL -STORAGE  or LINKAGE  SECTION . \nc. The data item is not named FILLER . \nd. The data item is an elementary item . \ne. The data item is not part of any group item . \nf. The data item description does not contain the OCCURS  or RENAMES  clause.  \n66 identifier -1RENAMES identifier -2[ THRU identifier -3].", "start_char_idx": 1132, "end_char_idx": 2358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e178afc5-d73a-4157-9cb8-5fcfdf0439f1": {"__data__": {"id_": "e178afc5-d73a-4157-9cb8-5fcfdf0439f1", "embedding": null, "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37399807-0717-4acf-9a96-72e87cd2dae9", "node_type": "4", "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49a303138ef2634b9c6dbbcaddb985eddcdc7850849c5cf9737d82066635341b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74d5501f-65c9-45ae-b0a5-b6b597de34c8", "node_type": "1", "metadata": {}, "hash": "e7a01aa4a0580052da6a080a304008fef7e29b697cbcfc382f0fdd9d27ebe06f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DATA DIVISION  \n \n11FEB2012 Version   5-29 See Also\u2026  \nDefining Data Items  5.2 \n  \n5.2.6.  78-Level Constant Descriptions  \nFigure 5-15 - 78-Level Constant Description Syntax  \n The 78 -level constant is one of four types of compilation -time \nconstants that can be declared within a program.  The other three \ntypes are CDF >>DEFINE  constants , CDF >>SET  constants  and 01 -level \nconstants . \n", "start_char_idx": 0, "end_char_idx": 432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74d5501f-65c9-45ae-b0a5-b6b597de34c8": {"__data__": {"id_": "74d5501f-65c9-45ae-b0a5-b6b597de34c8", "embedding": null, "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37399807-0717-4acf-9a96-72e87cd2dae9", "node_type": "4", "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49a303138ef2634b9c6dbbcaddb985eddcdc7850849c5cf9737d82066635341b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e178afc5-d73a-4157-9cb8-5fcfdf0439f1", "node_type": "1", "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b1148bd98ebc9afaec94c85ae207d7a861da38817d01e61c49bc497054e9d0e0", "class_name": "RelatedNodeInfo"}}, "text": "1. Constants defined in this way become undefined o nce an END PROGRAM  or END FUNCTION  directive is \nencountered in the input source.  \nSee Also\u2026  \nThe CDF >>DEFINE  Statement  2.2.1  \nThe CDF >>SET  Statement  2.2.3  \n Defining Level -01 Constants  5.2.3  \n \n5.2.7.  88-Level Condition Names  \nFigure 5-16 - 88-Level Condition Name  Synta s \n Condition names are \nBoolean (i.e. \u201cTRUE\u201d / \n\u201cFALSE\u201d) data items that \nreceive their TRUE and \nFALSE values based upon \nthe values of other data \nitems.  \n1. Condition names are always defined subordinate to another data item.  That data item must be an elementary \nitem . \n2. Condition names do not occupy any storage.  \n3. The VALUE(s) specified for the condition name specify the specific values and/or ranges of values of the parent  \nelementary  data  item  that will cause the condition name to have a value of TRUE.  \n4. The optional FALSE  clause defines an explicit value that will be assigned to the parent  elementary  data  item  \nshould the SET statement ever be used to set the condi tion-name -1 to FALSE.   \nSee Also\u2026  \nCondition Names  6.1.4.2.1  \n The SET condition -name  Statement  6.4.39.6  \n \n \n \n78  identifier -1VALUEIS literal -1.\n88 condition -name -1                                   { literal -1[ THRU literal -2] \u2026 } \u2026\n[ WHEN SET TO FALSEISliteral -3]VALUEIS\nVALUESARE", "start_char_idx": 432, "end_char_idx": 1776, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7b0cdc9-c89b-426f-9c25-f763e99a39e5": {"__data__": {"id_": "a7b0cdc9-c89b-426f-9c25-f763e99a39e5", "embedding": null, "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14", "node_type": "4", "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "796c804e7586ede3d99656572b2c693906107e968161962b5ade229bdd038aff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c444c0f4-d128-4b8c-9ee3-3ad703b03afc", "node_type": "1", "metadata": {}, "hash": "e97d597dc2d187e26632e22fdf2de37269db1bb42d443c911d321efbb2ef5915", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-1 6. PROCEDURE DIVISION  \nThe PROCEDURE DIVISION  of any GNU COBOL  program marks the point where all executable code is written.  \n6.1. General PROCEDURE DIVISION Components  \n6.1.1.  General Format of the PROCEDURE DIVISION  \n \nFigure 6-1 - General PROCEDURE DIVISION Syntax  \n It is in the PROCEDURE DIVISION  that all executable \nprogram code will be placed.  \n \n1. The USING  clause define s arguments that may be passed to a GNU COBOL  program serving as a subprogram.  All \nidentifiers specified on  the USING  clauses must be defined in the LINKAGE SECTION .   \n2. The RETURNING  clause can be used as a means of specifying and documenting a value that a s ubprogram can pass \nback to the program that invoked it.  Main programs that wish to \u201cpass back\u201d a return code value to the operating \nsystem when they exit do so simply by MOVE ing a value to the RETURN -CODE special register, and do not need (or \nuse) a RETUR NING  clause on their PROCEDURE DIVISION  header.  \n3. ", "start_char_idx": 0, "end_char_idx": 1061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c444c0f4-d128-4b8c-9ee3-3ad703b03afc": {"__data__": {"id_": "c444c0f4-d128-4b8c-9ee3-3ad703b03afc", "embedding": null, "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14", "node_type": "4", "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "796c804e7586ede3d99656572b2c693906107e968161962b5ade229bdd038aff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7b0cdc9-c89b-426f-9c25-f763e99a39e5", "node_type": "1", "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17552e52f1b8caf6c9a2ec27bff5972fef4170fd7f8a6ebcb1a809aa77f3b266", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2a0bfac-2f27-4149-8c49-83f389e544c9", "node_type": "1", "metadata": {}, "hash": "a5bc8975475ca9730c13b067a24053753f87ba0828829a907ef030055cd06395", "class_name": "RelatedNodeInfo"}}, "text": "The first (optional) segment of any PROCEDURE DIVISION  is a special area known as \u201c DECLARATIVES \u201d.  In this area, \nyou may define processing routines that are to be used as special \u201ctrap\u201d routines executed only  when certain \nevents occur.   \n4. The various sections and paragraphs in which the procedural logic of your program will be coded will follow any \n\u201cDECLARATIVES \u201d.  These sections and paragraphs are discussed in more detail in section 0. \nSee Also\u2026  \nSpecial Registers  6.1.13  \nSubprogram Argument Definitions  6.1.2  \nUsing DECLARATIVES  6.1.4  \n The MOVE  Statement  6.2.26  \nSub-programming  0 \n \n6.1.2.  General Format for Subprogram Arguments  \nFigure 6-2 - Syntax of a PROCEDURE DIVISION USING Argument  \n \n1. The BY REFERENCE  clause indicates that the program will be passed the address  of the data item corresponding to \na program argument; any changes this program makes to a BY REFERENCE  argument will be passed back to the \ncalling program.  \nPROCEDURE DIVISION\n[ USING argument -1\u2026]\n[ RETURNING identifier -1] .\nDECLARATIVES\n[ declaratives -procedure ] \u2026\nENDDECLARATIVES .\n[ section -name -1SECTION.]\n", "start_char_idx": 1061, "end_char_idx": 2192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2a0bfac-2f27-4149-8c49-83f389e544c9": {"__data__": {"id_": "b2a0bfac-2f27-4149-8c49-83f389e544c9", "embedding": null, "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14", "node_type": "4", "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "796c804e7586ede3d99656572b2c693906107e968161962b5ade229bdd038aff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c444c0f4-d128-4b8c-9ee3-3ad703b03afc", "node_type": "1", "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63d40a52629350b2fe343329a16abd7f26d388186f4d558d4c18bf7c67205011", "class_name": "RelatedNodeInfo"}}, "text": "[ paragraph -name -1. ]\n[ procedural -sentence -1] \u2026\u2026\u2026\nAUTO\nBY [ UNSIGNED ]  SIZEIS   DEFAULT [ OPTIONAL ] identifier -1\ninteger -1REFERENCE\nVALUE", "start_char_idx": 2192, "end_char_idx": 2338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99c450b3-16e7-4ea0-bbb4-ed2183f9aa82": {"__data__": {"id_": "99c450b3-16e7-4ea0-bbb4-ed2183f9aa82", "embedding": null, "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5569b904-e479-4e7c-ae65-5dad142cab85", "node_type": "4", "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f75c9b0fe2c537506a12bc2760857ebe38721bbeee8ee50972b04708557c900a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9adabfab-ba8d-478a-8efb-0b4a16c68388", "node_type": "1", "metadata": {}, "hash": "9c4114ce495b844bd4a1b45609c481bcf8dac89f50cf4957502041955917f891", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-2 2. BY REFERENCE  is the assumed default for the first  USING  argument  should no BY clause be specified for it.   \nSubsequent arguments will assume the \u201cBY\u201d specification of the argument prior to them should they lack a BY \nclause of their own.  \n3. The BY VALUE  clause indicates the program will be passed a copy of the data item from the calling program that \ncorresponds to the argument.  The contents of BY VALUE  arguments can be changed by the subprograms receiving \nthem , but those changes will not \u201cfind their way\u201d b ack to the calling program . \n4. If the calling program passes an argument BY REFERENCE  or BY CONTENT , the subprogram should specify that \nargument as \u201c BY REFERENCE \u201d on its PROCEDURE DIVISION  header.  If the calling program passes an argument BY \nVALUE, the subpr ogram should specify that argument as \u201c BY VALUE \u201d on its PROCEDURE DIVISION  header.  \n5. The various SIZE  clauses specify the size (in bytes) of received BY VALUE  arguments.  The SIZE IS AUTO  clause (the \ndefault) indicates that argument size will be determined automatically based upon the size of the item in the calling \nprogram.  The remaining SIZE  options allow you to force a specific size to be assumed.    \n6. The UNSIGNED  clause will add  \u201cunsigned\u201d to the C -language code generated when defining the argument in the \nfunction header of the C function corresponding to the GNU COBOL  subprogramming.  This is of value when a C \nprogram will be calling this subprogram.  \n", "start_char_idx": 0, "end_char_idx": 1566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9adabfab-ba8d-478a-8efb-0b4a16c68388": {"__data__": {"id_": "9adabfab-ba8d-478a-8efb-0b4a16c68388", "embedding": null, "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5569b904-e479-4e7c-ae65-5dad142cab85", "node_type": "4", "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f75c9b0fe2c537506a12bc2760857ebe38721bbeee8ee50972b04708557c900a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99c450b3-16e7-4ea0-bbb4-ed2183f9aa82", "node_type": "1", "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5baa5ceaccfa639b2898195bdf99bd1a5d19221cde87ba5da08eb33eebb490be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72bc99ac-2008-4a8b-8b0d-3b5aeae80977", "node_type": "1", "metadata": {}, "hash": "c660d77b5b7a203ab086fd0e7ef226630c460646056d7faffbbd27f2e0e02884", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe CALL  Statement  6.4.5  \n Sub-programming  0 \n \n6.1.3.  PROCEDURE  DIVISION Sections and Paragraphs  \nThe PROCEDURE DIVISION  is the only one of the COBOL divisions that allows you to create yo ur own sections and \nparagraphs.  These are collectively referred to as procedure names.  Procedure names are oprtional in the PROCEDURE \nDIVISION  and \u2013 when used \u2013 are named entirel y according to the needs and whims of the programmer.  \nWhen procedure names are defined, the entire collection of GNU COBOL  statements that follow the procedure name \nare collectively referred to as a procedure .  If there are no procedure names defined whatsoever, then the entire set of \nall statements defined within the PROCEDURE DIVISION  constituite a single (unnamed) procedure.  \nProcedure names may be up to thirty one (31) characters long, and may consist of letters, numbers, dashes and \nunderscores , with just one caveat .  A procedure name may neither begin nor end with a dash ( -) or underscore (_) \ncharacter.   This means that \u201c17\u201d is a perfectly valid procedure name.  \nThere are two circumstances under which the use of certain GNU COBOL  statements or options will require  the \nspecification of procedures.  These situations are:  \n1. When  DECLARATIVES  are specified.  These are discussed in section 6.1.4  (\u201cGeneral Format for DECLARATIVES \nProcedures \u201d). \n2. ", "start_char_idx": 1566, "end_char_idx": 2947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72bc99ac-2008-4a8b-8b0d-3b5aeae80977": {"__data__": {"id_": "72bc99ac-2008-4a8b-8b0d-3b5aeae80977", "embedding": null, "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5569b904-e479-4e7c-ae65-5dad142cab85", "node_type": "4", "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f75c9b0fe2c537506a12bc2760857ebe38721bbeee8ee50972b04708557c900a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9adabfab-ba8d-478a-8efb-0b4a16c68388", "node_type": "1", "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2fec2bceb4104fb2e81920b6d8a32d43a065c051b296fd4d07caf93ef500082a", "class_name": "RelatedNodeInfo"}}, "text": "When any PROCEDURE DIVISION statement that references procedures is used.  These statements are:  \n\uf0b7 ALTER  \n\uf0b7 GO TO  \n\uf0b7 MERGE  (with an OUTPUT PROCEDURE ) \n\uf0b7 PERFORM  \n\uf0b7 SORT  (with an INPUT PROCEDURE  and/or an OUTPUT PROCEDURE ) \nSee Also\u2026  \nUser -defined Names  1.10  \nThe ALTER  Statement  6.2.4  \nThe GO TO  Statement  6.2.20  \nThe MERGE  Statement  6.4.25  \n The PERFORM  Statement (Procedural)  6.2.30.1  \nThe SORT  Statement (File Sort)  6.4.40.1  \nUSE Statements and DECLARATIVES  6.1.4  \n \n6.1.4.  General Format for DECLARATIVES Procedures  ", "start_char_idx": 2947, "end_char_idx": 3500, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a38f6c9-cb6b-480f-be4b-f34085c0d9da": {"__data__": {"id_": "2a38f6c9-cb6b-480f-be4b-f34085c0d9da", "embedding": null, "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021", "node_type": "4", "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7830804baf419d93a8985c23a732d9f1ad098ea47bc6de6d1cb197368cb01c88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3638be35-3e8b-4b3f-a513-e7d772f20eab", "node_type": "1", "metadata": {}, "hash": "36ba1576213e2080bfa5427c47a316e39b3fcf8b49fb21b780fa38b67465025c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-3 Figure 6-3 - General DECLARATIVES Procedure Syntax  \n \n1. The DECLARATIVES  area of the PROCEDURE DIVISION  allows the programmer to define a series of \u201ctrap\u201d \nprocedures (referred to as declarative procedures ) capable of intercepting certain events that may occur at \nprogram execution time.  The syntax diagram above shows the format of a single such procedure.  \n2. DECLARATIVES  may contain any number of declarative procedures, but no two declarative procedures should be \ndesigned to trap the same event.  \n3. The USE BEFORE REPORTING  and AFTER EXCEPTION CONDITION  clauses are currently syntactically recognized but \notherwise unsupported.  \n4. The USE FOR DEBUGGING  clause allows you to define a declarative procedure that will be invoked immediately \nbefore:  \na.  The sp ecified identifier is referenced ( REFERENCES OF  \u2026), or \u2026  \nb. The named procedure is executed ( procedure -name -1), or \u2026  \nc. Any procedure is executed ( ALL PROCEDURES ). \nAny USE FOR DEBUGGING  declarative procedures will be ignored at compilation  time unless WITH DEBUG GING \nMODE is specified in the SOURCE -COMPUTER  paragraph.  \nAny USE FOR DEBUGGING  declarative procedures will be ignored at execution  time unless the \u201c COB_SET_DEBUG \u201d \nenvironment variable has been set to a value of \u201cY\u201d, \u201cy\u201d or \u201c1\u201d.   \nThe typical use of a USE F OR DEBUGGING  declarative procedure is to DISPLAY  the DEBUG -ITEM  special register, \nwhich will be implicitly and automatically created in your program for you if WITH DEBUGGING MODE  is active.  \n5. ", "start_char_idx": 0, "end_char_idx": 1612, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3638be35-3e8b-4b3f-a513-e7d772f20eab": {"__data__": {"id_": "3638be35-3e8b-4b3f-a513-e7d772f20eab", "embedding": null, "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021", "node_type": "4", "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7830804baf419d93a8985c23a732d9f1ad098ea47bc6de6d1cb197368cb01c88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a38f6c9-cb6b-480f-be4b-f34085c0d9da", "node_type": "1", "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4203b479e71044d603458c39fc7732494ca0bef9d0bd4b81592ac4ff29ce2a0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96a2534c-45ae-4940-900c-210c0a85c377", "node_type": "1", "metadata": {}, "hash": "b2267fd025d7b6ef89dad7562a0ee3ef2a6511c951d3d94181194a158907fa43", "class_name": "RelatedNodeInfo"}}, "text": "The structure of DEBUG -ITEM  will be as follows:  \n01  DEBUG -ITEM.  \n    05 DEBUG -LINE      PIC X(6) . The program line number of the statement that triggered the \ndeclaratives procedure.  \n    05 FILLER          PIC X(1) VALUE SPACE.   \n    05 DEBUG -NAME      PIC X(31).  The procedure name or identifier name that triggered the  \ndeclaratives procedure.  \n    05 FILLER          PIC X(1) VALUE SPACE.   \n    05 DEBUG -SUB-1     PIC S9(4)  \n                       SIGN LEADING SEPARATE.  The first subscript value (if any) for the reference of the identifier \nthat triggered the declaratives procedure.  \n    05 FILLER          PIC X(1) VALUE SPACE.   \n    05 DEBUG -SUB-2     PIC S9(4)  \n                       SIGN LEADING SEPARATE.  The second subscript value (if any) for the reference of the identifier \nthat triggered the declaratives procedure.  \n    05 FILLER          PIC X(1) VALUE SPACE.   \n    05 DEBUG -SUB-3     PIC S9(4)  \n                       SIGN LEADING SEPARATE.  The third subscript value (if any) for the reference of the identifier \nthat triggered the declaratives procedure.  \n    05 FILLER          PIC X(1) VALUE SPACE.   \n", "start_char_idx": 1612, "end_char_idx": 2767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96a2534c-45ae-4940-900c-210c0a85c377": {"__data__": {"id_": "96a2534c-45ae-4940-900c-210c0a85c377", "embedding": null, "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021", "node_type": "4", "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7830804baf419d93a8985c23a732d9f1ad098ea47bc6de6d1cb197368cb01c88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3638be35-3e8b-4b3f-a513-e7d772f20eab", "node_type": "1", "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1f47eb3b340efa61d63875d9dd527e079b4e9275ebf13787e54bdf6a3b4c09b3", "class_name": "RelatedNodeInfo"}}, "text": "section -name -1SECTION.\n[ GLOBAL] AFTER STANDARD              PROCEDURE ON\nFOR DEBUGGING ON\n[ GLOBAL] BEFOREREPORTING identifier -2\nAFTER\n{[ paragraph -name -1] sentence -1\u2026 }\u2026INPUT\nOUTPUT\nI-O\nEXTEND\nfile-name -1\u2026EXCEPTION\nERROR\nALLPROCEDURES\nREFERENCES OF identifier -1\nprocedure -name -1\nEXCEPTION CONDITION\nECUSE", "start_char_idx": 2767, "end_char_idx": 3083, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b99078c-7f4b-48bb-892a-fc1ec83d77e9": {"__data__": {"id_": "0b99078c-7f4b-48bb-892a-fc1ec83d77e9", "embedding": null, "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9931a92f-9e59-42f3-a728-780def1247b1", "node_type": "4", "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4774c5574aceabd64b5e08459d7462611104ca376e3b320cd4e471fb99c17732", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa", "node_type": "1", "metadata": {}, "hash": "9e6259c2ac58e6aeecd0794745717f62ddf407775f92975da0cc860abf82db0c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-4     05 DEBUG -CONTENTS  PIC X(31).  A (brief) statement of the manner in which the procedure that \ntriggered the declaratives procedure was executed or the first 31 \ncharacters of the value of the identifier whose  reference triggered \nthe declaratives procedure (the value after  the statement was \nexecuted).  \n", "start_char_idx": 0, "end_char_idx": 394, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa": {"__data__": {"id_": "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa", "embedding": null, "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9931a92f-9e59-42f3-a728-780def1247b1", "node_type": "4", "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4774c5574aceabd64b5e08459d7462611104ca376e3b320cd4e471fb99c17732", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b99078c-7f4b-48bb-892a-fc1ec83d77e9", "node_type": "1", "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ee169fbfedd70aec64a9189ad45ad38e31312c61237e2d55603201b33ce57a05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51b90cfb-ea71-43a8-a43e-41394e24a067", "node_type": "1", "metadata": {}, "hash": "45a0abf723a75fd0dc786e27696f0094d0f9e9e109bdfe0f549b1687bba1d69f", "class_name": "RelatedNodeInfo"}}, "text": "6. The USE AFTER STANDARD ERROR PROCEDURE  clause defines a declarative procedure  invoked any time a failure is \nencountered with the specified I/O type (or against the specified file(s) ). \n7. The GLOBAL  option, if used, allows a declarative  procedure to be used across all program s in the same compilation \ngroup . \n8. Declarative p rocedures  outines (of any type) may not reference any other procedures defined outside the scope of \nDECLARATIVES . \nSee Also\u2026  \nThe SOURCE -COMPUTER  Paragraph  4.1.1  \nSpecial Registers  6.1.13  \n Using DECLARATIVES  6.1.4  \nExecution -time Environment Variables  8.2.4  \n \n6.1.5.  Table References  \nCOBOL uses parenthesis to specify the subscripts  used to reference table entries (tables in COBOL are what other \nprogramming languages refer to as arrays).  \nFor example, observe the following data structure which simulates a 4 column by 3 row grid of characters:  \n01  GRID.  \n     05 GRID-ROW OCCURS 3 TIMES.  \n        10 GRID-COLUMN OCCURS 4 TIMES.  \n            15 GRID-CHARACTER       PIC X(1).  \nA reference to the GRID -CHARACTER  shaded in the following diagram:  \n    \n    \n    \nWould be coded as:  \nGRID -CHARACTER (2, 3)  \nSubscripts may be specified as numeric (integer) literals, PIC 9  (integer) data items , data items created with any of the \nPICTURE -less integer USAGE  specifications , USAGE  INDEX  data items or arithmetic expressions resulting in an integer \nvalue.   The abilit y to use full arithmetic expressions as table (array) subscripts, while common in many languages, is rare \nin the COBOL universe , only having come into existence with the COBOL2002 standard .   \nSee Also\u2026  \nArithmetic Expressions  6.1.4.1  \n Table Subscript versus Table Index  9.3 \n \n6.1.6.  Qualification of Data Names  \nCOBOL allows data names to be duplicated within a program, provided references to those data names may be made in \nsuch a manner as to make those references unique  through a process  known as qualification . \nTo see qualification at work, observe the following segments of two data records defined in a COBOL program:  \n01  EMPLOYEE.  \n    05 MAILING -ADDRESS.  \n       ", "start_char_idx": 394, "end_char_idx": 2535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51b90cfb-ea71-43a8-a43e-41394e24a067": {"__data__": {"id_": "51b90cfb-ea71-43a8-a43e-41394e24a067", "embedding": null, "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9931a92f-9e59-42f3-a728-780def1247b1", "node_type": "4", "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4774c5574aceabd64b5e08459d7462611104ca376e3b320cd4e471fb99c17732", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa", "node_type": "1", "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "09764f48a261724e8523e2b288abfcde61cde1e9012497a52bb683a5cbff8f57", "class_name": "RelatedNodeInfo"}}, "text": "10 STREET                PIC X( 35). \n       10 CITY                  PIC X( 15). \n       10 STATE                 PIC X(2).  \n       10 ZIP-CODE. \n          15 ZIP-CODE-5         PIC 9(5).  ", "start_char_idx": 2535, "end_char_idx": 2726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80ad94f2-061a-44ab-9292-172cfba3edec": {"__data__": {"id_": "80ad94f2-061a-44ab-9292-172cfba3edec", "embedding": null, "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3413ea8d-7982-4109-80e0-96913437781b", "node_type": "4", "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eaf8374d379df7ec3f69c384ed0e6a1924fbe11f753e130945e5c50ce9819664", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a05607d-ed1f-49c9-930c-355a8da8a3c7", "node_type": "1", "metadata": {}, "hash": "f01864c01dc8f22011a1372a1fd8c7866a884763b7d85efd932f6feeaea4a9e7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-5           15 FILLER             PIC X(4).  \n01  CUSTOMER.  \n    ", "start_char_idx": 0, "end_char_idx": 145, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a05607d-ed1f-49c9-930c-355a8da8a3c7": {"__data__": {"id_": "4a05607d-ed1f-49c9-930c-355a8da8a3c7", "embedding": null, "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3413ea8d-7982-4109-80e0-96913437781b", "node_type": "4", "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eaf8374d379df7ec3f69c384ed0e6a1924fbe11f753e130945e5c50ce9819664", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80ad94f2-061a-44ab-9292-172cfba3edec", "node_type": "1", "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7c6911d762e7099d5ced5610379ee0f7b219ca6907f555a1a5f5e8307b95c340", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a443b5e-2299-4180-b305-c7d4d9f47e70", "node_type": "1", "metadata": {}, "hash": "b9fc4b785b0383246b89f06bf9874ba7fdc51befc8d37d4b344508dd683260f0", "class_name": "RelatedNodeInfo"}}, "text": "05 MAILING -ADDRESS.  \n       10 STREET                PIC X(35).  \n       10 CITY                  PIC X(15).  \n       10 STATE                 PIC X(2).  \n       10 ZIP-CODE. \n          15 ZIP-CODE-5         PIC 9(5).  \n          15 FILLER             PIC X(4).  \nNow, let\u2019s deal with the  problem of setting the CITY portion of an EMPLOYEEs MAILING -ADDRESS to \u201cPhiladelphia\u201d.  \nClearly, the following cannot work because the compiler will be unable to determine which of the two CITY fields you \nare referring to:  \nMOVE \u201cPhiladelphia\u201d TO CITY.  \nWe could qualify the reference to CITY as follows, in an attempt to correct the problem:  \nMOVE \u201cPhiladelphia\u201d TO  CITY OF MAILING -ADDRESS. \nUnfortunately that too is insufficient because it is still insufficient to identify specifically which CITY is being refer enced.  \nTo truly identify which specific CITY you want, you\u2019d have to code the following:  \nMOVE \u201cPhiladelphia\u201d TO CITY OF MAILING-ADDRESS OF EMPLOYEE.  \nNow there can be no confusion as to which CITY is being changed.   Fortunately, you don\u2019t need to be quite so specific; \nCOBOL allows intermediate qualification levels to be omitted.  This allows you to specify:  \nMOVE \u201cPhiladelphia\u201d TO CITY OF EMPLOYEE.  \nIf you need to qualify a reference to a table, do so as follows:  \nidentifier -1  OF  identifier -2 ( subscript \u2026 ) \nThe reserved word \u201c IN\u201d may be used in lieu of \u201c OF\u201d. \n6.1.7.  Reference Modifiers  \nFigure 6-4 - Reference Modifier Syntax  \n  \nThe COBOL \u201985 standard introduced the concept of a reference modifier  to facilitate references to only a portion of a \ndata item; GNU COBOL  fully supports reference modification.   \nThe start  value indicates the starting character position being referenced (c haracter position values start with 1, not 0 \nas is the ca se in some programming languages ) and length  specifies how many characters are wanted .  ", "start_char_idx": 145, "end_char_idx": 2032, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a443b5e-2299-4180-b305-c7d4d9f47e70": {"__data__": {"id_": "0a443b5e-2299-4180-b305-c7d4d9f47e70", "embedding": null, "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3413ea8d-7982-4109-80e0-96913437781b", "node_type": "4", "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eaf8374d379df7ec3f69c384ed0e6a1924fbe11f753e130945e5c50ce9819664", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a05607d-ed1f-49c9-930c-355a8da8a3c7", "node_type": "1", "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9913889f4a08a38626ba93ab2b04ce453f69dce0377dfbe221692802dba1a8bb", "class_name": "RelatedNodeInfo"}}, "text": "If no length  is \nspecified, a value equivalent to the remaining character positions from start  to the end will be assumed.  Both start  and \nlength  may be specified as int eger numeric literals, integer numeric data items or arithmetic expressions with an integer \nvalue.   The default length  is 1. \nHere are a few examples:  \nCUSTOMER -LAST -NAME  (1:3 ) references  the first three characters of CUSTOMER -LAST -NAME . \nCUSTOMER -LAST -NAME (4:) references all character positions of CUSTOMER -LAST -NAME from the fourth \nonward.  \nFUNCTION CURRENT -DATE (5:2)  references  the current month . \nHex-Digits  (Nibble  + 1:1) Assuming that \u201cNibble\u201d is a numeric data item with a value in the range 0 -15, and \nHex-Digits is a PIC X(16) item with a value of \u201c0123456789ABCDEF\u201d, this converts \nthat numeric value to a hexadecimal digit.  \nHex-Digits (Nibble + 1:)  Does the same as the above \u2013 if you leave out the length, 1 is assumed; YOU STILL \nNEED THE \u201c:\u201d CHARACTER THOUGH . \n(start:[ length] )identifier -1[ OF|IN identifier -2][(subscript \u2026 )]\nintrinsic -function -reference", "start_char_idx": 2032, "end_char_idx": 3114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81649f77-7d35-45e6-af1f-640d12b1a031": {"__data__": {"id_": "81649f77-7d35-45e6-af1f-640d12b1a031", "embedding": null, "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "501563dd-b689-4b9d-a1c5-d777d2a21dd0", "node_type": "4", "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "81dfa43c820e6bd82a5887752812240d766592e4384168322cac3f2c122d7487", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8963a3fc-d194-4082-8266-5685700d59af", "node_type": "1", "metadata": {}, "hash": "8e669d2153a7123d41268c60262484482685c0622d3c1102d3d1895c1921cb64", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-6 Array -Element (6) (7:5)  References 5 characters in the 6th occurrence of Array -Element, starting at character \nposition 7.  \nReference modification may be used anywhere an identifier is legal, including serving as the receiving field of \nstatements like MOVE , STRING and ACCEPT, to name a few.  \n", "start_char_idx": 0, "end_char_idx": 381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8963a3fc-d194-4082-8266-5685700d59af": {"__data__": {"id_": "8963a3fc-d194-4082-8266-5685700d59af", "embedding": null, "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "501563dd-b689-4b9d-a1c5-d777d2a21dd0", "node_type": "4", "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "81dfa43c820e6bd82a5887752812240d766592e4384168322cac3f2c122d7487", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81649f77-7d35-45e6-af1f-640d12b1a031", "node_type": "1", "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d5507f63d83905609ebe74a8f621d4b07c17cf38ffb9c22789b0b8248d919317", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe CURRENT -DATE Intrinsic Function  6.1.14.12  \n  \n6.1.8.  Expressions  \nGNU COBOL  supports two basic types of Expressions  \n Arithmetic expressions , which calculate a numeric result  \n Conditional  Expressions , which calculate a TRUE or FALSE value  \nUnlike other programming languages, which allow arithmetic values such as 0 and -1 to represent FALSE and TRUE, \nrespectively, GNU COBOL  treats logical TRUE/FALSE values as something different from 0/ -1. \n6.1.8.1.  Arithmetic Expressions  \nArithmetic expressions are formed using following operators .  In complex expressions composed of multiple operators, \na precedence of operation applies whereby those operations having a higher precedence are computed first before \noperations with a lower precedence.  \nPrecedence  Operation  Discussion  \n1st \n(Highest)  Figure 6-5 \u2013 Unary \u201cMinus\u201d ( -) Operator Syntax  \n \n The unary \u201cminus\u201d ( -) operator \nreturns the arithmetic \nnegation of its single \nargument, effectively returning \nas its value the product of its \nargument and -1. \nFigure 6-6 \u2013 Unary \u201cPlus\u201d (+)  Operator Syntax  \n \n The unary \u201cplus\u201d (+) operator \nreturns the value of its single \nargument, effectively returning \nas its value the product of its \nargument and +1.  \n2nd Figure 6-7 - Exponentiation Operator (** or ^) Syntax  \n The value of the left -hand \nargument raised to the power \nindicated by the right -hand \nargument is computed.  \nNon-integer powers are \nallowed.  \nGNU COBOL  allows the \u201c^\u201d \nsymbol to be used in lieu of the \n\u201c**\u201d symbol.    \n3rd Figure 6-8 - Multiplication  Operator (*) Syntax  \n \n The product of the left -hand \nargument and the right -hand \nargument is computed.   \nnumeric -literal -1\n-identifier -1\n( arithmetic -expression -1 )\nnumeric -literal -1\n+  identifier -1\n( arithmetic -expression -1 )\nnumeric -literal -1 numeric -literal -2\nidentifier -1 ** identifier -2\n( arithmetic -expression -1 ) ( arithmetic -expression -2 )\nnumeric -literal -1 numeric -literal -2\nidentifier -1 *identifier -2\n( arithmetic -expression -1 )( arithmetic -expression -2 )", "start_char_idx": 381, "end_char_idx": 2454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3fc6bc1-571b-4936-bf72-442948650bbf": {"__data__": {"id_": "d3fc6bc1-571b-4936-bf72-442948650bbf", "embedding": null, "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7803d600-c2e5-4359-a8f7-26fa1e430dbd", "node_type": "4", "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5cfde6168faa9f61cc8b47bbc8a7ee4e8997c1cafd726d6f76c1be5aa4ae533f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71dbbbf4-2da8-4617-8e2d-2d134c5bf2d1", "node_type": "1", "metadata": {}, "hash": "bff346febf621cec5f95ac5ac230c8fb38e24f2316c4c335fdea271a4aff4480", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-7 Precedence  Operation  Discussion  \nFigure 6-9 - Division Operator (/) Syntax  \n \n The value of the left -hand \nargument divided by the ri ght-\nhand argument is computed.  \nIf the right -hand argument has \na value of zero, expression \nevaluation will be prematur ely \nterminated before a value is \ngenerated.  ", "start_char_idx": 0, "end_char_idx": 391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71dbbbf4-2da8-4617-8e2d-2d134c5bf2d1": {"__data__": {"id_": "71dbbbf4-2da8-4617-8e2d-2d134c5bf2d1", "embedding": null, "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7803d600-c2e5-4359-a8f7-26fa1e430dbd", "node_type": "4", "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5cfde6168faa9f61cc8b47bbc8a7ee4e8997c1cafd726d6f76c1be5aa4ae533f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3fc6bc1-571b-4936-bf72-442948650bbf", "node_type": "1", "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "34b50769bc561bd2b42af7d6d59ee40a5f6a658e87bdeae8a973c2c2692243b3", "class_name": "RelatedNodeInfo"}}, "text": "This may cause \nprogram failure at run -time.   \n4th \n(Lowest)  Figure 6-10 - Addition Operator (+) Syntax  \n \n The sum of the left -hand \nargument and the right -hand \nargument is computed.   \nFigure 6-11 - Subtraction Operator (-) Syntax  \n \n The value of the right -hand \nargument subtracted from the \nleft-hand argument is \ncomputed.   \nThe syntaxctical rules of GNU COBOL , allowing a dash ( -) character in data item names, can lead to some ambiguity.  \nObserve this sample GNU COBOL  code : \n01  C        PIC 9 VALUE 5.  \n01  D        PIC 9 VALUE 2.  \n01  C-D      PIC 9 VALUE 7.  \n01  I        PIC 9 VALUE 0.  \n\u2026 \nCOMPUTE I=C -D+1 \nDISPLAY I  \nWhat should be displayed by the DISPLAY  statement?  The number \u201c4\u201d, which is the result of subtracting the value of D \n(the value  2) from the value of C (the value 5) and then adding 1 or the number \u201c8\u201d, which is the value of adding 1 to \nthe value of data item C-D? \nThe right answer is \u201c8\u201d \u2013 the value of data item C-D plus 1!  \nThe GNU COBOL  compiler actually went through the following  decision -making logic when generating code for the \nCOMPUTE Statement  \n1. Is there a data item named \u201c C-D\u201d defined?  If so, use its value for \u201c C-D\u201d \n2. If there is no \u201c C-D\u201d data item, then check if there are \u201c C\u201d and \u201c D\u201d data items.  If not, the COMPUTE  statement i s in \nerror.  If there are, however, then code will be generated to subtract the value of \u201cD\u201d from \u201cC\u201d and add 1 to the \nresult.  \nHad there been at least one space to the left and/or the right of the \u201c -\u201c, there would have been no ambiguity \u2013 the \ncompiler woul d have been forced to use the individual \u201c C\u201d and \u201c D\u201d data items.  \nIt\u2019s considered good COBOL programming practice to always code at least one space to both the left and right of every \narithmetic operator as well as the \u201c=\u201d sign on a COMPUTE . \nnumeric -literal -1 numeric -literal -2\nidentifier -1 /identifier -2\n( arithmetic -expression -1 )( arithmetic -expression -2 )\nnumeric -literal -1 numeric -literal -2\nidentifier -1 +identifier -2\n( arithmetic -expression -1 )( arithmetic -expression -2 )\nnumeric -literal -1 numeric -literal -2\nidentifier -1 -identifier -2\n( arithmetic -expression -1 )( arithmetic -expression -2 )", "start_char_idx": 391, "end_char_idx": 2604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e21c4c66-928f-4242-9fef-e03a4b8277a5": {"__data__": {"id_": "e21c4c66-928f-4242-9fef-e03a4b8277a5", "embedding": null, "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9ea3e19-4a78-4ce2-92c8-b8c410365ea1", "node_type": "4", "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "354998308a0afc47327123cc02824129a0bb458d705acdf287a628ed0cf79370", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c14d1a8-05be-4974-a3a3-76c3d23d0d13", "node_type": "1", "metadata": {}, "hash": "3f28587458b0ad4b064a0e8dc2f9be0fbc699f07d887f5ff05cc6279b6d4c529", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-8 Here are some examples of how the precedence of operations affects the results of arithmetic expressions (all examples  \nuse numeric literals, to simplify the discussion) . \nExpression  Result  Notes  \n3 * 4 + 1  13 * has precedence over +  \n4 * 2 ^ 3  - 10 22 23 is 8 (^ has precedence over *) , times 4 is 32, minus 10 is 22.  \n(4 * 2) ^ 3  - 10 502 Parenthesis provide for a recursive application of the arithmetic expression \nrules, effectively allowing you to alter the precedence of operations.  \n4 times 2 is 8 (the us e of parenthesis \u201ctrumps\u201d the exponention operator, \nso the multiplication happens first); 8 ^ 3 is 512, minus 10 is 502.  \n5 / 2.5 + 7 * 2 \u2013 1.15  15.35  Integer and non -integer operands may be freely intermixed  \nOf course, arithmetic expression operands may be numeric data items (any USAGE  except DISPLAY , POINTER  or \nPROGRAM POINTER ) as well as numeric literals.  \n6.1.8.2.  ", "start_char_idx": 0, "end_char_idx": 992, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c14d1a8-05be-4974-a3a3-76c3d23d0d13": {"__data__": {"id_": "8c14d1a8-05be-4974-a3a3-76c3d23d0d13", "embedding": null, "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9ea3e19-4a78-4ce2-92c8-b8c410365ea1", "node_type": "4", "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "354998308a0afc47327123cc02824129a0bb458d705acdf287a628ed0cf79370", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e21c4c66-928f-4242-9fef-e03a4b8277a5", "node_type": "1", "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfb964f75c34c3f9047e14c82f1fb03adc681147c2eb6a572e41aa74efeaa3a6", "class_name": "RelatedNodeInfo"}}, "text": "Conditional  Expressions  \nConditional  expressions  are expressions which identify the conditions under which a program may make a decision \nabout processing to be performed.  As such, conditional expressions produce a val ue of TRUE  or FALSE . \nThere are seven  types of conditional expressions, as follows , in increasing order of complexity.  \n6.1.8.2.1.  Condition Names (Level -88 Items)  \nThese are the simplest of all conditio ns.  Observe the following code:  \n05  SHIRT -SIZE               PIC 99V9.  \n    88 LILLIPUTIAN           VALUE 0 THRU 12.5  \n    88 XS                    VALUE 13 THRU 13.5.  \n    88 S                     VALUE 14, 14.5.  \n    88 M                     VALUE 15, 15.5.  \n    88 L                     VALUE 16, 16.5.  \n    88 XL                    VALUE 17, 17.5.  \n    88 XXL                   VALUE 18, 18.5.  \n    88 BROBDINGNAGIAN        VALUE 19 THRU 99.9.  \nThe condition names \u201cLILLIP UTIAN \u201d, \u201cXS\u201d, \u201cS\u201d, \u201cM\u201d, \u201cL\u201d, \u201cXL\u201d, \u201cXXL\u201d and \u201cBROBDINGNAGIAN \u201d will have TRUE or FALSE \nvalues based upon the values within their parent data item (SHIRT -SIZE).  So, a program wanting to test whether or not \nthe current SHIRT -SIZE value can be classified as \u201cXL\u201d could have that decision  coded as  a combined condition (the most \ncomplex type of conditional expression), as either : \nIF SHIRT -SIZE = 17 OR SHIRT -SIZE = 17.5  \n- or - \n IF SHIRT -SIZE = 17 OR 17.5  \nOr it could utilize the condition name XL as follows:  \nIF XL \nSee Also\u2026  \nDefining Level -88 Condition Names  5.2.7  \n  ", "start_char_idx": 992, "end_char_idx": 2511, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87828e2e-cae5-42a4-8e7e-a378062b72dc": {"__data__": {"id_": "87828e2e-cae5-42a4-8e7e-a378062b72dc", "embedding": null, "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be", "node_type": "4", "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d2194e9e149fc5feddc0a405d5fdba827d8e07fc5968232cb6c4f45f157a7269", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b811e76-18ae-49f1-a688-3fc52bb00bb5", "node_type": "1", "metadata": {}, "hash": "65043996a9b64c6f1f4362de14ab8bf695bf5f5cbd010a30712c77ad5f26fb4b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-9 6.1.8.2.2.  Class Conditions  \nFigure 6-12 - Class Condition Syntax  \n Class conditions evaluate the type of data that is \ncurrently stored in a data item.  \n1. The NUMERIC  class test considers only the characters \u201c0\u201d, \u201c1\u201d, \u2026 , \u201c9\u201d to be numeric; only a data item containing \nnothing but digits will pass a NUMERIC  class test.  Spaces, decimal points, commas, currency signs, plus signs, minus \nsigns and any other characters exce pt the digit characters will all fail \u201c NUMERIC \u201d class tests.  \n2. The ALPHABETIC  class test considers only upper -case letters, lower -case letters and SPACES  to be alphabetic in \nnature.  \n3. The ALPHABETIC -LOWER  and ALPHABETIC -UPPER  class conditions  consider only spaces and the respective type of \nletters to be acceptable in order to pass such a class test.  \n4. Note that what constitutes a \u201cletter\u201d (or upper/lower case too, for that manner) may be influenced through the use \nof CHARACTER CLASS IFICATION  specifications  in the OBJECT -COMPUTER  paragraph . \n5. Only data items whose USAGE  is either explicitly or implicitly defined as DISPLAY  may be used in NUMERIC  or any of \nthe ALPHABETIC  class conditions.  \n6. Some  COBOL implementations disallow the use of group items or PIC A  items with NUMERIC  class conditions and \nthe use of PIC 9  items with ALPHABETIC  class conditions.  GNU COBOL  has no such restrictions.  \n7. The OMITTED  class condition is used when it is necessary for a subprogram  to determine whether or not a particular \nargument was passed to it.  In such class conditions, identifier -1 must be a LINKAGE SECTION  item defined on the \nUSING  clause of the subprograms PROCEDU RE DIVISION  header.  \n8. ", "start_char_idx": 0, "end_char_idx": 1766, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b811e76-18ae-49f1-a688-3fc52bb00bb5": {"__data__": {"id_": "5b811e76-18ae-49f1-a688-3fc52bb00bb5", "embedding": null, "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be", "node_type": "4", "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d2194e9e149fc5feddc0a405d5fdba827d8e07fc5968232cb6c4f45f157a7269", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87828e2e-cae5-42a4-8e7e-a378062b72dc", "node_type": "1", "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8777bfbdd74e93e1530e08430ee3a6e13e525465304c772bb311ce58b6d1013f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "242d91e7-0e84-447a-a511-ac8da51ece76", "node_type": "1", "metadata": {}, "hash": "3f7a5f2b017c554feb68bd3feb3e065f80424a6732d5c46bf14be6452a1179b5", "class_name": "RelatedNodeInfo"}}, "text": "The class -name -1 option allows you to test for a user -defined class.  Here\u2019s an example.  First, assume the following \nSPECIAL -NAMES  definition of the user -defined class \u201cHexadecimal\u201d:  \nSPECIAL-NAMES. \n    CLASS Hexadecimal IS \u20180\u2019 THRU \u20189\u2019 , \u2018A\u2019 THRU \u2018F\u2019, \u2018a\u2019 THRU \u2018f\u2019.  \nNow  observe the following code, which will execute the 150-Process -Hex-Value  procedure if Entered -Value  contains \nnothing but valid hexadecimal digits:  \n    IF Entered -Value IS Hexadecimal  \n        PERFORM 150 -Process-Hex-Value \n    END-IF \nSee Also\u2026  \nThe OBJECT -COMPUTER  Paragraph  4.1.2  \n The CALL  Statement  6.4.5  \n \n6.1.8.2.3.  Sign Conditions  \nFigure 6-13 - Sign Condition Syntax  \n Sign conditions evaluate the numeric state of a PIC 9  data item . \n", "start_char_idx": 1766, "end_char_idx": 2517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "242d91e7-0e84-447a-a511-ac8da51ece76": {"__data__": {"id_": "242d91e7-0e84-447a-a511-ac8da51ece76", "embedding": null, "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be", "node_type": "4", "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d2194e9e149fc5feddc0a405d5fdba827d8e07fc5968232cb6c4f45f157a7269", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b811e76-18ae-49f1-a688-3fc52bb00bb5", "node_type": "1", "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a99249c89989dced86faee8858ab441f6ced50039e11a7eb4f41bdf373d7118e", "class_name": "RelatedNodeInfo"}}, "text": "1. Only data items defined with some sort of numeric USAGE /PICTURE  can be used for this type of class condition.  \n2. A POSITIVE  or NEGATIVE  class condition will be TRUE only if the value of identifier -1 is strictly greater than or less \nthan zero, respectively.  A ZERO  class condition can be passed only if the value of identifier -1 is exactly  zero.  \nidentifier -1IS [ NOT]                     NUMERIC\nALPHABETIC\nALPHABETIC -LOWER\nALPHABETIC -UPPER\nOMITTED\nclass -name -1\nIdentifier -1IS[ NOT]             POSITIVE\nNEGATIVE\nZERO", "start_char_idx": 2517, "end_char_idx": 3056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd4ae17a-1871-4b0c-bc5a-3f4755422c25": {"__data__": {"id_": "dd4ae17a-1871-4b0c-bc5a-3f4755422c25", "embedding": null, "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e270caa-ed45-4469-949a-fd39edd36be6", "node_type": "4", "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ac40ae0f0cc2994b17be40d49f400356a65b7fc475883b7b4b5964fc57767172", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75dda0d5-7370-4244-b44b-7e4596586714", "node_type": "1", "metadata": {}, "hash": "128f6e96c3ff5216644e788782153b5fbb5312ebc7523df043825f00129eb44f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-10 6.1.8.2.4.  Switch -Status Conditions  \nFigure 6-14 - Using Switch Conditions  \n In the SPECIAL -NAMES  paragraph,  an external \nswitch name can be associated with  one or \nmore condition names.  These condition names \nmay then be used to test the ON/OFF status of \nthe external switch.  \nAn example is shown to the left.  \n \n \n \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.8.2.5.  Relation Conditions  \nFigure 6-15 - Relation Condition Syntax  \n \nThese conditions evaluate how two different values \u201crelate\u201d to each other.  \n1. When comparing one numeric value to another, the USAGE  and number of significant digits in either value are \nirrelevant as the comparison is performed using the actual algebraic values.  \n2. When comparin g strings, the comparison is made based upon the program \u2019s collating sequence  (see section).  When \nthe two string arguments are of unequal length, the shorter is assumed to be padded (on the right) with a sufficient \nnumber of SPACES  as to make the two stri ngs of equal length.  String comparisons take place on a corresponding \ncharacter -by-character basis until an pair of characters is found  that violates the condition being tested for based \nupon  the relative position of where each character in the pair falls  in the program\u2019s COLLATING SEQUENCE  (as \ndefined in SPECIAL -NAMES ). \n.\n", "start_char_idx": 0, "end_char_idx": 1429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75dda0d5-7370-4244-b44b-7e4596586714": {"__data__": {"id_": "75dda0d5-7370-4244-b44b-7e4596586714", "embedding": null, "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e270caa-ed45-4469-949a-fd39edd36be6", "node_type": "4", "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ac40ae0f0cc2994b17be40d49f400356a65b7fc475883b7b4b5964fc57767172", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd4ae17a-1871-4b0c-bc5a-3f4755422c25", "node_type": "1", "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "266142726b2658f60ad037b38c15472d251324ad4a2786b8668e371b6abff1b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4dbd3dd-9bce-4972-8712-52587000a782", "node_type": "1", "metadata": {}, "hash": "eeee66983963a38376ef67a08641a2290b08bb74f122cbd496e2af6befb2f0f1", "class_name": "RelatedNodeInfo"}}, "text": ".\n.\nENVIRONMENT DIVISION.\n.\n.\n.\nSPECIAL -NAMES.\nSWITCH -1\nON STATUS IS OK-To-Display.\n.\n.\n.\nPROCEDURE DIVISION.\n.\n.\n", "start_char_idx": 1429, "end_char_idx": 1545, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4dbd3dd-9bce-4972-8712-52587000a782": {"__data__": {"id_": "e4dbd3dd-9bce-4972-8712-52587000a782", "embedding": null, "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e270caa-ed45-4469-949a-fd39edd36be6", "node_type": "4", "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ac40ae0f0cc2994b17be40d49f400356a65b7fc475883b7b4b5964fc57767172", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75dda0d5-7370-4244-b44b-7e4596586714", "node_type": "1", "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc035faed6cec3ecf74282c0c058470e771042d9e4df19a226c1b323b12b2bd2", "class_name": "RelatedNodeInfo"}}, "text": ".\nIF OK -To-Display\nDISPLAY \u2018Switch 1 Set\u2019\nEND -DISPLAY\nEND -IF\n.\n.\n.$ COB_SWITCH_1=ON\n$ export COB_SWITCH_1\n$ testprog\nSwitch 1 Set\n$Setting the switch and \nrunning the program \n(Unix/ Cygwin /OSX)\u2026Relevant sections of \u2018 testprog \u2019\u2026\nSetting the switch and \nrunning the program \n(Windows)\u2026C:>SET COB_SWITCH_1=ON\nC:>testprog\nSwitch 1 Set\nC:>\nIS[ NOT]identifier -1\nliteral -1\narithmetic -expression -1\nindex -name -1Identifier -2\nliteral -2\narithmetic -expression -2\nindex -name -2EQUALTO\nEQUALS\nGREATER THAN\nGREATER THAN OREQUALTO\nLESSTHAN\nLESSTHAN OREQUALTO\n=\n>\n>=\n<\n<=", "start_char_idx": 1545, "end_char_idx": 2114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16cafb69-a998-4c26-aade-28f9dd006e79": {"__data__": {"id_": "16cafb69-a998-4c26-aade-28f9dd006e79", "embedding": null, "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad", "node_type": "4", "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b7030762e868fae604bcb05249d57cc7c4f8fb876819245033fac72393310b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d22aac33-ee5a-4be7-8e4d-225e272c6c39", "node_type": "1", "metadata": {}, "hash": "224a1cb5eb44ac94962a4836c0b7ecf00e009b1d372a53c9916a45478af0ed02", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-11 3. There is no functional difference between using the wordy version (\u201cIS EQUAL TO\u201d, \u201cIS LESS THAN\u201d, \u2026) versus the \nsymbolic version (\u201c=\u201d, \u201c<\u201d, \u2026) of the actual relation operators.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.8.2.6.  ", "start_char_idx": 0, "end_char_idx": 331, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d22aac33-ee5a-4be7-8e4d-225e272c6c39": {"__data__": {"id_": "d22aac33-ee5a-4be7-8e4d-225e272c6c39", "embedding": null, "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad", "node_type": "4", "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b7030762e868fae604bcb05249d57cc7c4f8fb876819245033fac72393310b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16cafb69-a998-4c26-aade-28f9dd006e79", "node_type": "1", "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b88979ea77a4a9e8cfa02a995101911753e409d203bb412320c59e07aa824839", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8ad95fc-0d71-4308-b6cc-87afe4118008", "node_type": "1", "metadata": {}, "hash": "60766e97152f719d3ca2a55c073b28a1011dc52d5e93783aeea1d6128ab15263", "class_name": "RelatedNodeInfo"}}, "text": "Combined Conditions  \nFigure 6-16 - Combined Condition Syntax  \n A combined condition is one that computes a TRUE/FALSE value from the \nTRUE/FALSE values of two other conditions (which could \u2013 themselves \u2013 \nbe combined conditions).   \n1. ", "start_char_idx": 331, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8ad95fc-0d71-4308-b6cc-87afe4118008": {"__data__": {"id_": "d8ad95fc-0d71-4308-b6cc-87afe4118008", "embedding": null, "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad", "node_type": "4", "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b7030762e868fae604bcb05249d57cc7c4f8fb876819245033fac72393310b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d22aac33-ee5a-4be7-8e4d-225e272c6c39", "node_type": "1", "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d491660bc41be865faaefc30031f9b52ab302fd613e57bdf2b09f18d92d7838b", "class_name": "RelatedNodeInfo"}}, "text": "If either condition has a value of TRUE, the result of ORing the two together will resul t in a value of TRUE.  Only \nwhen ORing two FALSE conditions will a result of FALSE occur.  \n2. In order for AND  to yield a value of TRUE, both  conditions must have a value of TRUE.  In all other circumstances, \nAND  produces a FALSE value.  \n3. When chaining multiple,  similar conditions together with the same operator ( OR/AND ), and left or right arguments \nhaving common operators and subjects, it is possible to abbreviate the program code.  For example:  \nIF ACCOUNT -STATUS = 1 OR ACCOUNT -STATUS = 2 OR ACCOUNT -STATUS = 7  \nCould be abbreviated as:  \nIF ACCOUNT -STATUS = 1 OR 2 OR 7  \n4. Just as multiplication takes precedence over addition in arithmetic expressions, so does AND  take precedence over \nOR in combined conditions.  Use parenthesis to change this precedence, if necessary.  For example:  \nFALSE OR FALSE AND TRUE   evaluates to TRUE  \nFALSE OR (FALSE AND TRUE)   evaluates to TRUE  (since AND has precedence over OR, this is identical to the \nprevious example)  \n(FALSE OR FALSE) AND TRUE   evaluates to FALSE  \n6.1.8.2.7.  Negated Conditions  \nFigure 6-17 - Negated Condition Syntax  \n A condition may be negated by prefixing it with the NOT  operator . \n1. The NOT  operator has the highest precedence of all logical operators, just as a unary minus sign (which \u201cnegates \u201d a \nnumeric value) is the highest precedence  arithmetic operator.   \n2. Parenthesis must be used to explicitly signify the sequence in which conditions are evaluated and processed  if the \ndefau lt precedence isn\u2019t desired .  For example:  \nNOT TRUE AND FALSE AND NOT FALSE  evaluates to FALSE AND FALSE AND TRUE  which evaluates to FALSE  \nNOT (TRUE AND FALSE AND NOT FALSE)  evaluates to NOT (FALSE)  which evaluates to TRUE  \nNOT TRUE AND (FALSE AND NOT FALSE)  evaluates to FALSE AND (FALSE AND TRUE)  which evaluates to FALSE  \n6.1.9.  Use of Periods (.)  \nAll COBOL implementations distinguish between sentences  and statements  in the PROCEDURE DIVISION .  A statement  \nis a single executable COBOL instruction.  For example , these are all statements : \nMOVE SPACES TO Employee -Address \nADD 1 TO Record -Counter \nDISPLAY \u201cRecord -Counter=\u201d Record -Counter \ncondition -1 condition -2AND\nOR\nNOT condition -1", "start_char_idx": 569, "end_char_idx": 2878, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4bf30da7-e1ef-4d9f-a57a-88f8f240f406": {"__data__": {"id_": "4bf30da7-e1ef-4d9f-a57a-88f8f240f406", "embedding": null, "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "094c6ac1-bd0b-4a82-ac68-8d7c9fae865c", "node_type": "4", "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e50071ba70bf6cea0b9bedcc88b5528f09086fe23116c53fec4c54f81484a56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d06b23c9-bb5a-4eaa-bccb-ed3237060d7f", "node_type": "1", "metadata": {}, "hash": "bba5b82bde223b28b4409a365ba715e0ebed8729ee31ff59b43249ebd3727a23", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-12 Some COBOL statements  have a \u201cscope of applicability\u201d associated with them where one or more other statements can \nbe considered to be part of or related to the statement in question.  An example of such a situation might be the \nfollowing, where the interest on a loan is being calculated  and displayed - 4% interest if the loan balance is under \n$10000 and 4.5% otherwise:  \nIF Loan-Balance < 10000 \n    MULTIPLY Loan -Balance BY 0.04 GIVING Interest  \nELSE \n    MULTIPLY Loan -Balance BY 0.045 GIVING Interest  \nDISPLAY \u201cInterest Amount = \u201c Interest  \nIn this example, the IF statement actually has a scope that can include two sets of associated statemen ts \u2013 one set to be \nexecuted when the IF condition is TRUE and another if it is FALSE.  \nUnfortunately, there\u2019s a problem with the above.  A human being looking at that code will probably understand that the \nDISPLAY statement, because of its lack of indentati on, is to be executed regardless of the TRUE/FALSE va lue of the IF \ncondition.  Unfortunately, the GNU COBOL  compiler (or any other COBOL compiler for that matter) won\u2019t see it that \nway because it really couldn\u2019t care less what sort of indentation, if any, is used.  In fact, any COBOL compiler would be \njust as happy to see the code written like this:  \nIF Loan-Balance < 10000 MULTIPLY Loan -balance BY 0.04  GIVING Interest ELSE MULTIPLY Loan -\nBalance BY 0.045  GIVING Interest DISPLAY \u201cInterest Amount = \u201c Interest  \nSo how then do we inform the compiler that the DISPLAY  stateme nt is outside the scope of the IF ? \nThat\u2019s where sentences  come in.  \nA COBOL sentence  is defined as any arbitrarily long sequence of statements, followed by a period (.) character.  ", "start_char_idx": 0, "end_char_idx": 1780, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d06b23c9-bb5a-4eaa-bccb-ed3237060d7f": {"__data__": {"id_": "d06b23c9-bb5a-4eaa-bccb-ed3237060d7f", "embedding": null, "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "094c6ac1-bd0b-4a82-ac68-8d7c9fae865c", "node_type": "4", "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e50071ba70bf6cea0b9bedcc88b5528f09086fe23116c53fec4c54f81484a56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4bf30da7-e1ef-4d9f-a57a-88f8f240f406", "node_type": "1", "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "542cb333e2fa4712bb9e69346d90d1b390a327340b116f03abba81146395e16c", "class_name": "RelatedNodeInfo"}}, "text": "The \nperiod cha racter is what terminates the scope of a set of statements.  Therefore, our example needs to be coded like \nthis:  \nIF Loan-Balance < 10000  \n    MULTIPLY Loan -Balance BY 0.04 GIVING Interest  \nELSE \n    MULTIPLY Loan -Balance BY 0.045 GIVING Interest . \nDISPLAY \u201cInterest Amount = \u201c Interest  \nSee the period at the end of the second MULTIPLY  (I highlighted  it)?  That is what terminates the scope of the \u201cIF\u201d, thus \nmaking the DISPLAY  something that will be executed regardless of how the \u201cLoan -Balance < 10000\u201d test eva luated.  \n6.1.10.  Use of \u201cVERB\u201d / \u201cEND -VERB\u201d Constructs  \nPrior to the 1985 COBOL standard, using a period character was the only way to signal the end of a statement\u2019s scope.  \nUnfortunately, this caused some problems.   Take a look at this code:  \nIF A = 1  \n    IF B = 1  \n        DISPLAY \u201cA & B = 1\u201d  \nELSE \n    IF B = 1  \n        DISPLAY \u201cA NOT = 1 BUT B = 1\u201d  \n    ELSE \n        DISPLAY \u201cNEITHER A NOR B = 1\u201d.  The problem with this code is that indentation \u2013 so critical \nfor improving the human -readability of a program \u2013 \nprovides an erroneous view of the logical flow.  An ELSE  is \nalways associated with the most -recently encountered IF; \nthis means the highlighted  ELSE  will be associated with the \n\u201cIF B = 1 \u201d statement, not the \u201c IF A = 1 \u201d statement.  \nThis sort of problem led to the \u201cband -aid\u201d solution19 \nshown to the right being added to the COBOL \nlanguage.  IF A = 1  \n    IF B = 1  \n        DISPLAY \u201cA & B = 1\u201d  \n    ELSE \n        NEXT SENTENCE  \nELSE \n    IF B = 1  \n        DISPLAY \u201cA NOT = 1 BUT B = 1\u201d  \n                                                                 \n19 Yes, I realize you could have easily fix ed the problem by chang ing the code to \u201c IF A = 1 AND B = 1 \u201d, but that wouldn\u2019t have \nallowed me to make my case here  ", "start_char_idx": 1780, "end_char_idx": 3593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af7333b4-4a28-4232-90d5-0f19d04b8d04": {"__data__": {"id_": "af7333b4-4a28-4232-90d5-0f19d04b8d04", "embedding": null, "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9daf359a-0691-4631-83ec-864032242595", "node_type": "4", "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "de8268a8e2d13e2fd2549f124152363575ba55dfb2de15ed1c32cfb5438f8425", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0b2972c-c9ac-4109-b608-cff70d2fe359", "node_type": "1", "metadata": {}, "hash": "c597f8560e257934f585fdf548b088e86a0856974bba738b519255158b57d0ad", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-13     ELSE \n        DISPLAY \u201cNEITHER A NOR B = 1\u201d.  \n \nThe NEXT SENTENCE  statement informs the GNU COBOL  compiler that if the \u201cB = 1\u201d condition is false, control should \nfall into the first statement that follows the next period.  \nWith the 1985 standard for COBOL, a much more elegant solution was introduced.  Those COBOL verbs (statements) \nthat needed such a thing were allowed to use an \u201c END -verb\u201d construct to end their scope without disrupting the scope \nof any statements whose scope they  might have been in.  Any COBOL 85 compiler would have allowed the following \nsolution to our problem:  \nIF A = 1  \n    IF B = 1  \n        DISPLAY \u201cA & B = 1\u201d  \n    END-IF \nELSE \n    IF B = 1  \n        DISPLAY \u201cA NOT = 1 BUT B = 1\u201d  \n    ELSE \n        DISPLAY \u201cNEITHER A NOR B = 1\u201d.  \nThis new facility made the period almost obsolete, as our program segment would probably be coded like this today:  \nIF A = 1  \n    IF B = 1  \n        DISPLAY \u201cA & B = 1\u201d  \n    END-IF \nELSE \n    IF B = 1  \n        DISPLAY \u201cA NOT = 1 BUT B = 1\u201d  \n    ELSE \n        DISPLAY \u201cNEITHER A NOR B = 1\u201d  \n    END-IF \nEND-IF \nCOBOL ( GNU COBOL  included) still require s that each PROCEDURE DIVISION paragraph contain at leas t one sentence  if \nthere is any executable code in that paragraph, but a popular coding standard is now to simply code a single period \nright before the end of each paragraph.  Check out the \u201c GCic \u201d sample program in section 10.4  and you\u2019ll see how that \nwould be done.  \n", "start_char_idx": 0, "end_char_idx": 1557, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0b2972c-c9ac-4109-b608-cff70d2fe359": {"__data__": {"id_": "d0b2972c-c9ac-4109-b608-cff70d2fe359", "embedding": null, "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9daf359a-0691-4631-83ec-864032242595", "node_type": "4", "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "de8268a8e2d13e2fd2549f124152363575ba55dfb2de15ed1c32cfb5438f8425", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af7333b4-4a28-4232-90d5-0f19d04b8d04", "node_type": "1", "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c063b8b4ad034eee6bfe41211008b1e9bd3dc866bf0cfbb30bf49a6e7729aa5b", "class_name": "RelatedNodeInfo"}}, "text": "The standard for the COBOL language shows the various \u201cEND -verb\u201d specifications to be optio nal because using a \nperiod as a scope -terminator remains leg al.  Some statements have an \u201cEND -verb\u201d scope -terminator defined for them  \nthat they don\u2019t appear to need.20  \nIf you will be porting existing code over to GNU COBOL , you\u2019ll find it an accommodating facility capable of conforming t o \nlanguage and coding standards that code is likely to use.  If you are creating new  GNU COBOL  programs, however, I \nwould strongly  counsel you to use the \u201cEND -verb\u201d structures religiously in those programs.  \nSee Also\u2026  \nThe NEXT SENTENCE  Statement  6.4.28  \n  \n6.1.11.  Controlling Concurrent Access to Files  \nThe manipulation of data files is one of the COBOL language\u2019s great strengths.  There are features built -in to the COBOL \nlanguage to deal with the possibility that multiple programs may be attempting to access the same file concurrently.  \nMultiple program concurrent access is dealt with in two ways \u2013 file sharing  and record locking . \n                                                                 \n20 STRING  (section 6.2.43 ) and UNSTRING  (section 6.2.49 ), for example \u2013 could it be there are plans in the works for a future \nstandard to introduce an option to such statements that  would need a scope -terminator?  ", "start_char_idx": 1557, "end_char_idx": 2896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38195d40-2719-45dd-bdfb-28bf327e39d5": {"__data__": {"id_": "38195d40-2719-45dd-bdfb-28bf327e39d5", "embedding": null, "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6", "node_type": "4", "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4d732e03946a5317e848c7c9993212f9e426388f9378023a9716b28c4ccf28a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8522c12d-36e6-4618-a970-3c6cf59fc592", "node_type": "1", "metadata": {}, "hash": "6116fd11af08f079b0d9918be74257b92f303afd0579a1e63629609fac7d20ff", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-14 Not all GNU COBOL  implementations support file sharing and record -locking  options.  Whether they do or not depends \nupon the operating system they were built for and the build options that were used when the specific GNU COBOL  \nimplementation was generated.   \n6.1.11.1.  File Sharing  \nGNU COBOL  controls concurrent -file access at the highest l evel through the concept of file sharing, enforced when a \nprogram attempts to OPEN  a file .  This is accomplished via a  UNIX operating -system routine called \u201c fcntl() \u201d.  That \nmodule is not currently supported by Windows21 and is not present in the MinGW Unix -emulation package.  GNU \nCOBOL  builds created using a MinGW environment will be incapable of supporting file -sharing controls \u2013 files will \nalways  be shared in such environments.  A GNU COBOL  build created using the Cygwin environment on Windows would  \nhave a ccess to \u201cfcntl()\u201d and therefore will support file sharing.  Of course, actual Unix builds of GNU COBOL , as well as \nOSX builds22, should  have no issues because \u201cfcntl()\u201d should be available . \nAny limitations you impose on a successful OPEN  will remain in pla ce until your program either issues a CLOSE  against \nthe file or terminates.  \n", "start_char_idx": 0, "end_char_idx": 1309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8522c12d-36e6-4618-a970-3c6cf59fc592": {"__data__": {"id_": "8522c12d-36e6-4618-a970-3c6cf59fc592", "embedding": null, "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6", "node_type": "4", "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4d732e03946a5317e848c7c9993212f9e426388f9378023a9716b28c4ccf28a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38195d40-2719-45dd-bdfb-28bf327e39d5", "node_type": "1", "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "45a4538dd9b6a5869c226601a083c90b0bb7a661cfbb0b987d2ebe5762a95ba6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16250ed4-d518-4411-acf1-2324465e0960", "node_type": "1", "metadata": {}, "hash": "4d92737dacd7e41368a5099b93b2fa6ecd19a95785ac10aef63886ea353bc87a", "class_name": "RelatedNodeInfo"}}, "text": "There are three ways in which concurrent access to a file may be controlled at the file level:  \nSharing  \nOption on \n\u201cOPEN\u201d  Effect  \nALL OTHER  When your program opens a file in this manner, no restrictions will be placed on other \nprograms attempting to OPEN  the file after your program did .  This is the default sharing mode.  \nNO OTHER  When your program opens a file in this manner, your program ann ounces that it is un willing to \nallow any other program to have any access to the file as long as you are using that file;  OPEN  \nattempts made in other programs will fail with a file status of 37 (\u201cPERMISSION DENIED\u201d) until \nsuch time as you CLOSE  the file . \nREAD ONLY  Opening a file in this manner indicates you are willing to allow other programs to OPEN  the file \nfor INPUT  while you have it OPEN .  If they attempt any other OPEN , their OPEN  will fail with a \nfile status of 37. \nOf course, your  program may fail if someone else got to the file first and OPEN ed it with a sharing option that imposed \nfile-sharing limitations.  \nSee Also\u2026  \nFILE-STATUS Values  Figure \n4-15 \n The CLOSE  Statement  6.4.7  \nThe OPEN  Statement  6.4.29  \n \n6.1.11.2.  Record Locking  \nRecord -locking is supported by advanced file -management software that provides a single point -of-control for access to \nfiles (usually ORGANIZATION INDEXED  files).  One such runtime package capable of doing this is the Berkely Database \n(BDB) package  \u2013 a pac kage frequently used in GNU COBOL  builds to support ORGANIZATION INDEXED  files.  The various \nI/O statements are capable of imposing limitations on the access \u2013 by other concurrently -executing programs \u2013 to the \nfile record they just accessed.  ", "start_char_idx": 1309, "end_char_idx": 3011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16250ed4-d518-4411-acf1-2324465e0960": {"__data__": {"id_": "16250ed4-d518-4411-acf1-2324465e0960", "embedding": null, "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6", "node_type": "4", "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4d732e03946a5317e848c7c9993212f9e426388f9378023a9716b28c4ccf28a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8522c12d-36e6-4618-a970-3c6cf59fc592", "node_type": "1", "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "029092cf28e381fff3d250df9daa91909b051543c3d87851ba9cb99ff8eff5fd", "class_name": "RelatedNodeInfo"}}, "text": "These limitat ions are syntactically imposed by placing a lock on the record.  Other \nrecords in the file remain available, assuming that file -sharing limitations imposed at OPEN -time didn\u2019t prevent access \nto the entire file.    \n                                                                 \n21 Windows has other means of providing equivalent functionality to \u201cfcntl()\u201d, but the BDB package was not coded to utilize them .  \nThe use of other advanced file I/O packages that support both  the UNIX and Windows concurrent -access routines (such as \nVBISAM) are currently under review by the author.  \n22 Apple Computer\u2019s OSX operating system is based on an open -source version of UNIX (Darwin) and therefore includes support for \n\u201cfcntl()\u201d.  ", "start_char_idx": 3011, "end_char_idx": 3759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfc9c5f8-0ab5-48c2-97e0-b96859150715": {"__data__": {"id_": "bfc9c5f8-0ab5-48c2-97e0-b96859150715", "embedding": null, "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468", "node_type": "4", "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5cde96541054d1814e1d73ad4977841235f488b0cfe42eef8b76b5360c6cc187", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d890d02-c3b4-4c84-8138-46337a87f991", "node_type": "1", "metadata": {}, "hash": "0b0f26de5db169423157a7c83879e3ee056f03ceba680db64cc024f45b11019e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-15 Locks remain in -effect until a program hold ing the lock terminates  or issues a CLOSE  or UNLOCK  against the file or \nexecutes a COMMIT  or ROLLBACK  statement . \nThe record locking options (not all options are available to all statements) are as shown in the following table.  \nRecord \nLocking \nOption  Effect  \nWITH LOCK  Access to the record by other programs will be denied.   \nWITH KEPT \nLOCK  Normally, as a new record is accessed locks held for previous records are released.  By using this \noption, not only is the newly -accessed record locked (as WITH LOCK  would do), but prior record locks \nwill be retained as well.  A subsequent READ without  the KEPT LOCK  option will release all \u201ckept\u201d locks, \nas will the FREE  statemen t. \nWITH NO \nLOCK  The record will not be locked.  This is the default locking option in effect for all statements.  \nIGNORING \nLOCK  \nWITH \nIGNORE LOCK  This option is possible only when reading records \u2013 it informs GNU COBOL  that any locks held by other \nprograms should be ignored.  \nThe two options shown are synonymous.  \nWITH WAIT  This option is possible only when reading records \u2013 it informs GNU COBOL  that the program is willing \nto wait for a lock held on the record being read to be released.   \nWithout this option, an attempt to read a locked record will be immediately aborted and a file status of \n47 will be returned.  \nWith this option, the program will wait for a pre -configured time for the lock to be released.  If the lock \nis released within the preconfigured wait time, the read will be successful.  If the pre -configured wait \ntime expires before the lock is released, the read attempt will be aborted and a 47 file status will be \nissued.  \nIf the GNU COBOL  build you are using was configured to use  the Berkely Database ( BDB ) package for INDEXED  file I/O , \nrecord locking will be available  by using the execution -time environment variable DB_HOME . \nSee Also\u2026  \nFILE-STATUS Values  Figure \n4-15 \nThe CLOSE  Statement  6.4.7  \nThe COMMIT  Statement  6.4.8  \n The FREE  Statement  6.4.17  \nThe ROLLBACK  Statement  6.4.37  \nThe UNLOCK  Statement  6.4.48  \nExecution -time Environment Variables  8.2.4  \n \n6.1.12.  ", "start_char_idx": 0, "end_char_idx": 2274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d890d02-c3b4-4c84-8138-46337a87f991": {"__data__": {"id_": "6d890d02-c3b4-4c84-8138-46337a87f991", "embedding": null, "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468", "node_type": "4", "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5cde96541054d1814e1d73ad4977841235f488b0cfe42eef8b76b5360c6cc187", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfc9c5f8-0ab5-48c2-97e0-b96859150715", "node_type": "1", "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92e17fbc04dbc387664f303cc37592671594b9b2a70cb4596856421908d640e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d5fd494-f66a-4397-abfd-bf89ccfabe62", "node_type": "1", "metadata": {}, "hash": "9f1dd43f27a55b0a9f41574390300dd78e3065686e956afe438ea09280e5ed34", "class_name": "RelatedNodeInfo"}}, "text": "Common Clauses On Executable Statements  \n6.1.12.1.  AT END / NOT AT END  \nAT END  clauses may be specified on READ  and RETURN  statements.  [ AT END     imperative statemen t-1 ] \n[ NOT AT END imperative statemen t-2 ] \n \n1. The optional AT END  clause will \u2013 if present  on a READ  or RETURN  statement  \u2013 cause imperative -statement -1 to be \nexecuted if the READ  or RETURN  attempt fails due to a File-Status of 10 (end -of-file).  \n2. An AT END  clause WILL NOT DETECT OTHER NON -ZERO FILE -STATUS VALUES .  See Figure 4-15 for a list of possible \nFile-Statu s values.  \n", "start_char_idx": 2274, "end_char_idx": 2852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d5fd494-f66a-4397-abfd-bf89ccfabe62": {"__data__": {"id_": "3d5fd494-f66a-4397-abfd-bf89ccfabe62", "embedding": null, "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468", "node_type": "4", "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5cde96541054d1814e1d73ad4977841235f488b0cfe42eef8b76b5360c6cc187", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d890d02-c3b4-4c84-8138-46337a87f991", "node_type": "1", "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "837c9d1ce3e0684089117328c6a2c1574fad1c3c4847673ac690024547bc8c01", "class_name": "RelatedNodeInfo"}}, "text": "3. Use a DECLARATIVES  routine (section) or an explicitly -declared file status field tested after the READ  or RETURN  to \ndetect error conditions other than end -of-file. \n4. An optional NOT AT END  clause will cause imperative -statement -2 to be executed if the READ  or RETURN attempt \nis successful.  ", "start_char_idx": 2852, "end_char_idx": 3159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6c775f8-c44a-4fad-8a6c-c8922406a985": {"__data__": {"id_": "c6c775f8-c44a-4fad-8a6c-c8922406a985", "embedding": null, "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5", "node_type": "4", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1eaf3b273c899b00928c24c030718eb936179c45f835a0aa1aa46f512cca72fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "485ec083-4189-4610-a49f-9bf46026e888", "node_type": "1", "metadata": {}, "hash": "9a1b0e266dbe5b536f37971b71b8c15051d38b82fd52e30cf87ed331115bcecd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-16 5. See Also\u2026  \nUsing DECLARATIVES  6.1.4  \nThe READ Statement  6.4.31  \n The RETURN  Statement  6.2.35  \n \n6.1.12.2.  CORRESPONDING Option  \nThree GNU COBOL  verbs \u2013 ADD  (section 6.4.2.3 ), MOVE  (section 6.4.26.2 ) and SUBTRACT  (section 6.4.44.3 ) support the \nuse of a \u201c CORRESPONDING \u201d option that allows multiple data items within one group item ( group -item -1 \u2013 the first \nnamed on the statement) to be paired with multiple corresponding data items (hence the name) in a second group item \n(group -item -2 \u2013 the second named on the statement).  The contents of group -item -1 will remain unaffected by the \nstatement whil e one or more data items within group -item -2 will be changed.  \nIn order for data -item -1, defined subordinate to group item group -item -1 to be a \u201c CORRESPONDING \u201d match to data -\nitem -2 which is subordinate to group -item -2, each of the following must be true:  \n1. Both data -item -1 and data -item -2 must have the same name, and that name may not explicitly or implicitly be \nFILLER . \n2. Both data -item -1 and data -item -2\u2026 \na. \u2026must exist at the same relative structural \u201cdepth\u201d of definition within group -item -1 and group -item -2, \nrespectively  \nb. \u2026and all \u201cparent\u201d data items defined within each group item must have identical (but non -\u201cFILLER \u201d) names.  \n3. When used with a MOVE  verb\u2026  \na. \u2026one of data -item -1 or data -item -2 (but not both) is allowed to be a group item  \nb. \u2026and it mu st be valid to MOVE  data -item -1 TO data -item -2.   \n4. When used with ADD  or SUBTRACT  verbs, both  data -item -1 and data -item -2 must be numeric, elementary, \nunedited items.  Stated in different terms, neither data -item -1 nor data -item -2 may be group, alphabetic, \nalphanumeric or numeric -edited items.  \n5. Neither data item -1 nor data -item -2 may be a REDEFINES  or RENAMES  of another data item.  \n6. Neither data item -1 nor data -item -2 may have an OCCURS  clause.  Either may contain  subordinate data items that \nhave an OCCURS  clause, however (assuming rule 3a applies)  \nObserve the following two group item structures\u2026  \n03  X. \n    05 A         PIC 9(1).  \n    ", "start_char_idx": 0, "end_char_idx": 2219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "485ec083-4189-4610-a49f-9bf46026e888": {"__data__": {"id_": "485ec083-4189-4610-a49f-9bf46026e888", "embedding": null, "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5", "node_type": "4", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1eaf3b273c899b00928c24c030718eb936179c45f835a0aa1aa46f512cca72fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6c775f8-c44a-4fad-8a6c-c8922406a985", "node_type": "1", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1fe7c57d8180f39ef5e5821a08c51a9eb63eded7abb400a1c9807d326d9e70f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af101114-6d8f-4f73-bfa9-63e041d150f4", "node_type": "1", "metadata": {}, "hash": "7a82f1eea15eefef44e47863f231730c3d9405b086757540d9452df8ed8353b4", "class_name": "RelatedNodeInfo"}}, "text": "05 G1. \n       10 G2. \n          15 B   PIC X(1).  \n    05 C. \n       10 FILLER PIC X(1).  \n    05 G3. \n       10 G4. \n          15 D   PIC X(1).  \n    05 E         PIC X(1).  \n    05 F         REDEFINES V1 PIC X(1).  \n    05 G. \n       10 G6     OCCURS 4 TIMES PIC X(1).  \n    05 H         PIC X(4).  \n    05 I         PIC 9(1).  \n    05 J. \n       10 K. \n          15 M   PIC X(1).  01  Y. \n    02 A         PIC X(1).  \n    02 G1. \n       03 G2. \n          04 B   PIC X(1).  \n    02 C         PIC X(1).  \n    02 G3. \n       03 G5. \n          04 D   PIC X(1).  \n       03 G6     PIC X(1).  \n    02 E         PIC 9(1).  \n    02 F         PIC X(1).  \n    02 G         PIC X(4).  \n    02 H         OCCURS 4 TIMES PIC X(1).  \n    66 I         RENAMES E.  \n    ", "start_char_idx": 2219, "end_char_idx": 2976, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af101114-6d8f-4f73-bfa9-63e041d150f4": {"__data__": {"id_": "af101114-6d8f-4f73-bfa9-63e041d150f4", "embedding": null, "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5", "node_type": "4", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1eaf3b273c899b00928c24c030718eb936179c45f835a0aa1aa46f512cca72fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "485ec083-4189-4610-a49f-9bf46026e888", "node_type": "1", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ed978c6f7a4e0445242a5a519e54de38c26eaa6f1b5fceabb469d2e3cd495073", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74e7d57b-b19e-47b5-bdc5-1d90f447072f", "node_type": "1", "metadata": {}, "hash": "1d2c6c49582bc1efcd15e0b146a19c7e4de7ad154622fab4e99fb2179796c93b", "class_name": "RelatedNodeInfo"}}, "text": "02 J. \n       03 K. \n          ", "start_char_idx": 2976, "end_char_idx": 3007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74e7d57b-b19e-47b5-bdc5-1d90f447072f": {"__data__": {"id_": "74e7d57b-b19e-47b5-bdc5-1d90f447072f", "embedding": null, "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5", "node_type": "4", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1eaf3b273c899b00928c24c030718eb936179c45f835a0aa1aa46f512cca72fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af101114-6d8f-4f73-bfa9-63e041d150f4", "node_type": "1", "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "54bb737f873259f758a1f52580ffe8c21b3d22c521858c76efd858934f0ec4b9", "class_name": "RelatedNodeInfo"}}, "text": "04 L. \n             05 M. \n \nThe following are the valid CORRESPONDING  matches, assuming the statement MOVE CORRESPONDING X TO Y  is \nbeing used (there are no valid CORRESPONDING  matches for ADD CORRESPONDING  or SUBTRACT CORRESPONDING  \nbecause every potential matchup violates rule #4): A, B, C, G  \nThe following are the \u201c CORRESPONDING \u201d matchups that failed, and the reasons why they fail ed. ", "start_char_idx": 3007, "end_char_idx": 3407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd070148-fcae-4038-8d3e-dd9d9d492d4e": {"__data__": {"id_": "dd070148-fcae-4038-8d3e-dd9d9d492d4e", "embedding": null, "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "150cf30b-f370-4a8b-8a07-f32f0e12ba96", "node_type": "4", "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4f69ec6021ef035dda502ccc4258578895686898121ae9537da0fca9a89c8db1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c775314-cdf2-4d9d-afdb-74efd0936ec0", "node_type": "1", "metadata": {}, "hash": "261367c2f5a6cde17472762879509f77b323b1ce92b002fe1c5667d9b2e7c5cd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-17 D Fails due to rule #2b  \nE Fails due to rule #3b  \nF Fails due to rule #5  \nG1 Fails due to rule #3a  \nG2 Fails due to rule #3a  G3 Fails due to rule #3a  \nG4 Fails due to rule #1  \nG5 Fails due to rule #1  \nG6 Fails due to rule #6  \nH Fails due to rule #6  I Fails due  to rule #5  \nJ Fails due to rule #3a  \nK Fails due to rule #3a  \nL Fails due to rule #1  \nM Fails due to rule #2a  \nSee Also\u2026  \nThe ADD CORRESPONDING Statement  4 \nThe MOVE CORRESPONDING  Statement  6.2.26.2  \n The SUBTRACT CORRESPONDING  \nStatement  6.2.44.3  \n \n6.1.12.3.  INVALID KEY / NOT INVALID KEY  \nINVALID KEY  clauses may be specified on DELETE , \nREAD  (Random), REWRITE , START  and WRITE  \nstatements.  ", "start_char_idx": 0, "end_char_idx": 770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c775314-cdf2-4d9d-afdb-74efd0936ec0": {"__data__": {"id_": "6c775314-cdf2-4d9d-afdb-74efd0936ec0", "embedding": null, "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "150cf30b-f370-4a8b-8a07-f32f0e12ba96", "node_type": "4", "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4f69ec6021ef035dda502ccc4258578895686898121ae9537da0fca9a89c8db1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd070148-fcae-4038-8d3e-dd9d9d492d4e", "node_type": "1", "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "efa6ce9579088677afdfac62ce86240ee90fa0f38b40d86f2bfc0381b1dff073", "class_name": "RelatedNodeInfo"}}, "text": "[ ON INVALID KEY     imperative statemen t-1 ] \n[ NOT ON INVALID KEY imperative statemen t-2 ] \n \nSpecification of an INVALID KEY  clause will allow your program to trap an I/O failure condition (with an I/O error code in \nthe file\u2019s FILE-STATUS  field) that has occurred due to a record -not-found condition and handle it gracefully.   \nSee Also\u2026  \nDefining File Characteristics (SELECT)  4.2.1  \nFILE-STATUS Values  Figure \n4-15 \nThe DELETE  Statement  6.4.11  \n The Random READ  Statement  6.2.31.2  \nThe REWRITE  Statement  6.4.36  \nThe START  Statement  6.2.41  \nThe WRITE  Statement  6.4.50  \n \n6.1.12.4.  ON EXCEPTION / NOT ON EXCEPTION  \nEXCEPTION  clauses may be specified on ACCEPT , CALL  \nand DISPLAY  statements.  [ ON EXCEPTION  ERROR     imperative statemen t-1 ] \n[ NOT ON EXCEPTION  ERROR imperative statemen t-2 ] \n \nSpecification of an ON EXCEPTION  clause will allow your program to trap the failure condition that has occurred and \nhandle it gracefully.  If such a condition occurs at runtime without having one of these clauses specified, an error \nmessage will be generated (by the GNU COBOL  runtime lib rary) to the SYSERR  device (pipe 2).  The program may also \nbe terminated, depending upon the type and severity of the error.  \nSee Also\u2026  \nThe ACCEPT  Statement (Command Line)  6.2.1.2  \nThe ACCEPT  Statement (Screen Data)  6.4.1.4  \nThe CALL  Statement  6.4.5  \nThe DISPLAY  Statement (Console/Stdout)  6.2.12.1  \n The DISPLAY  Statement (Command Line)  6.2.12.2  \nThe DISPLAY  Statement (Environment)  6.2.12.3  \nThe DISPLAY  Statement (Screen Data)  6.4.12.4  \n \n6.1.12.5.  ON OVERFLOW / NOT ON OVERFLOW  \nOVERFLOW  clauses may be specified on CALL , STRING  \nand UNSTRING  statements.  [ ON OVERFLOW  ERROR     imperative statemen t-1 ] \n[ NOT ON OVERFLOW  ERROR imperative statemen t-2 ] \n \nSpecification of an ON OVERFLOW  clause will allow your program to trap the failure condition that has occurred and \nhandle it gracefully.  If such a condition o ccurs at runtime without having one of these clauses specified, an error \nmessage will be generated (by the GNU COBOL  runtime library) to the SYSERR device (pipe 2).  The program may also be \nterminated, depending upon the type and severity of the error.  ", "start_char_idx": 770, "end_char_idx": 3015, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f35ccf0-b7d5-44f8-b40d-9709f11d5ce0": {"__data__": {"id_": "5f35ccf0-b7d5-44f8-b40d-9709f11d5ce0", "embedding": null, "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1993620f-4e63-4723-8697-725614a1e458", "node_type": "4", "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49aca459bfdf5921b1d2f9b2b87f2d8e86c7c553e3d393c5cecf4d0c342cd625", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e11717db-52d8-4880-b293-883ce900a9dd", "node_type": "1", "metadata": {}, "hash": "148f151f6dccd75c36c0a15c5910c481e4415c5f6f6cc3837d2e72588f58e95f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-18 See Also\u2026  \nThe CALL  Statement  6.4.5  \nThe STRING  Statement  6.2.43  \n The UNSTRING  Statement  6.2.49  \n \n6.1.12.6.  ON SIZE ERROR / NOT ON SIZE ERROR  \nSIZE ERROR  clauses may be included on ADD , COMPUTE , \nDIVIDE , MULTIPLY  and SUBTRACT  statements.  [ ON SIZE ERROR     imperative statemen t-1 ] \n[ NOT ON SIZE ERROR imperative statemen t-2 ] \n \nSpecification of an ON SIZE ERROR  clause will allow your program to trap the failure condition that has occurred and \nhandle it gracefully.  Field size overflow conditions occur silently, usually without any runtime messages being \ngenerated, even though such events rarely lend themselves t o generating correct results.  Division by zero errors, when \nno ON SIZE ERROR  clause exists , will produce an error message (by the GNU COBOL  runtime library) to the SYSERR \ndevice (pipe 2)  and will also abort the program.  \nSee Also\u2026  \nThe ADD  Statement  6.4.2  \nThe COMPUTE  Statement  6.4.9  \nThe DIVIDE  Statement  6.4.13  \n The MULTIPLY  Statement  6.4.27  \nThe SUBTRACT  Statement  6.4.44  \n \n6.1.12.7.  Rounding Options  \nGNU COBOL  provides for control over the final \nrounding process applied to the receiving fields \non all arithmetic verbs.  Each of the arithmetic \nstatements ( ADD , COMPUTE , DIVIDE , \nMULTIPLY  and SUBTRACT ) statements provide \nan optional ROUNDED  clause to each receiving \ndata item.  The syntax of this clause is shown to \nthe right . \n", "start_char_idx": 0, "end_char_idx": 1507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e11717db-52d8-4880-b293-883ce900a9dd": {"__data__": {"id_": "e11717db-52d8-4880-b293-883ce900a9dd", "embedding": null, "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1993620f-4e63-4723-8697-725614a1e458", "node_type": "4", "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49aca459bfdf5921b1d2f9b2b87f2d8e86c7c553e3d393c5cecf4d0c342cd625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f35ccf0-b7d5-44f8-b40d-9709f11d5ce0", "node_type": "1", "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "32905c579169e4f73ae57e192d978a3f0064b32420e44f3fcf19f2cc4976e858", "class_name": "RelatedNodeInfo"}}, "text": "The following rules apply to the rounding \nbehavior induced by this clause.  \n \n1. Rounding only applies when the result being saved to the receiving field having a ROUNDED  clause is a non -integer \nvalue  \n2. Absence of a ROUNDED  clause is the same as specifying ROUNDED MODE IS TRUNCATION . \n3. Use of a ROUNDED  clause without a MODE  specification is the same as specifying ROU NDED MODE IS NEAREST -\nAWAY -FROM -ZERO . \n4. The behavior of the eight different rounding modes is defined in the following table.  \nROUNDED MODEISAWAY-FROM-ZERO\nNEAREST-AWAY-FROM-ZERO\nNEAREST-EVEN\nNEAREST-TOWARD-ZERO\nPROHIBITED\nTOWARD-GREATER\nTOWARD-LESSER\nTRUNCATION", "start_char_idx": 1507, "end_char_idx": 2160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ff63954-d453-4f6d-a8a7-7cfc0f0edbcb": {"__data__": {"id_": "3ff63954-d453-4f6d-a8a7-7cfc0f0edbcb", "embedding": null, "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f758155d-13b4-4df9-a44b-1e9f07dfb994", "node_type": "4", "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d0538f07cb3bf3c0851f9b4e0489948bf9b86a1e4d44675e35053bcd4e2d3be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "733ab213-6668-48f9-9629-b94de514579a", "node_type": "1", "metadata": {}, "hash": "86bcbc5d79a9aed022507c12787c8735512d014bf99e076c54ea3406c9a27d95", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-19 Figure 6-18 - ROUNDED MODE Behavior  \nMODE  Behavior - Examples assume an integer  receiving field \u2013 An ellipsis (\u2026) indicates the last result value digit repeats  \nAWAY -FROM -\nZERO  Rounding is to the nearest value of larger \nmagnitude.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +3 -3.499\u2026  -4 \n-2.499\u2026  -3 +3.500  +4 \n+2.500  +3 -3.500  -4 \n-2.500  -3 3.510  +4 \n+3.499\u2026  +4 -3.510  -4 \nNEAREST -\nAWAY -FROM -\nZERO  Rounding is to the nearest value (larger or smaller). \n", "start_char_idx": 0, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "733ab213-6668-48f9-9629-b94de514579a": {"__data__": {"id_": "733ab213-6668-48f9-9629-b94de514579a", "embedding": null, "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f758155d-13b4-4df9-a44b-1e9f07dfb994", "node_type": "4", "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d0538f07cb3bf3c0851f9b4e0489948bf9b86a1e4d44675e35053bcd4e2d3be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ff63954-d453-4f6d-a8a7-7cfc0f0edbcb", "node_type": "1", "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6882f9a8f5b9770d1824582c7dff9c16fb07a3abfad64a56b7cdc71f3b74385", "class_name": "RelatedNodeInfo"}}, "text": "If two values are equally near, the value with the \nlarger absolute value is selected.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +2 -3.499\u2026  -3 \n-2.499\u2026  -2 +3.500  +4 \n+2.500  +3 -3.500  -4 \n-2.500  -3 3.510  +4 \n+3.499\u2026  +3 -3.510  -4 \nNEAREST -EVEN  Rounding is to the nearest value (larger or smaller). \nIf two values are equally near, the value whose \nrightmost digit is even is selected. This mode is \nsometimes called \"Banker's rounding\".  Result  Becomes   Result  Becomes  \n+2.499\u2026  +2 -3.499\u2026  -3 \n-2.499\u2026  -2 +3.500  +4 \n+2.500  +2 -3.500  -4 \n-2.500  -2 3.510  +4 \n+3.499\u2026  +3 -3.510  -4 \nNEAREST -\nTOWARD -ZERO  Rounding is to the nearest value (larger or smaller). \nIf two values are equally near, the value with the \nsmaller absolute value is selected.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +2 -3.499\u2026  -3 \n-2.499\u2026  -2 +3.500  +3 \n+2.500  +2 -3.500  -3 \n-2.500  -2 3.510  +4 \n+3.499\u2026  +3 -3.510  -4 \nPROHIBITED  No rounding is performed.  If the value cannot be \nrepresented exactly in the desired format, the EC -\nSIZE-TRUNCATION condition  (exception code 1005 ) \nis set to exist (and may be retrieved via the ACCEPT  \nstatement) and the results of the operation are \nundefined.  Result  Becomes   Result  Becomes  \n+2.499 \u2026 \nUndefined  -3.499 \u2026 \nUndefined  -2.499 \u2026 +3.500  \n+2.50 0 -3.500  \n-2.500 +3.510  \n+3.4 99\u2026 -3.510  \nTOWARD -\nGREATER  Rounding is toward the nearest value whose \nalgebraic value is larger.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +3 -3.499\u2026  -3 \n-2.499\u2026  -2 +3.500  +4 \n+2.500  +3 -3.500  -3 \n-2.500  -2 3.510  +4 \n+3.499\u2026  +4 -3.510  -3 \nTOWARD -\nLESSER  Rounding is toward the nearest value whose \nalgebraic value is smaller.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +2 -3.499\u2026  -4 \n-2.499\u2026  -3 +3.500  +3 \n+2.500  +2 -3.500  -4 \n-2.500  -3 3.510  +3 \n+3.499\u2026  +3 -3.510  -4 \nTRUNCATION  Rounding is to the nearest value whose magnitude \nis smaller.  Result  Becomes   Result  Becomes  \n+2.499\u2026  +2 -3.499\u2026  -3 \n-2.499\u2026  -2 +3.500  +3 \n+2.500  +2 -3.500  -3 \n-2.500  -2 3.510  +3 \n+3.499\u2026  +3 -3.510  -3 \nSee Also\u2026  \nThe ACCEPT  Statement (Run -time Info)  6.2.1.7  \nThe ADD  Statement  6.4.2  \nThe COMPUTE  Statement  6.4.9  \n The DIVIDE  Statement  6.4.13  \nThe MULTIPLY  Statement  6.4.27  \nThe SUBTRACT  Statement  6.4.44  \n \n6.1.13.  Special Registers  ", "start_char_idx": 560, "end_char_idx": 2886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c114f1df-ea3f-496c-9749-99e4cfc8356e": {"__data__": {"id_": "c114f1df-ea3f-496c-9749-99e4cfc8356e", "embedding": null, "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03a05338-d801-422b-9a7a-b05a81b85bc7", "node_type": "4", "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30502ab51e040f221245c2ee9c1455836be62db8b38127fdf554834ac080af34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3723ffa7-5af5-4654-a39a-e84038aa2241", "node_type": "1", "metadata": {}, "hash": "9940a40a9d8c1046aa29e5ad283b38734fb82c3e5e3e93cdda32d4c2c1544ad4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-20 GNU COBOL , like other COBOL dialects, includes a number of data items that are automatically available to a \nprogrammer without the need to actually define them in the DATA DIVISION .  COBOL refers to such items as registers \nor special registers.  The special registers available to a GNU COBOL  program are as follows:  \nFigure 6-19 - Special Registers  \nRegister Name  Implied COBOL \nPIC/USAGE23 Usage  \nCOB -CRT-STATUS  PIC 9(4)  This is the default data item allocated for use by format 4 of \nthe ACCEPT  statement.  \nDEBUG -ITEM  \nSubordinate items:  \nDEBUG -LINE  \nDEBUG -NAME  \nDEBUG -SUB -1 \nDEBUG -SUB -2 \nDEBUG -SUB -3 \nDEBUG -CONTENTS  PIC X(88)  \n(group item)  A group item in which debugging information generated by a \nUSE FOR DEBUGGING  section  in the DECLARATIVES  area will \nplace information documenting why the USE FOR \nDEBUGGING  procedure was invoked.   \nLINAGE -COUNTER  BINARY -LONG \nSIGNED  An occurrence of this register exists for each SELECT ed file \nhaving a LINAGE  clause.  If there are multiple files whose FDs \nhave a LINAGE  clause, any explicit references to this register \nwill require qualification (using \u201c OF file-name \u201d). \nThe value of this register will be the current logical line \nnumber within the page body.  \n", "start_char_idx": 0, "end_char_idx": 1339, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3723ffa7-5af5-4654-a39a-e84038aa2241": {"__data__": {"id_": "3723ffa7-5af5-4654-a39a-e84038aa2241", "embedding": null, "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03a05338-d801-422b-9a7a-b05a81b85bc7", "node_type": "4", "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30502ab51e040f221245c2ee9c1455836be62db8b38127fdf554834ac080af34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c114f1df-ea3f-496c-9749-99e4cfc8356e", "node_type": "1", "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31912c51941ce03016fa278e6f3c3f258eebb1a06547ec98fb31f0996c0dd0c6", "class_name": "RelatedNodeInfo"}}, "text": "DO NOT MODIFY THE CONTENTS OF THIS REGISTER.  \nNUMBER -OF-CALL -\nPARAMETERS  BINARY -LONG \nSIGNED  This register contains the number of arguments passed to a \nsubroutine \u2013 the same value that would be returned by the \nC$NARG  built -in subroutine.  Its value will be zero when \nreferenced in a main program .  This register, when \nreferenced from within a user -defined function, returns a \nvalue of one (1) if the function has any number of arguments \nand a zero if it has no arguments.  \nRETURN -CODE  BINARY -LONG \nSIGNED  This register provides a numeric data item into which a \nsubroutine may MOVE  a value prior to transferring control \nback to the program that CALL ed it, or into which a main \nprogram may MOVE  a value before r eturning control to the \noperating system.  \nMany built -in subroutines will return a value using this \nregister.  \nThese values are \u2013 by convention \u2013 used to signify success \n(usually with a value of 0) or failure (usually with a non -zero \nvalue) of the process th e program setting the RETURN -CODE  \nvalue was attempting to perform.  \nChapter 0 discusses the role this special register plays with \nsubprograms.  \nSORT -RETURN  BINARY -LONG \nSIGNED  This register is used to report the success/fail status of a \nRELEASE  or RETURN  statement.  A value of 0 is reported on \nsuccess.  A value of 16 denotes failure.  An \u201c AT END \u201d \ncondition on a RETURN  is not considered a failure.  \nWHEN -COMPILED  PIC X(16)  This register contains the date and time the program was \ncompiled in the format \u201cmm/dd/yyhh.mm.ss\u201d.  Note that \nonly a two -digit year is provided.  \n                                                                 \n23 See sect ions  5.2.1.6  and 5.2.1.11  for a descr iption of the PICTURE and USAGE specifications , respectively  ", "start_char_idx": 1339, "end_char_idx": 3123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5abc906a-20a8-48ca-b34d-8d8293981f7f": {"__data__": {"id_": "5abc906a-20a8-48ca-b34d-8d8293981f7f", "embedding": null, "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "815ba303-bcad-4831-b9c5-e2d78985749a", "node_type": "4", "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1897ec24915c1b3f81d006ba4b5179645e812b8400a76e1b08589f6b77dd57a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac909690-6913-43f3-95b3-d2e277b5ae28", "node_type": "1", "metadata": {}, "hash": "58fab2bf7789585edb259befbcf1f6c7ca881041f5a880ecce1ac45451892096", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-21 See Also\u2026  \nDescribing the Structure of a File (FD/SD)  5.1 \nUsing DECLARATIVES  6.1.4  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \n The RELEASE  Statement  6.2.33  \nThe RETURN Statement  6.2.35  \nThe C$NARG  Subroutine  8.3.1.9  \n \n6.1.14.  Intrinsic Functions  \nGNU COBOL  supports a variety of \u201cintrinsic functions\u201d that may be used anywhere in the PROCEDURE DIVISION  where \na literal is allowed.  For example:  \nMOVE FUNCTION LENGTH(Employee -Last-Name) TO Employee -LN-Len. \nNote how the word \u201c FUNCTION \u201d is part of the syntax when you use an intrinsic function.  You can use intrinsic functions \nwithout having to include the reserved word FUNCTION  via settings in the REPOSITORY  paragraph of the \nCONFIGURATION SECTION .  You may accomplish the same thing my specifying the \u201c -fintrinsics \u201d option to the GNU \nCOBOL  compiler when you compile your programs.  \nThe following intrinsic functions, known to other \u201cdialects\u201d of COBOL, are defined to GNU COBOL  as reserved words but \nare not otherwise implemented currently.  Any attempts to use these functions will result in a compile -time error \nmessage.  \nBOOLEAN -OF-INTEGER  FORMATTED -CURRENT -DATE  INTEGER -OF-FORMATTED -DATE  \nCHAR -NATIONAL  FORMATTED -DATE  NATIONAL -OF \nDISPLAY -OF FORMATTED -DATETIME  STANDARD -COMPARE  \nEXCEPTION -FILE-N FORMATTED -TIME  TEST-FORMATTED -DATETIME  \nEXCEPTION -LOCATION -N INTEGER -OF-BOOLEAN   \nThe supported intrinsic functions are listed in the following sections , along with  their syntax and usage notes.  \nSee Also\u2026  \nThe REPOSITORY  Paragraph  4.1.3  \n Compiler Switches Reference  8.1.2  \n \n6.1.14.1.  ABS( number )  \nDetermines and returns the absolute value of the number  (a numeric literal or data item) supplied as an argument.  \n6.1.14.2.  ACOS( cosine ) \nThe ACOS function d etermines and returns the trigonometric arc -cosine, or inverse cosine, of the cosine  value (a \nnumeric literal or data item) supplied as an argument.  \n6.1.14.3.  ", "start_char_idx": 0, "end_char_idx": 2048, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac909690-6913-43f3-95b3-d2e277b5ae28": {"__data__": {"id_": "ac909690-6913-43f3-95b3-d2e277b5ae28", "embedding": null, "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "815ba303-bcad-4831-b9c5-e2d78985749a", "node_type": "4", "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1897ec24915c1b3f81d006ba4b5179645e812b8400a76e1b08589f6b77dd57a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5abc906a-20a8-48ca-b34d-8d8293981f7f", "node_type": "1", "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "45152501f65bc7da0b1b8410a1c3e7cbf93f1e3f3fcb0f2a5c196d2302fad33c", "class_name": "RelatedNodeInfo"}}, "text": "ANNUITY( interest -rate , number -of-periods ) \nThis function returns  a numeric value approximating  the ratio of an annuity paid at the specified interest -rate (numeric \ndata items or literals) for each of the specified number -of-periods  (numeric data items or literals) .  \nThe interest -rate is the rate of interest paid at each payment.  If you only have an annual interest rate and you wish to \ncompute annuity payments for monthly payments, divide the annual interest rate  by 12 and use that value for interest -\nrate on this function.   \nMultiply this result times the desired principal amount to determine the amount of each period\u2019s payment.  \nA note for the financially challenged: an annuity is basically a reverse loan; an accountant would take the result of this \nfunc tion multiplied by -1 to compute a loan payment you are making.  ", "start_char_idx": 2048, "end_char_idx": 2900, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2fef361-60ea-4db1-92de-0e885e1b13a8": {"__data__": {"id_": "e2fef361-60ea-4db1-92de-0e885e1b13a8", "embedding": null, "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01f6861f-ae8c-41fb-958d-11487bb3b509", "node_type": "4", "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c73bca1ee17dac966f4e4fef4070c166bafac7a93cd9e66b83c5b9d529cbb3ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5621613-626b-4b4d-8622-39e57422ea16", "node_type": "1", "metadata": {}, "hash": "9d76420d21e5b82fbc8e96731b0d6f397c2756cb663f7216480878ff9593e06b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-22 6.1.14.4.  ASIN( sine ) \nThe ASIN  function determines and returns the trigonometric arc -sine, or inverse sine, of the sine value (a numeric literal \nor data item)  supplied as an argument.  \n6.1.14.5.  ATAN( tangent ) \nUse this  function to determine and return the trigonometric arc -tangent , or inverse tangent , of the tangent  value (a \nnumeric literal or data item)  supplied as an argument.  \n6.1.14.6.  BYTE -LENGTH( string ) \nBYTE -LENGTH  returns the length \u2013 in bytes \u2013 of the specified string ( a group item, USAGE DISPLAY  elementary item or \nalphanumeric literal ).  This intrinsic function is identical to the  LENGTH -AN function.   Note that the value returned by \nthis function is not necessarily the number of characters  making up the string , but rather the number of actual bytes  \nrequired to store string .   \nFor example, if string  is encoded using a double -byte ch aracterset such as UNICODE (where each character is \nrepresented by 16 bits of storage, not the 8 -bits inherent to charactersets like ASCII or EBCDIC), then calling this \nfunction with a string  argument whose PICTURE  is X(4) would return a value of 8 rather than the value 4.  \n6.1.14.7.  CHAR( integer ) \nThis function returns the character in the ordinal position specified by the integer  argument (a numeric integer literal or \ndata item) from the collating sequence  being used by the program.    \nFor example, if the program is using the (default) ASCII characterset, CHAR(34) returns the 34th character in the ASCII \ncharacterset \u2013 an exclamation -point (\u201c!\u201d).   If you are using this function to convert a numeric value to i ts corresponding \nASCII character, you must use an argument value one greater than the numeric value.  \nIf an argument whose value is less than 1 or greater than 256 is specified, the character in the program collating \nsequence  corresponding to a value of all  zero bits is returned.  \nThe following code is an alternative approach when you just wish to convert a number to its ASCII equivalent:  \n01  Char -Value. \n    05 Numeric -Value        USAGE BINARY -CHAR. \n. \n", "start_char_idx": 0, "end_char_idx": 2184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5621613-626b-4b4d-8622-39e57422ea16": {"__data__": {"id_": "f5621613-626b-4b4d-8622-39e57422ea16", "embedding": null, "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01f6861f-ae8c-41fb-958d-11487bb3b509", "node_type": "4", "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c73bca1ee17dac966f4e4fef4070c166bafac7a93cd9e66b83c5b9d529cbb3ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2fef361-60ea-4db1-92de-0e885e1b13a8", "node_type": "1", "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1ffefdaba203d722291bc1096f7d233a821236e50ff4644c3809d7b2bc51a660", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3a6b636-1527-4d3e-bb25-2acf8b247902", "node_type": "1", "metadata": {}, "hash": "0c613efd61270f2da7f27a08c6ea3d34562960ca7cea3252815c40df12d6307b", "class_name": "RelatedNodeInfo"}}, "text": ". \n", "start_char_idx": 2128, "end_char_idx": 2131, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3a6b636-1527-4d3e-bb25-2acf8b247902": {"__data__": {"id_": "b3a6b636-1527-4d3e-bb25-2acf8b247902", "embedding": null, "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01f6861f-ae8c-41fb-958d-11487bb3b509", "node_type": "4", "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c73bca1ee17dac966f4e4fef4070c166bafac7a93cd9e66b83c5b9d529cbb3ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5621613-626b-4b4d-8622-39e57422ea16", "node_type": "1", "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "46511c886b8f600634e9fe16029723fe25d56e081a44bd6b57c5129df7be463b", "class_name": "RelatedNodeInfo"}}, "text": ". \n    MOVE numeric -character -value TO Numeric -Value \n    The Char -Value item now has the corresponding ASCII character value  \n6.1.14.8.  COMBINED -DATETIME( days , seconds ) \nThis function returns a 12 -digit result, the first seven digits of which are the integer value of the days  argument (a \nnumeric data item or literal)  and the last five of which are the integer value of the seconds  argument (also a numeric \ndata item or literal) . \nIf a days value less than 1 or greater than 3067671 is specified, or if a seconds va lue less than 1 or greater than 86400 is \nspecified, a value of 0 is returned and a runtime error will result.  \n6.1.14.9.  CONCATENATE( string -1 [, string -2 ] \u2026)  \nThis function  concatenates the string -1, string -2, \u2026 (group items, USAGE DISPLAY  elementary items and/or \nalphanumeric literals ) together into a single string result.  ", "start_char_idx": 2187, "end_char_idx": 3062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e86c68c-6cd7-466c-8b45-9ffbe2c75139": {"__data__": {"id_": "1e86c68c-6cd7-466c-8b45-9ffbe2c75139", "embedding": null, "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e", "node_type": "4", "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "feb2f37ebf81946068a11f97930c185c3681e7e840590f9eb76515239c06ceb6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68cf5b1f-46ef-492a-94c3-d10ec84559f6", "node_type": "1", "metadata": {}, "hash": "efca43abd586ceb4a42f2948983fa0ea27a2c55842b4340455579e297ad76c8a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-23 If a numeric literal or PIC 9  identifier is specified  as an argument , decimal points , if any,  will be removed and negative \nsigns in PIC S9  fields  or numeric literals will be inserted as defined by the SIGN  clause (or absence thereof) of the field.  \nNumeric literals are processed as if SIGN IS TRAILING  SEPARATE  were in effect.  \nSee Also\u2026  \nDefining Signed Data Items ( SIGN ) 5.2.1.9  \n  \n6.1.14.10.  COS (angle ) \nThe COS function determines and returns the trigonometric cosine of the angle  (a numeric literal or data item)  supplied \nas an argument.   The angle  is assumed to be a value expressed in radians.  \n", "start_char_idx": 0, "end_char_idx": 712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68cf5b1f-46ef-492a-94c3-d10ec84559f6": {"__data__": {"id_": "68cf5b1f-46ef-492a-94c3-d10ec84559f6", "embedding": null, "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e", "node_type": "4", "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "feb2f37ebf81946068a11f97930c185c3681e7e840590f9eb76515239c06ceb6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e86c68c-6cd7-466c-8b45-9ffbe2c75139", "node_type": "1", "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0f13d31edef4cfcbf883da427b8f14a038c1b7f6d4a6f09060d145c3eb4c813f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ef1b444-b2c9-4b86-80d9-50c3a864ab5f", "node_type": "1", "metadata": {}, "hash": "15e433c50b36fb8d2c08ae5d6af46fdb02044e892f5ec3ac3adf3b32d1fc140c", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.11.  CURRENCY -SYMBOL  \nThe CURRENCY -SYMBOL  function returns the currency symbol character currently in effect for the local e under which \nyour program is running.  On UNIX systems, your locale is established via the LANG environment variable.  On Windows, \nthe Control Panel\u2019s Regional and Language Options define the locale.  \nChanging the currency symbol via the SPECIAL -NAMES  para graph\u2019s CURRENCY SYMBOL  setting will not affect the value \nreturned by this function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.14.12.  CURRENT -DATE  \nReturns the current date and time as the following 21 -character structure:  \n01  CURRENT -DATE-AND-TIME. \n    05 CDT-Year                PIC 9(4).  \n    05 CDT-Month               PIC 9(2). *> 01 -12 \n    05 CDT-Day                 PIC 9(2). *> 01 -31 \n    05 CDT-Hour                PIC 9(2). *> 00 -23 \n    05 CDT-Minutes             PIC 9(2). *> 00 -59 \n    05 CDT-Seconds             PIC 9(2). *> 00 -59 \n    05 CDT-Hundredths -Of-Secs  PIC 9(2). *> 00 -99 \n    05 CDT-GMT-Diff-Hours      PIC S9(2)  \n                               SIGN LEADING SEPARATE.  \n    05 CDT-GMT-Diff-Minutes    PIC 9(2). *> 00 or 30  \nSince the CURRENT -DATE  function has no arguments, no parenthesis should be specified.  \n6.1.14.13.  DATE -OF-INTEGER( integer ) \nThis function returns a calendar date in yyyymmdd format.  The date is determined by adding the number of days \nspecified as integer  (a numeric integer data item or literal) to December 31, 1600.  For example, DATE -OF-INTEGER(1) \nreturns 16010101.  \nA value less than 1 or greater than 3067671 (9999/12/31) will return a result of 0.  \n6.1.14.14.  DATE -TO-YYYYMMDD( yymmdd  [, yy-cutoff  ] ) \nYou can use this function to convert the six-digit date specified as yymmdd  (a numeric integer data item or literal) t o an \neight -digit format (yyyymmdd).  The optional yy-cutoff  (a numeric integer data item or literal)  argument is the year \ncutoff used to delineate centuries; if the year componen t of the date meets or exceeds this cutoff value, the result will \nbe 19yymmdd; if the year component of the date is less than the cutoff value, the result will be 20yymmdd.  The default \ncutoff value if no second argument is given will be 50.  \n", "start_char_idx": 712, "end_char_idx": 2974, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ef1b444-b2c9-4b86-80d9-50c3a864ab5f": {"__data__": {"id_": "4ef1b444-b2c9-4b86-80d9-50c3a864ab5f", "embedding": null, "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e", "node_type": "4", "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "feb2f37ebf81946068a11f97930c185c3681e7e840590f9eb76515239c06ceb6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68cf5b1f-46ef-492a-94c3-d10ec84559f6", "node_type": "1", "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "16fab85cacac015f69f341744a5ef60133400a8e209d3789c2fbfdcc3eb2d955", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.15.  DAY -OF-INTEGER (integer ) ", "start_char_idx": 2974, "end_char_idx": 3013, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c77481a-758d-481d-9a84-b9c669135516": {"__data__": {"id_": "8c77481a-758d-481d-9a84-b9c669135516", "embedding": null, "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72971d80-bda9-4c0f-be03-786304d2a533", "node_type": "4", "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3fe8e15a801a583202c488e2d8d84d252aa7a6ebd4e25a89230bde8d5eb4a847", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32e6622b-d604-4968-b742-9e32703d0a00", "node_type": "1", "metadata": {}, "hash": "0b228dc728b54c8f35ffb5ea06c7a2899edb4a1fb42d102a2288e1f6764e7683", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-24 This function returns a calendar date in yyyyddd (i.e. Julian) format.  The date is determined by adding the number of \ndays specified as integer  (a numeric integer data item or literal)  to De cember 31, 1600.  For example, DATE -OF-\nINTEGER(1) returns 1601001.  \nA value less than 1 or greater than 3067671 (9999/12/31) will return a result of 0.  \n6.1.14.16.  DAY -TO-YYYYDDD( yyddd  [, yy-cutoff ]) \nYou can use th is function to convert the five-digit Julian date specified as yyddd (a numeric integer data item or literal) \nto a seven -digit Julian format (yyyyddd).  The optional  yy-cutoff  argument (a numeric integer data item or literal) is the \nyear cutoff used to delineate centuries; if the year component of the date meets or exceeds this cutoff value, the result \nwill be 19yyddd; if the year component of the date is less than the cutoff, the result will be 20yyddd.  The default cutoff \nvalue if no second argument is  given will be 50.  \n", "start_char_idx": 0, "end_char_idx": 1040, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32e6622b-d604-4968-b742-9e32703d0a00": {"__data__": {"id_": "32e6622b-d604-4968-b742-9e32703d0a00", "embedding": null, "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72971d80-bda9-4c0f-be03-786304d2a533", "node_type": "4", "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3fe8e15a801a583202c488e2d8d84d252aa7a6ebd4e25a89230bde8d5eb4a847", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c77481a-758d-481d-9a84-b9c669135516", "node_type": "1", "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "329fd368d666042acdb5df0f3cb6dfd230517e9caf31a2a7ae530456fb4ec6a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bb7bce8-78ce-4177-84cc-e1a0c1f74e4c", "node_type": "1", "metadata": {}, "hash": "8c21b54206a1567d915e440dc2fb714b49901004177280d1983d0970ec412478", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.17.  E \nThis function returns the mathematical constant \u201cE\u201d (the base of natural logarithms).  The maximum precision with \nwhich this value may be returned is 2.7182818284590452353602874713526625.  \nSince  the E function has no arguments, no parenthesis should be specified.  \n", "start_char_idx": 1040, "end_char_idx": 1324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bb7bce8-78ce-4177-84cc-e1a0c1f74e4c": {"__data__": {"id_": "6bb7bce8-78ce-4177-84cc-e1a0c1f74e4c", "embedding": null, "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72971d80-bda9-4c0f-be03-786304d2a533", "node_type": "4", "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3fe8e15a801a583202c488e2d8d84d252aa7a6ebd4e25a89230bde8d5eb4a847", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32e6622b-d604-4968-b742-9e32703d0a00", "node_type": "1", "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f31388c4f596abc228cbf422f7daeb08a954169d7f1e348eb7de7c3d945b6a89", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.18.  EXCEPTION -FILE  \nThis function returns I/O exception information from the most -recently executed input or output statement.  The \ninformation is returned to a structure resembling the following:  \n01  INPUT -OUTPUT-EXCEPTION.  \n    05 IOE-FILE-STATUS            PIC 9(2).  \n    05 IOE-FILE-SELECT-NAME       PIC X(32).  \nSee Figure  4-15 for information about possible file -status values.  \nThe name returned after the file status information will be the \u201c SELECT \u201d name of the file, and it will be returned only  if \nthe returned file status value is n ot 00.  \nSince the EXCEPTION -FILE function has no arguments, no parenthesis should be specified.  \nThe documentation of the CBL_ERROR_PROC built -in subroutine illustrates the use of this function.  \nSee Also\u2026  \nThe CBL_ERROR_PROC  Subroutine  8.3.1.24  \n  \n6.1.14.19.  EXCEPTION -LOCATION  \nThis function returns exception information from the most -recently failing statement.  The information is returned to a \n1023 character string in one of the following formats, depending on the nature of the failure:  \n primary -entry -point -name ; paragraph  OF section ; statement -number  \n primary -entry -point -name ; section; statement -number  \n primary -entry -point -name ; paragraph ; statement -number  \n primary -entry -point -name ; statement -number  \nSince the EXCEPTION -LOCATION  function has no arguments, no parenthesis should be specified.  \nThe program must be compiled with the \u201c-debug \u201d , \u201c-ftraceall \u201d  or \u201c-g\u201d  option for this function to return any \nmeaningful information.  \nThe documentation of the CBL_ERROR_PROC built -in subroutine il lustrates the use of this function.  ", "start_char_idx": 1324, "end_char_idx": 2991, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d49af94-5939-4a88-93a1-9aede3da405a": {"__data__": {"id_": "5d49af94-5939-4a88-93a1-9aede3da405a", "embedding": null, "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900", "node_type": "4", "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dbbbd56367f908ab885207b18928803e66278c9428942859e0d79433c4d201d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7c6278d-b606-4a51-87ee-4403ba8edaaa", "node_type": "1", "metadata": {}, "hash": "7658259a4573e78f373b8c9a24e3a349fa6dc7cc6db2dd2a0bacb50e21574c03", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-25 See Also\u2026  \nThe CBL_ERROR_PROC  Subroutine  8.3.1.24  \n  \n6.1.14.20.  EXCEPTION -STATEMENT  \nThis function returns the most -recent COBOL statement that generated an exception condition.  \nSince the EXCEPTION -STATEMENT  function has no arguments, no parenthesis should be specified.  \nThe program must be compiled with the \u201c-debug \u201d , \u201c-ftraceall \u201d  or \u201c-g\u201d  option for this function to return any \nmeaningful information.  \nThe documentation of th e CBL_ERROR_PROC built -in subroutine illustrates the use of this function.  \nSee Also\u2026  \nThe CBL_ERROR_PROC  Subroutine  8.3.1.24  \n  \n6.1.14.21.  EXCEPTION -STATUS  \nThis function returns the error type (as a text string) from the most -recent COBOL statement that generated an \nexception condition.   Figure 6-28 shows a list of possible error types.  \nSince the EXCEPTION -STATUS  function has no arguments, no parenthesis should be specified.  \nThe documentation of the CBL_ERROR_PROC built -in subroutine illustrates the  use of this function.  \n", "start_char_idx": 0, "end_char_idx": 1084, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7c6278d-b606-4a51-87ee-4403ba8edaaa": {"__data__": {"id_": "f7c6278d-b606-4a51-87ee-4403ba8edaaa", "embedding": null, "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900", "node_type": "4", "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dbbbd56367f908ab885207b18928803e66278c9428942859e0d79433c4d201d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d49af94-5939-4a88-93a1-9aede3da405a", "node_type": "1", "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "235cf22567cd9eaef5d0a76b2ed72522619b7405c12e5c5c03832c9c146d08b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54b1bd4f-bf4d-4b0a-802d-460dba63d387", "node_type": "1", "metadata": {}, "hash": "15955f8a3b9072f7565335974e26eee8381f25936b872a4337a705f81cfd963c", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe CBL_ERROR_PROC  Subroutine  8.3.1.24  \n  \n6.1.14.22.  EXP( number ) \nComputes and returns the value of the mathematical constant \u201ce\u201d raised to the power specified by number  (a numeric \nliteral or data item) . \n6.1.14.23.  EXP10( number ) \nComputes and returns the value of 10 raised to the power specified by number  (a numeric literal or data item) . \n6.1.14.24.  FACTORIAL( number ) \nThis function computes and returns the factorial value of number  (a numeric  literal or data item) . \n6.1.14.25.  FRACTION -PART( number ) \nThis function returns that portion of number  that occurs to the right of the decimal point.  Number  must be a numeric \ndata item or a numeric literal.  FRACTION -PART(3.1415),  for example, returns a value of 0.1415.  This function is \nequivalent to the expression:  \nnumber  \u2013 FUNCTION INTEGER -PART( number ) \n6.1.14.26.  HIGHEST -ALGEBRAIC( numeric -identifier ) \nThis funct ion returns the highest (i.e. largest or farthest away from 0 in a positive direction if numeric -identifier  is \nsigned) value that could possibly be stored in the specified numeric -identifier . \n6.1.14.27.  ", "start_char_idx": 1084, "end_char_idx": 2218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54b1bd4f-bf4d-4b0a-802d-460dba63d387": {"__data__": {"id_": "54b1bd4f-bf4d-4b0a-802d-460dba63d387", "embedding": null, "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900", "node_type": "4", "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dbbbd56367f908ab885207b18928803e66278c9428942859e0d79433c4d201d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7c6278d-b606-4a51-87ee-4403ba8edaaa", "node_type": "1", "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8e18934de529c6940a81abd1cfaa003ff76bc71b48039396faf20116239083a9", "class_name": "RelatedNodeInfo"}}, "text": "INTEGER( number ) ", "start_char_idx": 2218, "end_char_idx": 2236, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "560de637-836a-457e-8c21-c340365121c9": {"__data__": {"id_": "560de637-836a-457e-8c21-c340365121c9", "embedding": null, "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f", "node_type": "4", "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5bb19d38166b8e6cdb9caed2deda1d121506f3b10beadcd6779d01583c867b8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bf1d076-7cd1-4f91-8eed-dd24b0693293", "node_type": "1", "metadata": {}, "hash": "31dafa01db2e2bd4f7044068c54313fab93b62db2da9b8451b0be850d3bdb7c1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-26 The INTEGER  function returns the greatest integer value that is less than or equal to number  (a numeric literal or data \nitem) . \n6.1.14.28.  INTEGER -OF-DATE( date ) \nThis function converts date  (a numeric integer data item or literal) \u2013 presumed to be a Gregorian calendar form \nstandard date (YYYYMMDD) - to integer date form \u2013 that is, the number of days that have transpired since 1600/12/31.  \n6.1.14.29.  INTEGER -OF-DAY( date ) \nThis function converts date  (a numeric integer data item or literal)  \u2013 presumed to be a Julian calendar form standard \ndate (YYYYDDD) to integer date form \u2013 that is, the number of days that have transpired since 1600/12/31.  \n6.1.14.30.  INTEGER -PART( number ) \nReturns the integer portion of the value of number (a numeric literal or data item) . \n6.1.14.31.  LENGTH( string ) \nReturns the length \u2013 in characters  \u2013 of string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ).  \nNote that the value returned by this function is not the number of bytes of storage occupied by string , but rather the \nnumber of actual characters  making up the string .  For example, if string  is enc oded using a double -byte characterset \nsuch as UNICODE (where each character is represented by 16 bits of storage, not the 8 -bits inherent to charactersets \nlike ASCII or EBCDIC), then calling this function with a string  argument whose PICTURE  is X(4)  would return a value of 4 \nrather than the value 8 (the actual number of bytes of storage occupied by that item).  \n6.1.14.32.  LENGTH -AN(string ) \nReturns the length \u2013 in bytes  of storage  \u2013 of string  (a group item, USAGE DISPLAY  elementary item or alphanumeric \nliteral ).  This intrinsic function is identical to the BYTE -LENGTH  function.   ", "start_char_idx": 0, "end_char_idx": 1840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bf1d076-7cd1-4f91-8eed-dd24b0693293": {"__data__": {"id_": "9bf1d076-7cd1-4f91-8eed-dd24b0693293", "embedding": null, "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f", "node_type": "4", "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5bb19d38166b8e6cdb9caed2deda1d121506f3b10beadcd6779d01583c867b8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "560de637-836a-457e-8c21-c340365121c9", "node_type": "1", "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4e89c03dc683a8205806eb24914aa3e46414a1d197cdcef4130907741e84ca8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f97bdde2-039d-460c-8c8d-bbc3397589d8", "node_type": "1", "metadata": {}, "hash": "d400d342ed5025f3afd4b227e373abcae20c103f6354c59fb0d251ea4647ece7", "class_name": "RelatedNodeInfo"}}, "text": "Note that the value returned by this function is \nnot the number of actual characters  making up the string , bytes  of storage occupied by string , but rather the number of \nactual bytes  required to store string .  For example, if string  is encoded using a double -byte characterset such as \nUNICODE (where each character is represented by 16 bits of storage, not the 8 -bits inherent to charactersets like ASCII \nor EBCDIC), then calling this function with a string  argument whose PICTURE is X(4) would return a value of 8 rather \nthan the value 4.  \n6.1.14.33.  LOCALE -COMPARE( argument -1, argument -2 [ , locale  ]) \nThe LOCALE -COMPARE  function returns a character indicating the result of comparing argument -1 and argument -2 \nusing a culturally -preferred ordering defined by a locale . \nEither argument may be an alphanumeric literal, a group item or an elementary item appropriate t o storing alphabetic \nor alphanumeric data.  ", "start_char_idx": 1840, "end_char_idx": 2784, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f97bdde2-039d-460c-8c8d-bbc3397589d8": {"__data__": {"id_": "f97bdde2-039d-460c-8c8d-bbc3397589d8", "embedding": null, "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f", "node_type": "4", "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5bb19d38166b8e6cdb9caed2deda1d121506f3b10beadcd6779d01583c867b8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bf1d076-7cd1-4f91-8eed-dd24b0693293", "node_type": "1", "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "19453311a98206aca9a9d705e3ce88822ab297cc94e5f3fcfba00d997063c049", "class_name": "RelatedNodeInfo"}}, "text": "If the lengths of the two arguments are unequal, the shorter will be assumed to be padded to \nthe right with SPACES . \nThe two arguments will be compared, character by character, against each other until their relationship to each other \ncan be determined.  The comparison is made according to the cultural rules in effect for the specified locale name or for \nthe current locale if no locale argument is specified24.  Once that relationship is determined, a one -charac ter \nalphanumeric value will be returned as follows:  \n\u201c<\u201d If argument -1 is determined to be less than argument -2 \n\u201c=\u201d If the two arguments are equal to each other  \n\u201c>\u201d If argument -1 is determined to be greater than argument -2 \n                                                                 \n24 Locale -based ordering is not necessarily a character -by-character comparison.  ", "start_char_idx": 2784, "end_char_idx": 3638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "482d8b7c-3cc4-4437-b339-2583e104dde4": {"__data__": {"id_": "482d8b7c-3cc4-4437-b339-2583e104dde4", "embedding": null, "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a909af8f-b665-44c1-871b-f73188e2b459", "node_type": "4", "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "890b5bd2ba6d754b0acbd219440d5a32b73575067c149d278594062d12f56c8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "535d3a85-d357-4f47-9ad9-e751e5f21e3b", "node_type": "1", "metadata": {}, "hash": "e78b0fe4c968f306718fd51e8948bd398002d6e3e27fbebcd4f13cf00cc8f5cd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-27 6.1.14.34.  LOCALE -DATE( date  [, locale  ] ) \nConverts  the eight -digit Gregorian date (a numeric integer data item or literal) from YYYYMMDD format to the  format \nappropriate to the current locale.  On a Windows system, this will be the \u201cshort date\u201d f ormat as set using Control Panel.  \nYou may include an optional second argument to specify the locale  name (group item or PIC X  identifier ) you\u2019d like to \nuse for date formatting.  If used, this second argument MUST be an identifier.  Locale names are specifi ed using UNIX -\nstandard names.  The complete list of supported locale names is shown in Figure 4-7. \n6.1.14.35.  LOCALE -TIME( time  [, locale  ] ) \nConverts  the four - (HHMM) or six -digit (HHMMSS) time  (a numeric integer data item or literal) to a  format appropriate \nto the current locale.  On a Windows system, this will be the \u201ctime\u201d format as set usi ng Control Panel.  \nYou may include an optional locale  name (a group item or PIC X  identifier ) you\u2019d like to use for time formatting.  If used, \nthis second argument MUST be an identifier.  Locale names are specified using UNIX -standard names.  The complete l ist \nof supported locale names is shown in Figure 4 -7. \n", "start_char_idx": 0, "end_char_idx": 1284, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "535d3a85-d357-4f47-9ad9-e751e5f21e3b": {"__data__": {"id_": "535d3a85-d357-4f47-9ad9-e751e5f21e3b", "embedding": null, "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a909af8f-b665-44c1-871b-f73188e2b459", "node_type": "4", "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "890b5bd2ba6d754b0acbd219440d5a32b73575067c149d278594062d12f56c8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "482d8b7c-3cc4-4437-b339-2583e104dde4", "node_type": "1", "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8c69da6659fe1354974a5b551508cf39f5de70087ce3fa2324a845f4b855306", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50f9b37d-1f81-429f-bb40-cb47eae0276a", "node_type": "1", "metadata": {}, "hash": "3d67a6ef8a95904615cf3ebb2670416935f1a0b040b9794428262c57ea52b430", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.36.  LOCALE -TIME -FROM -SECS( seconds  [, locale  ] ) \nConverts  the number of seconds  since midnight (a numeric integer data item or literal) to a  format appropriate to the \ncurrent locale.  On a Windows system, this will be the \u201ctime\u201d format as set using Control Panel.  \nYou may include an optional locale  name (a group item or PIC X  identifier ) you\u2019d like to use for time formatting.  If used, \nthis second argument MUST be an identifier.  Locale names are specified using UNIX -standard names.  The complete list \nof supported locale names is shown in Figure 4 -7. \n", "start_char_idx": 1284, "end_char_idx": 1868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50f9b37d-1f81-429f-bb40-cb47eae0276a": {"__data__": {"id_": "50f9b37d-1f81-429f-bb40-cb47eae0276a", "embedding": null, "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a909af8f-b665-44c1-871b-f73188e2b459", "node_type": "4", "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "890b5bd2ba6d754b0acbd219440d5a32b73575067c149d278594062d12f56c8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "535d3a85-d357-4f47-9ad9-e751e5f21e3b", "node_type": "1", "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63e2d4b042aa4147cfc41e4be49019d3d1d6c93e83655a0852fe5b01ebeeb563", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.37.  LOG( number ) \nComputes and returns the natural logarithm (base \u201ce\u201d) of number  (a numeric literal o r data item) . \n6.1.14.38.  LOG10( number ) \nComputes and returns the base 10 logarithm of number (a numeric literal or data item) . \n6.1.14.39.  LOWER -CASE( string ) \nThis function returns  the value of string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ), \nconverted entirely to lower case.   Note that what constitutes a \u201cletter\u201d (or upper/lower case too, for that manner) may \nbe influenced through the use of a CHARACTER  CLASSIFICATION  specification in the OBJECT -COMPUTER  paragraph..  \nSee Also\u2026  \nThe OBJECT -COMPUTER  Paragraph  4.1.2  \n  \n6.1.14.40.  LOWEST -ALGEBRAIC( numeric -identifier ) \nThis function returns the lowest (i.e. smallest or farthest away from 0 in a negative direction if numeric -identifier  is \nsigned) value that could possibly be stored in the specified numeric -identifier . \n6.1.14.41.  MAX( number -1 [, number -2 ] \u2026)  \nThis function returns the maximum value from the specified list numbers  (these may be numeric data items or literals) . \n6.1.14.42.  MEAN (number -1 [, number -2 ] \u2026)  ", "start_char_idx": 1868, "end_char_idx": 3039, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b657296-4b59-466e-8392-e46994f1a607": {"__data__": {"id_": "3b657296-4b59-466e-8392-e46994f1a607", "embedding": null, "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60", "node_type": "4", "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "523f374f0336d6d044232ca40a2128d5c5762af7d235364be2384a25e4aae1dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15008751-7e1c-436b-b55a-74d050369057", "node_type": "1", "metadata": {}, "hash": "3d51d66374b3d90b8605f3543f2e8b4a6bb107378be9eaeb591992ea2739be12", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-28 This function returns the statistical mean  value of the specified list numbers  (these may be numeric data items or \nliterals) . \n6.1.14.43.  MEDIAN (number -1 [, number -2 ] \u2026)  \nThis function returns the statistical median  value of the specifi ed list numbers  (these may be numeric data items or \nliterals) . \n6.1.14.44.  MIDRANGE( number -1 [, number -2 ] \u2026)  \nThe MIDRANGE  (middle range) function returns a numeric value that is the arithmetic mean (average) of the values of \nthe minimum  and maximum  number s (these may be numeric data items or literals) . \n6.1.14.45.  MIN (number -1 [, number -2 ] \u2026)  \nThis function returns the minimum  value from the specified list numbers  (these may be numeric data items or literals) . \n6.1.14.46.  ", "start_char_idx": 0, "end_char_idx": 833, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15008751-7e1c-436b-b55a-74d050369057": {"__data__": {"id_": "15008751-7e1c-436b-b55a-74d050369057", "embedding": null, "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60", "node_type": "4", "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "523f374f0336d6d044232ca40a2128d5c5762af7d235364be2384a25e4aae1dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b657296-4b59-466e-8392-e46994f1a607", "node_type": "1", "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "91b1470b3fe9a87288c9c4af4d6e14ac2853496e9ca5caebfa92fb3a5e30e601", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9c857a0-ad47-4503-8cca-e09c4d8b4654", "node_type": "1", "metadata": {}, "hash": "16c7cb9e3a141c2dc9594c62e581365356eb59c04e0796da1ffacc3370bbe63a", "class_name": "RelatedNodeInfo"}}, "text": "MOD( value , modulus ) \nReturns  value  modulo  modulus .  Both arguments may be PIC 9 data items or numeric literals.  Either (or both) may have \na non -integer value.  \nThe result is determined according to the following formula:  \nvalue  - (modulus  * FUNCTION INTEGER ( value  / modulus )) \n6.1.14.47.  MODULE -CALLER -ID \nReturns the primary entry -point name (section 3) of the GNU COBOL  program that CALL ed this one, or the null string if \nthe program is a main pro gram.  \nThe discussion of the MODULE -TIME  function includes a sample program that also uses this function.  \n", "start_char_idx": 833, "end_char_idx": 1419, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9c857a0-ad47-4503-8cca-e09c4d8b4654": {"__data__": {"id_": "d9c857a0-ad47-4503-8cca-e09c4d8b4654", "embedding": null, "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60", "node_type": "4", "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "523f374f0336d6d044232ca40a2128d5c5762af7d235364be2384a25e4aae1dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15008751-7e1c-436b-b55a-74d050369057", "node_type": "1", "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "af7df75f63fc7de5959c9ffe15f1c20356190ab0d6507091aa8619cce478e2ec", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe MODULE -TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.48.  MODULE -DATE  \nReturns the date the GNU COBOL  program was compiled, in the form YYYYMMDD.  \nThe discussion of the MODULE -TIME  function includes a sample program that also uses this function.  \nSee Also\u2026  \nThe MODULE -TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.49.  MODULE -FORMATTED -DATE  \nReturns the fully -formatted date and time when the program was compiled.  The exact format of this returned string \nvalue may vary depending on the operating system, GNU COBOL  build type and/or L OCALE settings.  \nThe discussion of the MODULE -TIME  function includes a sample program that also uses this function.  \nSee Also\u2026  \nThe MODULE -TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.50.  MODULE -ID ", "start_char_idx": 1419, "end_char_idx": 2202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "460c21e0-566e-4b6b-be52-4229f26299b0": {"__data__": {"id_": "460c21e0-566e-4b6b-be52-4229f26299b0", "embedding": null, "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc6220ea-cc99-4367-80a0-0d5fe5f32b6d", "node_type": "4", "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f9afc0821f40ee43a07799163c3fa264f0c9d9d50184aca797d8f376533374d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3309f929-249e-49fa-838a-1679d3ee2d75", "node_type": "1", "metadata": {}, "hash": "822d7ac9b6853bd7044754a8cdd357933ebd92d2338031ba942553b99e856499", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-29 Returns the primary entry -point name (section 3) of this GNU COBOL  program.  \nThe discussion of the MODULE -TIME  function includes a sample program that also uses this function.  \nSee Also\u2026  \nThe MODULE -TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.51.  MODULE -PATH  \nThis function returns the full path to the executable version of this GNU COBOL  program.  The filename component of \nthis value will be exactly as typed on the command line, down to the use of upper - and lowercase letters and presence \n(or absence) of any extension.  \nThe discussion of the MODULE -TIME  function includes a sample program t hat also uses this function.  \nSee Also\u2026  \nThe MODULE -TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.52.  MODULE -SOURCE  \nThe filename of the source code of the program (as specified on the \u201ccobc\u201d command when the program was compiled) \nis returned by this function.  \nThe discussion of the MODULE -TIME  function includes a sample program that also uses this function.  \nSee Also\u2026  \nThe MOD ULE-TIME  Intrinsic Function  6.1.14.53  \n  \n6.1.14.53.  MODULE -TIME  \nThis function r eturns the time the GNU COBOL  program was compiled, in the form HHMMSS.  \nThe following sample main program uses all the MODULE - Functions  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. DEMOMODULE.  \n       ENVIRONMENT DIVISION.  \n       CONFIGURATION SECTION.  \n       REPOSITORY.  \n           FUNCTION ALL INTRINSIC.  \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 1551, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3309f929-249e-49fa-838a-1679d3ee2d75": {"__data__": {"id_": "3309f929-249e-49fa-838a-1679d3ee2d75", "embedding": null, "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc6220ea-cc99-4367-80a0-0d5fe5f32b6d", "node_type": "4", "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f9afc0821f40ee43a07799163c3fa264f0c9d9d50184aca797d8f376533374d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "460c21e0-566e-4b6b-be52-4229f26299b0", "node_type": "1", "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a71de37c2e4e1c22bcf5e9e3479f478bf0772b573bb5d05a5171ce15a4f0b41e", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n           DISPLAY \"MODULE -CALLER-ID      = [\" MODULE -CALLER-ID \"]\" \n           DISPLAY \"MODULE -DATE           = [\" MODULE -DATE \"]\"  \n           DISPLAY \"MODULE -FORMATTED -DATE = [\" MODUL E-FORMATTED -DATE \"]\"   \n           DISPLAY \"MODULE -ID             = [\" MODULE -ID \"]\"   \n           DISPLAY \"MODULE -PATH           = [\" MODULE -PATH \"]\"   \n           DISPLAY \"MODULE -SOURCE         = [\" MODULE -SOURCE \"]\"   \n           DISPLAY \"MODULE -TIME           = [\" MODULE -TIME \"]\"   \n           STOP RUN  \n           . \nThe program produces this output when executed:  \nMODULE-CALLER-ID      = []  \nMODULE-DATE           = [20120614]  \nMODULE-FORMATTED -DATE = [Jun 14 2012 15:07:45]  \nMODULE-ID             = [DEMOMODULE]  \nMODULE-PATH           = [E: \\Programs \\Demos\\DEMOMODULE.exe]  \nMODULE-SOURCE         = [DEMOMODULE.cbl]  \nMODULE-TIME           = [150745]  ", "start_char_idx": 1551, "end_char_idx": 2433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b12f09a-2e4b-44a1-b7a9-97e1f3c0e6fe": {"__data__": {"id_": "6b12f09a-2e4b-44a1-b7a9-97e1f3c0e6fe", "embedding": null, "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cfee5237-28fb-4bc8-8c55-92553cc50e4b", "node_type": "4", "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9c00e89a467d4eef64e55e0346744c86f4a61fdf114ad029c8404d635f4fc36a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "956a4dfc-06c0-42f1-89f5-0f8edea3d86d", "node_type": "1", "metadata": {}, "hash": "749038d181139ca3c3e25ab3e607ade6bd7e7ea4b0dad1b92c81d5c61f01769d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-30 6.1.14.54.  MONETARY -DECIMAL -POINT  \nThis function returns the character used to separate the integer portion from the fractional part of a monetary currency \nvalue according to the rules currently in effect for the locale under which your program is running.  On UNIX systems, \nyour locale is established via the LANG environment variable.  On Windows, the Control Panel\u2019s Regional and Language \nOptions define the locale.  \nNote that using the SPECIAL -NAMES  paragraph\u2019s DECIMAL -POINT IS COMMA  setting will not affect the value returned \nby this function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragr aph 4.1.4  \n  \n6.1.14.55.  MONETARY -THOUSANDS -SEPARATOR  \nThis function returns the character  used to separate the thousands digit groupings of monetary currency values \naccording to the rules currently in effect for the locale under which your program is running.  On UNIX systems, your \nlocale is established via the LANG environment variable.  ", "start_char_idx": 0, "end_char_idx": 1036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "956a4dfc-06c0-42f1-89f5-0f8edea3d86d": {"__data__": {"id_": "956a4dfc-06c0-42f1-89f5-0f8edea3d86d", "embedding": null, "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cfee5237-28fb-4bc8-8c55-92553cc50e4b", "node_type": "4", "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9c00e89a467d4eef64e55e0346744c86f4a61fdf114ad029c8404d635f4fc36a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b12f09a-2e4b-44a1-b7a9-97e1f3c0e6fe", "node_type": "1", "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cabe27ab6511ee9224e39e105491bd6c7e525ef8ff59e6d32d6c36a696fde856", "class_name": "RelatedNodeInfo"}}, "text": "On W indows, the Control Panel\u2019s Regional and Language \nOptions define the locale.  \nNote that using the SPECIAL -NAMES  paragraph\u2019s DECIMAL -POINT IS COMMA  setting will not affect the value returned \nby this function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.14.56.  NUMERIC -DECIMAL -POINT  \nThis function returns the character used to separate the integer portion of a non -integer numeric item from the \nfractional part according to the rules currently in effect for the locale under which your program is running.  On UNIX \nsystems, your locale is established via the LANG environment variable.  On Wi ndows, the Control Panel\u2019s Regional and \nLanguage Options define the locale.  \nNote that using the SPECIAL -NAMES  paragraph\u2019s DECIMAL -POINT IS COMMA  setting will not affect the value returned \nby this function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.14.57.  NUMERIC -THOUSANDS -SEPARATOR  \nThis function returns the character used to separate the thousands digit groupings of numeric values according to the \nrules currently in effect for the locale under which your program is running.  On UNIX systems, your locale is established \nvia the LANG environment variable.  On Windows, the Control Panel\u2019s Regional and Language Options define the locale.  \nNote that using the SPECIAL -NAMES  paragraph\u2019s DECIMAL -POINT IS COMMA  setting will not affect the value returned \nby this function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n  \n6.1.14.58.  NUMVAL( string ) ", "start_char_idx": 1036, "end_char_idx": 2559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f94d3504-320d-4c78-bba1-f7069b931c2c": {"__data__": {"id_": "f94d3504-320d-4c78-bba1-f7069b931c2c", "embedding": null, "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eecdca00-6afa-49ca-8f08-28fcb3424ee1", "node_type": "4", "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6a37efe39f415e46a1af618b4c8af18760e53ab9944002a218c478dc8eb57ff1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac13e018-09a1-45c2-9a73-f5dcf126fa28", "node_type": "1", "metadata": {}, "hash": "9a689ef03242d4eccabeaa3a3e5f84f18c9a95868cd17cb18789da4bb32ba28f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-31  The NUMVAL  function converts a \nstring  (a group item, USAGE \nDISPLAY  elementary item or \nalphanumeric literal ) to its \ncorresponding numeric value.  \n \nThe string  must have either of the formats shown here, where space  represents a SPACE character and digit  represents \none of the digit characters \u201c0\u201d through \u201c9\u201d.  In addition, there must be at least one digit  character s in the string . \nIf string  does not conform to either of the formats shown here, a value of zero will be returned.  \n6.1.14.59.  NUMVAL -C(string  [, symbol  ]) \n \nThis function converts a string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ) representing a \ncurrency value to its corresponding numeric value.    \nThe string  must have either of the formats shown here, where space  represents a SPACE character, digit  represents one \nof the digit characters \u201c0\u201d through \u201c9\u201d and currency  represents a currency symbol (a \u201c$\u201d, for example).  In addition, \nthere must be at least one digit  characters in the string . \nThe optional symbol  character represents the currency symbol  (a single -character group item, USAGE DISPLAY  \nelementary item or alphanumeric literal ) that may be used as the currency  character in string .  If no symbol is specified, \nthe value that would be returned by the CURRENCY -SYMBOL  intrinsic function will be used.  \nSee Also\u2026  \nThe CURRENCY -SYMBOL  Intrinsic Fun ction  6.1.7.11  \n  \n6.1.14.60.  NUMVAL -F(string ) \n \nThis function converts a string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ) representing a \nfloating -point value to its corresponding numeric value.    \nThe string  must have the format shown here, where space  represents a SPACE character and digit  represents one of the \ndigit characters \u201c0\u201d th rough \u201c9\u201d.  ", "start_char_idx": 0, "end_char_idx": 1885, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac13e018-09a1-45c2-9a73-f5dcf126fa28": {"__data__": {"id_": "ac13e018-09a1-45c2-9a73-f5dcf126fa28", "embedding": null, "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eecdca00-6afa-49ca-8f08-28fcb3424ee1", "node_type": "4", "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6a37efe39f415e46a1af618b4c8af18760e53ab9944002a218c478dc8eb57ff1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f94d3504-320d-4c78-bba1-f7069b931c2c", "node_type": "1", "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2e2de4848a59d83ae3c1a995e277f9956b384f6f15f316d237a362e4296a4e18", "class_name": "RelatedNodeInfo"}}, "text": "In addition, there must be at least one digit  character in the string  to the left of the \u201cE\u201d \ncharacter . \n6.1.14.61.  ORD( char ) \nFormat 1:\nFormat 2:\n[  space \u2026  ] [  digit \u2026  ] [  .[  digit \u2026  ] ] [  space \u2026  ]         [  space \u2026  ]+\n-\nDB\nCR[  space \u2026  ]     [  space \u2026  ] [  digit \u2026  ] [  .[  digit \u2026  ] ] [  space \u2026  ] +\n-\n[  space \u2026  ] [ currency ] [ space\u2026 ] [  digit \u2026  ] [  .[  digit \u2026  ] ] [  space \u2026  ]         [  space \u2026  ]+\n-\nDB\nCR[  space \u2026  ]     [  space \u2026  ] [ currency ] [ space\u2026 ] [  digit \u2026  ] [  .[  digit \u2026  ] ] [  space \u2026  ]+\n-Format 1:\nFormat 2:\n[  space \u2026  ]     [  space \u2026  ] [  digit \u2026  ] [  .[  digit \u2026  ] ]   E[ space \u2026  ]               digit \u2026  [ space \u2026 ]+\n-+\n-", "start_char_idx": 1885, "end_char_idx": 2579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41f82b24-bea7-491c-8020-418d308dd012": {"__data__": {"id_": "41f82b24-bea7-491c-8020-418d308dd012", "embedding": null, "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0", "node_type": "4", "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5dc1390be259cc42628ee85fe552fa06c8d033a423b82c2b27879277431db884", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39ec4bdc-8790-4758-bdcc-5d0c5831f16c", "node_type": "1", "metadata": {}, "hash": "9d76420d21e5b82fbc8e96731b0d6f397c2756cb663f7216480878ff9593e06b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-32 This function returns the ordinal position in the program characterset (usually ASCII)  corresponding to the 1st character \nof the char  argument  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ).  For example, assuming \nthe program is using the standard ASCII collating sequence , ORD (\u201c!\u201d) returns 34 because \u201c!\u201d is the 34th ASCII character.   \nIf you are using this function to convert a n ASCII character to its  numeric valu e, you must subtract  one from the result . \nThe following code is an alternative approach when you just wish to convert a n ASCII character to its numeric \nequiv alent:  \n01  Char -Value. \n    05 Numeric -Value        USAGE BINARY -CHAR. \n. \n", "start_char_idx": 0, "end_char_idx": 778, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39ec4bdc-8790-4758-bdcc-5d0c5831f16c": {"__data__": {"id_": "39ec4bdc-8790-4758-bdcc-5d0c5831f16c", "embedding": null, "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0", "node_type": "4", "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5dc1390be259cc42628ee85fe552fa06c8d033a423b82c2b27879277431db884", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41f82b24-bea7-491c-8020-418d308dd012", "node_type": "1", "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d16bbe21ec834cd8475405d5eb8e4ec134255f797a361e256f4eaa48798e395d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28f5426c-4dab-4436-a684-17a9036047c9", "node_type": "1", "metadata": {}, "hash": "da56e3393e0571eaca668ad219e9db6705b76b191505ec9dc69e32607d0ec2e3", "class_name": "RelatedNodeInfo"}}, "text": ". \n", "start_char_idx": 577, "end_char_idx": 580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28f5426c-4dab-4436-a684-17a9036047c9": {"__data__": {"id_": "28f5426c-4dab-4436-a684-17a9036047c9", "embedding": null, "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0", "node_type": "4", "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5dc1390be259cc42628ee85fe552fa06c8d033a423b82c2b27879277431db884", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39ec4bdc-8790-4758-bdcc-5d0c5831f16c", "node_type": "1", "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7421b34d9ca7f254e89200521bbe4cd268e6902955c2ea68ac92b826131c50c8", "class_name": "RelatedNodeInfo"}}, "text": ". \n    MOVE \u201c character\u201d TO Char -Value \n    The Numeric -Value item now has the corresponding numeric value  \n6.1.14.62.  ORD -MAX( char -1 [, char -2 ] \u2026 )  \nThis function returns the ordinal position in the argument list corresponding to the argument whose 1st character has \nthe highest position in the program collating sequence  (usually ASCII).  For example, assuming the program is using the \nstandard ASCII collating sequence , ORD -MAX (\u201cZ\u201d, \u201cz\", \u201c!\u201d) returns 2 because the ASCII character \u201cz\u201d occurs after \u201cZ\u201d \nand \u201c!\u201d in the program collating sequence .  Each char  argument is a group item, USAGE DISPLAY  elementary item or \nalphanumeric literal   \n6.1.14.63.  ORD -MIN ( char -1 [, char-2 ] \u2026 )  \nThis function returns the ordinal position in the argument list corresponding to the argument whose 1st character has \nthe lowest  position in the program collating sequence (usually ASCII).  For ex ample, assuming the program is using the \nstandard ASCII collating sequence, ORD -MIN (\u201cZ\u201d, \u201cz\", \u201c!\u201d) returns 3 because the ASCII character \u201c!\u201d occurs before \u201cZ\u201d \nand \u201cz\u201d in the program\u2019s collating sequence.   Each char  argument is a group item, USAGE DISPLAY  elementary item or \nalphanumeric literal  \n6.1.14.64.  PI \nThis function returns the mathematical constant \u201cPI\u201d.  The maximum precision with which this value may be returned is \n3.1415926535897932384626433832795029.  \nSince the PI function has no arguments, no parenthesis should be specified.  \n6.1.14.65.  PRESENT -VALUE( rate , value -1 [, value -2 ] ) \nThe PRESENT -VALUE  function returns a value that approximates the present value of a series of f uture period -end \namounts specified by the various value  arguments at a discount rate specified by the rate argument .  All arguments are \nPIC 9  items and/or numeric literals . \nThe following formula summarizes the functions operation:             \u2211      \n                    \n    \n6.1.14.66.  RANDOM [ ( seed  ) ] \nThe RANDOM  function returns a non -integer value in the range 0 to 1 (for example, 0.123456789).  \nIf seed  is specified, it must be zero or a positive integer  (specified as a PIC 9 item and/or numeric literal ).  It is used as \nthe seed value to generate a sequence of pseudo -random numbers.  \nIf a subsequent reference specifies seed , a new sequence of pseudo -random numbers is started.  \nIf the first executed reference to this function does not specify a seed , the seed will be supplied by the compiler.  \nIn each case, subsequent references without specifying a seed  return the next number in the current seque nce.  ", "start_char_idx": 781, "end_char_idx": 3357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73a09d09-463c-4e37-94a3-ea5bfe969d7b": {"__data__": {"id_": "73a09d09-463c-4e37-94a3-ea5bfe969d7b", "embedding": null, "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb", "node_type": "4", "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0547fcdc22f037b027729c759e6eff271b9acbdacb8185a3234aa8643cfaf8d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5ae0003-b92a-4440-aed5-4af9b2caa3be", "node_type": "1", "metadata": {}, "hash": "76949e0ef5d657b08681d3789f527b8f83dda99abe41dca743d9cd065de087f3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-33 6.1.14.67.  RANGE( number -1 [, number -2 ] \u2026)  \nThe RANGE  function returns a value that is equal to the value of the maximum number  in the argument list minus the \nvalue of the minimum number  argument.   All arguments are  numeric data items  and/or numeric literals . \n", "start_char_idx": 0, "end_char_idx": 356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5ae0003-b92a-4440-aed5-4af9b2caa3be": {"__data__": {"id_": "f5ae0003-b92a-4440-aed5-4af9b2caa3be", "embedding": null, "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb", "node_type": "4", "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0547fcdc22f037b027729c759e6eff271b9acbdacb8185a3234aa8643cfaf8d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73a09d09-463c-4e37-94a3-ea5bfe969d7b", "node_type": "1", "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "382c4570d85ce79e6d20de716068e2ead061a161b59af79ae3390429f2538442", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfe95d98-a6df-4332-beb5-baa0cbca8b33", "node_type": "1", "metadata": {}, "hash": "0402f934032c2a6812100ea743afa209a1d9b790666cbb72af97b90b79d24570", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.68.  REM( number , divisor ) \nThis function returns a numeric value that is the remainder of number  divided by divisor .  Both arguments must be \nnumeric data items  or numeric literals . \nThe result is determined according to the following formula:  \nnumber  - (divisor  * FUNCTION INTEGER -PART ( number  / divisor )) \n6.1.14.69.  REVERSE( string ) \nThis function returns the byte -by-byte revers ed value of the specified string  (a group item, USAGE DISPLAY  elementary \nitem or alphanumeric literal ). \n6.1.14.70.  SECONDS -FROM -FORMATTED -TIME( format , time ) \nThis function decodes a string whose val ue represents a formatted time and returns the total number of seconds that \nstring represents.  The time string must contain hours, minutes and seconds.   The time argument may be specified as a \ngroup item, USAGE DISPLAY  elementary item or an alphanumeric l iteral.  \nThe format  argument is a string (a group item, USAGE DISPLAY  elementary item or an alphanumeric literal) \ndocumenting the format of time  using \u201chh\u201d, \u201cmm\u201d and \u201css\u201d to denote where the respective time information can be \nfound.  Any other characters fo und in format  represent character positions that will be ignored.  For example, a format  \nof \u201chhmmss\u201d indicates that time  will be treated as a six -digit value where the first two characters are the number of \nhours, the next two represent minutes and the last two represent seconds.  Similarly, a format  of \u201chh:mm:ss\u201d states \nthat time  will be an eight -character string where cha racters 3 and 6 will be ignored.  \n6.1.14.71.  SECONDS -PAST -MIDNIGHT  \nThis function returns the current time of day expressed as the total number of elapsed seconds since midnight.  \n6.1.14.72.  SIGN( number ) \nThe SIGN  function returns a -1 if the value of number  (a numeric literal or data item) is negative, a zero if the value of \nnumber  is exactly zero and a 1 if the value of number  if greater than 0.  \n6.1.14.73.  SIN( angle ) \nDetermines and returns the trigonometric sine of the  specified angle  (a numeric literal or data item).   The angle  is \nassumed to be a value expressed in radians.  \n", "start_char_idx": 356, "end_char_idx": 2497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfe95d98-a6df-4332-beb5-baa0cbca8b33": {"__data__": {"id_": "bfe95d98-a6df-4332-beb5-baa0cbca8b33", "embedding": null, "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb", "node_type": "4", "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0547fcdc22f037b027729c759e6eff271b9acbdacb8185a3234aa8643cfaf8d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5ae0003-b92a-4440-aed5-4af9b2caa3be", "node_type": "1", "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c505a77555745a87bde2eaf1a5ff1a9f83601839e658d091d13e753dadd64ac2", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.74.  SQRT( number ) \nThe SQRT  function returns a numeric value that approximates the square root of number  (a numeric data item or literal \nwith a non -negative value ). \n6.1.14.75.  STANDARD -DEVIATION (number -1 [, number -2 ] \u2026)  \nThis function returns the statistical standard deviation of the specified list numbers  (these may be numeric data items or \nliterals) . ", "start_char_idx": 2497, "end_char_idx": 2877, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37018b8c-80ac-4e7d-9582-09259ae59e30": {"__data__": {"id_": "37018b8c-80ac-4e7d-9582-09259ae59e30", "embedding": null, "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1", "node_type": "4", "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f3347f90c5f00cf07cebb789133934a0b907b510427f1e6e9ff3c36b942d48f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a49d15ef-b120-4519-86e3-d71182b0b882", "node_type": "1", "metadata": {}, "hash": "e9ee34081f3f59628891313f2fbbd8f62ad6a2d34f03bd21e57c30042a038fc3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-34 6.1.14.76.  STORED -CHAR -LENGTH( string ) \nReturns the length \u2013 in bytes \u2013 of the specified string  (a group item, USAGE DISPLAY  elementary item or alphanumeric \nliteral ) minus  the total number of trailing spaces, if any.  \n6.1.14.77.  SUBSTITUTE( string , from -1, to-1 [, from -n, to-n ] ) \nThis function parses the specified string , replacing all occurrences of the from -n strings with the corresponding to-n \nstrings.  The from  strings must match exactly  with regard to value and case.  The from  strings do not have to be the \nsame length as the to strings.  All arguments are group items, USAGE DISPLAY  elementary items or alphanumeric \nliterals . \nA null to string will be treated as a single SPACE . \n", "start_char_idx": 0, "end_char_idx": 800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a49d15ef-b120-4519-86e3-d71182b0b882": {"__data__": {"id_": "a49d15ef-b120-4519-86e3-d71182b0b882", "embedding": null, "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1", "node_type": "4", "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f3347f90c5f00cf07cebb789133934a0b907b510427f1e6e9ff3c36b942d48f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37018b8c-80ac-4e7d-9582-09259ae59e30", "node_type": "1", "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "144f9fb382cfdb83fa000cbe2ba08773e736b131a2fbc8b62fcac009912677fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "212e6dbd-db28-4452-a89c-5b744f8aefe9", "node_type": "1", "metadata": {}, "hash": "95253325cb2d3b4252d1e9ece1ca583b761238ee38dc465f77936e88e6cd09b6", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.78.  SUBSTITUTE -CASE( string , from -1, to-1 [, from -n, to-n ] ) \nThe SUBSTITUTE -CASE  function operates the same as the SUBSTITUTE  function, except that from  string matching is \nperformed without regard for case.   All arguments are group items, USAGE DISPLAY  elementar y items or alphanumeric \nliterals.  \n", "start_char_idx": 800, "end_char_idx": 1121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "212e6dbd-db28-4452-a89c-5b744f8aefe9": {"__data__": {"id_": "212e6dbd-db28-4452-a89c-5b744f8aefe9", "embedding": null, "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1", "node_type": "4", "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f3347f90c5f00cf07cebb789133934a0b907b510427f1e6e9ff3c36b942d48f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a49d15ef-b120-4519-86e3-d71182b0b882", "node_type": "1", "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "730419a4adf53b86f7d8dd9d215b20eb832f9504cbcc204069bbe7fd861c071c", "class_name": "RelatedNodeInfo"}}, "text": "6.1.14.79.  SUM( number -1 [, number -2 ] \u2026)  \nThe SUM  function returns a value that is the sum of the number  arguments  (these may be numeric data items or \nliterals) . \n6.1.14.80.  TAN( angle ) \nDetermines and returns the trigonometric tangent of the  specified  angle (a numeric literal or data item) .  The angle  is \nassumed to be a value expressed in radians.  \n6.1.14.81.  TEST -DATE -YYYYMMDD( date ) \nDetermines if the supplied date  (a numeric integer data item or literal) is a valid date of the form yyyymmdd and that \nthe date is in the range 1601/01/01 to 9999/12/31.  If it is , a 0 value is returned.  If it isn\u2019t, a value of 1 , 2 or 3  is \nreturned  signaling the problem lies with the year, month or day, respectively.  \n6.1.14.82.  TEST -DAY -YYYYDDD( date ) \nDetermines if the supplied date  (a numeric integer data item or literal ) is a valid date of the form yyyyddd and that the \ndate is in the range 1601001 to 9999365.  If it is, a 0 value is returned.  If it isn\u2019t, a value of 1  or 2 is returned  signaling \nthe problem lies with the year  or day, respectively.  \n6.1.14.83.  TEST -NUMVAL( string ) \nThe TEST -NUMVAL  function evaluates the specified string  (a group item, USAGE DISPLAY  elementary item or \nalphanumeric literal ) for being appropriate for use as the string argument to a NUMVAL  function, returning  a TRUE \nvalue if it is appropriate and FALSE otherwise.  \nSee Also\u2026  \nThe NUMVAL  Intrinsic Function  6.1.14.58  \n  \n6.1.14.84.  TEST -NUMVAL -C(string  [, symbol  ]) ", "start_char_idx": 1121, "end_char_idx": 2638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5196474f-348a-42b5-bc16-8a4a9335af06": {"__data__": {"id_": "5196474f-348a-42b5-bc16-8a4a9335af06", "embedding": null, "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0eff26c-8f49-466e-812d-a70cc68e866f", "node_type": "4", "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "12ff91df6b2cb3bd462958823c4bf95c92ea555fa2864a4fe65715f4e15bd0b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23471b4b-fbc9-4d38-af70-2dc301b15a18", "node_type": "1", "metadata": {}, "hash": "2986d29ebad9ffff5707fd2505f148f1e1617e5189982b0a8a841919d42b05c3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-35  The TEST -NUMVAL -C function evaluates the specified string  (a group item, USAGE DISPLAY  elementary item or \nalphanumeric literal ) and symbol combination for being appropriate for use as the arguments to a NUMVAL -C function, \nreturning a TRUE value if they are appropriate and FALSE otherwise.  \nSee Also\u2026  \nThe NUMVAL -C Intrinsic Function  6.1.14.59  \n  \n6.1.14.85.  TEST -NUMVAL -F(string ) \n This function evaluates the specified string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ) for \nbeing appropriate for use as the string argument to a NUMVAL -F function, returning a TRUE value if it is appropriate \nand FALSE otherwise.  \nSee Also\u2026  \nThe NUMVAL -F Intrinsic Function  6.1.7.60  \n  \n6.1.14.86.  TRIM( string [ , LEADING|TRAILING ] )  \nThis function removes leading or trailing spaces from the specified string  (a group item, USAGE DISPLAY  elementary \nitem or alphanumeric literal ).  The second argument is specified as a keyword, not a quoted string or identifier.  If no \nsecond argument is specified, both  leading and trailin g spaces will be removed.  \n6.1.14.87.  UPPER -CASE( string ) \nThis function returns the value of string  (a group item, USAGE DISPLAY  elementary item or alphanumeric literal ), \nconverted entirely to upper  case.   Note that what constitutes a \u201cletter\u201d (or upper/lower case too, for that manner) may \nbe influenced through the use of CHARACTER CLASSIFICATION  specifications in the OBJECT -COMPUTER  paragraph.  \nSee Also\u2026  \nThe OBJECT -COMPUTER  Paragraph  4.1.2  \n  \n6.1.14.88.  VARIANCE (number -1 [, number -2 ] \u2026)  \nThis function returns the statistical variance  of the specified list numbers  (these may be numeric data items or literals) . \n6.1.14.89.  YEAR -TO-YYYY ( yy [, yy-cutoff ]) \nYEAR -TO-YYYY converts yy (a) - a two -digit year  - to a four -digit format (yyyy).  The optional  yy-cutoff  argument is  the \nyear cutoff used to delineate centuries; if yy meets or exceeds this cutoff value, the result will be 19yy; if yy is less than \nthe cutoff, the result will be 20yy.  The default cutoff value if no second argument is given will be 50.   Both arguments \nmust be numeric data items or literals.  \n6.2. GNU COBOL  Statements  \nThe remaining sections in this chapter present (in alphabetical order) the various verbs (statements) that make up the \nGNU COBOL  procedural language.  \n6.2.1.  ", "start_char_idx": 0, "end_char_idx": 2470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23471b4b-fbc9-4d38-af70-2dc301b15a18": {"__data__": {"id_": "23471b4b-fbc9-4d38-af70-2dc301b15a18", "embedding": null, "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0eff26c-8f49-466e-812d-a70cc68e866f", "node_type": "4", "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "12ff91df6b2cb3bd462958823c4bf95c92ea555fa2864a4fe65715f4e15bd0b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5196474f-348a-42b5-bc16-8a4a9335af06", "node_type": "1", "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1baf8fed126eacacf01aa7bee139af88828f3f935b894a2f9e60104e6db9d93c", "class_name": "RelatedNodeInfo"}}, "text": "ACCEPT  \n6.2.1.1.  ACCEPT Format 1 \u2013 Read from Console  ", "start_char_idx": 2470, "end_char_idx": 2526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77a6bc4e-21c6-408c-aa43-91b9e785ac35": {"__data__": {"id_": "77a6bc4e-21c6-408c-aa43-91b9e785ac35", "embedding": null, "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae", "node_type": "4", "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f29837f5cb80240c1e2e8c0a47e2d2d20d6ea2abef328f00d1cce54877038b4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15764751-f07b-4b10-9e1e-97051aba8fc0", "node_type": "1", "metadata": {}, "hash": "ea9f184c6f753ef06f7d00f043f85d6fd97c1197ff63d2a9b6afba3c4ad204ad", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-36 Figure 6-20 - ACCEPT (Read from Console) Syntax  \n This format of the ACCEPT  verb is used to read a value from the console \nwindow or the standard input device and store it into a data item \n(identifier -1). \n \n1. ", "start_char_idx": 0, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15764751-f07b-4b10-9e1e-97051aba8fc0": {"__data__": {"id_": "15764751-f07b-4b10-9e1e-97051aba8fc0", "embedding": null, "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae", "node_type": "4", "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f29837f5cb80240c1e2e8c0a47e2d2d20d6ea2abef328f00d1cce54877038b4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77a6bc4e-21c6-408c-aa43-91b9e785ac35", "node_type": "1", "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "79f78c43b66984d98f1f821c2e1eb205288896dec09fc761219008ffdb3f65a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ecde42a-4f02-49ee-b03a-972123c93fd1", "node_type": "1", "metadata": {}, "hash": "b416a8710cf27a271677e1a50f6c9dd23e7e1afb3674400c4ec03c9d66818357", "class_name": "RelatedNodeInfo"}}, "text": "Mnemonic -name -1 must either be the built -in device name CONSOLE , STDIN , SYSIN  or SYSIPT  or a user -defined \n(SPECIAL -NAMES ) mnemonic name attached to one of those four device names.  \n2. If no FROM  clause is specified, FROM CONSOLE  is assumed.  \n3. Input will be read either from the console window ( CONSOLE ) or from the system -standard input (pipe 0 = STDIN , \nSYSIN  or SYSIPT ) and will be saved in identifier -1.  \n4. If identifier -1 is a numeric data item, the character value read from the conso le or standard -input device will be \nparsed according to the rules for \u201cFormat 1\u201d input to the NUMVAL  intrinsic function.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n The NUMVAL  Intrinsic Function  6.1.14.58  \n \n6.2.1.2.  ACCEPT Format 2 \u2013 Retrieve Command -Line Arguments  \nFigure 6-21 - ACCEPT (Command Line Arguments) Syntax  \n This format of the ACCEPT  verb is used to retrieve \ninformation  from the programs command -line.  \n \n1. When you accept from the COMMAND -LINE  option, you will retrieve the entire set of arguments entered on the \ncommand line that executed the program, exactly  as they were specified.  Parsing that returned data into its \nmeaningful information will be your responsibility.  \n2. By accepting from ARGUME NT-NUMBER , you will be asking the GNU COBOL  run-time system to parse the \narguments from the command -line and return the number  of arguments found.  Parsing will be conducted \naccording to the operating system\u2019s rules, as follows:  \n Arguments will be separated by treating SPACES between characters as the delineators between arguments.  \nThe number of spaces separating two non -blank values is irrelevant.  \n Strings enclosed in double -quote characters (\u201c) will be treated as a single argument, regardless of how many \nspaces (if any) might be imbedded within those quotation characters.  \n On Windows systems, s ingle -quote, or apostrophe characters (\u2018) will be treated just like any other data \ncharacter and will NOT delineate strings.  \n3. By accepting from ARGUMENT -VALUE , you will be asking the GNU COBOL  run-time system to parse the arguments \nfrom the command -line and return the \u201ccurrent\u201d argument.  You specify which argument number is \u201ccurrent\u201d via \nthe DISPLAY  \u2026 UPON ARGUMENT -NUMBER  statement (section 0).  Parsing or arguments will be conducted \naccording to the rules set forth in # 2 above.  \n", "start_char_idx": 297, "end_char_idx": 2691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ecde42a-4f02-49ee-b03a-972123c93fd1": {"__data__": {"id_": "6ecde42a-4f02-49ee-b03a-972123c93fd1", "embedding": null, "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae", "node_type": "4", "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f29837f5cb80240c1e2e8c0a47e2d2d20d6ea2abef328f00d1cce54877038b4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15764751-f07b-4b10-9e1e-97051aba8fc0", "node_type": "1", "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f7e6dc7321eb592606307e818db1e951572f7c608e5b89f0a0ffe7d6f54fd2a", "class_name": "RelatedNodeInfo"}}, "text": "4. Attempts to retrieve non -existent argum ents can be handled via an optional exception -handler . \nSee Also\u2026  \nHandling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n The DISPLAY  Statement (Command Line)  6.2.12.2  \n \n6.2.1.3.  ACCEPT Format 3 \u2013 Retrieve Environment Variable Values  \nACCEPT identifier -1\n[ FROM mnemonic -name -1]\n[ END-ACCEPT]\nACCEPT identifier -1\nCOMMAND-LINE\nFROMARGUMENT -NUMBER\nARGUMENT -VALUE[ exception -handler]\n[ END-ACCEPT]", "start_char_idx": 2691, "end_char_idx": 3139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc0e25f6-8620-4c85-b3f9-25dde0278ef5": {"__data__": {"id_": "dc0e25f6-8620-4c85-b3f9-25dde0278ef5", "embedding": null, "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80dc0551-929e-4306-b3fe-3896c5db61e5", "node_type": "4", "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ab9ba2a728b815016734be95d5cc526503e85a15c4c29ba97c3ee10690f5ff5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "651f8e31-9c08-4e44-9b17-2d6cb883addd", "node_type": "1", "metadata": {}, "hash": "9d22c99dd3d0e5923d441b21191e0c74f87b2ce230564bb5fbd68a1947caa70a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-37 Figure 6-22 - ACCEPT (Environment  Variable Values) Syntax  \n This format of the ACCEPT  verb is used to retrieve \nenvironment variable values.  \n \n1. By accepting from ENVIRONMENT -VALUE , you will be asking the GNU COBOL  run-time system to retrieve the value \nof the environment variable whose name is currently in the ENVIRONMENT -NAME  register.   A value ma y be placed \ninto the ENVIRONMENT -NAME  register using the DISPLAY  statement.  \n2. A simpler approach to retrieving an environment variables value is to use \u201c ACCEPT \u2026 FROM ENVIRONMENT \u201d.  \nUsing that form, you specify the environment variable to  be retrieved right on the ACCEPT  command itself.  \n", "start_char_idx": 0, "end_char_idx": 748, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "651f8e31-9c08-4e44-9b17-2d6cb883addd": {"__data__": {"id_": "651f8e31-9c08-4e44-9b17-2d6cb883addd", "embedding": null, "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80dc0551-929e-4306-b3fe-3896c5db61e5", "node_type": "4", "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ab9ba2a728b815016734be95d5cc526503e85a15c4c29ba97c3ee10690f5ff5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc0e25f6-8620-4c85-b3f9-25dde0278ef5", "node_type": "1", "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9b2a83dfc93440565e2b72298bbc001de2e5aebeab2eb72e13a2dd767de77a9a", "class_name": "RelatedNodeInfo"}}, "text": "3. The optional exception -handler  may be used to detect requests to retrieve the values of non -existent environment \nvariables. . \nSee Also\u2026  \nHandling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n The DISPLAY  Statement (Environment)  6.2.12.3  \n \n6.2.1.4.  ACCEPT Format 4 \u2013 Retrieve Full -Screen Data  \nACCEPT identifier -1\nFROM\n[ exception -handler]\n[ END-ACCEPT]ENVIRONMENT -VALUE\nENVIRONMENTliteral -1\nidentifier -2", "start_char_idx": 748, "end_char_idx": 1166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c3fa5fd-c6d7-4c98-be0b-4aa7897b968b": {"__data__": {"id_": "4c3fa5fd-c6d7-4c98-be0b-4aa7897b968b", "embedding": null, "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990", "node_type": "4", "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1be4a3ddf39428535bb58dca924aeae3f25dc0c678027c1e913d4385538252a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "508308cc-275c-4108-abea-342360614d2a", "node_type": "1", "metadata": {}, "hash": "90452e90773cd03a249e3ac7278904fbedd5df9fed6cd5a4e72d369fa6b2cb27", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-38 Figure 6-23 - ACCEPT (Retrieve Screen Data) Syntax  \n This format of the ACCEPT  \nverb is used to retrieve \ndata from a formatted \nconsole window screen.  \n \n1. The following attribute -specification  clauses are allowed on the ACCEPT  statement \u2013 these are the same as those \nallowed for SCREEN SECTION  data items.  \nAUTO  | AUTO -SKIP  | AUTO TERMINATE  FULL | LENGTH -CHECK  REQUIRED | EMPTY -CHECK  \nBACKGROUND -COLOR  HIGHLIGHT  | LOWLIGHT  REVERSE -VIDEO  \nBEEP  | BELL  LEFTLINE  SECURE | NO-ECHO  \nBLINK  OVERLINE  UNDERLINE  \nFOREGROUND -COLOR  PROMPT CHARACTER   \n2. If identifier -1 is defined in the SCREEN SECTION , any AT, attribute -specification  LOWER , UPPER  or SCROLL  clauses \nspecified on the ACCEPT  will be ignored.    \n3. The various AT clauses provide a means of positioning the cursor to a specific spot on the screen before the screen \nis read.   The literal -3 / identifier -4 value must be a four - or six -digit value with the 1st half of the number indicating \nthe line where the cursor should be positioned and the second  half indicating  the column.   There is no distinction \nbetween using the word COLUMN  or POSITION . \n", "start_char_idx": 0, "end_char_idx": 1241, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "508308cc-275c-4108-abea-342360614d2a": {"__data__": {"id_": "508308cc-275c-4108-abea-342360614d2a", "embedding": null, "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990", "node_type": "4", "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1be4a3ddf39428535bb58dca924aeae3f25dc0c678027c1e913d4385538252a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c3fa5fd-c6d7-4c98-be0b-4aa7897b968b", "node_type": "1", "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4e8ddb59fdc1403482ee3455fd45e7456a6cc93831fd5581e06ce7edab9350c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb0742f5-1959-480c-9338-52e6cf950458", "node_type": "1", "metadata": {}, "hash": "7067221d345faceb49e7bdde36f50913a5ae23367cbabe4f60dd2be306a4ac7e", "class_name": "RelatedNodeInfo"}}, "text": "4. WITH  options (including the various individual attribute -specifications ) should be coded  only once.  \n5. The SCROLL  option will cause the entire contents of the screen to be scrolled UP or DOWN  by the specified number \nof lines before a ny value is displayed on the screen.  It is possible to specify a SCROLL UP  clause as well as a SCROLL \nDOWN  clause.  If no LINES  specification is made, \u201c 1 LINE \u201d will be assumed.  \n", "start_char_idx": 1241, "end_char_idx": 1673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb0742f5-1959-480c-9338-52e6cf950458": {"__data__": {"id_": "cb0742f5-1959-480c-9338-52e6cf950458", "embedding": null, "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990", "node_type": "4", "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1be4a3ddf39428535bb58dca924aeae3f25dc0c678027c1e913d4385538252a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "508308cc-275c-4108-abea-342360614d2a", "node_type": "1", "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2d8667bd3e40e99ca6a957fc3cff877d4130f9efe66c8cfa3586e775fd5f6f74", "class_name": "RelatedNodeInfo"}}, "text": "6. The TIMEOUT  option will cause the ACCEPT  to wait no more than the specified number of seconds for input.  The \nwait count may be specified as a positive integer or a numeric data item with a positive value.  Once the timeout \nlimit expires, ACCEPT  will proceed as if the Enter key had been pressed with no data being entered.  The keyword \nTIME -OUT  may be used as a synonym for TIMEOUT . \n7. While supported syntactically, the CONVERSION  and UPDATE  option s are non-functional.  \n8. When a Format 4 ACCEPT statement with a SCREEN SECTION  item specified as identifier -1 is executed, an implied \nDISPLAY of identifier -1 will occur before input is accepted .  Coding an explicit \u201c DISPLAY  identifier -1\u201d before an \n\u201cACCEPT identifier -1\u201d is redundant and will incur the performance penalty of pa inting the screen contents twice.  \nACCEPT identifier -1\n[ FROMCRT] [ MODEIS BLOCK]\nAT\nWITH\n[ exception -handler]\n[ END-ACCEPT]integer -3\nidentifier -4LINENUMBERinteger -1\nidentifier -2\nCOLUMN\nPOSITIONNUMBERinteger -2\nidentifier -3\u2026\ninteger -4\nidentifier -5attribute -specification \u2026\nLOWER| UPPER\nSCROLL BY\nTIMEOUT\nTIME-OUT\nCONVERSION\nUPDATEUP\nDOWNLINE\nLINES\nAFTERinteger -5\nidentifier -6", "start_char_idx": 1673, "end_char_idx": 2868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "727c2e15-680f-4752-90eb-aa1cb71e1a3c": {"__data__": {"id_": "727c2e15-680f-4752-90eb-aa1cb71e1a3c", "embedding": null, "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf", "node_type": "4", "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30ce42ee798827e4e180aa8c7a1b9662fc407c124f806dca2584e6b121866ac0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61bbd862-fd3f-42b4-b909-f65a8f152606", "node_type": "1", "metadata": {}, "hash": "255ce70367cd2e4acd243c336efc1700a16a82567b116cfce1695157dca5b355", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-39 9. The optional exception -handler  may be used to handle screen I/O errors.  \n", "start_char_idx": 0, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61bbd862-fd3f-42b4-b909-f65a8f152606": {"__data__": {"id_": "61bbd862-fd3f-42b4-b909-f65a8f152606", "embedding": null, "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf", "node_type": "4", "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30ce42ee798827e4e180aa8c7a1b9662fc407c124f806dca2584e6b121866ac0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "727c2e15-680f-4752-90eb-aa1cb71e1a3c", "node_type": "1", "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8766855dd4347297ce9e0120863bb62bc465a8292a90c1a87024f7ab2e359f02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83a18cc6-dc75-481e-b063-d52476ee3a47", "node_type": "1", "metadata": {}, "hash": "71de5ceda0fbb980b35833443949ee177437437222f701fab51d3bf88d48ce67", "class_name": "RelatedNodeInfo"}}, "text": "10. After this format of the ACCEPT  statement is executed, the programs CRT STATUS  code identifier (section 4.1.4 ) will \nbe populated with one of the following:  \nFigure 6-24 - Screen ACCEPT CRT STATUS  Codes  \nCode  Meaning  \n0000  ENTER key pressed  \n1001 - 1064 F1 \u2013 F64 \n2001 ,2002  PgUp ,PgDn25 \n2003 ,2004,2006  Up Arrow ,Down -Arrow,PrtSc \n(Print Screen)   26 \n Code  Meaning  \n2005  Esc,27 \n8000  No data is available on screen ACCEPT  \n9000  Fatal screen I/O error  \n \nThis value will indicates what special key was pressed to terminate the ACCEPT . \nThe actual key pressed to generate a function key (Fn) will depend on the type of terminal device you\u2019re using (PC, \nMacintosh, VT100, etc.) and what type of enhanced display dr iver was configured with the version of GNU COBOL  \nyou\u2019re using.  For example, on a GNU COBOL  built for a Windows PC using MinGW and PDCurses, F1 -F12 are the \nactual F -keys on the PC keyboard, F13 -F24 are entered by shifting the F -keys, F25 -F36 are entered b y holding Ctrl \nwhile pressing an F -key and F37 -F48 are entered by holding Alt while pressing an F -key.  On the other hand, a GNU \nCOBOL  implementation built for Windows using Cygwin and NCurses treats the PCs F1 -F12 keys as the actual F1 -\nF12, while shifted F-keys will enter F11 -F20.  With Cygwin/NCurses, Ctrl - and Alt -modified F -keys aren\u2019t recognized.  \nNeither are Shift -F11 or Shift -F12.  \nNumeric  keypad keys are not recognizable on Windows MinGW/PDCurses builds of GNU COBOL , regardless of \nNumLock settings.  Windows Cygwin/NCurses builds recognize numeric keypad inputs properly.  Although not \ntested during the preparation of this documentation, I would expect native Windows builds using PDCurses to \nbehave as MinGW builds do and native Unix builds using NCurse s to behave as do Cygwin builds.  \nThe CRT STATUS  field the status code is saved into will be either COB -CRT-STATUS , if the CRT STATUS clause was \nnot specified in the SPECIAL -NAMES  paragraph, or the programmer -specified identifier if that clause was specified \nin SPECIAL -NAMES . \nSee Also\u2026  \nDefining Screens  5.2.2  \n Handling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n \n6.2.1.5.  ACCEPT Format 5 \u2013 Retrieve Date/Time  \nFigure 6-25 - ACCEPT (Retrieve Date/Time) Syntax  \n This format of the ACCEPT  verb is used to retrieve the current \nsystem date , time or current day of the week and store it into a data \nitem.  \n \n \n1. The data retrieved from the system, and the format in which it is structured, will vary according to the following \nchart:  \nFigure 6-26 - ACCEPT Options for DATE/TIME Retrieval  \nACCEPT Option  Data Returned  identifier -1 Format  \nDATE  Current date in Gregorian form  \n(two -digit year)   01  CURRENT -DATE. \n    05 CD-YEAR               PIC 9(2).  \n    ", "start_char_idx": 161, "end_char_idx": 2947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83a18cc6-dc75-481e-b063-d52476ee3a47": {"__data__": {"id_": "83a18cc6-dc75-481e-b063-d52476ee3a47", "embedding": null, "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf", "node_type": "4", "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30ce42ee798827e4e180aa8c7a1b9662fc407c124f806dca2584e6b121866ac0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61bbd862-fd3f-42b4-b909-f65a8f152606", "node_type": "1", "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b7edad8f11bcd759e8b9bdb77c09730a9ea2e728d3753d548e2386847369e253", "class_name": "RelatedNodeInfo"}}, "text": "05 CD-MONTH              PIC 9(2).  \n    05 CD-DAY-OF-MONTH       PIC 9(2).  \n                                                                 \n25 These keys are available only  if the environment variable COB_SCREEN_EXCEPTIONS is set to any non -blank value at runtime.  \n26 These keys are not detectable on Windows systems  \n27 This key is available only  if the environment variable COB _SCREEN_ESC is set to any non -blank value at runtime (this is in \naddition to setting COB_SCREEN_EXCEPTIONS)  \nACCEPT identifier -1\nDATE[ YYYYMMDD ]\nDAY[ YYYYDDD ]\nDAY-OF-WEEK\nTIME\n[ END-ACCEPT]FROM", "start_char_idx": 2947, "end_char_idx": 3536, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "710c6f58-56ce-4511-a420-5e9e6b11e28a": {"__data__": {"id_": "710c6f58-56ce-4511-a420-5e9e6b11e28a", "embedding": null, "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521", "node_type": "4", "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "40ea600acacf018ddfb56763a5aadef7801c5ee1d0c9cbcf366ad55d91f4148b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46", "node_type": "1", "metadata": {}, "hash": "0c1eb6f659175260b59f5dc092ad2fce8572171d96367f75f095eeebc1e50c75", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-40 ACCEPT Option  Data Returned  identifier -1 Format  \nDATE YYYYMMDD  Current date in Gregorian form  \n(four -digit year)  01  CURRENT -DATE. \n    05 CD-YEAR               PIC 9(4).  \n    ", "start_char_idx": 0, "end_char_idx": 268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46": {"__data__": {"id_": "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46", "embedding": null, "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521", "node_type": "4", "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "40ea600acacf018ddfb56763a5aadef7801c5ee1d0c9cbcf366ad55d91f4148b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "710c6f58-56ce-4511-a420-5e9e6b11e28a", "node_type": "1", "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfc3821a4cb99d91e625a1a78b91e11ede202f814ef9ab036aff4ca5611140d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e3f858d-ed06-45d7-a5d2-cfce0a9a75e7", "node_type": "1", "metadata": {}, "hash": "95a48a01d8adf6e775949a03f1db0aba7a45b50ee5efce0b95e1c7c38f05c9e4", "class_name": "RelatedNodeInfo"}}, "text": "05 CD-MONTH              PIC 9(2).  \n    05 CD-DAY-OF-MONTH       PIC 9(2).  \nDAY  Current date in Julian form  \n(two -digit year)  01  CURRENT -DATE. \n    05 CD-YEAR               PIC 9(2).  \n    05 CD-DAY-OF-YEAR        PIC 9(3).  \nDAY YYYYDDD  Current date in  Julian form  \n(four -digit year)  01  CURRENT -DATE. \n    05 CD-YEAR               PIC 9(4).  \n    05 CD-DAY-OF-YEAR        PIC 9(3).  \nDAY -OF-WEEK  Current day of the week  01  CURRENT -DATE. \n    05 CD-DAY-OF-WEEK        PIC 9(1).  \n       88 MONDAY    VALUE 1. \n       88 TUESDAY   VALUE 2. \n       88 WEDNESDAY VALUE 3. \n       88 THURSDAY  VALUE 4. \n       88 FRIDAY    VALUE 5. \n       88 SATURDAY  VALUE 6. \n       88 SUNDAY    VALUE 7.  \nTIME  Current time  01  CURRENT -TIME. \n    05 CT-HOURS              PIC 9(2).  \n    05 CT-MINUTES            PIC 9(2).  \n    05 CT-SECONDS            PIC 9(2).  \n    06 CT-HUNDREDTHS -OF-SECS PIC 9(2).  \n", "start_char_idx": 268, "end_char_idx": 1184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e3f858d-ed06-45d7-a5d2-cfce0a9a75e7": {"__data__": {"id_": "8e3f858d-ed06-45d7-a5d2-cfce0a9a75e7", "embedding": null, "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521", "node_type": "4", "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "40ea600acacf018ddfb56763a5aadef7801c5ee1d0c9cbcf366ad55d91f4148b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46", "node_type": "1", "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50e9f49cd02c7475f827238994925d4788de184614850965a83a1c2d84d85eda", "class_name": "RelatedNodeInfo"}}, "text": "6.2.1.6.  ACCEPT Format 6 - Retrieve Screen Information  \nFigure 6-27 - ACCEPT (Retrieve Screen Information ) Syntax  \n This format of the ACCEPT  verb is used to retrieve \ninformation about the console window or about the \nuser\u2019s interactions with it.  \n \n1. The LINES  and COLUMNS  options will retrieve the respective components of the size of the console display.  When \nthe console is running in a windowed environment, this will be the sizing of the window  in which the program is \nexecutin g, in terms of horizontal ( COLUMNS ) or vertical ( LINES ) character counts \u2013 not pixels .  When the system is \nnot running a windowing environment, the physical console screen attributes will be returned.  In environments \nsuch as a Windows console window, wher e the logical size of the window may far exceed that of the physical \nconsole window, the size returned will be that of the physical console window.   If necessary, the screen will be \ninitialized so that the screen window size may be determined.  Values of 0  will be returned if GNU COBOL  was not \ngenerated to include screen I/O..  Compare this result with that of the CBL_GET_SCR_SIZE  built -in subroutine.  \n2. The LINE NUMBER  option  is a synonym for LINES  and the word COLUMNS  may be specified as COLS . \n3. The ESCAPE KEY  option may be used after a format 4 ACCEPT  has been used to retrieve data off a formatted \nscreen.  The result returned will be the four -digit key id of the special key that was pressed to terminate the format \n4 ACCEPT (a 0000 is returne d for the Enter key).  This value will be the same as that returned into the CRT STATUS  \nfield defined in the SPECIAL -NAMES  paragraph or into the COB -CRT-STATUS  identifier if no CRT STATUS  was \nspecified.  Consult Figure 6-23  for a list of possible values.  \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \n The CBL_GET_SCR_SIZE  Subroutine  8.3.1.30  \n \n6.2.1.7.  ACCEPT Format 7 \u2013 Retrieve Run -Time Information  \nACCEPT identifier -1\nLINES| LINE-NUMBER\nCOLUMNS | COLS\nESCAPEKEY\n[ END-ACCEPT]FROM", "start_char_idx": 1184, "end_char_idx": 3231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "281b4f0e-8b63-4224-af03-06ead4e7b15b": {"__data__": {"id_": "281b4f0e-8b63-4224-af03-06ead4e7b15b", "embedding": null, "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f57ee002-962a-45ab-9aa8-e237c6affa76", "node_type": "4", "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "533028bdb222a6dd0817fb2074761bdb7e8f8e8e37171208bfaee16fa18dce34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16c5b8b7-1c96-4f73-8213-c2e4722948b7", "node_type": "1", "metadata": {}, "hash": "bd538db47f34bcbff1bb95dd093fe79fe7b61856bcd6d6068930565d662ec88c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-41 Figure 6-28 - ACCEPT (Retrieve Run-Time Information ) Syntax  \n This format of the ACCEPT  verb is used to retrieve run -time \ninformation such as the most -recent error exception code  and \nthe current user\u2019s user name . \n1. The specified identifier must be defined as a PIC X(4)  item  to receive EXCEPTION STATUS .  When receiving USER \nNAME , the identifie r should be large enough to receive the longest user name on your system.  If insufficient space \nis allocated, the returned value will be truncated.  If excess space is allocated, the returned value will be padded \nwith SPACES  (to the right).  \n2. The most -recently encountered runtime error status will be returned in the identifier ( \u20180000\u2019 if no error has \noccurred)  when issuing an ACCEPT \u2026 FROM EXCEPTION STATUS . \n3. The following table summarizes the current run -time error exception codes.  \nFigure 6-29 - Run-Time Exception Code Values  \nException Code \nReturned to ACCEPT  Error Type  String Returned by the \nEXCEPTION -STATUS Function  Description  \n0101  EC-ARGUMENT -FUNCTION  Function argument error  \n0202  EC-BOUND -ODO  OCCURS ... DEPENDING ON data item out of \nbounds  \n0204  EC-BOUND -PTR Data -pointer contains an address that is out of \nbounds  \n0205  EC-BOUND -REF-MOD  Reference modifier out of bounds  \n0207  EC-BOUND -SUBSCRIPT  Subscript out of bounds  \n0303  EC-DATA -INCOMPATIBLE  Incompatible data exception  \n0500  EC-I-O input -output exception  \n0501  EC-I-O-AT-END  I-O status \"1x\"  \n0502  EC-I-O-EOP An end of page condition occurred  \n0504  EC-I-O-FILE-SHARING  I-O status \"6x\"  \n0505  EC-I-O-IMP I-O status \"9x\"  \n0506  EC-I-O-INVALID -KEY I-O status \"2x\"  \n0508  EC-I-O-LOGIC -ERROR  I-O status \"4x\"  \n0509  EC-I-O-PERMANENT -ERROR  I-O status \"3x\"  \n050A  EC-I-O-RECORD -OPERATION  I-O status \"5x\"  \n0601  EC-IMP-ACCEPT  Implementation -defined accept condition  \n0602  EC-IMP-DISPLAY  Implementation -defined display condition  \n0A00  EC-OVERFLOW  Overflow condition  \n0A02  EC-OVERFLOW -STRING  STRING overflow condition  \n0A03  EC-OVERFLOW -UNSTRING  UNSTRING overflow condition  \n0B05  EC-PROGRAM -NOT -FOUND  Called program not found  \n0D03  EC-RANGE -INSPECT -SIZE Size of replace item in  inspect differs  \n1000  EC-SIZE Size error exception  \n1004  EC-SIZE-OVERFLOW  Arithmetic overflow in calculation  \n1005  EC-SIZE-TRUNCATION  Significant digits truncated in store  \n1007  EC-SIZE-ZERO -DIVIDE  Division by zero  \n1202  EC-STORAGE -NOT -ALLOC  The data -pointer specified in a FREE statement \ndoes not identify currently allocated storage  \n1203  EC-STORAGE -NOT -AVAIL  The amount of storage requested by an ALLOCATE \nstatement is not available  \n4. When using ACCEPT \u2026 FROM USER NAME , the returned result is the us erid that was used to login to the system \nwith, and not any actual first and/or last name of the user in question (unless, of course, that is the information \nused as a logon id).   \n", "start_char_idx": 0, "end_char_idx": 2999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16c5b8b7-1c96-4f73-8213-c2e4722948b7": {"__data__": {"id_": "16c5b8b7-1c96-4f73-8213-c2e4722948b7", "embedding": null, "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f57ee002-962a-45ab-9aa8-e237c6affa76", "node_type": "4", "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "533028bdb222a6dd0817fb2074761bdb7e8f8e8e37171208bfaee16fa18dce34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "281b4f0e-8b63-4224-af03-06ead4e7b15b", "node_type": "1", "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63a776c4340f52f653841d72e4d9b652b7f6fe0b28041549c22186f6dfef2663", "class_name": "RelatedNodeInfo"}}, "text": "ACCEPT identifier -1\nEXCEPTION STATUS\nUSERNAME\n[ END-ACCEPT]FROM", "start_char_idx": 2999, "end_char_idx": 3063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f11309e-f8a2-43d4-be4b-7d0c0e1f5a65": {"__data__": {"id_": "5f11309e-f8a2-43d4-be4b-7d0c0e1f5a65", "embedding": null, "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08e1b220-97da-4418-b2ba-6c614756a51b", "node_type": "4", "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8fc3435ef0b4a848efe1649130c48e79923a4bcba7b3e7a9621961e0da82971d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f", "node_type": "1", "metadata": {}, "hash": "08b2e6c1433af27d9ebd9ad45665f302373b5da26b5d19555e7eb9a094fd0999", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-42 6.2.2.  ADD  \n6.2.2.1.  ADD Format 1 \u2013 ADD TO  \nFigure 6-30 - ADD (TO) Syntax  \n \n This format of the ADD  statement generates the \narithmetic sum of all arguments that appear before  the \nTO (identifier -1 or literal -1) and then adds that sum to \neach of the identifiers listed after  the TO (identifier -2). \n \n1. ", "start_char_idx": 0, "end_char_idx": 399, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f": {"__data__": {"id_": "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f", "embedding": null, "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08e1b220-97da-4418-b2ba-6c614756a51b", "node_type": "4", "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8fc3435ef0b4a848efe1649130c48e79923a4bcba7b3e7a9621961e0da82971d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f11309e-f8a2-43d4-be4b-7d0c0e1f5a65", "node_type": "1", "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6319d7695bd60de798e629cbce6c1c605820c58c4a72a1ac4635bf90ec541d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d4ba5c4-de80-4fc7-9d54-157b7b12f7df", "node_type": "1", "metadata": {}, "hash": "004b3e27a674d658a56938978b7edcc4d812e7f24cfc69687fa398128d359b26", "class_name": "RelatedNodeInfo"}}, "text": "Identifier -1 and identifier -2 must  be numeric unedited data items while literal -1 must be a numeric literal.  \n2. The value (s) specified before  the \u201c TO\u201d keyword will be added together, and that sum will be added onto each of \nthe identifiers specified after  the \u201c TO\u201d keyword ( identifier -2), in turn.   \n3. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how  non-integer result s will be \nsaved . \n4. The optional  size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n6.2.2.2.  ADD Format 2 \u2013 ADD GIVING  \nFigure 6-31 - ADD (GIVING) Syntax  \n \n This format of the ADD  statement generates the \narithmetic sum of all arguments that appear before  \nthe TO (identifier -1 or literal -1), adds that sum to \nthe contents of identifier -2 (if any) and then \nreplaces the contents of the identifiers listed after  \nthe GIVING  (identifier -3) with that sum.  \n \n1. ", "start_char_idx": 399, "end_char_idx": 1498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d4ba5c4-de80-4fc7-9d54-157b7b12f7df": {"__data__": {"id_": "1d4ba5c4-de80-4fc7-9d54-157b7b12f7df", "embedding": null, "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08e1b220-97da-4418-b2ba-6c614756a51b", "node_type": "4", "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8fc3435ef0b4a848efe1649130c48e79923a4bcba7b3e7a9621961e0da82971d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f", "node_type": "1", "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b8606b59d62dd1824fc4e2d945e826d66d4c56413de68fec2b28dc37bfd2a2c", "class_name": "RelatedNodeInfo"}}, "text": "Identifier -1 and identifier -2 must  be numeric unedited data items, identifier -3 mus t be a numeric  (edited or \nunedited) data item and literal -1 must be a numeric literal.  \n2. The value (s) specified before  the \u201c TO\u201d keyword will be added together, and that sum will be added to the value of \nidentifier -2 (if any).  The contents of identifier -2 are not altered.  The resulting sum is then saved to each of the \nidentifiers specified after  the \u201c GIVING \u201d keyword ( identifier -3), in turn.  Unless also specified as one of the identifier -\n1 items or as the identifier -2 item, none of the identifier -3 items will be involved in the calculation other than simply \nserving as the receiving field(s) of the operation.  \n3. The optional \u201c rounding -option \u201d clause available to each identifier -3 will control how non -integer results will be \nsaved .   \n4. The optional size-error -clause may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nADD{             } \u2026\nTO{ identifier -2[ rounding -option] } \u2026\n[ size-error -clause ]\n[ END-ADD]literal -1\nidentifier -1\nADD{             } \u2026\n[ TOidentifier -2]\nGIVING{ identifier -3[ rounding -option] } \u2026\n[ size-error -clause ]\n[ END-ADD]literal -1\nidentifier -1", "start_char_idx": 1498, "end_char_idx": 2790, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04f0c3f6-7953-467f-a168-154a986cbafb": {"__data__": {"id_": "04f0c3f6-7953-467f-a168-154a986cbafb", "embedding": null, "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34bce83d-cbef-43d4-87f9-d2a891c87619", "node_type": "4", "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53a49997ca54ac0cace3c6336be58b16877e6033a2eafeb125b2999ab0600d41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9fd09b1-00f5-4438-a08a-d51da6084c4c", "node_type": "1", "metadata": {}, "hash": "ba40d6134fd9d3fff5a664da33d005249a30eebb98a46788e7e46f768ca92f58", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-43 See Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n6.2.2.3.  ADD Format 3 \u2013 ADD CORRESPONDING  \nFigure 6-32 - ADD (CORRESPONDING) Syntax  \n This format of the ADD  statement generates code \nequivalent to individual ADD  TO statements for \ncorresponding matches of data items found subordinate \nto the two identifiers.  \n \n", "start_char_idx": 0, "end_char_idx": 447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9fd09b1-00f5-4438-a08a-d51da6084c4c": {"__data__": {"id_": "e9fd09b1-00f5-4438-a08a-d51da6084c4c", "embedding": null, "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34bce83d-cbef-43d4-87f9-d2a891c87619", "node_type": "4", "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53a49997ca54ac0cace3c6336be58b16877e6033a2eafeb125b2999ab0600d41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04f0c3f6-7953-467f-a168-154a986cbafb", "node_type": "1", "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cbf76e8288dbb03819bb838b7dab8a8051bad1c327f71a08cff1576c9929acc4", "class_name": "RelatedNodeInfo"}}, "text": "1. When corresponding matches are established, the effect of a n ADD CORRESPONDING  on those matches will be as \nif a series of individual ADD  Format 1 statements  were done \u2013 one for each match.  \n2. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how non -integer results wi ll be \nsaved .   \n3. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nThe CORRESPONDING  Clause  6.1.12.2  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n  \nADDCORRESPONDING identifier -1\nTOidentifier -2[ rounding -option]\n[ size-error -clause]\n[ END-ADD]", "start_char_idx": 447, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60e3204a-f1fa-4237-b3f3-666bb60b2fd1": {"__data__": {"id_": "60e3204a-f1fa-4237-b3f3-666bb60b2fd1", "embedding": null, "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b79276ec-2437-46cf-86b6-721af5fad0b4", "node_type": "4", "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bf261655e7e1b021fc03bf28d1e135bf793657fbf3272116b8dc8f806b2a9aef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57c7b1cc-a073-4e1c-875e-4642bd47253d", "node_type": "1", "metadata": {}, "hash": "88b995a1473b0036456faa7aed3a0e2d0ea7e1e5bc23958c652df27c8e384eb8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-44 6.2.3.  ALLOCATE  \nFigure 6-33 - ALLOCATE Syntax  \n The ALLOCATE  statement is used to dynamically allocate \nmemory at run -time.  \n \n1. ", "start_char_idx": 0, "end_char_idx": 219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57c7b1cc-a073-4e1c-875e-4642bd47253d": {"__data__": {"id_": "57c7b1cc-a073-4e1c-875e-4642bd47253d", "embedding": null, "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b79276ec-2437-46cf-86b6-721af5fad0b4", "node_type": "4", "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bf261655e7e1b021fc03bf28d1e135bf793657fbf3272116b8dc8f806b2a9aef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60e3204a-f1fa-4237-b3f3-666bb60b2fd1", "node_type": "1", "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d4bf589d37ffa45be7c44aab337f37fce1f0aee4ec4d6dc65c654ce18ce5fa8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc785764-e68b-4082-95ae-f657c2e12623", "node_type": "1", "metadata": {}, "hash": "0dbfba78c405137fd5e039d94a6a2482bb4f08e68911c7568282ec812b82c01a", "class_name": "RelatedNodeInfo"}}, "text": "If used, expression -1 must be an arithmetic expression with a non -zero positive integer value . \n2. If used, identifier -1 should be an 01 -level item defined with the BASED  attribute  in WORKING -STORAGE  or LOCAL -\nSTORAGE .  It can be an 01 item defined in the LINKA GE SECTION  without the BASED  option , but using such a data \nitem is not recommended.  \n3. If used, identifier -2 should be a USAGE POINTER  data item.  \n4. The optional RETURNING  clause will return the address of the allocated memory block into the specified USAGE \nPOINTER  item.   When this option is used, GNU COBOL  will retain knowledge of the originally -requested size of the \nallocated memory block in case a FREE  statement is ever issued against that USAGE POINTER  item.  \n5. When  the \u201c identifier -1\u201d option is used  in conjunction with INITIALIZED , the allocated memory block will be \ninitialized according to the PICTURE  and (if any) VALUE  clauses present in the definition of identifier -1 as if an \nINITIALIZE identifier -1 WITH FILLER ALL TO VALUE  THEN TO DEFAULT  were executed once  identifier -1 was \nallocated.   \n6. When the \u201c expression -1 CHARACTERS \u201d option is used, INITIALIZE D will initialize the allocated memory block to \nbinary zeros.  \n7. If the INITIALIZE D clause is not used, the initial contents of allocated memory will be left to whatever rules of \nmemory allocation are in effect for the operating system the program is running under.  \n8. ", "start_char_idx": 219, "end_char_idx": 1680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc785764-e68b-4082-95ae-f657c2e12623": {"__data__": {"id_": "fc785764-e68b-4082-95ae-f657c2e12623", "embedding": null, "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b79276ec-2437-46cf-86b6-721af5fad0b4", "node_type": "4", "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bf261655e7e1b021fc03bf28d1e135bf793657fbf3272116b8dc8f806b2a9aef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57c7b1cc-a073-4e1c-875e-4642bd47253d", "node_type": "1", "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7e06c2eaca01a7ef5c80cc1b78e8ff7ec86240b598879431088725187c8ca88a", "class_name": "RelatedNodeInfo"}}, "text": "There are two basic ways in which this statement is used.  The simplest is:  \nALLOCATE My -01-Item  \nWith this form , a block of storage equal in size to the defined size of My-01-Item  (which must have been defined \nwith the BASED  attribute) will be allocated.  The address of that block of storage will become the base address of \nMy-01-Item  so that it and it s subordinate data items become usable within the program .   \nA second (and equivalent) approach is:  \nALLOCATE LENGTH OF My-01-Item CHARACTERS RETURNING The -Pointer. \nSET ADDRESS OF My-01-Item TO The-Pointer.  \n9. Referencing a BASED  data item either before its storage has been ALLOCATE d or after its storage has been FREE d \nwill lead to unpredictable results28. \nSee Also\u2026  \nThe DATA DIVISION  5 \nDynamically Allocated Items ( BASED ) 5.2.1.2  \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The FREE  Statement  6.4.17  \nThe INITIALIZE  Statement  6.2.22  \n \n                                                                 \n28 The COBOL standards like to use the term \u201cunpredictable results\u201d to indicate any sort of unexpected o r undesirable \nbehavior \u2013 the results in this case probably are predictable though \u2013 the program will probably abort from \nattempting to access an invalid address.  \nALLOCATE\n[ INITIALIZED ]\n[ RETURNING identifier -2]expression -1CHARACTERS\nidentifier -1", "start_char_idx": 1680, "end_char_idx": 3035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb7f84b5-cba9-4fc9-af28-dd90880a8e53": {"__data__": {"id_": "cb7f84b5-cba9-4fc9-af28-dd90880a8e53", "embedding": null, "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43a19dca-e840-4abd-aece-1e151d154dd5", "node_type": "4", "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31b2a60a190d53413b8df919882a7a4f61640ef452fbcd1d0d43f08b4cdb1cd7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7a55646-92a8-4261-a541-a743cdbe0272", "node_type": "1", "metadata": {}, "hash": "2ca2001ec6671d6bd83c0a01864617cb4a1820b0d98d6401598bb5204d9ba244", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-45 6.2.4.  ALTER  \nFigure 6-34 - ALTER Syntax  \n \n The ALTER  verb was used in the early years of the \nCOBOL language to edit a program, changing a \u201c GO \nTO\u201d statement  at run time  to branch to a spot \nin the program different than where the GO TO  \nstatement was originally compiled for.  \n1. Support  for the ALTER  verb has been added to GNU COBOL  for the purpose of enabling GNU COBOL  to pass those \nNational Institute of Standards and Techn ology (NIST) tests for the COBOL programming language that require \nsupport for the ALTER  verb.  \n2. ", "start_char_idx": 0, "end_char_idx": 630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7a55646-92a8-4261-a541-a743cdbe0272": {"__data__": {"id_": "f7a55646-92a8-4261-a541-a743cdbe0272", "embedding": null, "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43a19dca-e840-4abd-aece-1e151d154dd5", "node_type": "4", "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31b2a60a190d53413b8df919882a7a4f61640ef452fbcd1d0d43f08b4cdb1cd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb7f84b5-cba9-4fc9-af28-dd90880a8e53", "node_type": "1", "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "23bddba0641e1e20c6570fe586402ddbd61d4e23ce9f6c44df81688114e7f4df", "class_name": "RelatedNodeInfo"}}, "text": "Use of this statement is STRONGLY d iscouraged because it\u2019s use makes it extremely difficult to know where a \npotentially ALTER -able GO TO  statement is actually going to at run time.  \n  \nALTER procedure -name -1TOPROCEED TO procedure -name -2 ", "start_char_idx": 630, "end_char_idx": 876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3799d0d6-4ad6-47af-a7c3-9030bd76f9f2": {"__data__": {"id_": "3799d0d6-4ad6-47af-a7c3-9030bd76f9f2", "embedding": null, "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fbfdc6ed-4d1f-4681-bb58-86a62112d552", "node_type": "4", "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7deb300c8965913ded71d7cbb949de7b471cdd83af59c0e0330a8479b8f2e73a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c06a8d8-6d9c-4a79-bb4c-e6e200dd484d", "node_type": "1", "metadata": {}, "hash": "35c7ef79aba44fdef755a9bcc6e76e1fd662be68aa9693bc89a8e1e55d83e9c3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-46 6.2.5.  CALL  \nFigure 6-35 - CALL  Syntax  \n The CALL  statement is used to transfer control to a  sub-\nprogram, called a subroutine .   \nChapter 7 deals with the specifics of using subprograms \nwith GNU COBOL  programs.  \n1. The expectation is that the subroutine  will eventually return control back to the CALL ing program, at which point \nthe CALL ing program will resume execution starting with the statement immediately following the CALL .  \nSubprograms are not required to return to their CALL ers, however, and are fre e to halt program execution if they \nwish.  \n", "start_char_idx": 0, "end_char_idx": 655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c06a8d8-6d9c-4a79-bb4c-e6e200dd484d": {"__data__": {"id_": "2c06a8d8-6d9c-4a79-bb4c-e6e200dd484d", "embedding": null, "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fbfdc6ed-4d1f-4681-bb58-86a62112d552", "node_type": "4", "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7deb300c8965913ded71d7cbb949de7b471cdd83af59c0e0330a8479b8f2e73a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3799d0d6-4ad6-47af-a7c3-9030bd76f9f2", "node_type": "1", "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9831cddb17c3caa69d3d542c0823de14aeef6c690aa67581e826d0843dc4ff30", "class_name": "RelatedNodeInfo"}}, "text": "2. The mnemonic -nam e-1 / STATIC  / STDCALL  option, if used, affects the linkage conventions that will be used to the \nsubroutine being called , as follows:  \na. The STATIC  option will cause the linkage to the s ubroutine to be performed in such a way as to require the \nsubroutine to be statically -linked with the calling  program.  Note that this enables static -linking to be used on a \nsubroutine -by-subroutine selective basis.  \nb. The STDCALL  option allow s system -standard calling  conventions (as opposed to GNU COBOL  calling  \nconventions) to be used when calling a subroutine.  The definition of what consititutes \u201csystem standard\u201d may  \nvary from operating system to operating system.  Use of this requires speci al knowledge about the linkage \nrequirements of subroutines you are intending to CALL .  Subroutines written in GNU COBOL  do not need this \noption.  \nc. The mnemonic -name  option allows a custom -defined calling convention to be used.  Such mnemonic names \nare defined using the CALL -CONVENTION  clause of the SPECIAL -NAMES  paragraph.  That clause associates a \ndecimal integer value with mnemonic -name -1 such that the individual b its set on or off in the binary number \ncorresponding to the integer affect linkage to the subroutine as described in the following chart.  Those rows of \nthe chart that are greyed -out represent bit positions (switch settings) in the integer value that are c urrently \naccepted if (to provide compatibility to other COBOL implementations) coded, but are otherwise unsupported.  \nBit \nPosition  Decimal \nValue If \n1 Meaning if 0  Meaning if 1  \n0 \n(right -\nmost)  1 Subroutine arguments will be processed in right -\nto-left sequenc e Subroutine arguments will be \npassed in left -to-right sequence  \n1 2 The calling program will flush processed \narguments from the argument stack  The called program (subroutine) \nwill flush processed arguments \nfrom the argument stack  \n2 4 The RETURN -CODE  register will be updated in \naddition to any RETURNING /GIVING  data item  The RETURN -CODE  register will \nnot be updated (but any \nRETURNING /GIVING  data item \nstill will)  \nCALL\n[ USING argument -1\u2026]\n[RETURNING |GIVING identifier -2]\n[ overflow -clause | exception -clause]\n[ END-CALL]literal -1\nidentifier -1STDCALL\nSTATIC\nmnemonic -name -1", "start_char_idx": 655, "end_char_idx": 2965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cb2610c-4102-4ceb-b581-ce098304992d": {"__data__": {"id_": "3cb2610c-4102-4ceb-b581-ce098304992d", "embedding": null, "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de", "node_type": "4", "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4431c239347c55a89340cfdeb70fe39e7181ae911868e7a115864b2da24a78e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4230780e-ff2e-4ed9-ac79-98204ccdc547", "node_type": "1", "metadata": {}, "hash": "5ccb1f0a3cb3e6746c0774a82ecad2833fed340c43d16e45abbeaf04aa8d8424", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-47 Bit \nPosition  Decimal \nValue If \n1 Meaning if 0  Meaning if 1  \n3 8 If CALL  \u201cliteral\u201d is used, the subroutine will be \nlocated and linked in with the calling program at \ncompile time or may be dynamically located and \nloaded at execution time, depending on \ncompiler switch settings and operating system \ncapabilities.  If CALL  \u201cliteral\u201d  is used, the \nsubroutine can only be located \nand linked with the calling \nprogram at compilation time.  \n4 16 OS/2 \u201cOPTLINK\u201d conventions will not be used to \nCALL  the subprogram.  OS/2 \u201cOPTLINK\u201d conventions \nwill be used to CALL  the \nsubprogram.  \n5 32 Windows 16-bit \u201cthunking\u201d will not be in effect.  Windows 16 -bit \u201cthunking\u201d will \nbe used to CALL  the subroutine \nas a DLL.  \n6 64 The STDCALL  convention will not be used.  The STDCALL  convention will be \nused.29 \nUsing the \u201c STDCALL \u201d option on a CALL  statement is equivalent to using a CALL -CONVENTION \u201c8\u201d  (only bit 3 set)  \nUsing the \u201c STATIC \u201d option on a CALL  statement is equivalent to using a CALL CONVENTION 64  (only bit 6 set)  \n3. The RETURNING  and GIVING  keywords may be used interchangeably.  \n", "start_char_idx": 0, "end_char_idx": 1197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4230780e-ff2e-4ed9-ac79-98204ccdc547": {"__data__": {"id_": "4230780e-ff2e-4ed9-ac79-98204ccdc547", "embedding": null, "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de", "node_type": "4", "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4431c239347c55a89340cfdeb70fe39e7181ae911868e7a115864b2da24a78e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cb2610c-4102-4ceb-b581-ce098304992d", "node_type": "1", "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8ec9ffc877d48ce9da90c9f04707e9f1766b70450dca3240b6b8de72ebc98fa5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b8b93a4-16fc-4b2f-8599-e73c7f228e2c", "node_type": "1", "metadata": {}, "hash": "fd5c6d3b14dc81c3faa473ca5f94a197c21e88ae627acb40b7ad6484f1f7257d", "class_name": "RelatedNodeInfo"}}, "text": "4. The value of  literal -1 or identifier -1 is the entry -point of the subprogram you wish to CALL .   \n5. When you CALL  a subroutine using identifier -1, you are forcing the runtime system to call a dynamically -loadable \nmodule .  The contents of identifier -1 will be the entry -point name within that module.  If this is the first CALL  to any \nentry -point within the module, the contents of identifier -1 must  be the name of the module itself (making it the \nprimary entry -point name wit hin the module).  \n6. If the subprogram being called  is a GNU COBOL  program, and if that program had the INITIAL  attribute specified on \nits PROGRAM -ID clause, all of the subprogram\u2019s DATA DIVISION  data will be restored to its initial state each time \nthe subprogram is executed30.  This [re] -initialization behavior will always  apply to any data defined in the \nsubprogram\u2019s LOCAL -STORAGE  SECTION  (if any), regardless of the use (or not) of INITIAL . \n7. ", "start_char_idx": 1197, "end_char_idx": 2161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b8b93a4-16fc-4b2f-8599-e73c7f228e2c": {"__data__": {"id_": "9b8b93a4-16fc-4b2f-8599-e73c7f228e2c", "embedding": null, "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de", "node_type": "4", "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4431c239347c55a89340cfdeb70fe39e7181ae911868e7a115864b2da24a78e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4230780e-ff2e-4ed9-ac79-98204ccdc547", "node_type": "1", "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "22e89b97255d5359efa3e032b29e21ce96052632d257e3cc7018bc33e7779814", "class_name": "RelatedNodeInfo"}}, "text": "The USING  clause defines a list of arguments that may be passed from the calling  program to the subprogram.  The \nsyntax used to specify an argument is as follows:  \nFigure 6-36 - Argument Format When CALL ing a Subroutine  \n \n8. The manner in which an argument is passed to the subroutine depends upon it\u2019s BY clause, if any, specified for the \narguments, as follows:  \na. BY REFERENCE  passes the address of the argument to the subprogram.  If the subpro gram changes the \ncontents of that argument, the change will be \u201cvisible\u201d to the calling program.  \nb. BY CONTENT  passes the address of a copy of the argument to the subprogram.  If the subprogram changes the \nvalue of such an argument, the ori ginal version of it back in the calling program remains unchange d. \n                                                                 \n29 The STDCALL  calling convention is the one required to use the Microsoft Win32 API  \n30 This is regardless of which entry -point within the subprogram is CALL ed \nREFERENCE\nBY  CONTENT\nVALUEAUTO\n[ UNSIGNED ]  SIZEIS   DEFAULT\ninteger -1\nOMITTEDliteral -2\nidentifier -2", "start_char_idx": 2161, "end_char_idx": 3272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91fa0c51-a152-4eba-8813-da86fb931f81": {"__data__": {"id_": "91fa0c51-a152-4eba-8813-da86fb931f81", "embedding": null, "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2368af20-a76a-46d0-8a05-ddd70573838e", "node_type": "4", "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8560c6a12333473b1b26c590b4eaaca83edbe981cc885567a3fef68a1f5e40f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd7d02c5-03d9-442d-840c-389b6e8c27db", "node_type": "1", "metadata": {}, "hash": "8a37ef23c362f643ec37c4e42cac116960e47386c69521dbddf18e3dfe23d547", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-48 c. BY VALUE  passes the value  of the argument as the argument.  This feature exists to provide compatibility with \nC, C++ and other languages and would not normally be used when calling GNU COBOL  subprograms.  \nd. If an argument lacks a BY REFERENCE , BY CONTENT  or BY VALUE  clause, the most -recently encountered \u201c BY\u201d \nspecification on that CALL  statement will be assumed (or BY REFERENCE  if there have been no \u201c BY\u201d \nspecifications specified yet).  \ne. No more than 36 arguments may be passed to a subroutine , unless the GNU COBOL  compiler was built with a \nspecifically different argument limit specified for it. . \n", "start_char_idx": 0, "end_char_idx": 710, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd7d02c5-03d9-442d-840c-389b6e8c27db": {"__data__": {"id_": "fd7d02c5-03d9-442d-840c-389b6e8c27db", "embedding": null, "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2368af20-a76a-46d0-8a05-ddd70573838e", "node_type": "4", "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8560c6a12333473b1b26c590b4eaaca83edbe981cc885567a3fef68a1f5e40f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91fa0c51-a152-4eba-8813-da86fb931f81", "node_type": "1", "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cfe5e0832e06e3e5cb11115ee6824b396b87c31b4fa154fb1b46e316289c4645", "class_name": "RelatedNodeInfo"}}, "text": "9. The RETURNING  clause allows you to specify a data item into which the subroutine should return a value.  If you \nuse this clause on the CALL , the subroutine should include a RETURNING  clause on its PROCEDURE DIVISION  \nheader.  Of course, a subroutine may pass a value back in any argument passed BY REFERENCE . \n10. The optional overflow -clause  or exception -clause  (the two may be used interchangably) may be used to define \nactions to be taken if the subroutine  could not be located and/or loaded .   \n11. For additional information, see the documentation of the CANCEL ,ENTRY ,EXIT  PROGRAM  and GOBACK  statements.  \nSee Also\u2026  \nThe IDENTIFICATION DIVISION  3 \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nThe DATA DIVISION  5 \nSpecial Registers  6.1.13  \nHandling Exceptions ( ON EXCEPTION ) 6.1.12.4  \nHandling Overflow ( ON OVERFLOW ) 6.1.12.5  \nThe CANCEL  Statement  6.2.6  \n The ENTRY  Statement  6.2.14  \nThe EXIT PROGRAM Statement  6.2.16  \nThe GOBACK  Statement  6.2.19  \nSub-programming  0 \nCompiling & Dynamic -Linking Programs  8.1.3 .2 \nCompiling & Static -Linking Programs  8.1.3.3  \n \n  ", "start_char_idx": 710, "end_char_idx": 1821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47beb3b9-34a6-42f5-a94e-7dee46e2f589": {"__data__": {"id_": "47beb3b9-34a6-42f5-a94e-7dee46e2f589", "embedding": null, "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae896505-27ba-4e9e-a29e-b6874c340e11", "node_type": "4", "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a538943975de5620692e630d7910ce74518fabb3d8f5967806cf0c858df6bd5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1133bdb8-9749-4b6b-b3d9-6d9bfdce613a", "node_type": "1", "metadata": {}, "hash": "5a3c34debc7291f61a1f8fd5b3650cd49cfd9fd06819886bb8d598fd00438d92", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-49 6.2.6.  CANCEL  \nFigure 6-37 - CANCEL Syntax  \n The CANCEL  statement unloads the dynamically -loadable module  containing the \nentry -point specified as literal -1 or identifier -1 from memory.  \n1. ", "start_char_idx": 0, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1133bdb8-9749-4b6b-b3d9-6d9bfdce613a": {"__data__": {"id_": "1133bdb8-9749-4b6b-b3d9-6d9bfdce613a", "embedding": null, "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae896505-27ba-4e9e-a29e-b6874c340e11", "node_type": "4", "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a538943975de5620692e630d7910ce74518fabb3d8f5967806cf0c858df6bd5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47beb3b9-34a6-42f5-a94e-7dee46e2f589", "node_type": "1", "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d5b1803964eca797ff4acb77bbb6de117e2c8808c8237c8307b12eb9ac6bef64", "class_name": "RelatedNodeInfo"}}, "text": "If the dynamically -loadable module unloaded by the CANCEL  is subsequently re -executed, all DATA DIVISION  \nstorage for that dynamically -loadable module will once again be in its initial state.  \nSee Also\u2026  \nSub-programming  0 \n Compiling & Dynamic -Linking Programs  8.1.3.2  \n \n  \nCANCEL \u2026literal -1\nidentifier -1", "start_char_idx": 282, "end_char_idx": 600, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d408e380-c02e-4574-8529-abb87c89804c": {"__data__": {"id_": "d408e380-c02e-4574-8529-abb87c89804c", "embedding": null, "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "faa5d4fc-141a-4633-977d-c7ecfaeefed4", "node_type": "4", "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1c5772db91294ea1c27b3391b25c1e5323d80aa7324307ce85562e8f608139dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d127561-63d0-4c00-bc25-b23457791406", "node_type": "1", "metadata": {}, "hash": "db685adbaea2e6bfaefc74f224257aeff4b9fbbd6d992bdd062423c7cedd97c0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-50 6.2.7.  CLOSE  \nFigure 6-38 - CLOSE Syntax  \n The CLOSE  statement terminates the \nprogram \u2019s access to the specified \nfile(s ). \n1. The CLOSE  statement may only be executed against files that have been successfully OPEN ed. \n2. The REEL , UNIT , WITH LOCK  and NO REWIND  clauses are recognized syntactically but are otherwise non -functional \nexcept for the fact that a successful CLOSE \u2026 NO REWIND  will generate a FILE-STATUS  value of 07 rather than 00.  \n3. A successful CLOSE  will write any remaining unwritten record buffers to the file  (similar to a n UNLOCK ) and release \nany file locks for the file ; regardless of OPEN  mode .  A closed file will then be no longer available for subse quent I/O \nstatements until it is once again OPEN ed. \n", "start_char_idx": 0, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d127561-63d0-4c00-bc25-b23457791406": {"__data__": {"id_": "6d127561-63d0-4c00-bc25-b23457791406", "embedding": null, "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "faa5d4fc-141a-4633-977d-c7ecfaeefed4", "node_type": "4", "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1c5772db91294ea1c27b3391b25c1e5323d80aa7324307ce85562e8f608139dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d408e380-c02e-4574-8529-abb87c89804c", "node_type": "1", "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b32087398a8c4cf7135a4f0b4a5a3947e4d14e88ad6e48863b5adc314e59115a", "class_name": "RelatedNodeInfo"}}, "text": "4. When a LINE SEQUENTIAL  or LINE ADVANCING  file is CLOSE d, a final delimiter sequence will be written to the file \nto signal the termination point of the final data record in the file.  This will only be nec essary if the final record \nwritten to the file was written with the AFTER ADVANCING  option.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nFILE-STATUS Values  Figure \n4-15 \n The OPEN  Statement  6.4.29  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \n \n  \nCLOSE{ file-name -1         } \u2026REEL|UNIT[ FOR REMOVAL ]\nWITH LOCK\nWITH NOREWIND", "start_char_idx": 838, "end_char_idx": 1396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "907c139f-b7e3-42d0-af7a-80a2c1ab3f52": {"__data__": {"id_": "907c139f-b7e3-42d0-af7a-80a2c1ab3f52", "embedding": null, "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a377e3f-b8bd-46c5-b028-34a1fcb52988", "node_type": "4", "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d613bde0daa48265a0f37712d0fd761e04a13d3d1d7aa77b861002e7265dc41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a76793f-80af-4628-b347-49a7ee06faf0", "node_type": "1", "metadata": {}, "hash": "dc03e332d7d671fc89bfb037ca0b8984605a056e0a227c645842de9dad1ad250", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-51 6.2.8.  COMMIT  \nFigure 6-39 - COMMIT Syntax  \n The COMMIT  statement performs an UNLOCK  against \nevery currently -OPEN  file, but does NOT CLOSE  any of the \nfiles.  \n1. ", "start_char_idx": 0, "end_char_idx": 254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a76793f-80af-4628-b347-49a7ee06faf0": {"__data__": {"id_": "6a76793f-80af-4628-b347-49a7ee06faf0", "embedding": null, "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a377e3f-b8bd-46c5-b028-34a1fcb52988", "node_type": "4", "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d613bde0daa48265a0f37712d0fd761e04a13d3d1d7aa77b861002e7265dc41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "907c139f-b7e3-42d0-af7a-80a2c1ab3f52", "node_type": "1", "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2e6bbb82f5362a054a7e6a410da922837fafb9f7809a44d1c908ad61ce9c5148", "class_name": "RelatedNodeInfo"}}, "text": "See the UNLOCK  statement for additional details.  \nSee Also\u2026  \nThe CLOSE  Statement  6.4.7  \n The UNLOCK  Statement  6.4.48  \n \n  \nCOMMIT", "start_char_idx": 254, "end_char_idx": 392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cf2fb18-fe61-4283-803a-2594e0b03b17": {"__data__": {"id_": "2cf2fb18-fe61-4283-803a-2594e0b03b17", "embedding": null, "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0a150b6-97a3-4967-8e1c-01afd59f4d4f", "node_type": "4", "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0c9e54015a6746635b512e23a2e2aa40f89af489676ab5bede141e8196ff6b0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c49d0500-7e80-420e-a280-3f9fe69d8198", "node_type": "1", "metadata": {}, "hash": "b0521bfad40bfeba55a0b51187c6182f63db854823f61e7b885d3122d5c17e13", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-52 6.2.9.  COMPUTE  \nFigure 6-40 - COMPUTE Syntax  \n \nThe COMPUTE  statement provides a means of easily performing complex arithmetic operations with a single statement, \ninstead of using cumbersome and possibly confusing sequences of ADD , SUBTRACT , MULTIPLY  and DIVIDE  statements.  \n1. ", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c49d0500-7e80-420e-a280-3f9fe69d8198": {"__data__": {"id_": "c49d0500-7e80-420e-a280-3f9fe69d8198", "embedding": null, "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0a150b6-97a3-4967-8e1c-01afd59f4d4f", "node_type": "4", "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0c9e54015a6746635b512e23a2e2aa40f89af489676ab5bede141e8196ff6b0c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cf2fb18-fe61-4283-803a-2594e0b03b17", "node_type": "1", "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8194c18358ada6e655ee899ec210e97713d9c7488ee0ec8d047cb18fe3aac66f", "class_name": "RelatedNodeInfo"}}, "text": "Each identifier -1 must be a numeric or nu meric -edited data item.  \n2. The word EQUAL  and the equals -sign (=) may be used interchangeably.  \n3. The optional \u201c rounding -option \u201d clause available to each identifier -1 will control how non -integer results will be \nsaved .   \n4. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -1 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \nRounding Options  6.1.12.7  \nThe ADD  Statement  6.4.2  \n The DIVIDE  Statement  6.4.13  \nThe MULTIPLY  Statement  6.4.27  \nThe SUBTRACT  Statement  6.4.44  \n \n  \nCOMPUTE { identifier -1[ rounding -option] } \u2026 =|EQUAL arithmetic -expression -1\n[ size-error -clause]\n[ END-COMPUTE ]", "start_char_idx": 370, "end_char_idx": 1159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cdada33-1d54-43f3-ba5e-bf1c0d772c1d": {"__data__": {"id_": "2cdada33-1d54-43f3-ba5e-bf1c0d772c1d", "embedding": null, "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f29b83d0-ef0a-4fb7-aa4e-067884cf8f80", "node_type": "4", "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bd0ccee3d0a47982a68b3ec12430cc64ff347eac8b16479461c22e8dd255bf87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5d24a03-3e5e-4987-a66d-d3d050e60b5c", "node_type": "1", "metadata": {}, "hash": "b9ecc96587029f39537758fae9e9db1c96f6eff37df346d6e22aff2329b6dd40", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-53 6.2.10.  CONTINUE  \nFigure 6-41 - CONTINUE Syntax  \n The CONTINUE  statement is a no -operation statement, performing no action \nwhatsoever.   \n1. The CONTINUE  statement is often used with IF statements as a place -holder for conditionally -executed code that is \nnot yet needed or not yet designed.  The following two sentences are equivalent.  One uses CONTINUE  statements \nto mark places where code may need to be in serted in the future.  \n\u201cMinimalist\u201d Coding  \n(Specifying only what is necessary)  Coding With CONTINUE  \n(Documenting where code might be needed someday)  \nIF A = 1  \n   IF B = 1  \n      DISPLAY \u2018A=1 & B=1\u2019 END -DISPLAY \n   END-IF \nELSE \n   IF A = 2  \n      IF B = 2  \n         DISPLAY \u2018A=2 & B=2\u2019 END -DISPLAY \n      END-IF \n   END-IF \nEND-IF  \nIF A = 1  \n   IF B = 1  \n      DISPLAY \u2018A=1 & B=1\u2019 END -DISPLAY \n   ELSE \n      CONTINUE  \n   END-IF \nELSE \n   IF A = 2  \n      IF B = 2  \n         DISPLAY \u2018A=2 & B=2\u2019 END -DISPLAY \n      ELSE \n         CONTINUE  \n      END-IF \n   ELSE \n      CONTINUE  \n   END-IF \nEND-IF \n \nCoding such as this is generally a matter of personal preference or site coding standards.  There is no difference in \nthe object code generated by the two, so there isn\u2019t a run -time e fficiency issue (just one of \u201ccoding efficiency\u201d).  \n2. Another IF-statement usage for CONTINUE  is to avoid the use of NOT  in the conditional expression coded on the IF \nstatement.  This too is a personal and/or site standards issue.  Here\u2019s an example:  \nWithout CONTINUE  With CONTINUE  \nIF Action -Flag NOT = \u2018I\u2019 AND \u2018U\u2019  \n    DISPLAY \u2018Invalid Action -Flag\u2019 \n    EXIT PARAGRAPH  \nEND-IF  \nIF Action -Flag = \u2018I\u2019 OR \u2018U\u2019  \n    CONTINUE  \nELSE \n    DISPLAY \u2018Invalid Action -Flag\u2019 \n    EXIT PARAGRAPH  \nEND-IF \n \nBecause of the way COBOL ( GNU COBOL  included) handle s the abbreviation of conditional expressions, the \nconditional expression in the left -hand box is actually a short -hand version of  the (not -so-intuitive) : \nIF Action -Flag NOT = \u2018I\u2019 AND Action -Flag NOT = \u2018U\u2019  \nInexperienced COBOL  programm ers would have coded the \u201c IF\u201d (incorrectly) as \u201c IF Action -Flag NOT = \u2018I\u2019 OR \n\u2018U\u2019\u201d, because it\u2019s basically how one might say it if describing the logic;  this is sure to cause run -time problems as it \nactually represents \u201c IF Action -Flag NOT = \u2018I\u2019 OR Action -Flag NOT = \u2018U\u2019  \u2013 not the same thing at all!  \nThis causes many programmers to consider the code in the right -hand box to be more readable, even though it is a \nlittle longer.  \n", "start_char_idx": 0, "end_char_idx": 2569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5d24a03-3e5e-4987-a66d-d3d050e60b5c": {"__data__": {"id_": "c5d24a03-3e5e-4987-a66d-d3d050e60b5c", "embedding": null, "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f29b83d0-ef0a-4fb7-aa4e-067884cf8f80", "node_type": "4", "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bd0ccee3d0a47982a68b3ec12430cc64ff347eac8b16479461c22e8dd255bf87", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cdada33-1d54-43f3-ba5e-bf1c0d772c1d", "node_type": "1", "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5effb7bc0c0268eb16711ac9c1ebb8ab07bcd999aa8e19ca18746a827a681403", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe IF Statement  6.2.21  \n  \n  \nCONTINUE", "start_char_idx": 2569, "end_char_idx": 2622, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61452b86-2713-4dd8-9d19-faa904194cfd": {"__data__": {"id_": "61452b86-2713-4dd8-9d19-faa904194cfd", "embedding": null, "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "585c42eb-7f7a-428d-a58e-dc262ddf7d70", "node_type": "4", "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30bbdcd8d345ef837257e12d50d21b9c07be31577564fb071b44b262f6e20967", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c362495-7faf-4372-b8e1-367cab0c81a0", "node_type": "1", "metadata": {}, "hash": "c7085bb5990a4747a673e0d7e822c0a7aa28a03df1c4f6d10159d92fd9c1ac1c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-54 6.2.11.  DELETE  \nFigure 6-42 - DELETE Syntax  \n The DELETE  statement logically deletes a record from an \nORGANIZATION RELATIVE  or ORGANIZATION INDEXED  \nfile. \n1. ", "start_char_idx": 0, "end_char_idx": 248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c362495-7faf-4372-b8e1-367cab0c81a0": {"__data__": {"id_": "4c362495-7faf-4372-b8e1-367cab0c81a0", "embedding": null, "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "585c42eb-7f7a-428d-a58e-dc262ddf7d70", "node_type": "4", "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30bbdcd8d345ef837257e12d50d21b9c07be31577564fb071b44b262f6e20967", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61452b86-2713-4dd8-9d19-faa904194cfd", "node_type": "1", "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5ea48d07262c5081962c2a9163d2d5ed92ad786460188b6ae835a17d19cf0ca2", "class_name": "RelatedNodeInfo"}}, "text": "The ORGANIZATION  of file-name -1 must be RELATIVE  or INDEXED . \n2. For RELATIVE  or INDEXED  files in the SEQUENTIAL  access mode, the last input -output statement executed for file-\nname  prior to the execution of the DELETE  statement must have been a successfully executed  sequential -format  \nREAD  statement.   That READ  will therefore identify the record to be deleted.  \n3. If file-name -1 is a RELATIVE  file whose ACCESS MODE  is either RANDOM  or DYNAMIC , the record to be deleted is \nthe one whose relative record number is currently the value of the field specified as the files RELATIVE KEY  in it\u2019s \nSELECT  statement . \n4. If file-name -1 is an INDEXED  file whose ACCESS MODE  is RANDOM  or DYNAMIC , the record to be deleted is the \none whose primary key is currently the value of the field specified as the RECORD KEY  in the file\u2019s SELECT  \nstatement . \n5. An \u201cinvalid key\u201d condition will exist, and can be dealt with via the invalid -key-clause , if the record specified to be \ndeleted by the RELATIVE KEY  or RECORD KEY  value does not exist in an access mode RANDOM  or DYNAMIC  file.  \nThis is a condition that cannot  exist for ACCESS MODE SEQUENTIAL  files because of rule # 2.  DELETE  failures on \nACCESS MODE SEQUENTIAL  files can only be \u201chandled\u201d via DECLARATIVES  (section ) . \n6. No invalid -key-clause  may  be specified for a file who\u2019s  ACCESS MODE  IS SEQUENTIAL . \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nDefining File Characteristics (SELECT)  4.2.1  \nHandling Invalid Keys ( INVALID KEY ) 6.1.12.3  \n Using DECLARATIVES  6.1.4  \nThe READ Statement  6.4.31  \n \n  \nDELETE file-name -1RECORD\n[ invalid -key-clause]\n[ END-DELETE]", "start_char_idx": 248, "end_char_idx": 1915, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40dabc99-17f5-4982-adfb-7b6f3a3595ea": {"__data__": {"id_": "40dabc99-17f5-4982-adfb-7b6f3a3595ea", "embedding": null, "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cbffaa0-2ea8-49b6-879e-79cf0dfd23a9", "node_type": "4", "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e017d3d2ce1e707187e5f0861cd4a7458b85fe967b826e1e7c68c09500f160d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dd54b17-7527-4133-b082-38ce4287a62f", "node_type": "1", "metadata": {}, "hash": "c56f472c763289f174254a18d7726b6f3d04bba245b03173526a6c360ce4932f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-55 6.2.12.  DISPLAY  \n6.2.12.1.  DISPLAY Format 1 \u2013 \u201cUPON  \u201cdevice \u201d \nFigure 6-43 - DISPLAY (Upon Console) Syntax  \n This format of the DISPLAY  statement displays the \nspecified identifier  contents and/or literal values on the \nspecified device . \n1. If no UPON  clause is specified, UPON CONSOLE  will be assumed.   If the UPON  clause is specified, mnemonic -name -1 \nmust be one of the built -in device names  or a mnemonic name assigned to one of those devices via the SPECIAL -\nNAMES  paragraph of the CONFIGURATION SECTION . \n2. The NO ADVANCING  clause, if used, will suppress the normal carriage -return / line -feed sequence that normally is \nadded to the end of any console display.   You can see an example of this at work in the sample program on page 6-\n62. \n", "start_char_idx": 0, "end_char_idx": 853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dd54b17-7527-4133-b082-38ce4287a62f": {"__data__": {"id_": "5dd54b17-7527-4133-b082-38ce4287a62f", "embedding": null, "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cbffaa0-2ea8-49b6-879e-79cf0dfd23a9", "node_type": "4", "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e017d3d2ce1e707187e5f0861cd4a7458b85fe967b826e1e7c68c09500f160d9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40dabc99-17f5-4982-adfb-7b6f3a3595ea", "node_type": "1", "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "26a8727d30addc8411b203209ccb317454daae984e5a438ccbc15d9b525274de", "class_name": "RelatedNodeInfo"}}, "text": "3. The optional exception -handler   may be used to deal with errors attempting to display to the output device . \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nBuilt -in Device Names  Figure \n4-8 \n Handling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n \n4.  \n6.2.12.2.  DISPLAY Format 2 \u2013 Access Command -Line Arguments  \nFigure 6-44 - DISPLAY (Access Command -line Arguments) Syntax  \n This form of the DISPLAY  statement may be used to specify the \ncommand -line argument number to be retrieved by a \nsubsequent ACCEPT  or to specify a new value for the command -\nline arguments themselves.  \n1. By DISPLAY ing a numeric integer value UPON ARGUMENT -NUMBER , you will specify which argument (by its \nrelative number) will be retrieved by a subsequent ACCEPT \u2026 FROM ARGUMENT VALUE  statement.  \n2. Executing a DISPLAY \u2026 UPON COMMAND -LINE  will influence subsequent ACCEPT \u2026 FROM COMMAND -LINE  \nstatements (whi ch will then return the DISPLAY ed value), but will not influence subsequent ACCEPT \u2026 FROM \nARGUMENT -VALUE  statements \u2013 these will continue to return the original program execution parameters.  \n3. The optional exception -handler  may be used to deal any errorsthat  occur at run -time . \nSee Also\u2026  \nHandling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n The ACCEPT Statement (Command Line)  6.2.1.2  \n \nDISPLAY \u2026\n[ UPON mnemonic -name -1]\n[WITH NOADVANCING ]\n[ exception -handler]\n[ END-DISPLAY ]literal -1\nidentifier -1\nDISPLAY \u2026 \nUPON\n[ exception -handler]\n[ END-DISPLAY ]literal -1\nidentifier -1\nARGUMENT -NUMBER\nCOMMAND -LINE", "start_char_idx": 853, "end_char_idx": 2393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef3b6ea0-f6e4-46ac-a2d8-02609b47b33e": {"__data__": {"id_": "ef3b6ea0-f6e4-46ac-a2d8-02609b47b33e", "embedding": null, "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98b3534e-47af-4e6e-9df0-b44500c743c1", "node_type": "4", "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1b1d7a9e2ae75194b889117ff41ebd01833eb8e361189a864fe1d345e5b0fc80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a038b144-ec86-4560-afb7-d94a93755a17", "node_type": "1", "metadata": {}, "hash": "93942ce5346b8ed193998e999f9238f6604c8d8337ae07067eb7d5dc5dab00bf", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-56 6.2.12.3.  DISPLAY Format 3 \u2013 Access or Set Environment Variables  \nFigure 6-45 - DISPLAY (Access / Set Environment Variables) Syntax  \n This form of the DISPLAY  statement can be used to create \nor modify environment variables.  \n \n1. To create or change an environment variable will require two DISPLAY  statements .  The following example sets the \nenvironment variable \u201cMY_ENV_VAR\u201d to a value of \u201cDemonstration Value\u201d:  \nDISPLAY \u201cMY_ENV_VAR\u201d  UPON ENVIRONMENT -NAME \nDISPLAY \u201cDemonstration Value\u201d UPON ENVIRONMENT -VALUE \n2. Environment variables created or changed from within GNU COBOL  programs will be available to any sub -shell \nprocesses spawned by that program (i.e. CALL  \u201cSYSTEM\u201d) but will not be known to the shell or console window that \nstarted  the GNU COBOL  program.  \n3. Consider using SET ENVIRONMENT  in lieu of DISPLAY  to set environment variables as it is much simpler.  \n4. ", "start_char_idx": 0, "end_char_idx": 983, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a038b144-ec86-4560-afb7-d94a93755a17": {"__data__": {"id_": "a038b144-ec86-4560-afb7-d94a93755a17", "embedding": null, "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98b3534e-47af-4e6e-9df0-b44500c743c1", "node_type": "4", "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1b1d7a9e2ae75194b889117ff41ebd01833eb8e361189a864fe1d345e5b0fc80", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef3b6ea0-f6e4-46ac-a2d8-02609b47b33e", "node_type": "1", "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4624456a6e541539600315e3a94dfbad860ab4ce65653f65e847bf1b0cc7653", "class_name": "RelatedNodeInfo"}}, "text": "The optional exception -handler  may be used to deal any errorsthat occur at run -time.  \nSee Also\u2026  \nHandling Invalid Keys ( INVALID KEY ) 6.1.12.3  \n The SET ENVIRONMENT  Statement  6.4.39.1  \n \n6.2.12.4.  DISPLAY Format 4 \u2013 Screen Data  \nFigure 6-46 - DISPLAY (Screen Data) Syntax  \n This format of the \nDISPLAY  statement \npresents data onto a \nformatted screen.  \n1. If identifier -1 is defined in the SCREEN SECTION , any at-clause , upon -clause  and with -clause  specified for that \nidentifier will be ignored, and all field positioning and screen control will occur as a result of the SCREEN SECTION  \ndefinition of identifier -1.   \n2. The purpose of the at-clause  is to define where \non the screen identifier -1 should be displayed.  \nConsult the documentation for format 4 of the \nACCEPT  statement  (Screen Data)  for additional \ninformation.  \n \n3. The UPON  clause, while supported syntactically, is otherwise non -functional \nat this time.  \n \nDISPLAY \u2026 \nUPON\n[ exception -handler]\n[ END-DISPLAY ]literal -1\nidentifier -1\nENVIRONMENT -VALUE\nENVIRONMENT -NAME\nDISPLAY { identifier -1[ at-clause] [ upon -clause] [ with -clause] } \u2026\n[ exception -handler]\n[ END-DISPLAY ]\ninteger -3\nidentifier -3LINENUMBERinteger -1\nidentifier -1\nCOLUMN\nPOSITIONNUMBERinteger -2\nidentifier -2\u2026\nAT\nUPONCRT\nCRT-UNDER", "start_char_idx": 983, "end_char_idx": 2296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6b1aed1-782c-41ed-b757-1e52be3b708f": {"__data__": {"id_": "a6b1aed1-782c-41ed-b757-1e52be3b708f", "embedding": null, "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e9d4dfb-d5ac-4a39-b7aa-824d45e630bc", "node_type": "4", "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "076e2f4f4ff431091418f602ed92adf270e1fb11916734637b842d81f4fcb6af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95e9c904-9e4b-49ce-951c-687e511f1b29", "node_type": "1", "metadata": {}, "hash": "5ddef6a6f9550275bd051257ca3047ed2962b031ad0338ec906231fc7f8997c6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-57 4. The purpose of the with -clause  \nis to define the visual attributes \nthat should be applied to \nidentifier -1 when it is displayed \non the screen.  Consult the \ndocumentation for format 4 of \nthe ACCEPT  statement (Screen \nData) for additional informati on. \nThe following attribute -\nspecification  clauses are allowed \non a DISPLAY  statement  with -clause  \u2013 these are the same as those allowed for SCREEN SECTION  data items.   \nBACKGROUND -COLOR  FOREGROUND -COLOR  UNDERLINE  \nBEEP | BELL  HIGHLIGHT  | LOWLIGHT  ERASE EOL | ERASE EOS  \nBLANK LINE | BLANK SCREEN  OVERLINE   \nBLINK  REVERSE -VIDEO   \n4. The optional exception -handler  may be used to deal any screen I/O errorsthat occur at run -time.  \n", "start_char_idx": 0, "end_char_idx": 797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95e9c904-9e4b-49ce-951c-687e511f1b29": {"__data__": {"id_": "95e9c904-9e4b-49ce-951c-687e511f1b29", "embedding": null, "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e9d4dfb-d5ac-4a39-b7aa-824d45e630bc", "node_type": "4", "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "076e2f4f4ff431091418f602ed92adf270e1fb11916734637b842d81f4fcb6af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6b1aed1-782c-41ed-b757-1e52be3b708f", "node_type": "1", "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92aee086bbe894d0798d45fcee3b540a7f31c303594db79639b8bc3376fe86ff", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nDefining Screens  5.2.2  \nHandling Exceptions ( ON EXCEPTION ) 6.1.12.4  \n The ACCEPT Statement (Screen Data)  6.4.1.4  \n \n  \ninteger -4\nidentifier -5attribute -specification \u2026\nSCROLL BY\nTIMEOUT\nTIME-OUT\nCONVERSIONUP\nDOWNLINE\nLINES\nAFTERinteger -5\nidentifier -6WITH", "start_char_idx": 797, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db01a155-fbd1-4b21-8bfd-afe129128432": {"__data__": {"id_": "db01a155-fbd1-4b21-8bfd-afe129128432", "embedding": null, "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e954b10-87f0-4905-aba1-8a6daf7ea88e", "node_type": "4", "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "08634bc82fbfa068c3228fa621f23c4d5ddfcf9ec411462df455463a505c272e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c004831c-6037-4a70-8de6-3f97ced70eb5", "node_type": "1", "metadata": {}, "hash": "ed5eea7274aad3bd40972bc2dd53f976319236da25083db5278cdb3b297b0cb7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-58 6.2.13.  DIVIDE  \n6.2.13.1.  DIVIDE Format 1 \u2013 DIVIDE INTO  \nFigure 6-47 - DIVIDE INTO Syntax  \n This format of DIVIDE  will divide \na specified value into one or \nmore data items, replacing the \nvalue in each of those data items \nwith the result of its old value \ndivided by the identifier -1 or \nliteral -1 value.  Any remainder \ncalculated as a result of the \ndivision is discarded.  \n", "start_char_idx": 0, "end_char_idx": 470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c004831c-6037-4a70-8de6-3f97ced70eb5": {"__data__": {"id_": "c004831c-6037-4a70-8de6-3f97ced70eb5", "embedding": null, "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e954b10-87f0-4905-aba1-8a6daf7ea88e", "node_type": "4", "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "08634bc82fbfa068c3228fa621f23c4d5ddfcf9ec411462df455463a505c272e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db01a155-fbd1-4b21-8bfd-afe129128432", "node_type": "1", "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "498a6db9540edfd4e8b6a5a1d97d42d2247119b61df52bdca1c1d88114a9a98a", "class_name": "RelatedNodeInfo"}}, "text": "1. Identifier -1 and identifier -2 must be numeric unedited data items  and literal -1 must be a numeric literal.  \n2. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how non -integer results will be \nsaved .   \n3. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results; this clause will also detect attempts to divide by zero.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n6.2.13.2.  DIVIDE Format 2 \u2013 DIVIDE INTO GIVING  \nFigure 6-48 - DIVIDE INTO GIVING Syntax  \n \n This format of DIVIDE  will divide a specified \nvalue (identifier -1 or literal -1) into another value \n(identifier -2 or literal -2) and will then repl ace \nthe contents of one or more receiving data \nitems ( identifier -3 \u2026) with the results of that \ndivision.   \nAny remainder calculated as a result of the \ndivision is discarded  unless a REMAINDER clause \nis present . \n1. Identifier -1 and identifier -2 must be numeric unedited data items , identifier -3 and identifier -4 must be numeric \n(edited or unedited) data item s and literal -1 and literal -2 must be numeric literals.  \n2. The optional \u201c rounding -option \u201d clause available to each identifier -3 will control how non-integer results will be \nsaved .   \n3. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -3 is \ninsufficiently sized to hold the generated results; this clause will also detect attempts to divide by zero.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n  \nDIVIDE INTO{ identifier -2[ rounding -option] }\u2026\n[ size-error -clause]\n[ END-DIVIDE]literal -1\nidentifier -1\nDIVIDE INTO\nGIVING{ identifier -3[ rounding -option] } \u2026\n[ REMAINDER identifier -4]\n[ size-error -clause]\n[ END-DIVIDE]literal -1\nidentifier -1literal -2\nidentifier -2", "start_char_idx": 470, "end_char_idx": 2451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ef86e2e-9b78-457f-bf9b-afb2c8b4d55e": {"__data__": {"id_": "4ef86e2e-9b78-457f-bf9b-afb2c8b4d55e", "embedding": null, "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "539fd4b2-0767-49be-8481-a71d2c016b5d", "node_type": "4", "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccae2f2f544e6699d478abcbc7116cda779c1a1088cd06c6c73528f67eea56a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62264394-d41f-4948-a207-28ba6875d467", "node_type": "1", "metadata": {}, "hash": "6693c9ad04586ce70edc242b27ccf0be3fbb04dfd283d9e7cb858105dab29623", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-59 6.2.13.3.  DIVIDE Format 3 \u2013 DIVIDE BY  GIVING  \nFigure 6-49 - DIVIDE BY GIVING Syntax  \n This format of DIVIDE  will divide a specified \nvalue ( identifier -1 or literal -1) by another value \n(identifier -2 or literal -2) and will then replace \nthe contents of one or more receiving data \nitems ( identifier -3 \u2026) with the results of that \ndivision.    \nAny remainder calculated as a result of the \ndivision is discarded  unless a REMAINDER  clause \nis present . \n", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62264394-d41f-4948-a207-28ba6875d467": {"__data__": {"id_": "62264394-d41f-4948-a207-28ba6875d467", "embedding": null, "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "539fd4b2-0767-49be-8481-a71d2c016b5d", "node_type": "4", "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccae2f2f544e6699d478abcbc7116cda779c1a1088cd06c6c73528f67eea56a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ef86e2e-9b78-457f-bf9b-afb2c8b4d55e", "node_type": "1", "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "44b4201758656e8f49bf4935da7070a7ce30a05007146979267f609ab615ab76", "class_name": "RelatedNodeInfo"}}, "text": "1. Identifier -1 and identifier -2 must be numeric unedited data items , identifier -3 and identifier -4 must be numeric \n(edited or unedited) data item s and literal -1 and literal -2 must be numeric literals.  \n2. The optional \u201c rounding -option \u201d clause available to each identifier -3 will control how non-integer results will be \nsaved .   \n3. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -3 is \ninsufficiently sized to hold the generated results; this clause will also detect attempts to divide by zero.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n  \nDIVIDE BY\nGIVING{ identifier -3[ rounding -option] } \u2026\n[ REMAINDER identifier -4]\n[ size-error -clause]\n[ END-DIVIDE]literal -1\nidentifier -1literal -2\nidentifier -2", "start_char_idx": 547, "end_char_idx": 1379, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f33bd26-ec0d-41d8-b989-cdac52e09254": {"__data__": {"id_": "7f33bd26-ec0d-41d8-b989-cdac52e09254", "embedding": null, "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4490db42-eefa-4d00-b7f0-0c8169722614", "node_type": "4", "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fbdd060abff2e7981a7f77455e295869d6b88fccff6c4891d9564589038ff887", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06764239-581c-43d2-83cf-2251369e252f", "node_type": "1", "metadata": {}, "hash": "7fc545192aed3e1417e7ef7977b36ac43bcb8ba1826d561846928697f3265bdf", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-60 6.2.14.  ENTRY  \nFigure 6-50 - ENTRY Syntax  \n The ENTRY  statement is used to define an alternate entry -point  \ninto a subroutine, along with the arguments that subroutine will \nbe expecting.   \n1. ", "start_char_idx": 0, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06764239-581c-43d2-83cf-2251369e252f": {"__data__": {"id_": "06764239-581c-43d2-83cf-2251369e252f", "embedding": null, "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4490db42-eefa-4d00-b7f0-0c8169722614", "node_type": "4", "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fbdd060abff2e7981a7f77455e295869d6b88fccff6c4891d9564589038ff887", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f33bd26-ec0d-41d8-b989-cdac52e09254", "node_type": "1", "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "35095abbcff1bb8d2e884fdc9d865c548cbac7bbd30a3e1e299873c154ec6704", "class_name": "RelatedNodeInfo"}}, "text": "You may not use an ENTRY  statement in a nested subprogram.  \n2. The USING  clause defines the arguments the subroutine entry -point supports.  This list of arguments must match \nup against the USING  clause of any CALL  statements  that will be invoking the subroutine  using this entry -point . \n3. Each argument -n specified on the ENTRY  statement must be defined in the LINKAGE SECTION  of the subprogram in \nwhich the ENTRY  statement exists.  \n4. The literal -1 value will specify the entry -point  name  of the subroutine.  It must be specified exactly  on CALL  \nstatements (with regard to the use of upper - and lower -case letters) as it is specified on the ENTRY  statement.  \n5. Each argument -n entry must follow the syntax  shown to the right .  The \nusage of REFERENCE , CONTENT  and VALUE  on an argument should \nmatch the manner in which that argument is being passed on the CALL  \nstatement.  \n \nSee Also\u2026  \nThe DATA DIVISION  5 \nThe CALL  Statement  6.4.5  \n Sub-programming  0 \nDetails of Nested Subprograms  7.6 \n \n  \nENTRY literal -1[ USINGargument -1 \u2026]\nBY identifier -1REFERENCE\nCONTENT\nVALUEFigure 6-51 - ENTRY Statement Argument Syntax  ", "start_char_idx": 282, "end_char_idx": 1446, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d1c83a3-3012-4843-8865-36601fbfeefc": {"__data__": {"id_": "2d1c83a3-3012-4843-8865-36601fbfeefc", "embedding": null, "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185", "node_type": "4", "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccf73228c31ed4f3b557a0ca6daec8775d3759a59c408a95aa0b6cc6cac065ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38b4545e-f7b2-4dfd-b349-c604b153693b", "node_type": "1", "metadata": {}, "hash": "d62199febe634b0bcb2edc1cdbfa629c256ac9c3160bf051808210ee9c45b00e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-61 6.2.15.  EVALUATE  \nFigure 6-52 - EVALUATE Syntax  \n  \nThe EVALUATE  statement provides a means of defining processing that should take place under a multitude of \nconditions.  \n", "start_char_idx": 0, "end_char_idx": 260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38b4545e-f7b2-4dfd-b349-c604b153693b": {"__data__": {"id_": "38b4545e-f7b2-4dfd-b349-c604b153693b", "embedding": null, "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185", "node_type": "4", "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccf73228c31ed4f3b557a0ca6daec8775d3759a59c408a95aa0b6cc6cac065ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d1c83a3-3012-4843-8865-36601fbfeefc", "node_type": "1", "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b251753d50c9802e3dc5dc895d3ce238ecf415bdf795f478611b776f4a239d02", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61edc0d5-8323-42b7-9d4f-f4893230381c", "node_type": "1", "metadata": {}, "hash": "bbce0d4eb20eaa39f4c729b7d876fd122b114a64d334f38a2850942b89675c6c", "class_name": "RelatedNodeInfo"}}, "text": "1. There must be at least one WHEN  clause specified on any EVALUATE  statement.  There may also be multiple WHEN  \nclauses specified.  \n2. There must be at least one selection -subject  specified on the EVALUATE  statement itself.  \nThe syntax  of a selection -subject  is shown to the right.  \n3. Each selection subject will have its value matched against the corresponding selection object  \nvalue on every WHEN  clause.  \n4. The first WHEN  clause having each of its selection -object (s) successfully match ed by the \ncorresponding selection -subject  on the EVALUATE  statement will be the one whose \nimperative -statement -1 (if any) is executed.   If the successfully matched WHEN clause does \nnot have its own imperative -statement -1 then the next imperative -statement -1 (on another \nWHEN  clause) following the WHEN  that was matched will be executed.  \n5. If no WHEN  clause has it\u2019s imperative -statement -1 executed, then the WHEN OTHER  clause\u2019s imperative -\nstatement -2 will be executed (if WHEN OTHER  was specified).  \n6. Once imperative -statement -1 or imperative statement -2 is executed  (or would have been executed if it existed) , \ncontrol will proceed with the statement following the END -EVALUATE . \n7. ", "start_char_idx": 260, "end_char_idx": 1494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61edc0d5-8323-42b7-9d4f-f4893230381c": {"__data__": {"id_": "61edc0d5-8323-42b7-9d4f-f4893230381c", "embedding": null, "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185", "node_type": "4", "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccf73228c31ed4f3b557a0ca6daec8775d3759a59c408a95aa0b6cc6cac065ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38b4545e-f7b2-4dfd-b349-c604b153693b", "node_type": "1", "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0124b9d435f6e9441ff9485ec55d841b2bfbd43de37c28c6f7f6ebc173e2924e", "class_name": "RelatedNodeInfo"}}, "text": "The syntax of a selection -object  is shown to \nthe right.  \n8. The reserved words THRU  and THROUGH  \nmay be used interchangeably.  \n9. When using THRU , the values on both sides \nof the THRU must be the same class (both \nnumeric, both alphanum eric, etc.).  \n10. A partial -expression  is one of the following:  \na. A class -condition  without a leading \nidentifier -1 \nb. A sign-condition  without a leading identifier -1 \nc. A relation -conditio n with nothing to the left of the relational operator  \n11. In order for a selection -subject  to match the corresponding selection -object  on a WHEN  clause, one of the following \nmust be true:  \na. The selection -object is ANY  \nb. The value of the  selection -subject  is equal to the value of  the selection object  \nc. The value of the selection -subje ct falls within the range specified by the THRU  clause of the selection -object  \nd. If the selection -object  is a partial -expression  (see # 10, above), then the true/fals e result that would be obtained \nif the partial -expression  is applied to the selection -subject  must be true; this will be iollustrated in an upcoming \nexample  \nEVALUATE selection -subject -1[ ALSO selection -subject -2] \u2026\n{{ WHEN selection -object -1[ ALSO selection -object -2] } \u2026 [ imperative -statement -1] } \u2026\n[ WHENOTHER imperative -statement -2]\n[ END-EVALUATE ]\nTRUE\nFALSE\nexpression -1\nidentifier -1\nliteral -1Syntax of a\nselection -subject\nANY\nTRUE\nFALSE\npartial -expression -1\nexpression -2\nidentifier -2\nliteral -2expression -3\nidentifier -3\nliteral -3THRU|THROUGHSyntax of a selection -object", "start_char_idx": 1494, "end_char_idx": 3089, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b10192e-cbb7-4c4f-b2fc-2dddc5cd19e7": {"__data__": {"id_": "5b10192e-cbb7-4c4f-b2fc-2dddc5cd19e7", "embedding": null, "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c4c709a-dfd2-4cf9-8cfe-e4da8765e9f8", "node_type": "4", "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c7cb73e11524a94a7700acfaebf612f2b3801a0711aa2835cc7b0f6196da750b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eaaa8346-89e2-49ed-8828-3a0153dfb05f", "node_type": "1", "metadata": {}, "hash": "fb6b3e814ba2f7098580f36cef14a86334a0677dd2b5bcb835b40438d4721ff0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-62 Here is a sample program that illustrates the EVALUATE  statement.  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. DEMOEVALUATE.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Test -Digit                  PIC 9(1).  \n           88 Digit -Is-Odd VALUE 1, 3, 5, 7, 9.  \n           88 Digit -Is-Prime VALUE 1, 3, 5, 7.  \n       PROCEDURE DIVISION . \n       ", "start_char_idx": 0, "end_char_idx": 467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eaaa8346-89e2-49ed-8828-3a0153dfb05f": {"__data__": {"id_": "eaaa8346-89e2-49ed-8828-3a0153dfb05f", "embedding": null, "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c4c709a-dfd2-4cf9-8cfe-e4da8765e9f8", "node_type": "4", "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c7cb73e11524a94a7700acfaebf612f2b3801a0711aa2835cc7b0f6196da750b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b10192e-cbb7-4c4f-b2fc-2dddc5cd19e7", "node_type": "1", "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ca067fcaa2651651bccc06fe8c90c8c080e1e321c485a3c76a9fecf8430d059", "class_name": "RelatedNodeInfo"}}, "text": "P1. PERFORM UNTIL EXIT  \n               DISPLAY \"Enter a digit (0 Quits): \"  \n                   WITH NO ADVANCING  \n               ACCEPT Test -Digit \n               IF Test-Digit = 0  \n                   EXIT PERFORM  \n               END-IF \n               EVALUATE Digit -Is-Odd ALSO Digit -Is-Prime  \n                   WHEN TRUE ALSO FALSE  \n                       DISPLAY Test -Digit \" is ODD\"  \n                           WITH NO ADVANCING  \n                   WHEN TRUE ALSO TRUE  \n                       DISPLAY Test -Digit \" is PRIME\"  \n                           WITH NO ADVANCING  \n                   WHEN FALSE ALSO ANY  \n                       DISPLAY Test -Digit \" is EVEN\"  \n                           WITH NO ADVANCING  \n               END-EVALUATE  \n               EVALUATE T est-Digit \n                   WHEN < 5  \n                       DISPLAY \" and it \u2019s small too\"  \n                   WHEN < 8  \n                       DISPLAY \" and it \u2019s medium too\"  \n                   WHEN OTHER  \n                       DISPLAY \" and it \u2019s large too\"  \n               END-EVALUATE  \n           END-PERFORM \n           DISPLAY \"Bye!\"  \n           STOP RUN  \n           . Console output when run  (user input is highlighted ): \nEnter a digit (0 Quits): 1 \n1 is PRIME and it \u2019s small too  \nEnter a digit (0 Quits): 2 \n2 is EVEN  and it\u2019s small too  \nEnter a digit (0 Quits): 3 \n3 is PRIME and it \u2019s small too  \nEnter a digit (0 Quits): 4 \n4 is EVEN and it \u2019s small too  \nEnter a digit (0 Quits): 5 \n5 is PRIME and it \u2019s medium too  \nEnter a digit (0 Quits): 6 \n6 is EVEN and it \u2019s medium too  \nEnter a digit (0 Quits): 7 \n7 is PRIME and it \u2019s medium too  \nEnter a digit (0 Quits): 8 \n8 is EVEN and it \u2019s large too  \nEnter a digit (0 Quits): 9 \n9 is ODD and it \u2019s large too  \nEnter a digit (0 Quits): 0 \nBye!  \n \nSee Also\u2026  \nClass Tests  6.1.4.2.2  \nSign Tests  6.1.8.2.3  \n Relation Tests  6.1.8.2.5  \n \n  ", "start_char_idx": 467, "end_char_idx": 2383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "190e6982-7264-4f3e-bc69-8d8e69dab527": {"__data__": {"id_": "190e6982-7264-4f3e-bc69-8d8e69dab527", "embedding": null, "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63", "node_type": "4", "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "453990442d90657dafe8a8437d3f2b17900f7cf1e1b8375d555a6f4c9f6f8926", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ef28d87-2220-4d15-9b07-03f87958cf8b", "node_type": "1", "metadata": {}, "hash": "35a49a7f866f08a6c566efd2c7ddb336a0483f69b4cdb15d4b741191574c18a2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-63 6.2.16.  EXIT  \nFigure 6-53 - EXIT Syntax  \n The EXIT  statement is a multi -purpose statement; it may provide a \ncommon end point for a series of  procedures , exit an inline PERFORM, a  \nparagraph or a section  or it may mark the logical end of a subprogram . \n \n1. When used without any of the optional clauses, \nthe \u201c EXIT\u201d statement simply provides a common \n\u201cGO TO \u201d end point for a series of procedures.  \nFigure 6-57 illustrates this usage of the EXIT  \nstatement.   \n2. When an EXIT  statement is used, it must be the \nonly statement in the paragraph in which it occurs.  \n3. The EXIT  statement takes no other run -time \naction.  Figure 6-54 - Using the EXIT Statement  \n \n4. An EXIT PARAGRAPH  statement transfers control to a \npoint immediately past the end of the current \nparagraph, while an EXIT SECTION  statement causes \ncontrol to pass to point immediately past the last \nparagraph in t he current section.If the EXIT \nPARAGRAPH  or EXIT SECTION  resides in a paragraph \nwithin the scope of a procedural PERFORM , control will \nbe returned back to the PERFORM  for evaluation of \nany TIMES , VARYING  and/or UNTIL  clauses.  It the EXIT \nPARAGRAPH  or EXIT SECTION  resides outside the \nscope of a procedural PERFORM , control simply \ntransfers to the first executable statement in the next \nparagraph ( EXIT PARAGRAPH ) or section ( EXIT \nSECTION ). \nFigure 6-58 shows how the example shown in Figure \n6-57 could have been coded without a GO TO  by \nutilizing an EXIT PARAGRAPH  statement.  Figure 6-55 - Using EXIT PARAGRAPH  \n \n5. The EXIT PERFORM  and EXIT PERFORM CYCLE  statements are intended to be used in conjunction with an inline \nPERFORM  statement.  \n6. An EXIT PERFORM CYCLE  will terminate the current iteration of the inline PERFORM , giving control to any TIMES , \nVARYING  and/or UNTIL  clauses for them to determine if another cycle needs to be performed.  \nPROGRAM\nFUNCTION\nPERFORM [CYCLE]\nSECTION\nPARAGRAPHEXIT\n01  Switches.\n05 Input -File-Switch    PIC X(1).\n88 EOF-On-Input-File VALUE \u2018Y\u2019 FALSE \u2018N\u2019.\n.\n.\n.\nSET EOF-On-Input-File TO FALSE.\nPERFORM 100 -Process-A-Transaction\nTHRU 199 -Exit\nUNTIL EOF -On-Input-File.\n.\n", "start_char_idx": 0, "end_char_idx": 2239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ef28d87-2220-4d15-9b07-03f87958cf8b": {"__data__": {"id_": "0ef28d87-2220-4d15-9b07-03f87958cf8b", "embedding": null, "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63", "node_type": "4", "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "453990442d90657dafe8a8437d3f2b17900f7cf1e1b8375d555a6f4c9f6f8926", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "190e6982-7264-4f3e-bc69-8d8e69dab527", "node_type": "1", "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f8e2d53142b97ea24144d11f52b473e08c14ce1b7745236d4793965b2fd48329", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37534c5e-ad79-4f1f-80b8-7b1ca5237625", "node_type": "1", "metadata": {}, "hash": "3e4268a8709e0bf92a7324d08a26c24e945718b63414b0110fe736c532302f6c", "class_name": "RelatedNodeInfo"}}, "text": ".\n.\n100-Process-A-Transaction.\nREAD Input -File AT END\nSET EOF-On-Input-File TO TRUE\nGO TO 199 -Exit.\nIF Input -Recof Input -File = SPACES\nGO TO 199 -Exit.  *> IGNORE BLANK RECORDS!\nprocess the record just read\n199-Exit.\nEXIT.\n01  Switches.\n05 Input -File-Switch    PIC X(1).\n88 EOF-On-Input-File VALUE \u2018Y\u2019 FALSE \u2018N\u2019.\n.\n.\n.\nSET EOF-On-Input-File TO FALSE.\nPERFORM 100 -Process-A-Transaction\nUNTIL EOF -On-Input-File.\n.\n", "start_char_idx": 2239, "end_char_idx": 2658, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37534c5e-ad79-4f1f-80b8-7b1ca5237625": {"__data__": {"id_": "37534c5e-ad79-4f1f-80b8-7b1ca5237625", "embedding": null, "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63", "node_type": "4", "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "453990442d90657dafe8a8437d3f2b17900f7cf1e1b8375d555a6f4c9f6f8926", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ef28d87-2220-4d15-9b07-03f87958cf8b", "node_type": "1", "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "39b26dfe786d4bec24c3e2651d359c18c3a5c8d21f4c819f463963690a9eb708", "class_name": "RelatedNodeInfo"}}, "text": ".\n.\n100-Process-A-Transaction.\nREAD Input -File AT END\nSET EOF-On-Input-File TO TRUE\nEXIT PARAGRAPH.\nIF Input -Recof Input -File = SPACES\nEXIT PARAGRAPH.  *> IGNORE BLANK RECORDS!\nprocess the record just read", "start_char_idx": 2658, "end_char_idx": 2866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11ce7bc0-6a66-4391-b220-92b58f54d2db": {"__data__": {"id_": "11ce7bc0-6a66-4391-b220-92b58f54d2db", "embedding": null, "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcdbd654-b340-4b01-804d-6c84d615fa8d", "node_type": "4", "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1ae3fb941b8f24acc7a0a822afa2a5dfea2534983b02791debeef6c7a498066", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2700ebc-73f4-47f2-9be0-5da6cc685184", "node_type": "1", "metadata": {}, "hash": "148286b156a1b1c971d35e1466d9232b9e6f39ab1d71fce035155b752b96e689", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-64 7. An EXIT PERFORM  will terminate the inline \nPERFORM  outright, transferring control to the first \nstatement following the PERFORM .  Figure 6-59 \nshows the final modification to the Figure 6-57 \nexample; by using Inlin e PERFORM  and EXIT \nPERFORM  statements we can really  streamline \nprocessing.  Figure 6-56 - Using the EXIT PERFORM Statement  \n \n8. The EXIT PROGRAM  and EXIT FUNCTION  statement s terminate the execution of a subroutine (i.e.  a program that \nhas been CALL ed by another)  or user -defined function, respectively.   An EXIT PROGRAM  statement returns control \nback to the statement following the CALL  of the subprogram.  An EXIT FUNCTION  returns control back to the \nprocessing of the statement in the calling program that invoked the user -defined function.  \n9. If executed by a main program, neither the EXIT PROGRAM  nor EXIT FUNCTION  statement s are non-functional.  \nThe EXIT PROGRAM  state ment is not legal anywhere within a user -defined function and EXIT FUNCTION  cannot be \nused anywhere within a subroutine.  Neither may be used within a USE GLOBAL  routine in DECLARATIVES . \n", "start_char_idx": 0, "end_char_idx": 1201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2700ebc-73f4-47f2-9be0-5da6cc685184": {"__data__": {"id_": "a2700ebc-73f4-47f2-9be0-5da6cc685184", "embedding": null, "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcdbd654-b340-4b01-804d-6c84d615fa8d", "node_type": "4", "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1ae3fb941b8f24acc7a0a822afa2a5dfea2534983b02791debeef6c7a498066", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11ce7bc0-6a66-4391-b220-92b58f54d2db", "node_type": "1", "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "221cc89a5b9b9a2a79649e4370df2bbaffd8047d1686730de61d8053b5f6548e", "class_name": "RelatedNodeInfo"}}, "text": "10. The COBOL2002 standard has made a common extension to the COBOL langu age - the GOBACK  statement \u2013 now a \nstandard language element ; the GOBACK  statement should be strongly considered as the preferred alternative to \nEXIT PROGRAM  and EXIT FUNCTION  for new subprograms .   \nSee Also\u2026  \nUsing DECLARATIVES  6.1.4 \nThe CALL  Statement  6.4.5  \nThe GOBACK  Statement  6.2.19  \nThe GO TO  Statement  6.2.20  \n The PERFORM  Statement (Procedural)  6.2.30.1  \nThe PERFORM  Statement (Inline)  6.4.30.2  \nSub-programming  0 \nSubprograms Subroutines vs Functions  7.1 \n \n  \nPERFORM UNTIL EXIT\nREAD Input -File AT END\nEXIT PERFORM\nEND-READ\nIF Input -Recof Input -File = SPACES\nEXIT PERFORM CYCLE  *> IGNORE BLANK RECORDS!\nEND-IF\nprocess the record just read\nEND PERFORM", "start_char_idx": 1201, "end_char_idx": 1969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6881237e-6022-4757-824a-327c84bee071": {"__data__": {"id_": "6881237e-6022-4757-824a-327c84bee071", "embedding": null, "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abe808bb-5736-4620-9cdb-93b4fce9bd95", "node_type": "4", "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f6908a1cff904ec51d9677b867aeb468a8ffbe043e353d9fadc3da7415bcccf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac7f9c2d-b46d-487b-8aeb-d58f2298b620", "node_type": "1", "metadata": {}, "hash": "85f42406c8c2d335ca6d614431c3a718ce4d0ea068f40521a2838c1c59a10dc9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-65 6.2.17.  FREE  \nFigure 6-57 - FREE Syntax  \n The FREE  statement releases memory previously \nallocated to the program by the ALLOCATE  statement.  \n1. Identifier -1 must be a USAGE POINTER  data item or an 01 -level data item with the BASED  attribute.  \n2. If identifier -1 is a USAGE POINTER  data item and it contains a valid address, the FREE  statement will release the \nmemory block the pointer references.  In addition, any BASED  data items that the pointer was used to provide an \naddress for will become un -based and therefore un -usable.  If identifier -1 did not contain a valid address, no actio n \nwill be taken.  \n3. If identifier -1 is a BASED  data item and that data item is currently based  (meaning it currently has memory \nallocated for it) , its memory is released and identifier -1 will become un -based and therefore un -usable.  If identifier -\n1 was not b ased, no action will be taken.  \n", "start_char_idx": 0, "end_char_idx": 998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac7f9c2d-b46d-487b-8aeb-d58f2298b620": {"__data__": {"id_": "ac7f9c2d-b46d-487b-8aeb-d58f2298b620", "embedding": null, "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abe808bb-5736-4620-9cdb-93b4fce9bd95", "node_type": "4", "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f6908a1cff904ec51d9677b867aeb468a8ffbe043e353d9fadc3da7415bcccf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6881237e-6022-4757-824a-327c84bee071", "node_type": "1", "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6317d59e8ec6054215fddcfa907b089c35c9578da3ab4f1d32adb99e852590f5", "class_name": "RelatedNodeInfo"}}, "text": "4. The ADDRESS OF  clause adds no special function to the FREE  statement.  \nSee Also\u2026  \nDynamically Allocated Items ( BASED ) 5.2.1.2  \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The ALLOCATE  Statement  6.4.3  \n \n  \nFREE{[ADDRESS OF ]identifier -1}\u2026", "start_char_idx": 998, "end_char_idx": 1251, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e907fe7-404f-4987-b6d9-b9b904da5697": {"__data__": {"id_": "7e907fe7-404f-4987-b6d9-b9b904da5697", "embedding": null, "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45951905-fded-4332-9d80-63f460eff4b2", "node_type": "4", "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "80f73b514ddb953435818e0d4a62f3a111a43a929447974c56bcfdd30680af8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bdcf5e1-dfef-48e8-9fbb-f01f3788bd80", "node_type": "1", "metadata": {}, "hash": "43c2785ef480c79513549eb5c687ca415401c4c5df60e35cdfda53685f79ae46", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-66 6.2.18.  GENERATE  \nFigure 6-58 - GENERATE Syntax  \n Although syntactically recognized by the GNU COBOL  \ncompiler, the GENERATE  statement is non -functional \nbecause the RWCS (COBOL Report Writer  Control System ) \nis not currently supported  by GNU COBOL . \n \n  \n", "start_char_idx": 0, "end_char_idx": 348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bdcf5e1-dfef-48e8-9fbb-f01f3788bd80": {"__data__": {"id_": "6bdcf5e1-dfef-48e8-9fbb-f01f3788bd80", "embedding": null, "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45951905-fded-4332-9d80-63f460eff4b2", "node_type": "4", "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "80f73b514ddb953435818e0d4a62f3a111a43a929447974c56bcfdd30680af8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e907fe7-404f-4987-b6d9-b9b904da5697", "node_type": "1", "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e565cafa1c635e5baa453579086087a72969c87f353346c83ade78b4593d850", "class_name": "RelatedNodeInfo"}}, "text": "GENERATEidentifier -1\nreport -name -1", "start_char_idx": 348, "end_char_idx": 385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28e4a364-d161-40e9-adf2-8f7217637584": {"__data__": {"id_": "28e4a364-d161-40e9-adf2-8f7217637584", "embedding": null, "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3ef261b-07fc-4b62-a916-b724b2f859c2", "node_type": "4", "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fe9230aa72a93181d24c47d00bba1058f91ab3dd4c64ee384816ed0793bc8606", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be00c1bf-f757-4fb1-a50d-10866ed0b0b3", "node_type": "1", "metadata": {}, "hash": "1798695f128dc0f733e77dc8b84f87fe7836eed9a36d316a87d17410d60c839d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-67 6.2.19.  GOBACK  \nFigure 6-59 - GOBACK  Syntax  \n The GOBACK  statement is used to logically terminate an executing program . \n", "start_char_idx": 0, "end_char_idx": 209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be00c1bf-f757-4fb1-a50d-10866ed0b0b3": {"__data__": {"id_": "be00c1bf-f757-4fb1-a50d-10866ed0b0b3", "embedding": null, "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3ef261b-07fc-4b62-a916-b724b2f859c2", "node_type": "4", "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fe9230aa72a93181d24c47d00bba1058f91ab3dd4c64ee384816ed0793bc8606", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28e4a364-d161-40e9-adf2-8f7217637584", "node_type": "1", "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4518736a71f38c85fd23dbf19fe7ea621cbefe22e4303c5e4fa255570ea47b18", "class_name": "RelatedNodeInfo"}}, "text": "1. If executed within a subprogram  (i.e. a subroutine or user -defined function ), GOBACK  behaves like an EXIT \nPROGRAM  or EXIT FUNCTION  statement, respectively.  \n2. If executed within a main program, GOBACK  will act as a STOP RUN  statement.  \nSee Also\u2026  \nThe EXIT FUNCTION  Statement  6.2.16  \nThe EXIT PROGRAM Statement  6.2.16  \n The STOP RUN  Statement  6.4.42  \nSub-programming  0 \n \n3.  \n  \nGOBACK", "start_char_idx": 209, "end_char_idx": 619, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa2a5083-e125-40b8-b7a8-70889ef850aa": {"__data__": {"id_": "aa2a5083-e125-40b8-b7a8-70889ef850aa", "embedding": null, "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "172f2bc1-2afd-4fca-809d-61610410f536", "node_type": "4", "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7abe0a6ff3fe8bdf1fcbb8a321e3b91a19a7452d6209edf04b46f437572e892a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663", "node_type": "1", "metadata": {}, "hash": "0326a8eee8fa0ff94c516baa276d298ad3886ec60020b94bdc45efbea5c975ca", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-68 6.2.20.  GO TO \n6.2.20.1.  GO TO Format 1 \u2013 Simple GO  TO \nFigure 6-60 - Simple GO  TO Syntax  \n This form of the GO TO statement unconditionally transfers control in a program \nto the specified procedure -name -1. \n1. If procedure -name -1 is a section , control will transfer to the first paragraph in that section.  \n6.2.20.2.  GO TO Format 2 \u2013 GO TO DEPENDING ON  \nFigure 6-61 \u2013 GO TO DEPENDING ON Syntax  \n This form of the GO TO statement will transfer control to any one of a \nnumber of specified procedure names  depending on the numeric value o f \nthe identifier  specified on the statement.  \n1. ", "start_char_idx": 0, "end_char_idx": 688, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663": {"__data__": {"id_": "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663", "embedding": null, "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "172f2bc1-2afd-4fca-809d-61610410f536", "node_type": "4", "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7abe0a6ff3fe8bdf1fcbb8a321e3b91a19a7452d6209edf04b46f437572e892a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa2a5083-e125-40b8-b7a8-70889ef850aa", "node_type": "1", "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "217f694eb8559256dd2e9c11f8d39bda5e4fad80ebb50d3cb0c6ac2683c00435", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61034220-4cf2-421f-a755-5167452ea91a", "node_type": "1", "metadata": {}, "hash": "f90a2ce9e2b6c45869986821f84ef24aeeb46d3d1427d5e7fa3efd39524f36ec", "class_name": "RelatedNodeInfo"}}, "text": "The PICTURE  and/or USAGE  of the specified identifier -1 must be such as to define it as a numeric, unedited , \npreferably unsigned  integer data item.  \n2. If the value of identifier -1 has the value 1, control will be transferred to the 1st specified procedure name .  If the \nvalue is 2, control will transfer to the 2nd procedure name , and so on . \n3. If the value of identifier -1 is less than 1 or exceeds the total number of procedure names  specified on the GO TO \nstatement, control will simply fall thru into the next statement following the GO TO.  \n4. The following table  shows how GO TO DEPENDING  ON may be used in a real application situation, and compares it \nagainst the two alternatives \u2013 IF and EVALUATE . \nFigure 6-62 - GOTO DEPENDING ON vs IF vs EVALUATE  \nGOTO DEPENDING ON  IF EVALUATE  \n    GO TO PROCESS-ACCT-TYPE-1 \n          PROCESS-ACCT-TYPE-2 \n          PROCESS-ACCT-TYPE-3 \n    DEPENDING ON ACCT -TYPE. \n    Code to handle invalid account type  \n    GO TO DONE-WITH-ACCT-TYPE. \nPROCESS-ACCT-TYPE-1. \n    Code to handle account type 1  \n    GO TO DONE -WITH-ACCT-TYPE. \nPROCESS-ACCT-TYPE-2. \n    Code to handle account type 2  \n    GO TO DONE -WITH-ACCT-TYPE. \nPROCESS-ACCT-TYPE-3. \n    Code to handle account type 3  \nDONE-WITH-ACCT-TYPE.     IF ACCT-TYPE = 1  \n      Code to handle account  type 1  \n    ELSE \n      IF ACCT-TYPE = 2  \n        Code to handle account  type 2  \n      ELSE \n        IF ACCT-TYPE = 3  \n          Code to handle account  type 3  \n        ELSE \n          Code to handle invalid  \n          account  type  \n        END-IF \n      END-IF \n    END-IF     EVALUATE ACCT -TYPE \n    WHEN 1 \n      Code to handle account  type 1  \n    WHEN 2 \n      Code to handle account  type 2  \n    WHEN 3 \n      Code to handle account  type 3  \n    WHEN OTHER  \n      Code to handle invalid account  type  \n    END-EVALUATE.  \nThere is no question that \u201cmodern programming philosophy\u201d would prefer the EVALUATE  approach.   ", "start_char_idx": 688, "end_char_idx": 2653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61034220-4cf2-421f-a755-5167452ea91a": {"__data__": {"id_": "61034220-4cf2-421f-a755-5167452ea91a", "embedding": null, "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "172f2bc1-2afd-4fca-809d-61610410f536", "node_type": "4", "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7abe0a6ff3fe8bdf1fcbb8a321e3b91a19a7452d6209edf04b46f437572e892a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663", "node_type": "1", "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4bc2dc9a26e31b38d39fb268aa80db3b15dc20136b5fb52f03e8dbc7d57a07f9", "class_name": "RelatedNodeInfo"}}, "text": "An interesting \nnote is that the code  generated by the IF and EVALUATE  techniques  is virtua lly identical.   \nSee Also\u2026  \nThe EVALUATE  Statement  6.2.15  \n The IF Statement  6.2.21  \n \n  \nGOTO procedure -name -1\nGOTO procedure -name -1\u2026\nDEPENDING ON identifier -1", "start_char_idx": 2653, "end_char_idx": 2920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d302ae8-1813-4bc4-8984-aa6fa574d1d0": {"__data__": {"id_": "5d302ae8-1813-4bc4-8984-aa6fa574d1d0", "embedding": null, "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5e7090e-560e-44a2-a4f5-bf6f850af51b", "node_type": "4", "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03f031692cc19d281ace4b178b71801c760577522b7d770c2bd07455733a8910", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af4e08e6-cb27-44df-8e38-81705f821f1c", "node_type": "1", "metadata": {}, "hash": "a3d1aef2892718076f6c322cdbbd8bf23092ede584dcbb37cdbfe02669bd6c68", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-69 6.2.21.  IF \nFigure 6-63 - IF Syntax  \n The IF statement is used to conditionally \nexecute a n imperative statement  or to select \none of two different imperative statements  \nbased upon the TRUE/FALSE value of a \nconditional expression.  \n1. If conditional -expression   evaluates to true , imperative -statement -1 will be executed regardless of whether or not \nan ELSE  clause is present.  Once imperative -statement -1 has been executed, control falls into the first statement \nfollowing the END -IF or to the first statement of the next sentence if there is no END -IF clause.  \n2. If the optional ELSE  clause is present and conditional -expression -1 evaluates to false , then (and only then) \nimperative -statement -2 will be executed. Once imperative -statement -2 has been executed, control falls into the \nfirst statement following the END -IF or to the firs t statement of the next sentence if there is no END -IF clause.  \n", "start_char_idx": 0, "end_char_idx": 1018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af4e08e6-cb27-44df-8e38-81705f821f1c": {"__data__": {"id_": "af4e08e6-cb27-44df-8e38-81705f821f1c", "embedding": null, "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5e7090e-560e-44a2-a4f5-bf6f850af51b", "node_type": "4", "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03f031692cc19d281ace4b178b71801c760577522b7d770c2bd07455733a8910", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d302ae8-1813-4bc4-8984-aa6fa574d1d0", "node_type": "1", "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7ebeec12798cba15fbd5e4b1cd13535dcd057754b1520b64861ca8853cbb055a", "class_name": "RelatedNodeInfo"}}, "text": "3. The END -IF statement  isn\u2019t the only way the scope of an IF (or ELSE) can be terminated \u2013 the period character (.) \ncan be used also to terminate the IF/ELSE by ending the sentence in which it is  coded.  \nSee Also\u2026  \nConditional Expressions  6.1.8.2  \n Use of Periods (.)  6.1.5  \n \n  \nIFconditional -expression THEN imperative -statement -1\n[ELSE imperative -statement -2 ]\n[END-IF]", "start_char_idx": 1018, "end_char_idx": 1406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f22a8030-44c5-4d0d-81fe-684e25115ca9": {"__data__": {"id_": "f22a8030-44c5-4d0d-81fe-684e25115ca9", "embedding": null, "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "313fed82-cf8b-497f-a6e6-844ed9389016", "node_type": "4", "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0223ef5472d2ba3b92c3bebebb36cc715f47298c5a7fae17d1b9af6aee5d5f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccae7991-b698-409b-b6a1-89bce496bc17", "node_type": "1", "metadata": {}, "hash": "2bff83d6a049d1d241860ed4fa78a4dbad03246cbfe6ff9006cd10149c4114ab", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-70 6.2.22.  INITIALIZE  \nFigure 6-64 - INITIALIZE Syntax  \n  \n The INITIALIZE  statement initializes each identifier -1 with certain specific values, depending upon the options specified.  \n1. From the sequence of identifier -1 data items specified on the INITIALIZE  statement, a list of initializ able  fields , \nreferred to as the field list  in the remainder of this section,  will include:  \na. Every identifier -1 that is an elementary item.  \nb. Every identifier -1 that is a group item will have each  elementary item defined anywhere within its full \nhierarchical structure  included , excluding  FILLER  items.  \nc. If the optional WITH FILLER  clause is included on the INITIALIZE  statement, then rule # 1.b above will include \nFILLER  items.  \nAny identifier -1 containing a REDEFINES  in its definition will be included in the field list, but items defined \nsubordinate to any identifier -1 that contain REDEFINES  in their descriptions (and any items subordinate to them as \nwell) will be excluded.  \n", "start_char_idx": 0, "end_char_idx": 1095, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccae7991-b698-409b-b6a1-89bce496bc17": {"__data__": {"id_": "ccae7991-b698-409b-b6a1-89bce496bc17", "embedding": null, "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "313fed82-cf8b-497f-a6e6-844ed9389016", "node_type": "4", "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0223ef5472d2ba3b92c3bebebb36cc715f47298c5a7fae17d1b9af6aee5d5f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f22a8030-44c5-4d0d-81fe-684e25115ca9", "node_type": "1", "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "59202495d2da51d806fe3b6ee6a222abc1f87065567c0ae92ec741654bd18c76", "class_name": "RelatedNodeInfo"}}, "text": "2. A category -name  may be any of the following:  \nALPHABETIC  The PICTURE  of any ALPHABETIC  data item only contains A symbols  \nALPHANUMERIC  The PICTURE  of any ALPHANUMERIC  data item contains only A, X and 9 symbols (but all \nA symbols is considered ALPHABETIC  and all 9 symbols is considered NUMERIC ) \nALPHANUMERIC -EDITED  The PICTURE  of any ALPHANUMERIC -EDITED  data item is that it is an ALPHANUMERIC  \ndata item that also contains B, 0 (zero) and/or slash ( /) symbols  \nNUMERIC  A NUMERIC  data item is one that is described with one of the pictureless USAGE s (see \nFigure 5-10) or has a PICTURE  composed of nothing but P, 9, S and V symbols.  \nNUMERIC -EDITED  The PICTURE  of any NUMERIC -EDITED  data item is one that must have a PICTURE  \nclause in it\u2019s definition, and that  clause contains nothing but the symbol 9 and any \nediting symbol defined in Figure 5-7. \n3. The behavior of an INITIALIZE  without a VALUE  or REPLACING  clause (either with or without a DEFAULT  clause)  will \nbe to move zeros into every numeric or numeric -edited data item (as defined above) in the field list and, SPACES  \ninto all remaining fields in the initializable field list.  \n4. The behavior of an INITIALIZE  with  a VALUE  and/or  REPLACING  clause  will be as follows:  \na. If there is a n \u201cALL TO VALUE \u201d clause  present  then all data items in the field list having an explicit VALUE  clause \ncoded in their description or having an implicit VALUE  clause inherited from their p arent group item will be \ninitialized to that compile -time value.   \nIf there is a \u201ccategory -name  TO VALUE \u201d clause present then all data items in the field list that fall into the \nspecified category (see the list above) and have either an explicit VALUE  clause coded in their description or \nhave an implicit VALUE  clause inherited from their parent group item will be initialized to that compile -time \nvalue.  \nAny data items in the field list that get initialized by this rule will be excluded from the remaining rul es. \nINITIALIZE identifier -1\u2026[ WITH FILLER]\n[                TO VALUE]\n[ THEN REPLACING {category -nameDATA BY[ LENGTHOF ]             } \u2026 ]\n[ THEN TO DEFAULT ]literal -1\nidentifier -2ALL\ncategory -name", "start_char_idx": 1095, "end_char_idx": 3320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "381a91ec-4477-4125-bcd2-ddc8f08a0c3a": {"__data__": {"id_": "381a91ec-4477-4125-bcd2-ddc8f08a0c3a", "embedding": null, "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "351829c6-203c-457f-805a-5cd94e118083", "node_type": "4", "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9640fbd6fbfaa06621e26c5bba7eb9846b7ed7e0c495cc5dfead4fc4e61fd1a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ce1b7ed-db2b-4e3f-9220-502a519ac331", "node_type": "1", "metadata": {}, "hash": "3e43279694d9007135950a56447906320732f8af910c309a37b9b5e7d3160678", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-71 b. If there is a \u201c REPLACING \u201d clause present, then all data items in the fields list that weren\u2019t initialized by rule # 4.a \nand that fall into the specified category (see the list above) will be initialized to the value specified by  literal -1 \nor identifier -2.  You may specify multiple \u201c category -name  BY value \u201d clauses, but each must specify a unique \ncategory -name . \nAny data items in the field list that get initialized by this rule will be excluded from the remaining rules.  \nc. Finally, if there are any data items in the field list that weren\u2019t initialized either by rule # 4.a or #4.b and there is \na DEFAULT clause present, those remaining data items will be initialized according to rule # 3. \nThe following example may help your understanding of how the INITIALIZE statement works.  The sample code makes \nuse of the COBDUMP program documented in section 10.2  to dump the storage that is (or is not) being INITIALIZE d. \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. ", "start_char_idx": 0, "end_char_idx": 1079, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ce1b7ed-db2b-4e3f-9220-502a519ac331": {"__data__": {"id_": "0ce1b7ed-db2b-4e3f-9220-502a519ac331", "embedding": null, "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "351829c6-203c-457f-805a-5cd94e118083", "node_type": "4", "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9640fbd6fbfaa06621e26c5bba7eb9846b7ed7e0c495cc5dfead4fc4e61fd1a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "381a91ec-4477-4125-bcd2-ddc8f08a0c3a", "node_type": "1", "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "558abc7d5657682bfdb771d528135b9445494cbc265a247d90dff11c5caab1f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1f54889-c0fe-4427-b8cb-f55fa31708a0", "node_type": "1", "metadata": {}, "hash": "7ca90727fe0a50ce8e4f08acda088a7f8609618cc6fdccda5b2bf1ebde37ea62", "class_name": "RelatedNodeInfo"}}, "text": "DemoInitialize.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Item -1. \n           05 I1-A VALUE ALL '*'.  \n              10 FILLE R                PIC X(1).  \n              10 I1-A-1                PIC 9(1) VALUE 9.  \n           05 I1-B                     USAGE BINARY -CHAR. \n           05 I1-C                     PIC A(1) VALUE 'C'.  \n           05 I1-D                     PIC X/X VALUE 'ZZ'.  \n           05 I1-E                     OCCURS 2 TIMES PIC 9.  \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 1079, "end_char_idx": 1604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1f54889-c0fe-4427-b8cb-f55fa31708a0": {"__data__": {"id_": "a1f54889-c0fe-4427-b8cb-f55fa31708a0", "embedding": null, "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "351829c6-203c-457f-805a-5cd94e118083", "node_type": "4", "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9640fbd6fbfaa06621e26c5bba7eb9846b7ed7e0c495cc5dfead4fc4e61fd1a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ce1b7ed-db2b-4e3f-9220-502a519ac331", "node_type": "1", "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a272312cbc561f437a9126819764d052c588778448d817e3b05e46a1b106d5d3", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n           DISPLAY \"MOVE HIGH -VALUES TO Item -1\"  \n               PERFORM 100 -Init-Item-1 \n               CALL \"COBDUMP\" USING Item -1 \n               DISPLAY \" \"  \n \n           DISPLAY \"INITIALIZE Item -1\"  \n               INITIALIZE Item -1 \n               CALL \"COBDUMP\" USING Item -1 \n               PERFORM 100 -Init-Item-1 \n               DISPLAY \" \"  \n \n           DISPLAY \"INITIALIZE Item -1 WITH FILLER\"  \n               MOVE HIGH -VALUES TO Item -1 \n               INITIALIZE Item -1 WITH FILLER  \n               CALL \"COBDUMP\" USING Item -1 \n               PERFORM 100 -Init-Item-1 \n               DISPLAY \" \"  \n \n           DISPLAY \"INITIALIZE Item -1 ALL TO VALUE\"  \n               MOVE HIGH -VALUES TO Item -1 \n               INITIALIZE Item -1 ALPHANUMERIC TO VALUE  \n               CALL \"COBDUMP\" USING Item -1 \n               PERFORM 100 -Init-Item-1 \n               DISPLAY \" \"  \n \n           DISPLAY \"INITIALIZE Item -1 REPLACING NUMERIC BY 1\"  \n               MOVE HIGH -VALUES TO Item -1 \n               INITIALIZE Item -1 REPLACING NUMERIC BY 1  \n               CALL \"COBDUMP\" USING Item -1 \n               PERFORM 100 -Init-Item-1 \n               DISPLAY \" \"  \n \n           STOP RUN  \n           . \n            \n       100-Init-Item-1. \n           MOVE HIGH -VALUES TO Item -1 \n           . \n            ", "start_char_idx": 1604, "end_char_idx": 2944, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0b5c042-5e83-442a-a09f-1dd58a3adfa5": {"__data__": {"id_": "a0b5c042-5e83-442a-a09f-1dd58a3adfa5", "embedding": null, "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0410865-d4f2-4559-9497-0003375965f8", "node_type": "4", "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c20150d4979c797c5f8a5f87b9ac5c121b5414cee424d19585527cac04dbc515", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fcd8455-5cba-4bbc-995e-0cb952ff0064", "node_type": "1", "metadata": {}, "hash": "841b646d5075e57e18afb90e9cc15833128dfa7d053452191a4575654d5ddb31", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-72 When executed, this program produces the following output:  \nMOVE HIGH -VALUES TO Item -1 \n<-Addr-> Byte < --------- ------- Hexadecimal ---------------- > <---- Char ----> \n======== ==== =============================================== ================  \n00404058    1 FF FF FF FF FF FF FF FF FF                      .........  \n \nINITIALIZE Item -1 \n<-Addr-> Byte < ----------------  Hexadecimal ---------------- > <---- Char ----> \n======== ==== =============================================== ================  \n00404058    1 FF 30 00 20 20 2F 20 30 30                      .0.  / 00  \n \nINITIALIZE Item -1 WITH FILLER  \n<-Addr-> Byte < ----------------  Hexadecimal ---------------- > <---- Char ----> \n======== ==== =============================================== ================  \n00404058    1 20 30 00 20 20 2F 20 30 30                       0.  ", "start_char_idx": 0, "end_char_idx": 937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fcd8455-5cba-4bbc-995e-0cb952ff0064": {"__data__": {"id_": "5fcd8455-5cba-4bbc-995e-0cb952ff0064", "embedding": null, "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0410865-d4f2-4559-9497-0003375965f8", "node_type": "4", "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c20150d4979c797c5f8a5f87b9ac5c121b5414cee424d19585527cac04dbc515", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0b5c042-5e83-442a-a09f-1dd58a3adfa5", "node_type": "1", "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "48dc0df9b0f397b9132d3b6cb6770317bd18ab2078ef4aa3b7d2c0e21de3f4bf", "class_name": "RelatedNodeInfo"}}, "text": "/ 00  \n \nINITIALIZE Item -1 ALL TO VALUE  \n<-Addr-> Byte <----------------  Hexadecimal ---------------- > <---- Char ----> \n======== ==== =============================================== ================  \n00404058    1 2A 2A FF 43 5A 5A 20 FF FF                      **.CZZ ..  \n \nINITIALIZE Item -1 REPLACING NUMERI C BY 1 \n<-Addr-> Byte < ----------------  Hexadecimal ---------------- > <---- Char ----> \n======== ==== =============================================== ================  \n00404058    1 FF 31 01 FF FF FF FF 31 31                      .1.....11  \n  ", "start_char_idx": 937, "end_char_idx": 1503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e478d03-88b6-420a-8d64-02d50db72179": {"__data__": {"id_": "8e478d03-88b6-420a-8d64-02d50db72179", "embedding": null, "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f105346-ea7b-4859-ad91-ef0fa8d8076a", "node_type": "4", "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bb7c5a3c55457559801e2109b4b9e8a78c987892496b126c5a94efe18e022885", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75c81eb6-8608-4e0e-91b9-7c716e344a62", "node_type": "1", "metadata": {}, "hash": "879c0cf052347ccf94d0baff09ce5613986dfe690c99affe535a48884aa45d9b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-73 6.2.23.  INITIATE  \nFigure 6-65 - INITIATE Syntax  \n \n Although syntactically recognized by the GNU COBOL  compiler, the INITIATE  \nstatement is non -functional because the RWCS (COBOL Report Writer  \nControl System ) is not currently supported  by GNU COBOL . \n  \n", "start_char_idx": 0, "end_char_idx": 347, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75c81eb6-8608-4e0e-91b9-7c716e344a62": {"__data__": {"id_": "75c81eb6-8608-4e0e-91b9-7c716e344a62", "embedding": null, "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f105346-ea7b-4859-ad91-ef0fa8d8076a", "node_type": "4", "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bb7c5a3c55457559801e2109b4b9e8a78c987892496b126c5a94efe18e022885", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e478d03-88b6-420a-8d64-02d50db72179", "node_type": "1", "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0857ae8c2b76ad9022dc73c06138a70ed10cd1f50332b31c18acc9aa2b1023a", "class_name": "RelatedNodeInfo"}}, "text": "INITIATE report -name -1...", "start_char_idx": 347, "end_char_idx": 374, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96e78378-cfb9-4372-bca5-996c32d397f2": {"__data__": {"id_": "96e78378-cfb9-4372-bca5-996c32d397f2", "embedding": null, "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb", "node_type": "4", "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b78512e5162d2955d3a8f4739854db40c92f45db8ba9390f118914f2593564a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bca3487e-5a11-4de5-adf5-abf81d803e73", "node_type": "1", "metadata": {}, "hash": "f58d7dd4fd5c070ff0770c2dca8739b2cbc3cbfd4a010e837ecd4f869399ddd9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-74 6.2.24.  INSPECT  \nFigure 6-66 - INSPECT Syntax  \n The INSPECT  statement is used to \nperform various counting or data -\nalteration operations against strings.  \n \n1. Identifier -1 and literal -1 must be explicitly or implicitly defined as alphanumeric USAGE DISPLAY  data.  Identifier -1 \nmay be a group item.   If function -1 is specified, it must be an invocation of an intrinsic function that returns a string \nresult.   This is referred top as the inspect target . \n", "start_char_idx": 0, "end_char_idx": 553, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bca3487e-5a11-4de5-adf5-abf81d803e73": {"__data__": {"id_": "bca3487e-5a11-4de5-adf5-abf81d803e73", "embedding": null, "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb", "node_type": "4", "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b78512e5162d2955d3a8f4739854db40c92f45db8ba9390f118914f2593564a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96e78378-cfb9-4372-bca5-996c32d397f2", "node_type": "1", "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "86258473f7de4d2fbea33dd3dbc50368d6b969e991aa187c91a64e9dd6eefa8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "393a1aed-b228-4dee-ac51-b5c22b08c4fe", "node_type": "1", "metadata": {}, "hash": "acb388e3c3ad85d14a7b6f9b8f9b65ddddd2440c482120a7ea655f76f793f3fd", "class_name": "RelatedNodeInfo"}}, "text": "2. A TALLYING  clause will count the number of occurrences of a string of characters in the inspect target . \n3. A REPLACING  clause will convert occurr ences of strings in  the inspect target  to different (equally -sized) strings (for \nexample, replacing all occurrences of \u201cABC\u201d by \u201cDEF\u201d).  The inspect target  cannot be a literal or function re sult \nwhen using REPLACING . \n4. A CONVERTING  clause will perform any number of single character replacements in  the inspect target .  The inspect \ntarget  cannot be a literal or function result when using CONVERTING . \n5. If both TALLYING  and REPLACING  are specified on the same INSPECT  statement, the effect will be as if two INSPECT  \nstatements had been coded \u2013 the first performing the TALLYING  and the second perf orming the REPLACING . \n6.2.24.1.  TALLYING Clause Syntax, Rules and Operation  \nThe purpose of the TALLYING  clause is to count how many occurrences of one or more  string s appear within all or a \nsubset of the inspect target . \nEach search string is specified using a single \ntallying -item  after the TALLYING  keyword.  \nThe syntax of a single tallying item  is shown \nto the right.  \n1. Identifier -2 must be an unedited \nnumeric item.  \n2. Identifier -3 and literal -2 must be \nexplicitly or implicitly defined as \nalphanumeric USAGE DISPLAY  data.  \nIdentifier -3 may be a group item.  \n", "start_char_idx": 553, "end_char_idx": 1923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "393a1aed-b228-4dee-ac51-b5c22b08c4fe": {"__data__": {"id_": "393a1aed-b228-4dee-ac51-b5c22b08c4fe", "embedding": null, "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb", "node_type": "4", "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b78512e5162d2955d3a8f4739854db40c92f45db8ba9390f118914f2593564a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bca3487e-5a11-4de5-adf5-abf81d803e73", "node_type": "1", "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c34becddd9abf76423d3d7be575be1cd32ee06f73e06603e3bfbc8f93e9a4276", "class_name": "RelatedNodeInfo"}}, "text": "3. The inspect -region -clause (s) limit TALLYING  processing to a specific subset of the inspect target .  If no inspect-\nregion -clause  is specified, the entire inspect target  will be searched.  \n4. Identifier -2 may be specified in multiple tallying -item s. \n5. Identifier -2 will be incremented by 1 each time the target string being searched for is f ound within the specified \nrange of the  inspect target .  The target string will be:  \na. Any single character if the CHARACTERS  option is used; this form basically just counts total characters  \nb. ALL, all LEADING  or all TRAILING  occurrences of Identifier -3 or literal -2. \nliteral -1\nINSPECT identifier -1\nfunction -1\nTALLYING tallying -item\u2026 REPLACING replacing -item\u2026\nTALLYING tallying -item\u2026\nREPLACING replacing -item\u2026\nCONVERTING converting -item\u2026\nidentifier -2FORALL\nLEADING\nTRAILING\nCHARACTERS [ inspect -region -clause] \u2026\n[ inspect -region -clause] \u2026literal -2\nidentifier -3TALLYING tallying -item \u2026 Format of a tallying -item", "start_char_idx": 1923, "end_char_idx": 2922, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d443c8ef-4948-4900-8579-5b81660a5aca": {"__data__": {"id_": "d443c8ef-4948-4900-8579-5b81660a5aca", "embedding": null, "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b09887a-3543-485c-9688-dbd8274e68d8", "node_type": "4", "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f8d2cc4bf3bb75febd8c33e8038d1e66770634d6ee7e65f4e35cf42ce4bc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d195006c-ebea-40a3-b83e-c279d81cfcef", "node_type": "1", "metadata": {}, "hash": "f0f97eba831bdfd4c124dcc2f514b0b968e72f34bc827bf9c35867889692621b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-75 6. Once an occurrence of the target \nstring is found and TALLY ed, the \nINSPECT TALLYING  process will \nresume from the end of the \nfound occurrence.  This p revents \nthe possibility of counting \noverlapping occurrences.  \nThe example shows an 8 -\ncharacter item whose value is \n\u201cXXXXXXXX\u201d used as the object of \nan INSPECT TALLYING  that is \nlooking for \u201cXX\u201d occurrences:  Figure 6-67 - An INSPECT TALLYING Example  \n \nOnly four (4) \u201cXX\u201d occurrences were found.  Character positions 2 -3, 4-5 and 6 -7 \u2013 even though they are \u201cXX\u201d \noccurrences \u2013 weren\u2019t counted because they overlapped other occurrences.  \n6.2.24.2.  REPLACING  Clause Syntax, R ules  and Operation  \nThe purpose of the \nREPLACING  clause is to \nreplace occurrences of \na substring within the \ninspect target  with a \ndifferent substring of \nthe same  length .  If you \nneed to replace one or \nmore substrings with \nother s of a different  \nlength, consider using \nthe SUBSTITUTE  or SUBSTITUTE -CASE  intrinsic function.  \nEach search and replace string is specified using a single replacing -item  after the REPLACING  keyword.  The syntax of a \nsingle replacing  item  is shown above . \n1. Identifier -4 and literal -3 (known as the target string ) must  be explicitly or implicitly defined as alphanumeric USAGE \nDISPLAY  data.  Identifier -4 may be a group item.  \n2. Identifier -5 and literal -4 (known as the replacement string ) must  be explicitly or impli citly defined as alphanumeric \nUSAGE DISPLAY  data.  Identifier -5 may be a group item.  \n3. Identifier -4 / literal -3 must be the same length as identifier -5 / literal -4. \n4. Target strings are identified as:  \na. Any sequence of characters as long as the length of the rep lacement string if the CHARACTERS  option is used  \nb. ALL, all LEADING , only the FIRST  or all TRAILING  occurrences of Identifier -4 or literal -3. \n5. The inspect -region -clause (s) limit REPLACING  processing of any one specific replacing -item  to a specific region  of \nthe inspect target .  If no inspect -region -clause  is specified, the entire inspect target  will be processed.   Different \nreplacing -items  may have different regions specified.  \n6. REPLACING  processing works as follows:  \na. Processing begins with the first character of the inspect target  an internal characte r pointer index to the first \ncharacter position.  \nb. If the internal character pointer is pointing past the end of the inspect target , REPLACING  processing is \ncomplete and the INSPECT  statement will terminate.  \n01  Inspect -Target   PIC X(8) VALUE \u201cXXXXXXXX\u201d.\n01  Double -X-Counter PIC 9(2).\n.\n", "start_char_idx": 0, "end_char_idx": 2691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d195006c-ebea-40a3-b83e-c279d81cfcef": {"__data__": {"id_": "d195006c-ebea-40a3-b83e-c279d81cfcef", "embedding": null, "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b09887a-3543-485c-9688-dbd8274e68d8", "node_type": "4", "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f8d2cc4bf3bb75febd8c33e8038d1e66770634d6ee7e65f4e35cf42ce4bc7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d443c8ef-4948-4900-8579-5b81660a5aca", "node_type": "1", "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fd592a92435323c8c5776a49a5f7873bc4af0fad5c95afe94b2bf0ac0a941032", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15ce7c61-5fe1-47f6-b4cf-1f37a24af453", "node_type": "1", "metadata": {}, "hash": "374d82a18c1fd9333b28d378fba93f6b2f5a6d55d7b383d6223e1a5c34c313e3", "class_name": "RelatedNodeInfo"}}, "text": ".\n", "start_char_idx": 2655, "end_char_idx": 2657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15ce7c61-5fe1-47f6-b4cf-1f37a24af453": {"__data__": {"id_": "15ce7c61-5fe1-47f6-b4cf-1f37a24af453", "embedding": null, "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b09887a-3543-485c-9688-dbd8274e68d8", "node_type": "4", "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153f8d2cc4bf3bb75febd8c33e8038d1e66770634d6ee7e65f4e35cf42ce4bc7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d195006c-ebea-40a3-b83e-c279d81cfcef", "node_type": "1", "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2fce10264c4bdf11334c9c5f8fa2ff11a522116cc301c68ed33213b4eafeb32e", "class_name": "RelatedNodeInfo"}}, "text": ".\nMOVE 0 TO Double -X-Counter\nINSPECT Inspect-Target\nTALLYING Double -X-Counter FOR ALL \u201cXX\u201c\nDISPLAY\n\u201cCount=\u201c Double -X-Counter\nEND-DISPLAY\nCount=04Generated\nOutputXXXXXXXX1 2 3 4 5 6 7 8\nInspect -Item\nliteral -3\nidentifier -4ALL\nLEADING\nFIRST\nTRAILINGCHARACTERS\nBYliteral -4\nidentifier -5[ inspect -region -clause] \u2026REPLACING replacing -item\u2026 Format of a replacing -item", "start_char_idx": 2693, "end_char_idx": 3064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5587a118-5738-4d94-a872-09c7f6eba240": {"__data__": {"id_": "5587a118-5738-4d94-a872-09c7f6eba240", "embedding": null, "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9", "node_type": "4", "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2581c6104647239a103169ec369f7e6572d5ffdb1cfb2e1425b1db6fb47a3eaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b874f0b-aa5e-4beb-b601-cca9db8fbc87", "node_type": "1", "metadata": {}, "hash": "7fc164a339b22bcc3a116a5a3ed3c3d1c96f7c0cb2cbd2f1649864d14b761954", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-76 c. Each replacing -item is checked, in the sequence in which they are coded on the INSPECT  statement, looking for \none whose inspect -region -clauses  allow its target -string  to match the substring of the inspect target  that \nbegins with the current  character of that inspect target  currently being pointed to.  \nd. If no replacing -items can match the inspect target  from the current character position forward, the character \npointer is advance d by one and processing returns to rule # 6.b. \ne. If a match is found, that replacing -item \u2019s replacement -string will replace the target -string in the inspect target  \n(starting at the current character position).  If the replacing -item\u2019s  coding specified the FIRST  option, that \nreplacing -item  will be disabled for any further iterations during this execution of the INSPECT  statement.  The \ncurrent character pointer into t he inspect target  will be set to the first character following the replaced string \nand processing returns to rule # 6.b. \nSee Also\u2026  \nThe SUBSTITUTE  Intrinsic Function  6.1.14.77  \n The SUBSTITUTE -CASE  Intrinsic Function  6.1.14.78  \n \n6.2.24.3.  CONVERTING  Clause Syntax, Rules and Operation  \nThe purpose of the CONVERTING  clause is \nto perform a series of mono character  \nsubstitutions against a data item.  \nEach search and replace character \nsequence is specified using a single \nconverting -item  after the CONVERTING  \nkeyword.  The syntax of a single converting  \nitem  is shown to the right.  \n", "start_char_idx": 0, "end_char_idx": 1583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b874f0b-aa5e-4beb-b601-cca9db8fbc87": {"__data__": {"id_": "6b874f0b-aa5e-4beb-b601-cca9db8fbc87", "embedding": null, "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9", "node_type": "4", "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2581c6104647239a103169ec369f7e6572d5ffdb1cfb2e1425b1db6fb47a3eaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5587a118-5738-4d94-a872-09c7f6eba240", "node_type": "1", "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b6c276f05587aecf489c0662e6621b55c309d0322f772e4e6912c6a83c7df348", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f8f1135-4c98-48a2-a0a7-1a42217a8278", "node_type": "1", "metadata": {}, "hash": "27deb7aa7ea2209525975bfdc8134cc4d2d124e93fad445bcfa0a5f6658da9f5", "class_name": "RelatedNodeInfo"}}, "text": "1. Identifier -6, identifier -7, literal -5 and literal -6 must be explicitly or im plicitly defined as alphanumeric USAGE \nDISPLAY  data.  Identifier -6 and identifier -7, if used, may be group item s. \n2. Identifier -6 / literal -5 (the \u201c from string\u201d ) should  be the same length as identifier -7 / literal -6 (the \u201c to string \u201d).  If they \naren\u2019t:  \na. If the length of the from string  exceeds the length of the to string , then the to string  will be assumed to be \npadded to the right with spaces to make them the same length.  \nb. If the length of the to string  exceeds the length of the from string , then the to string  will be assumed to be \ntruncated to the length of the from string . \n", "start_char_idx": 1583, "end_char_idx": 2283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f8f1135-4c98-48a2-a0a7-1a42217a8278": {"__data__": {"id_": "5f8f1135-4c98-48a2-a0a7-1a42217a8278", "embedding": null, "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9", "node_type": "4", "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2581c6104647239a103169ec369f7e6572d5ffdb1cfb2e1425b1db6fb47a3eaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b874f0b-aa5e-4beb-b601-cca9db8fbc87", "node_type": "1", "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1f8c6803242a0b4478dae3d9b3b1e88e36bd40c0c19d150ebf941b9e876b66ef", "class_name": "RelatedNodeInfo"}}, "text": "3. Each character within the  inspect target  that lies within the range limits defined by the inspect -region -clause(s) , if \nany, will be searched for within  the from  string .  If found, that inspect target  character  will be replaced by the to \nstring  character that corresponds (by relative position) to the character found in the from string . \n6.2.24.4.  INSPECT R egion  Clause, Rules and Operation  \n The purpose of an inspect -region -clause  is to restrict the operation of \na TALLYING , REPLACING  or CONVERTING  clause to a specific range of \ncharacters within the inspect target . \nIf multiple inspect-region -clauses  are specified, the effects of them as a \ngroup will serve to define the range.  \n1. Identifier -8 and literal -7 must  be explicitly or implicitly defined as \nalphanumeric USAGE DISPLAY  data.  Identifier -8 may be a group item.   They may be of any length.  \nTO [ inspect -region -clause] \u2026literal -5\nidentifier -6literal -6\nidentifier -7CONVERTING converting -item Format of a converting -item\nINITIALBEFORE\nAFTERliteral -7\nidentifier -8Format of an inspect -region -clause", "start_char_idx": 2283, "end_char_idx": 3395, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ccd17d2-6c9e-420f-9f50-a4ec06011c7c": {"__data__": {"id_": "8ccd17d2-6c9e-420f-9f50-a4ec06011c7c", "embedding": null, "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04b45b2b-d2f0-40dd-9e63-5174e44ead1f", "node_type": "4", "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a3f3a6ff539ba046cb93e98d5a5795fc2ee5e169e45bcb7e92f4d56aa0fdb9d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b5b65b3-98d7-4a6f-99c6-b4b0f1d00615", "node_type": "1", "metadata": {}, "hash": "60792709f0d64a55e58da75a7c7d8f506d78af6fb3c19f1a2c270db8cc9cb36b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-77 The following example illustrates how a range clause works and how multiple range clauses can work together.  It also \nillustrates how COBOL syntax allows potentially complicated operations to be coded in an easy -to-understand manner.  \n       IDENTIFICATION DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b5b65b3-98d7-4a6f-99c6-b4b0f1d00615": {"__data__": {"id_": "0b5b65b3-98d7-4a6f-99c6-b4b0f1d00615", "embedding": null, "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04b45b2b-d2f0-40dd-9e63-5174e44ead1f", "node_type": "4", "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a3f3a6ff539ba046cb93e98d5a5795fc2ee5e169e45bcb7e92f4d56aa0fdb9d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ccd17d2-6c9e-420f-9f50-a4ec06011c7c", "node_type": "1", "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "47b252c648c6c51872f73f4737f7a37b92856ce8573afcf55dd70e123dbea2ed", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. DemoINSPECT.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Inspect -Target              PIC X(100) VALUE  \n           'THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG ' &  \n           'AND WAS BITTEN ON THE TAIL. THE FOX YELPED !'. \n       PROCEDURE DIVISION.  \n       P1. DISPLAY \"Before: \" Inspect -Target \n           INSPECT Inspect -Target \n               REPLACING ALL \"THE\" BY \"HIS\"  \n                   AFTER INITIAL \"BITTEN\"  \n                   BEFORE INITIAL \".\"  \n           DISPLAY \"After:  \" Inspect -Target \n           . \nWhen executed, this code produces the following console output (the change made by the INSPECT  is highlighted ): \nBefore: THE QUICK BROWN FOX JUMPED OVER THE LAZY  DOG AND WAS BITTEN ON THE TAIL. THE FOX YELPED ! \nAfter:  THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG AND WAS BITTEN ON HIS TAIL. THE FOX YELPED ! \n   ", "start_char_idx": 361, "end_char_idx": 1248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a784c41-0b68-4086-b5dc-a5dc3ba29801": {"__data__": {"id_": "8a784c41-0b68-4086-b5dc-a5dc3ba29801", "embedding": null, "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3eed6519-158a-4c58-a59f-3f2480df64b1", "node_type": "4", "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1a454f6c2fd22f8cc81115f1ceb3a5a7738ee5aeb8659091d480048b8b48fd6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "340482c2-4d52-447e-98a4-7fd213b6da24", "node_type": "1", "metadata": {}, "hash": "3c53decd9367fba664d38180121b8f5c5cd9661d4858658f2940b2181974d6c9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-78 6.2.25.  MERGE  \nFigure 6-68 - MERGE Syntax  \n \n \n The MERGE  statement merges two or more files that have each been pre -sorted on a set of specified identical keys.  \n1. The sort-file-1 named on the MERGE  statement must be defined using a sort description ( SD) in the FILE SECTION  of \nthe DATA DIVISION .  This file is  referred to in the remainder of this discussion as the \u201c merge work file\u201d. \n", "start_char_idx": 0, "end_char_idx": 483, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "340482c2-4d52-447e-98a4-7fd213b6da24": {"__data__": {"id_": "340482c2-4d52-447e-98a4-7fd213b6da24", "embedding": null, "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3eed6519-158a-4c58-a59f-3f2480df64b1", "node_type": "4", "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1a454f6c2fd22f8cc81115f1ceb3a5a7738ee5aeb8659091d480048b8b48fd6a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a784c41-0b68-4086-b5dc-a5dc3ba29801", "node_type": "1", "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "276b88c8fbabf2e16bedf4eb7e8abf070f263125ad7d582888924545cadd9885", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe0ce4c5-cb3c-4a3a-b226-1783076e7aba", "node_type": "1", "metadata": {}, "hash": "b145ccaffa6b93690b407414e6df8afd06e6586dd7363305447189077dc0962a", "class_name": "RelatedNodeInfo"}}, "text": "2. File-name -1, file-name -2 and file-name -3 (if specified) must reference ORGANIZATION LINE SEQUENTIAL  or \nORGANIZATION RECORD BINARY SEQUENTIAL  files.  These files must be defined using a file description ( FD) in the \nFILE SECTION  of the DATA DIVISION . \n3. The identifier -1 \u2026 field(s) must be defined as field(s) within a record of sort-file-1. \n4. The WITH DUPL ICATES IN ORDER  clause is supported for compatibility purposes  with other versions of COBOL , but \nis non -functional in GNU COBOL  \nWhile any COBOL implementation\u2019s SORT  or MERGE  facilities guarantee that records with duplicate  key values will \nbe in proper sequence with regard to other records with different  key values, they generally make no promises as \nto the resulting relative sequence of records having duplicate key values with one another.  \nSome COBOL implementation s provide  this optional clause to force their SORT  and MERGE  facilities to retain \nduplicate key -value records in their original input sequence, relative to one another.  \nGNU COBOL  always behaves as if the WITH DUPLICATES IN ORDER  clause is specified, even if it isn\u2019 t. \n5. The record  descriptions  of file-name -1, file-name -2, file-name -3 (if any) and sort-file-1 are assumed to be identical \nin layout  and size .  While the actual data names used for fields in these files \u2019 records  may differ, the structure of \nrecords, PICTURE  of fields, size of fields and USAGE  of data should match field -by-field across all files.  \nA common programming technique when using the MERGE  statement is to define the records of all files involved \non the MERGE  as simple elementary items of the form \u201c 01 record -name  PIC X( n).\u201d where n is the record size.  The \nonly file where records are actually described in detail would then be sort-file-1. \n", "start_char_idx": 483, "end_char_idx": 2297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe0ce4c5-cb3c-4a3a-b226-1783076e7aba": {"__data__": {"id_": "fe0ce4c5-cb3c-4a3a-b226-1783076e7aba", "embedding": null, "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3eed6519-158a-4c58-a59f-3f2480df64b1", "node_type": "4", "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1a454f6c2fd22f8cc81115f1ceb3a5a7738ee5aeb8659091d480048b8b48fd6a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "340482c2-4d52-447e-98a4-7fd213b6da24", "node_type": "1", "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e4a3af79d50d191a39f347018c7c858f850ae6bd572aebba497453849b5c4cb4", "class_name": "RelatedNodeInfo"}}, "text": "6. The following rules apply to the files named on the USING  clause:  \na. None of them may be  OPEN   at the time the MERGE  is executed . \nb. Each of those files is assumed to be already sorted according to the specifications set forth on the MERGE  \nstatement\u2019s KEY clause.  \nc. No two of those files  may be referenced on a SAME RECORD AREA , SAME SORT AREA  or SAME SORT -MERGE \nAREA  statement  specified in the I-O-CONTROL  paragraph.  \n7. As the MERGE  begins execution, the first record in each of the USING  files is read  automatically .   \n8. As the MERGE  statement executes, the cu rrent record from each of the USING  files is examined  and compared to \neach other according to the rules set forth by the KEY clause.  The record that should be \u201cnext\u201d in sequence \n(according to KEY) will be written to the merge work file and the USING  file from which that record came will be \nread so that its next record is available.  As end -of-file conditions are reached on USING  files, those files will be \nMERGE sort-file-1\n{ ON                KEY identifier -1\u2026} \u2026\n[ WITH DUPLICATES IN ORDER ]\n[ COLLATING SEQUENCE IS alphabet -name -1]\nUSING file-name -1 file-name -2\u2026\nGIVING file-name -3\u2026\nOUTPUTPROCEDURE IS procedure -name -1[ THRU|THROUGH procedure -name -2]ASCENDING\nDESCENDING", "start_char_idx": 2297, "end_char_idx": 3589, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e712e84c-3d98-4a05-8153-7e8a0a0e3f94": {"__data__": {"id_": "e712e84c-3d98-4a05-8153-7e8a0a0e3f94", "embedding": null, "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c2b943e-9fe1-4806-9977-bb019a2f1e1a", "node_type": "4", "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1826a7880f51959dc6e43e55656c496f7ac26c3a3655b3ca1ccdf3bb46a5670a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7e065d9-a334-4715-8bf7-c9b5c450215f", "node_type": "1", "metadata": {}, "hash": "64b94f50e0c09c9a488027c8420c0c90ab337c1026972fb3c16049a50d34da99", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-79 excluded from further MERGE  processing \u2013 processing continues with the remaining USING  files until all  USING  files \nhave been completely processed.  \n9. Once the merge work file has been populated , the merged  data will be written to file-name -3 if the GIVING  clause \nwas specified, or will be processed by utilizing an OUTPUT PROCEDURE . \n10. When GIVING  is specified,  none of the  file-name -3 \u2026 files can be OPEN  at the time the MERGE  is executed.  \n11. When an OUTPUT PROCEDURE  is used, the procedure(s) specified on the OUTPUT PROCEDURE  clause will be \ninvoked as if by a  procedural  PERFORM  statement with no VARYING  or UNTIL  options specified.  M erged records \nmay be  read from the merge work file \u2013 one at a time \u2013 within the OUTPUT PROCEDURE  using the RETURN  \nstatement.   \n12. A GO TO  statement that transfers control out of the OUTPUT PROCEDURE  will terminate the MERGE  but allows the \nprogram to continue executing from the point where the GO TO  transferred control to.  Once an OUTPUT \nPROCEDURE  has been aborted using a GO TO  it cannot be  resumed , and the contents of the merge work file are \nlost.  You may, however, re -execute the MERGE  statement itself.  USING A \u201cGO TO\u201d TO PREMATURELY TERMINATE \nA MERGE , OR RE -STARTING A PREVIOUSLY -CANCELLED MERGE IS NOT CONSIDERED  GOOD PROGRAMMING \nSTYLE AN D SHOULD BE AVOIDED.  \n13. ", "start_char_idx": 0, "end_char_idx": 1456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7e065d9-a334-4715-8bf7-c9b5c450215f": {"__data__": {"id_": "c7e065d9-a334-4715-8bf7-c9b5c450215f", "embedding": null, "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c2b943e-9fe1-4806-9977-bb019a2f1e1a", "node_type": "4", "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1826a7880f51959dc6e43e55656c496f7ac26c3a3655b3ca1ccdf3bb46a5670a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e712e84c-3d98-4a05-8153-7e8a0a0e3f94", "node_type": "1", "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8248b80bbd60c3b481219cd0ec61fc52e5bb6e3a1bd813c0b2762267118217cd", "class_name": "RelatedNodeInfo"}}, "text": "An OUTPUT PROCEDURE  is terminated in the same way a procedural PERFORM  would be.  Usually, this action will \nbe taken once the RETURN  statement indicates that all records in the merge work file have been processed, but \ntermination could  occur at any time if required.  Once the OUTPUT PROCEDURE  terminates, the output phase \u2013 \nand the MERGE  statement itself - is complete.  \n14. Neither a Format -1 SORT  nor another MERGE  may be executed within the scope of the procedures comprising the \nOUTPUT PROCE DURE  unless those statements utilize a different sort or merge work file.  \nSee Also\u2026  \nThe I-O-CONTROL  Paragraph  4.2.2  \nDescribing the Structure of a File (FD/SD)  5.1 \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nThe GO TO  Statement  6.2.20  \n The OPEN  Statement  6.4.29  \nThe PERFORM  Statement (Procedural)  6.2.30.1  \nThe RETURN  Statement  6.2.35  \nThe SORT  Statement (File Sort)  6.4.40.1  \n \n  ", "start_char_idx": 1456, "end_char_idx": 2417, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5aec2c4f-c433-47b4-8a29-1abc29c895b7": {"__data__": {"id_": "5aec2c4f-c433-47b4-8a29-1abc29c895b7", "embedding": null, "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3cb2308-ad99-4db7-8b67-5f61797e1dc6", "node_type": "4", "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2d30c34405fb530d47f9c2f0458516d223e851cd3109c5c1ebe3437d554b71aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7dd8068-9a85-4a1f-9527-1e2c1d98aa2f", "node_type": "1", "metadata": {}, "hash": "09ff75d7e68b326eebce83d5cd33524fe6e6c9088b75e8673703c1fab076d031", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-80 6.2.26.  MOVE  \n6.2.26.1.  MOVE Format 1 \u2013 Simple MOVE  \nFigure 6-69 - Simple MOVE  Syntax  \n This statement moves a specific value to one or more receiving \ndata items.  \n \n1. The MOVE  statement will replace the contents of one or more receiving data items ( identifier -2 \u2026) with a new value  \n\u2013 the one specified by literal -1 or identifier -1. \n2. Only numeric data can be moved to a numeric identifier -2.  A MOVE  involving numeric data will perform any \nnecessary format conversions that might be necessary.  \n3. If identifier -1 is specified as the source for a MOVE , its contents will not be changed31. \n6.2.26.2.  MOVE Format 2 \u2013 MOVE CORRESPONDING  \nFigure 6-70 - MOVE  CORRESPONDING Syntax  \n This statement moves similarly -named items from one \ngroup item to another.  \n1. ", "start_char_idx": 0, "end_char_idx": 871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7dd8068-9a85-4a1f-9527-1e2c1d98aa2f": {"__data__": {"id_": "d7dd8068-9a85-4a1f-9527-1e2c1d98aa2f", "embedding": null, "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3cb2308-ad99-4db7-8b67-5f61797e1dc6", "node_type": "4", "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2d30c34405fb530d47f9c2f0458516d223e851cd3109c5c1ebe3437d554b71aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5aec2c4f-c433-47b4-8a29-1abc29c895b7", "node_type": "1", "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9c97855380b7cc69677d0affa50e0c91c44cdb74a8a6aa03158e524fb1291bf5", "class_name": "RelatedNodeInfo"}}, "text": "The word CORRESPONDING  may be abbreviated as CORR . \n2. Both identifier -1 and identifier -2 must be group item s. \n3. When corresponding matches are established, the effect of a MOVE CORRESPONDING  on those matches will be as \nif a series of individual MOVE s were done \u2013 one for each match.  \nSee Also\u2026  \nThe CORRESPONDING  Clause  6.1.12.2  \n  \n  \n                                                                 \n31 Here\u2019s an instance where COBOL\u2019s strong dependence on the English language can get the inexperienced \nprogrammer into trouble \u2013 it probably would have been better for generations of beginning  COBOL programmers if \nthis verb had been named \u201cCOPY\u201d rather than MOVE , as the process of MOVE ing data from one place to another \nonly affects the data items named after  the \u201cTO\u201d.  \nMOVE TOidentifier -2\u2026literal -1\nidentifier -1\nMOVECORRESPONDING identifier -1TOidentifier -2\u2026", "start_char_idx": 871, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1a1de1c-33ed-4743-851c-7a5d0ff9aa63": {"__data__": {"id_": "d1a1de1c-33ed-4743-851c-7a5d0ff9aa63", "embedding": null, "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba7e3a8b-a15c-4da1-809b-5a6356010026", "node_type": "4", "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ce3660ebd37495e9bccc3af5e188f96f6129a2b13c55a62c5b8734c4bb138ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb20a189-a306-406f-b50e-b616716b5678", "node_type": "1", "metadata": {}, "hash": "4e82f6b3a6257adc7daffb0e52f6917624eb5cef041ac1f5ba61c76c3b9baece", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-81 6.2.27.  MULTIPLY  \n6.2.27.1.  MULTIPLY Format 1 \u2013 MULTIPLY BY  \nFigure 6-71 - MULTIPLY BY Syntax  \n 1. Identifier -1 and identifier -2 \nmust be numeric unedited \ndata items, each identifier -3 \nmust be a numeric (edited or \nunedited) data item and \nliteral -1 and literal -2 must be \nnumeric literals.  \n2. The product of identifier -1 or literal -1 and each identifier -2, in turn, will be computed and moved to each of the \nidentifier -2 data items, replacing its old contents.  \n3. The value of identifier -1 is not altered.  \n4. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how non-integer results will be \nsaved .   \n5. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results; this clause will also detect attempts to divide by zero.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n6.2.27.2.  MULTIPLY Format 2 \u2013 MULTIPLY GIVING  \nFigure 6-72 - MULTIPLY GIVING  Syntax  \n 1. Identifier -1 and identifier -2 \nmust be numeric unedited \ndata items , identifier -3 \nshould be a numeric or \nnumeric -edited data item  \nand literal -1 must be a \nnumeric literal.  \n \n", "start_char_idx": 0, "end_char_idx": 1343, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb20a189-a306-406f-b50e-b616716b5678": {"__data__": {"id_": "cb20a189-a306-406f-b50e-b616716b5678", "embedding": null, "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba7e3a8b-a15c-4da1-809b-5a6356010026", "node_type": "4", "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ce3660ebd37495e9bccc3af5e188f96f6129a2b13c55a62c5b8734c4bb138ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1a1de1c-33ed-4743-851c-7a5d0ff9aa63", "node_type": "1", "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07e5be76d459429600fe29c38ab470ec12889cdb7558634dba33c22284f9db72", "class_name": "RelatedNodeInfo"}}, "text": "2. The product  of identifier -1 or literal -1 and identifier -2 or literal -2 will be computed and moved to each of the \nidentifier -2 data item, replacing the old contents.  \n3. The optional \u201c rounding -option \u201d clause available to each identifier -3 will control how non -integer results will be \nsaved .   \n4. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -3 is \ninsufficiently sized to hold the generated results; this clause will also detect attempts to di vide by zero.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n  \nMULTIPLY BY{ identifier -2[ rounding -option] } \u2026\n[size-error -clause]\n[ END-MULTIPLY ]literal -1\nidentifier -1\nMULTIPLY BY\nGIVING{ identifier -3[ rounding -option] } \u2026\n[size-error -clause]\n[ END-MULTIPLY ]literal -1\nidentifier -1literal -2\nidentifier -2", "start_char_idx": 1343, "end_char_idx": 2230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25e133f4-bc70-46fe-a325-3b89401791db": {"__data__": {"id_": "25e133f4-bc70-46fe-a325-3b89401791db", "embedding": null, "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e18da8e3-d25d-43ac-852e-7237342949f5", "node_type": "4", "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "90e7e62689410de39f6a92b66599aa0d99eb49072cec89895d0dcbd261ccdfa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dad2166e-5b5b-4908-8ee6-7cf984132bff", "node_type": "1", "metadata": {}, "hash": "e1c399668b06edffd8d0508b4d7d562c5775b636f0d8062894c884828b878e38", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-82 6.2.28.  NEXT SENTENCE  \nFigure 6-73 - NEXT SENTENCE Syntax  \n The NEXT SENTENCE  statement is a means of \u201cbreaking out\u201d of a series of nested \n\u201cIF\u201d statements.  \n1. The NEXT SENTENCE  statement is valid only when used within the scope of an  \u201cIF\u201d statement.  \n2. As its name implies, this statement causes control to transfer to the next sentence  in the program.  \n3. The NEXT SENTENCE  statement is needed for COBOL programs that are coded according to pre -1985 standards.  \nPrograms  coded for 1985 (and beyond) standards don\u2019t need it.  \n4. New GNU COBOL  programs should be coded to use the END -IF scope terminator for IF statements, which \ninvalidates the use of NEXT SENTENCE  in favor of the CONTINUE  statement.  \nSee Also\u2026  \nUse of Periods (.)  ", "start_char_idx": 0, "end_char_idx": 840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dad2166e-5b5b-4908-8ee6-7cf984132bff": {"__data__": {"id_": "dad2166e-5b5b-4908-8ee6-7cf984132bff", "embedding": null, "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e18da8e3-d25d-43ac-852e-7237342949f5", "node_type": "4", "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "90e7e62689410de39f6a92b66599aa0d99eb49072cec89895d0dcbd261ccdfa7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25e133f4-bc70-46fe-a325-3b89401791db", "node_type": "1", "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "24f288d18c58f8701b5f1e728addfb9bd1c25520d74ca8bfc569acfced23eebe", "class_name": "RelatedNodeInfo"}}, "text": "6.1.5  \n The CONTINUE  Statement  6.4.10  \n \n  \nNEXTSENTENCE", "start_char_idx": 840, "end_char_idx": 900, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "708021d9-a6a7-4556-be6a-1b608c9d93b3": {"__data__": {"id_": "708021d9-a6a7-4556-be6a-1b608c9d93b3", "embedding": null, "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "538fd650-3844-4c9c-ae10-98eb72b9780d", "node_type": "4", "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4688a46e3dae13c193fab6d0aca42890a15602f25fb16dabb943eb93bfe93135", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c7f8640-e545-4155-97a3-5d36f83cd8e1", "node_type": "1", "metadata": {}, "hash": "f4cfcb5b546ab151b56c287f92ab423a182264c4b4f4ff1d7d95df02a8af8bc6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-83 6.2.29.  OPEN  \nFigure 6-74 - OPEN Syntax  \n The OPEN statement makes \none or more files described \nin your program available for \nuse. \n \n1. Any file defined in a GNU COBOL  program must be successfully OPEN ed before it or any of it\u2019s record descriptions \nmay be referenced on a CLOSE ,  DELETE , READ , REWRITE , START ,  UNLOCK  or WRITE  statement.   Additionally, a file \nmust be successfully OPEN ed for any of its record data names (or data elements subordinate to those records) to \nbe referenced on any statement  other than a MERGE  or SORT . \n2. Any attempt to OPEN  a file that is already OPEN  will fail with a FILE STATUS  of 41 (\u201cFile Already OPEN\u201d).  Thi s is a \nfatal error th at will terminate the program.    \n", "start_char_idx": 0, "end_char_idx": 812, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c7f8640-e545-4155-97a3-5d36f83cd8e1": {"__data__": {"id_": "9c7f8640-e545-4155-97a3-5d36f83cd8e1", "embedding": null, "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "538fd650-3844-4c9c-ae10-98eb72b9780d", "node_type": "4", "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4688a46e3dae13c193fab6d0aca42890a15602f25fb16dabb943eb93bfe93135", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "708021d9-a6a7-4556-be6a-1b608c9d93b3", "node_type": "1", "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8ef80413a63ede0460c6083afc480b9c61b8c3b61b662ce220369eeb617ac675", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bb90251-6edd-4733-94c8-0db8d9f70bf3", "node_type": "1", "metadata": {}, "hash": "e0a39b2f0d7098bfb8fd9a26002c78567168652758afa926cb58e1765a4c73cb", "class_name": "RelatedNodeInfo"}}, "text": "3. Any OPEN  failure (including \u201cFile Already OPEN\u201d) may be trapped using DECLARATIVES  or an error procedure  \nestablished using the CBL_ERROR_PROC  built -in subroutine.   When either of these trap routines exit , however, the \nGNU COBOL  runtime system will terminate the program.  Ultimately, you cannot recover from an OPEN  failure.  \n4. The INPUT , OUTPUT , I-O and EXTEND  options inform GNU COBOL  of the manner in which you wish to use the file, \nas follows:  \nOPEN \nMode  Effect  \nINPUT  You may only read the existing contents of the file - only the CLOSE , READ , START  and UNLOCK  \nstatements will be allowed.  \nOUTPUT  You may only write new content (which will completely replace any previous file contents) to the file - \nonly the CLOSE , UNLOCK  and WRITE  statements will be allowed.  \nI-O You may perform any operation you wish against the file - all file I/O statemen ts will be allowed.  \nEXTEND  You may only write new content (which will be appended after any previously existing file content) to \nthe file - only the CLOSE , UNLOCK  and WRITE  statements will be allowed.  \n5. The SHARING  clause informs GNU COBOL  how you are willing to co -exist with any other GNU COBOL  programs that \nmay attempt to OPEN  the same file after your program does .   \n6. The WITH NO REWIND  option on the OPEN statement is supported syntactically but is otherwise non -functional.  \nNote that the CLOSE  statement (section 6.2.7 ) also has this option, which is supported by GNU COBOL . \nDevices that would be capable of supporting a WITH NO REWIND  clause (tape drives) are pretty rare in the \nenvironments in which GNU COBOL  is intended to operate , and only such a device will be responsive to the WITH \nNO REWIND  option.  \n7. The WITH LOCK  option will be functional only if your GNU COBOL  build can support it.  GNU COBOL  built for \nMinGW or native Windows will not, because the Unix \u201cfcntl() primitive does n\u2019t exist in those environments .  GNU \nCOBOL  built for Cygwin or Unix will.  \n", "start_char_idx": 812, "end_char_idx": 2821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bb90251-6edd-4733-94c8-0db8d9f70bf3": {"__data__": {"id_": "5bb90251-6edd-4733-94c8-0db8d9f70bf3", "embedding": null, "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "538fd650-3844-4c9c-ae10-98eb72b9780d", "node_type": "4", "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4688a46e3dae13c193fab6d0aca42890a15602f25fb16dabb943eb93bfe93135", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c7f8640-e545-4155-97a3-5d36f83cd8e1", "node_type": "1", "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "845284415e4464b1a621b1691947b3fd3b21bc6ac4966691fba83c446c12b613", "class_name": "RelatedNodeInfo"}}, "text": "8. The REVERSED  option will be syntactically accepted, but a compilation specifying either the \u201c -Wobsolete \u201d or \u201c-\nWall \u201d options will yield a warning message that REVERSED  is an ob solete feature.  \nOPEN{ [sharing -options] file-name -1[open -options] } \u2026INPUT\nOUTPUT\nI-O\nEXTEND\nsharing -options:\nALLOTHER\nNOOTHER\nREADONLYSHARING WITH \nLOCKWITHREVERSED\nNOREWINDopen -options:", "start_char_idx": 2821, "end_char_idx": 3200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e668eef-2e8b-4f4b-a848-b44095802037": {"__data__": {"id_": "1e668eef-2e8b-4f4b-a848-b44095802037", "embedding": null, "metadata": {"page_label": "172", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d57da68-e01c-4593-918d-5c1cdc5d075c", "node_type": "4", "metadata": {"page_label": "172", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d7b5faaadd727c9e5b8190712677dc1e06d7af78bd0b789aabd55a29ee109557", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-84 See Also\u2026  \nFILE-STATUS Values  Figure \n4-15 \nFile Sharing  6.1.9.1  \nRecord Locking  6.1.9.2  \nUsing DECLARATIVES  6.1.4  \nThe CLOSE  Statement  6.4.7  \nThe DELETE  Statement  6.4.11  \nThe MERGE  Statement  6.4.25  \n The READ Statement  6.4.31  \nThe REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe START  Statement  6.2.41  \nThe UNLOCK  Statement  6.4.48  \nThe WRITE  Statement  6.4.50  \nThe CBL_ERROR_PROC  Subroutine  8.3.1.24  \n \n \n  ", "start_char_idx": 0, "end_char_idx": 549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0c5d876-701c-405a-91d4-28b0d88ee4e8": {"__data__": {"id_": "c0c5d876-701c-405a-91d4-28b0d88ee4e8", "embedding": null, "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fea458a-ccbc-48d3-813a-e1fdd2c9c382", "node_type": "4", "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e4ba24ddfc20a1dbebf3b0b0cf070f61774d2401c36ff7fd039082270ffa2ebd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbd3d3f5-018a-4f2e-bca4-6e7c01c5d789", "node_type": "1", "metadata": {}, "hash": "29cda4b09c1d6ac05d423bf1c6da5836066e81f53d37fcb1da08de4b0721d5d1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-85 6.2.30.  PERFORM  \n6.2.30.1.  PERFORM Format 1 \u2013 Procedural  \nFigure 6-75 - Procedural PERFORM Syntax  \n \n  \nThis format of the PERFORM  statement is used to transfer control to one or more procedures  and to return control \nwhen execution of the specified procedure(s)  is complete.  This invocation of the procedure(s)  can be done a single \ntime, multiple times, repeatedly until a condition becomes TRUE or forever (with \u2013 presumably \u2013 some way of breaking \nout of the control of the PERFORM  or of hal;ting program execution within the procedure(s) ). \n1. The words THROUGH  and THRU  may be used interchangeably.   Both procedure -name -1 and procedure -name -2 \nmust be PROCEDURE DIVISION  sections or paragraphs defined in the same program  as the PERFORM  statemen t.  If  \nprocedure -name -2 is specified, it must follow procedure -name -1 in the pr ogram\u2019s source code.   The scope  of the \nPERFORM  is defined as being the  statements within  procedure -name -1, the  statements within  procedure -name -2 \nand all statements in all procedures defined between them.  \n2. ", "start_char_idx": 0, "end_char_idx": 1165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbd3d3f5-018a-4f2e-bca4-6e7c01c5d789": {"__data__": {"id_": "fbd3d3f5-018a-4f2e-bca4-6e7c01c5d789", "embedding": null, "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fea458a-ccbc-48d3-813a-e1fdd2c9c382", "node_type": "4", "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e4ba24ddfc20a1dbebf3b0b0cf070f61774d2401c36ff7fd039082270ffa2ebd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0c5d876-701c-405a-91d4-28b0d88ee4e8", "node_type": "1", "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "506c2d842acdaf29816456f67e8b91a1baa52b79f1c21211db89bcba7b0a0b3f", "class_name": "RelatedNodeInfo"}}, "text": "All identifier -n entries shown must be elementary unedited numeric data items.  All literal -n entries shown must be \nnumeric literals (or references to functions that return a numeric value.  \n3. Without the UNTIL , TIMES , VARYING  or FOREVER  clauses, the code within the scope of the \nPERFORM  will be executed (once) and control will return to the statement following the \nPERFORM .  See Figure 6-76. \n \n  \nPERFORM procedure -name -1[ THRU|THROUGH ] procedure -name -2]\n[ WITH TEST ]\nUNTILEXIT|FOREVER\nTIMESBEFORE\nAFTER\nliteral -1\nidentifier -1varying -clause\nUNTIL conditional -expression -1\nVARYING identifier -2FROM [ BY ] UNTIL conditional -expression -2\n[ AFTER identifier -5FROM [ BY ] UNTIL conditional -expression -3]\u2026literal -2\nidentifier -3literal -3\nidentifier -4\nliteral -4\nidentifier -6literal -5\nidentifier -7varying clause:\nStatements \nwithin PERFORM\nscopePERFORM \nStarts\nPERFORM EndsFigure 6-76 - Simple \nPERFORM  ", "start_char_idx": 1165, "end_char_idx": 2101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0bb481d-19b3-45ce-b51b-250593995d57": {"__data__": {"id_": "e0bb481d-19b3-45ce-b51b-250593995d57", "embedding": null, "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5766be6-b7e5-4705-974d-ce60bced9940", "node_type": "4", "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e2cc057c37168e73e7c7c467848f47b0c54ee0de1b28aaf7148dc895095a3ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b923529e-7157-4dca-ba76-0071d83cc16b", "node_type": "1", "metadata": {}, "hash": "40b674a4fb89d6cc2df0db116a77aeb0e3100327fedd85ce3ac5c4e2b9d95a78", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-86 4. The UNTIL EXIT  option will repeatedly execute the code within the scope of \nthe PERFORM  with no conditions defined on the PERFORM  statement itself \nfor termination of the repetition.  It will be up to the programmer to include \nan EXIT PERFORM  within the scope of the PERFORM  that will break out of the \nloop . \n5. ", "start_char_idx": 0, "end_char_idx": 405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b923529e-7157-4dca-ba76-0071d83cc16b": {"__data__": {"id_": "b923529e-7157-4dca-ba76-0071d83cc16b", "embedding": null, "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5766be6-b7e5-4705-974d-ce60bced9940", "node_type": "4", "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e2cc057c37168e73e7c7c467848f47b0c54ee0de1b28aaf7148dc895095a3ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0bb481d-19b3-45ce-b51b-250593995d57", "node_type": "1", "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e16a114304399b2f4f54424cfe489fe430bd2e03932626487d292e245baf280b", "class_name": "RelatedNodeInfo"}}, "text": "The FOREVER  option has the same effect as UNTIL EXIT . \n \n6. The TIMES  option will repeat the execution of the code  within the scope of the PERFORM  a \nfixed number of times.  When the PERFORM  statement is executed, the repeat count will \nbe set to the value of literal -1 or the value within identifier -1 at the time the PERFORM  \nbegins execution.  Once that number of repetitions has concluded, control will fall into \nthe next statement following th e PERFORM32. \n \n  \n                                                                 \n32 Changing the contents of identifier -1 within the scope of the PERFORM  will have no effect on the repetition count, as that was determined the \nmoment the PERFORM  began executing.  Figure 6-77 - \nPERFORM UNTIL EXIT  \nFigure 6-78 \u2013 \nPERFORM n TIMES  \nStatements \nwithin PERFORM\nscopePERFORM \nStarts\nPERFORM EndsEXIT \nPERFORM\nStatements \nwithin PERFORM\nscopePERFORM \nStarts\nPERFORM EndsRepeat count set \nto literal -1 or \nidentifier -1value\nRepeat count \ndecremented by \n1\nRepeat \ncount = 0?\nYesNo", "start_char_idx": 405, "end_char_idx": 1449, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53f3c914-a232-4d4d-8b96-c4cc1a10ff40": {"__data__": {"id_": "53f3c914-a232-4d4d-8b96-c4cc1a10ff40", "embedding": null, "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d89f8aa6-8af9-4f71-805a-11f3b184d30e", "node_type": "4", "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "068d07c668c5fa0ecc41518c22346cea17567e0985d790d5215764333d6fe158", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4a3014c-3ca6-44c2-b22b-5de08eb16140", "node_type": "1", "metadata": {}, "hash": "5231b47c5ee89a56a898fc51da5a4dc25236dd66da5437da12a817f9b5335b14", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-87 7. The \u201c UNTIL  conditional -expression -1\u201d option will \nrepeat the code within the scope of the PERFORM  until \nthe specified conditional expression evaluates to a TRUE \nvalue.   \n", "start_char_idx": 0, "end_char_idx": 263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4a3014c-3ca6-44c2-b22b-5de08eb16140": {"__data__": {"id_": "d4a3014c-3ca6-44c2-b22b-5de08eb16140", "embedding": null, "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d89f8aa6-8af9-4f71-805a-11f3b184d30e", "node_type": "4", "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "068d07c668c5fa0ecc41518c22346cea17567e0985d790d5215764333d6fe158", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53f3c914-a232-4d4d-8b96-c4cc1a10ff40", "node_type": "1", "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "282e10b13ce8ba662f03235faf66117012b255d26bd53cef9b8877422cd959df", "class_name": "RelatedNodeInfo"}}, "text": "8. The optional WITH TEST  clause will control whether \nUNTIL  testing occurs BEFORE  the scope of the PERFORM  \nis executed on each iteratio n or AFTER .  The default, if \nno WITH TEST  clause is specified, is BEFORE . \n \n9. The VARYING  clause allows for the \ndefinition of a data item ( identifier -2) \nthat will have a unique numeric value \nfor each iteration of the execution of \nthe statements within the scope of \nthe PERFORM . \n10. If a VARYING  clause has been used, \nyou may also use any number of \nadditional AFTER  clauses to create a \nsecondary loop situation where each \nAFTER  will create an additional series \nof iterations, will define an additional \ndata item to be incremented during \neach iteration and will define an \nadditional conditional expression to \ndefine the termination of that series \nof iterations.  Functionally, this is \nbasically a way of nesting a \nPERFORM  VARYING  within another \nPERFORM  VARYING  without the \nneed to code multiple statements.  \n11. The flowchart in Figure 6-80 shows \nhow PERFORM VARYING  (with an \nAFTER  clause too!) works in both \nTEST BEFORE  and TEST AFTER  \nmodes.  \n  Figure 6-79 - PERFORM UNTIL  \nStatements \nwithin PERFORM\nscopePERFORM \nStarts\nPERFORM Endsconditional -\nexpression -\n1TRUE\nFALSEStatements \nwithin PERFORM\nscopePERFORM \nStarts\nconditional -\nexpression -\n1TRUE\nFALSEWITH TEST BEFORE WITH TEST AFTER\nFigure 6-80 - PERFORM VARYING AFTER  \nPERFORM \nStarts\nPERFORM Endsconditional -\nexpression -\n2\nTRUE\nFALSE\nTRUEWITH TEST BEFORE WITH TEST AFTER\nInitialize identifier -2 \ntoits current FROM\nvalue \nconditional -\nexpression -\n3FALSE\nStatements \nwithin PERFORM\nscope\nIncrement \nidentifier -5 by its \nBY value TRUEPERFORM \nStarts\nStatements \nwithin PERFORM\nscope\nconditional -\nexpression -\n3Increment \nidentifier -5 by its \nBY value \nFALSE\nconditional -\nexpression -\n2Increment \nidentifier -2 \nby its BY \nvalue \nTRUEFALSEInitialize identifier -5 \nto  its current FROM\nvaluesInitialize identifier -2 \ntoits current FROM\nvalue \nInitialize identifier -5 \nto  its current FROM\nvalues\nIncrement \nidentifier -2 \nby its BY \nvalue VARYING\nAFTERColor\nLegend", "start_char_idx": 263, "end_char_idx": 2385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d33e3429-5da5-4850-bc21-5a1ccc3933d7": {"__data__": {"id_": "d33e3429-5da5-4850-bc21-5a1ccc3933d7", "embedding": null, "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6c9c18dc-348f-4a15-8505-e20ff908d468", "node_type": "4", "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fa965180a6f0a1a9e1df0f208c065a6da29966a7f085d1bcf660083933042c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d155fe7c-3247-4d20-bced-830577584bf0", "node_type": "1", "metadata": {}, "hash": "a9b8f577154f3ce5649c853048ad12188f9f1ee14d8799396c72c33d59e19f7c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-88 Observe the following code which defines a two-\ndimensional (3 row by 4 column) table  and a pair of \nnumeric data items to be used to subscript references to \neach element of the table : \n01  PERFORM -DEMO. \n    05 PD-ROW             OCCURS 3 TIMES.  \n       ", "start_char_idx": 0, "end_char_idx": 342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d155fe7c-3247-4d20-bced-830577584bf0": {"__data__": {"id_": "d155fe7c-3247-4d20-bced-830577584bf0", "embedding": null, "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6c9c18dc-348f-4a15-8505-e20ff908d468", "node_type": "4", "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fa965180a6f0a1a9e1df0f208c065a6da29966a7f085d1bcf660083933042c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d33e3429-5da5-4850-bc21-5a1ccc3933d7", "node_type": "1", "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f07da07b60f96b85dcefb02814b394422b441be2b719896d8c546fa28f314741", "class_name": "RelatedNodeInfo"}}, "text": "10 PD-COL          OCCURS 4 TIMES  \n          15 PD           PIC X(1).  \n01  PD-Col-No             PIC 9 COMP.  \n01  PD-Row-No             PIC 9 COMP.  \nLet\u2019s say we want to PERFORM a routine (100 -Visit -Each -PD) which will \u2013 in turn \u2013 access \neach PD data item in the sequence shown to the right.  Here\u2019s the PERFORM code:  \n    PERFORM 100 -Visit-Each-PD WITH TEST AFTER  \n        VARYING PD -Row-No FROM 1 BY 1 UNTIL PD -Row-No = 3 \n          AFTER PD -Col-No FROM 1 BY 1 UNTIL PD -Col-No = 4. \nBut, perhaps you needed to \u201cvisit\u201d each PD in the sequence \nshown to the left.  If so, then here\u2019s the PERFORM  you need:  \n    PERFORM 100 -Visit-Each-PD WITH TEST AFTER \n        VARYING PD -Col-No FROM 1 BY 1 UNTIL PD -Col-No = 4 \n        VARYING PD -Row-No FROM 1 BY 1 UNTIL PD -Row-No = 3. \n \nAs a general rule of thumb, if you use WITH TEST AFTER on a PERFORM, the termination conditions specified on \nVARYING and AFTER clauses should test the identifier being varied for being EQUAL TO the maximum value it should \nreceive.  If you use WITH TEST BEF ORE, the termination conditions specified on VARYING and AFTER clauses should test \nthe identifier being varied for being GREATER THAN the maximum value it should receive.   \nThus, the two PERFORM examples shown above could have been coded this way:  \n    PERFORM 100-Visit-Each-PD WITH TEST BEFORE \n        VARYING PD -Row-No FROM 1 BY 1 UNTIL PD -Row-No > 3 \n          AFTER PD -Col-No FROM 1 BY 1 UNTIL PD -Col-No > 4. \n- and \u2013 \n    PERFORM 100 -Visit-Each-PD WITH TEST BEFORE \n        VARYING PD -Col-No FROM 1 BY 1 UNTIL P D-Col-No > 4 \n        VARYING PD -Row-No FROM 1 BY 1 UNTIL PD -Row-No > 3. \nSee Also\u2026  \nConditional Expressions  6.1.8.2  \n  \n \n6.2.30.2.  PERFORM Format 2 \u2013 Inline  \nPD (1, 1) PD (1, 2) PD (1, 3) PD (1, 4)\nPD (2, 1) PD (2, 2) PD (2, 3) PD (2, 4)\nPD (3, 1) PD (3, 2) PD (3, 3) PD (3, 4)\n1 2 3 4\n5 6 7 8\n9 10 11 12\n1 4 7 10\n2 5 8 11\n3 6 9 12", "start_char_idx": 342, "end_char_idx": 2267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d906a0e4-fff5-4f89-9338-561cc63715db": {"__data__": {"id_": "d906a0e4-fff5-4f89-9338-561cc63715db", "embedding": null, "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cadad17f-b852-4a75-abc3-cabe61d756c3", "node_type": "4", "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "16e48083e60a84c424dce5e5e4cd0721a2539014bb1c2f43a8c974b0b988e207", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ed248da-0ea9-437d-a79b-f9fc60ee7d1a", "node_type": "1", "metadata": {}, "hash": "098eb487d7f4c8cfa4e0892970ac197668710ac7023c1813a1c9bcd06531a00d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-89 Figure 6-81 - Inline PERFORM Syntax  \n  \nThis format of the PERFORM  statement is identical in operation to format 1, except for the fact that the statements that \ncomprise the scope of th e PERFORM  are now specified in -line with the PERFORM  code rather than in procedures \nlocated elsewhere within the program.  \n1. ", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ed248da-0ea9-437d-a79b-f9fc60ee7d1a": {"__data__": {"id_": "2ed248da-0ea9-437d-a79b-f9fc60ee7d1a", "embedding": null, "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cadad17f-b852-4a75-abc3-cabe61d756c3", "node_type": "4", "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "16e48083e60a84c424dce5e5e4cd0721a2539014bb1c2f43a8c974b0b988e207", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d906a0e4-fff5-4f89-9338-561cc63715db", "node_type": "1", "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "26bb44b781f8fe60ebe469576535025d029dc34215fa8db04d3dfd4cb50209ca", "class_name": "RelatedNodeInfo"}}, "text": "The various optional clauses  have the same use and effect as in format 1 of the PERFORM  statement.  \n2. The distinguishing characteristic of this format versus format 1 is that \u2013 with this version of the PERFORM  \nstatement \u2013 the code being executed is specified in -line ( imperative -statement -1 \u2026) rather than in one or more \nseparate  procedure s. \n\u2018  \nPERFORM\n[ WITH TEST ]\nUNTILEXIT|FOREVER\nTIMES\n[ imperative -statement -1] \u2026\n[ END-PERFORM ]BEFORE\nAFTER\nliteral -1\nidentifier -1varying -clause\nUNTIL conditional -expression -1\nVARYING identifier -2FROM [ BY ] UNTIL conditional -expression -2\n[ AFTER identifier -5FROM [ BY ] UNTIL conditional -expression -3]\u2026literal -2\nidentifier -3literal -3\nidentifier -4\nliteral -4\nidentifier -6literal -5\nidentifier -7varying clause:", "start_char_idx": 402, "end_char_idx": 1184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddcdb0e2-e2c0-4664-b72b-012a5250046f": {"__data__": {"id_": "ddcdb0e2-e2c0-4664-b72b-012a5250046f", "embedding": null, "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d", "node_type": "4", "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f45f664ed830a72678b112337a377fc037adf96940a84a845811052420458be0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5eec916a-d1aa-49a0-8d11-6c31073c2f01", "node_type": "1", "metadata": {}, "hash": "a63ecd1ab372cc98fe6c3a1483e2e6b1625e6f7b5fcc8eb27b6c03175bb415f4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-90 6.2.31.  READ  \n6.2.31.1.  READ For mat 1 \u2013 Sequential READ  \nFigure 6-82 \u2013 READ (Sequential) Syntax  \n This form of the  READ statement retrieves the next (or \nprevious)  record from a file.  \n1. ", "start_char_idx": 0, "end_char_idx": 279, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5eec916a-d1aa-49a0-8d11-6c31073c2f01": {"__data__": {"id_": "5eec916a-d1aa-49a0-8d11-6c31073c2f01", "embedding": null, "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d", "node_type": "4", "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f45f664ed830a72678b112337a377fc037adf96940a84a845811052420458be0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddcdb0e2-e2c0-4664-b72b-012a5250046f", "node_type": "1", "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b2a2bdc732032905007f2d886768713df59f920c69bc5d70fb8ed2eb5bc95db9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a37b9c5-7eae-44f1-babe-e032a29cb509", "node_type": "1", "metadata": {}, "hash": "ba6cc0fd36d594eee21f3a9f5f1438f06b8bf6c043365df4516a55453ab4d961", "class_name": "RelatedNodeInfo"}}, "text": "File-name -1 must currently be OPEN  for INPUT  or I-O. \n2. If the ACCESS MODE  of file-name -1 is RANDOM , this format of the READ  statement cannot be used.   \n3. If the ACCESS MODE  is SEQUENTIAL , this is the only  format  of READ that is availab le. \n4. If the ACCESS MODE  is DYNAMIC , this format of the READ  statement may be used  as well as format 2.  The \nfollowing minimalist READ  statement\u2026  \nREAD file-name -1 \n\u2026is perfectly legal according to both READ  formats.  For that reason, when ACCESS MODE DYNAMIC  has been \nspecified and you want to tell the GNU COBOL  compiler that a statement such as the one above should be treated \nas a sequential  READ , you must  add either NEXT  or PRIOR  to the statement (otherwise  it will be treated as a \nrandom  READ ). \n5. The keywords NEXT  and PREVIOUS  specify in what direction of travel the reading process will take through the file.  \nIf neither NEXT  nor PREVIOUS  clause is specified, NEXT  is assumed.  \n6. The PREVIOUS  option is available only for ORGANIZATION INDEXED  files.  \n7. A successful sequential READ  will retrieve the next available record from file-name -1, in either a \u201cnext\u201d or \n\u201cprevious\u201d direction from the most -recently -READ rec ord, depending upon the use of the NEXT  or PREVIOUS  \noption.  The newly -retrieved record data will be saved into the 01 -level record structure(s) that immediately follow \nthe file\u2019s FD  or SD.  If t he optional INTO  clause is present, a copy of the just -retri eved record will be automatically \nMOVE d to identifier -1. \n8. ", "start_char_idx": 279, "end_char_idx": 1828, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a37b9c5-7eae-44f1-babe-e032a29cb509": {"__data__": {"id_": "9a37b9c5-7eae-44f1-babe-e032a29cb509", "embedding": null, "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d", "node_type": "4", "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f45f664ed830a72678b112337a377fc037adf96940a84a845811052420458be0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5eec916a-d1aa-49a0-8d11-6c31073c2f01", "node_type": "1", "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2aec3331d4461eaa83cd7a37c154c023dcf5bc8c8fdaf21976faed6c0b765284", "class_name": "RelatedNodeInfo"}}, "text": "The optional LOCK options may be used to control access to the file by other programs while this program is \nrunning.  \n9. The optional at-end-clause  may be used to detect situations where all records in a file have been processed (known \nas an end -of-file condition).  Without using one of these clauses, a program would need to test the returned FILE \nSTATUS value after each READ . \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nDefining File Characteristics (SELECT)  4.2.1  \nFILE-STATUS Values  Figure \n4-15 \n Describing the Structure of a File (FD/SD)  5.1 \nRecord Locking  6.1.11.2  \nHandling End -of-File Conditions ( AT END ) 6.1.12.1  \nThe OPEN  Statement  6.4.29  \n \nREAD file-name -1[ ]RECORD\n[ INTO identifier -1]\n[ at-end-clause]\n[ END-READ]NEXT\nPREVIOUS\nIGNORING LOCK\nWITH LOCK\nWITH KEPTLOCK\nWITH NOLOCK\nWITH IGNORELOCK\nWITH WAIT", "start_char_idx": 1828, "end_char_idx": 2666, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae7c7504-f6c5-428c-9266-d8b8878b2069": {"__data__": {"id_": "ae7c7504-f6c5-428c-9266-d8b8878b2069", "embedding": null, "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b", "node_type": "4", "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "08b189f3fdb879b2a010246bf6a7213320d96976fc4db330d0a23978bf713d1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d953357-3c7b-4e07-a68b-9ed3b09393c1", "node_type": "1", "metadata": {}, "hash": "39f324a0c6f47427605a4258b0ea1d8a654400e0ed7f5a1cf694a40e8d748ae5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-91  \n6.2.31.2.  READ Format 2 \u2013 Random Read  \nFigure 6-83 - READ (Random) Syntax  \n This form of the READ  statement retrieves an arbitrary record from a \nORGANIZATION RELATIVE  or ORGANIZATION INDEXED  file.  \n1. ", "start_char_idx": 0, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d953357-3c7b-4e07-a68b-9ed3b09393c1": {"__data__": {"id_": "7d953357-3c7b-4e07-a68b-9ed3b09393c1", "embedding": null, "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b", "node_type": "4", "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "08b189f3fdb879b2a010246bf6a7213320d96976fc4db330d0a23978bf713d1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae7c7504-f6c5-428c-9266-d8b8878b2069", "node_type": "1", "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7c53441b207c5b1f87aa5e3c76ec63d45128eb4807e1811ee60514db733d7aff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40af5aee-e74e-4b45-b444-c3bb98a818a7", "node_type": "1", "metadata": {}, "hash": "38c69fcbb3e4e8a2700dae0f3be884528cdad281632086c28fc2c6ed0a6277b7", "class_name": "RelatedNodeInfo"}}, "text": "File-name -1 must currently be OPEN  for INPUT  or I-O. \n2. If the ACCESS MODE  of file-name -1 is SEQUENTIAL , this format of the READ statement cannot be used.   \n3. If the ACCESS MODE  is RANDOM , this is the only  format  of READ  that is available.  \n4. If the ACCESS MODE  is DYNAMIC , this format of the READ statement may be used as well as format 1.  The \nfollowing minimalist READ statement\u2026  \nREAD  file-name -1 \n\u2026is perfectly legal according to both READ  formats.  For that reason, when ACCESS MODE DYNAMIC  has been \nspecified for a file, a READ  statement such as the above will be automatically treated as a random  READ . \n5. ", "start_char_idx": 293, "end_char_idx": 936, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40af5aee-e74e-4b45-b444-c3bb98a818a7": {"__data__": {"id_": "40af5aee-e74e-4b45-b444-c3bb98a818a7", "embedding": null, "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b", "node_type": "4", "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "08b189f3fdb879b2a010246bf6a7213320d96976fc4db330d0a23978bf713d1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d953357-3c7b-4e07-a68b-9ed3b09393c1", "node_type": "1", "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31a25f2e0b101ef4e4ae1068e4b2f7f541915b447626ec9e7b2727e0bf64d123", "class_name": "RelatedNodeInfo"}}, "text": "The optional KEY clause tells the compiler how a record is to be located in the file.   \nIf the KEY clause is absent:  \nIf the file is an ORGANIZATION RELATIVE  file, the contents  of the field declared as the file\u2019s RELATIVE KEY  will \nbe used to identify a record.   If the file is an ORGANIZATION INDEXED  file, the contents of the field declared as \nthe file\u2019s RECORD  KEY (section  will be used to identify a record.  \nIf the KEY clause is specified:  \nIf the file is an ORGANIZATION RELATIVE  file, the contents of identifier -2 will be used as the relative record \nnumber of the record to be accessed.  Identifier -2 does not have to be the RELATIVE KEY  field of the file \n(although it coul d be if you wish).   If the file is an ORGANIZATION INDEXED  file, identifier -2 must be the \nPRIMARY RECORD KEY  or one of the file\u2019s ALTERNATE RECORD KEY  fields  (if any) \u2013 the current contents of \nthat field will identify the record to be accessed.  If an alternate record key is used, and that key allows \nduplicate values, the record accessed will be the 1st one having that key value.  \n6. The record identified by rule # 5 will be retrieved from file-name -1.  The newly -retrieved record data will be saved \ninto the 01 -level record structure(s) that immediately follow the file\u2019s FD.  If the optional INTO  clause is present, a \ncopy of the just -retrieved record will be automatically MOVE d to identifier -1.. \n7. The optional LOCK options may be used to control access to the file by other programs while this program is \nrunning.  \nREAD file-name -1RECORD\n[ INTO identifier -1]\n[ KEYIS identifier -2]\n[ invalid -key-clause]\n[ END-READ]IGNORING LOCK\nWITH LOCK\nWITH KEPTLOCK\nWITH NOLOCK\nWITH IGNORELOCK\nWITH WAIT", "start_char_idx": 936, "end_char_idx": 2660, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4237b9f1-1c28-49aa-bd36-c14987589793": {"__data__": {"id_": "4237b9f1-1c28-49aa-bd36-c14987589793", "embedding": null, "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6762426a-ef98-439e-ab85-8cb43e719a28", "node_type": "4", "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "73894bff8fb9c264aa0d4cd3f6f55d304ae343ee3164fc703291d970e89486ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09027ed3-5ba1-403f-b82b-2a494562416d", "node_type": "1", "metadata": {}, "hash": "b6d9982a35b72905509ff87f717f9797965a2d43f33d313ffdeeb9042402a3a5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-92 8. The optional invalid -key-clause  may be used to detect situations where the desired record cannot be read from the \nfile (most likely because no record exists with the specified RELATIVE KEY  or RECORD KEY ).  Without using one of \nthese clauses, a program would need to test the returned FILE STATUS value after each READ . \n", "start_char_idx": 0, "end_char_idx": 412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09027ed3-5ba1-403f-b82b-2a494562416d": {"__data__": {"id_": "09027ed3-5ba1-403f-b82b-2a494562416d", "embedding": null, "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6762426a-ef98-439e-ab85-8cb43e719a28", "node_type": "4", "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "73894bff8fb9c264aa0d4cd3f6f55d304ae343ee3164fc703291d970e89486ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4237b9f1-1c28-49aa-bd36-c14987589793", "node_type": "1", "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0b0f3c225322d5ff66f5d3fa00094e141c03d96ff5da672e75c30e35d986dfb1", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nTypes of Files  1.3.3.5  \nDefining File Characteristics (SELECT)  4.2.1  \nFILE-STATUS Values  Figure \n4-15 \n Describing the Structure of a File (FD/SD)  5.1 \nHandling Invalid Keys ( INVALID KEY ) 6.1.12.3  \nThe OPEN  Statement  6.4.29  \n \n  ", "start_char_idx": 412, "end_char_idx": 665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a690025d-dbc3-472e-828b-5490e1997cc3": {"__data__": {"id_": "a690025d-dbc3-472e-828b-5490e1997cc3", "embedding": null, "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcea66c2-5561-468d-8f0e-c241ef9b69c1", "node_type": "4", "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dc51f3f3b7b03d33cf3cb2f185cd01cb1d787949a1da794921ad9304d438195", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03a01d85-96fc-4c73-8f23-6aab9a2367c7", "node_type": "1", "metadata": {}, "hash": "772622890e81fe25ce1c18dc5a75911249cee7ec8bf37d749a0646be8d2d669f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-93 6.2.32.  READY TRACE  \nFigure 6-84 - READY TRACE Syntax  \n The READY TRACE  verb turn s procedure or procedure+statement tracing on.  \n1. ", "start_char_idx": 0, "end_char_idx": 220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03a01d85-96fc-4c73-8f23-6aab9a2367c7": {"__data__": {"id_": "03a01d85-96fc-4c73-8f23-6aab9a2367c7", "embedding": null, "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcea66c2-5561-468d-8f0e-c241ef9b69c1", "node_type": "4", "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dc51f3f3b7b03d33cf3cb2f185cd01cb1d787949a1da794921ad9304d438195", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a690025d-dbc3-472e-828b-5490e1997cc3", "node_type": "1", "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0e120514be5d9619e0a8538809d7cf0e21799c877a6a18135642f80137509234", "class_name": "RelatedNodeInfo"}}, "text": "This statement will cause procedure or procedure+statement tracing to be turned on.  \n2. In order for this statement to be functional, tracing code must have been generated into the compiled program \nusing either the \u201c -ftrace \u201d (procedures only) or \u201c -ftraceall \u201d (procedures + statements) compiler options.   \n3. Tracing may be turned off at any point by executing the RESET TRACE  statement (section).  \n4. See the COB_SET_TRACE  environment variable for another way t o control tracing.  \nSee Also\u2026  \nThe RESET TRACE  Statement  6.4.34  \nCompiler Switches Reference  8.1.2  \n Execution -time Environment Variables  8.2.4  \n \n  \nREADYTRACE", "start_char_idx": 220, "end_char_idx": 862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d28b9f83-fed4-452b-a4e9-9b3b9bc49260": {"__data__": {"id_": "d28b9f83-fed4-452b-a4e9-9b3b9bc49260", "embedding": null, "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bb7590-fab3-4376-b200-02003ed783d2", "node_type": "4", "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "158de2dd567b3be5a40506d7dede7bff8bf96a049845f966a358c1c3198128cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a5ebac0-cd5f-4ba4-9919-111350cf44ab", "node_type": "1", "metadata": {}, "hash": "ddec7fda0fa91b76e39423e63fa200f1ffaf48ec79377f89c9632a8ebbf66b1d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-94 6.2.33.  RELEASE  \nFigure 6-85 - RELEASE Syntax  \n The RELEASE  statement adds a new record to a sort work \nfile. \n1. The RELEASE  statement is valid only within the INPUT PROCEDURE  of a SORT  statement.   \n2. ", "start_char_idx": 0, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a5ebac0-cd5f-4ba4-9919-111350cf44ab": {"__data__": {"id_": "5a5ebac0-cd5f-4ba4-9919-111350cf44ab", "embedding": null, "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19bb7590-fab3-4376-b200-02003ed783d2", "node_type": "4", "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "158de2dd567b3be5a40506d7dede7bff8bf96a049845f966a358c1c3198128cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d28b9f83-fed4-452b-a4e9-9b3b9bc49260", "node_type": "1", "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "328d35b62c3319fdb85745ec00e9b6b9fd444084bd17a58657c6d406536d41bd", "class_name": "RelatedNodeInfo"}}, "text": "Record -name -1 must be a record defined to a sort description ( SD) entry . \nSee Also\u2026  \nDescribing the Structure of a File (FD/SD)  5.1 \n The SORT  Statement (File Sort)  6.4.40.1  \n \n  \nRELEASE record -name -1[FROM ]literal -1\nidentifier -1", "start_char_idx": 293, "end_char_idx": 536, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44970a6d-c014-45a0-a38b-ed2c3956ba9c": {"__data__": {"id_": "44970a6d-c014-45a0-a38b-ed2c3956ba9c", "embedding": null, "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5fe4a4df-617b-4aee-935f-2ec7df1a9c9d", "node_type": "4", "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cf8fc9e5d12a1ff8b78c56935d420d44590ffe0a364866e59b8d43c277934cb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d438897b-a24f-438c-b051-154ed47a40b2", "node_type": "1", "metadata": {}, "hash": "d53cb59dd145e4d478dba11f77e2c540829b2f8076c51228a19f93ad0cc9964b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-95 6.2.34.  RESET  TRACE  \nFigure 6-86 - RESET  TRACE Syntax  \n The RESET TRACE  verb turns procedure or procedure+statement tracing off.  \n1. ", "start_char_idx": 0, "end_char_idx": 222, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d438897b-a24f-438c-b051-154ed47a40b2": {"__data__": {"id_": "d438897b-a24f-438c-b051-154ed47a40b2", "embedding": null, "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5fe4a4df-617b-4aee-935f-2ec7df1a9c9d", "node_type": "4", "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cf8fc9e5d12a1ff8b78c56935d420d44590ffe0a364866e59b8d43c277934cb7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44970a6d-c014-45a0-a38b-ed2c3956ba9c", "node_type": "1", "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "12d3f88da95bda46cfeff680bc17ffa62577dbbe1f1ca8a0dc86a1f32012b3fd", "class_name": "RelatedNodeInfo"}}, "text": "This statement will cause procedure or procedure+statement tracing to be turned off.  \n2. By default, procedure and procedure+statement tracing is OFF as programs begin execution.  Use the READY TRACE  \nstatement (section to turn tracing on.  \n3. In order for this statement to be functional, tracing code must have been generated into the compiled prog ram \nusing either the \u201c -ftrace \u201d (procedures only) or \u201c -ftraceall \u201d (procedures + statements) compiler options.  \n4. See the  COB_SET_TRACE  environment variab le for another way to control tracing.  \nSee Also\u2026  \nThe READY TRACE  Statement  6.2.32  \nCompiler Switches Reference  8.1.2  \n Execution -time Environment Variables  8.2.4  \n \n  \nRESETTRACE", "start_char_idx": 222, "end_char_idx": 928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19b82460-1126-4d0c-9f4a-f085456e155a": {"__data__": {"id_": "19b82460-1126-4d0c-9f4a-f085456e155a", "embedding": null, "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dfba1766-96ef-4ccd-981d-10cbff8bae2e", "node_type": "4", "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfacd8dceca4925ad3f793809cac24261c6d1b55c04ace1544fa6388494b7535", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e11a4600-e37d-4e38-a5f0-d77a3f13836a", "node_type": "1", "metadata": {}, "hash": "e81ea101eafa665677f6ad9684592c6da5f4bc7c3e212259d898dcbd077c26c8", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-96 6.2.35.  RETURN  \nFigure 6-87 - RETURN Syntax  \n The RETURN  statement reads a record from a sort - or merge work \nfile. \n1. The RETURN  statement is valid only within the OUTPUT PROCEDURE  of a SORT  or MERGE  statement.  \n2. ", "start_char_idx": 0, "end_char_idx": 309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e11a4600-e37d-4e38-a5f0-d77a3f13836a": {"__data__": {"id_": "e11a4600-e37d-4e38-a5f0-d77a3f13836a", "embedding": null, "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dfba1766-96ef-4ccd-981d-10cbff8bae2e", "node_type": "4", "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfacd8dceca4925ad3f793809cac24261c6d1b55c04ace1544fa6388494b7535", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19b82460-1126-4d0c-9f4a-f085456e155a", "node_type": "1", "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c7e492c5b8dd16de1c10656662cce66804cc50c971138ef199daa95d3fff4d71", "class_name": "RelatedNodeInfo"}}, "text": "Sort-file-name -1 must be a sort - or merge work file  defined with a sort description ( SD) entry . \n3. A successful RETURN  will retrieve the next available  record from sort-file-name -1.  The newly -retrieved record data \nwill be saved into the 01 -level record structure(s) that immediately follow the file\u2019s SD.  If the optional INTO  clause \nis present, a copy of the just -retrieved record will be automatically MOVEd to identifier -1. \n4. The optional at-end-clause  may be used to detect situations where all sorted records have been  RETURN ed (known \nas an end -of-file condition).  Without using one of these clauses, a program would need to test the returned FILE \nSTATUS value after each RETURN . \nSee Also\u2026  \nDescribing the Structure of a File (FD/SD)  5.1 \nHandling End -of-File Conditions ( AT END ) 6.1.12.1  \nThe MERGE  Statement  6.4.25  \n The MOVE  Statement  6.2.26  \nThe SORT  Statement (File Sort)  6.4.40.1  \n \n  \nRETURN sort-file-name -1RECORD\n[ INTO identifier -1]\n[ at-end-clause]\n[ END-RETURN]", "start_char_idx": 309, "end_char_idx": 1332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23e5cc32-1c49-424b-822c-0bd0858c6ae9": {"__data__": {"id_": "23e5cc32-1c49-424b-822c-0bd0858c6ae9", "embedding": null, "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "530921fd-05ca-4e41-a39f-b424c2532001", "node_type": "4", "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ce52aecd1586216664e3b22ba12b013895a1beb5a5cb0968baaa62ecb409ea05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd6f1aa8-e47e-4cf0-858d-60fdbbc684c7", "node_type": "1", "metadata": {}, "hash": "eb6b149fb3c0a4772a3e734727a26450e0f4900103565ef7806b7355e5bd7a25", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-97 6.2.36.  REWRITE  \nFigure 6-88 - REWRITE Syntax  \n The REWRITE  statement replaces a logical record on a disk file.  \n1. Record -name -1 must be defined as an 01 -level record subordinate to the File Description of a file that is currently \nOPEN  for I-O.  \n2. The optional FROM  clause will cause literal -1 or identifier -1 to be implicitly MOVE d into record -name -1 prior to \nwriting record -name -1 to the file.  \n3. The REWRITE  statement may not be used with ORGANIZATION IS LINE SEQUENTIAL  files.  \n4. If the optional LOCK  clause is omoitted, the effect will be as is WITH NO LOCK  was coded \u2013 that is, the rewritten \nrecord will not be locked against access by other programs.  \n5. Rewriting a record does not cause the record contents of the file to be physically updated until the next block of the \nfile is read, a COMMIT  or UNLOCK  statement  is issued or that file is CLOSE d. \n6. If the file  has ORGANIZATION RECORD BINARY SEQUENTIAL : \na. The record to be rewritten will be the one retrieved by the most -recently executed READ  of the fil e. \nb. If the FD of the file contains the RECORD CONTAINS  / RECORD IS VARYING  clause and it allows record size to \nvary, the size of record -name -1 cannot be altered . \n7. If the file has ORGANIZATION RELATIVE  or ORGANIZATION INDEXED : \na. If the file has ACCESS MODE SEQUENTIAL , the record to be rewritten will be the one retrieved by the most -\nrecently executed READ   of the file.   If the file has ACCESS MODE RANDOM  or ACCESS MODE DYNAMIC , no \nREAD  is required before a record may be rewritten  \u2013 the RELATIVE KEY  / RECORD KEY  definition for the file will \nspec ify the record to be updated.  \nb. The size of record -name -1 may be updated.  \n", "start_char_idx": 0, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd6f1aa8-e47e-4cf0-858d-60fdbbc684c7": {"__data__": {"id_": "cd6f1aa8-e47e-4cf0-858d-60fdbbc684c7", "embedding": null, "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "530921fd-05ca-4e41-a39f-b424c2532001", "node_type": "4", "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ce52aecd1586216664e3b22ba12b013895a1beb5a5cb0968baaa62ecb409ea05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23e5cc32-1c49-424b-822c-0bd0858c6ae9", "node_type": "1", "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1bca3c307413d6c10e1b53f8acdc56de3cb4057bc009079565f5add0657413b4", "class_name": "RelatedNodeInfo"}}, "text": "8. The optional invalid -key-clause  allows the program to detect and recover from attempts to rewrite non -existent \nrecords.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nDescribing the Structure of a File (FD/SD)  5.1 \nRecord Locking  6.1.9.2  \nHandling Invalid Keys ( INVALID KEY ) 6.1.12.3  \nThe CLOSE  Statement  6.4.7  \n The COMMIT  Statement  6.4.8  \nThe MOVE  Statement  6.2.26  \nThe OPEN  Statement  6.4.29  \nThe READ Statement  6.4.31  \nThe UNLOCK  Statement  6.4.48  \n \n  \nREWRITE record -name -1\n[FROM ]\nWITH LOCK\nWITH NOLOCK\n[ invalid -key-clause]\n[ END-REWRITE ]literal -1\nidentifier -1", "start_char_idx": 1802, "end_char_idx": 2397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f164af51-35b5-4222-b859-4cc084679c45": {"__data__": {"id_": "f164af51-35b5-4222-b859-4cc084679c45", "embedding": null, "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17c22fa1-6046-43cb-a9fb-f7372f10bdc6", "node_type": "4", "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f510c74393c26ab55d912dd669e0b9f9317ad5bee6d5e7472733d93a231bcd80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19bbd5ce-e8ca-4f40-b136-4c380a70a474", "node_type": "1", "metadata": {}, "hash": "2977c2e5fa3e3e36078606c2a845e533c241bcaf30593424af65affaffb790bb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-98 6.2.37.  ROLLBACK  \nFigure 6-89 - ROLLBACK Syntax  \n The ROLLBACK  verb reverts changes made to all files since the start of the program \nor since the last COMMIT . \n1. GNU COBOL  does not (currently, at least) support file rollback.  The GNU COBOL  ROLLBACK  statement will have the \nsame effect as the COMMIT  verb.  \n", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19bbd5ce-e8ca-4f40-b136-4c380a70a474": {"__data__": {"id_": "19bbd5ce-e8ca-4f40-b136-4c380a70a474", "embedding": null, "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17c22fa1-6046-43cb-a9fb-f7372f10bdc6", "node_type": "4", "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f510c74393c26ab55d912dd669e0b9f9317ad5bee6d5e7472733d93a231bcd80", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f164af51-35b5-4222-b859-4cc084679c45", "node_type": "1", "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88d5c365801fa17dd7fa8927a1dc527c83ae145bc183a214c0cca11bbb4a039d", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nThe COMMIT  Statement  6.4.8  \n  \n  \nROLLBACK", "start_char_idx": 402, "end_char_idx": 459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1dd40be-de17-49aa-9b68-fcfec71b4bd9": {"__data__": {"id_": "e1dd40be-de17-49aa-9b68-fcfec71b4bd9", "embedding": null, "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c11ffeb-ca4b-4198-808e-df8a552c4395", "node_type": "4", "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d3db699d213ad41ffc96cf51ff395c223d9eb4531d217274ee2c19382a687d81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dde3b63d-8515-4ceb-ae16-2b455afe93d9", "node_type": "1", "metadata": {}, "hash": "e6d1f95de1921ee35fb931ebe3d1698e8663cec24df2ca3eaaddcf3952392a36", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-99 6.2.38.  SEARCH  \n6.2.38.1.  SEARCH Format 1 \u2013 Sequential Search  \nFigure 6-90 - Sequential SEARCH Syntax  \n The SEARCH  statement is used to \nsequentially search a table, stopping \neither once a specific value is located \nwithin the table or when the table has \nbeen completely searched.  \n \n1. ", "start_char_idx": 0, "end_char_idx": 378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dde3b63d-8515-4ceb-ae16-2b455afe93d9": {"__data__": {"id_": "dde3b63d-8515-4ceb-ae16-2b455afe93d9", "embedding": null, "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c11ffeb-ca4b-4198-808e-df8a552c4395", "node_type": "4", "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d3db699d213ad41ffc96cf51ff395c223d9eb4531d217274ee2c19382a687d81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1dd40be-de17-49aa-9b68-fcfec71b4bd9", "node_type": "1", "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07a4382322d0cb98711c0dbc69b7393c4d37268712ff317f308ee322dd22bd06", "class_name": "RelatedNodeInfo"}}, "text": "The index -name -1 identifier  specified on the VARYING  clause must be USAGE INDEX . \n2. If no VARYING  clause is specified, then the table being searched must have been created with an INDEXED BY  \nclause.  \n3. At the time the SEARCH  statement is executed, the current value of index -name -1 (or the table\u2019s defined INDEXED \nBY index  if no VARYING  clause is specified ) will define the starting position in the table where the searching process \nwill begin.  Typically, one initializes that index to a value of 1 before starting the SEARCH , as follows:  \nSET index -name -1 TO 1 \n4. During the searching process, the conditional -expression -1 will be evaluated and \u2013 if TRUE \u2013 will cause imperative -\nstatement -2 to be executed, after which control will fall into the next statement after the SEARCH .   \n5. If multiple WHEN  clauses exist, each conditional -expression -n will be evaluated in -turn and the first one that \nevaluates to TRUE will cause the corresponding imperative -statement -n to be executed, after which control will fall \ninto the next statement after the SEARCH .  \n6. If no conditional -expression -n evaluates to TRUE , the value of index -name -1 will be incremented to p[oint to the \nnext entry in the table .  If the value of index -name -1 is still within the OCCURS  scope of table -name -1, the WHEN  \nclause(s) will again be re -evaluated .  This process will continue until a WHEN  clause conditional -expression -n \nevaluates to TRUE or until the value of index -name -1 is no longer within the OCCURS  scope of table -name -1. \n7. If no conditional -expression -n ever evaluates to TRUE  and the value of index -name -1 is no longer within the \nOCCURS  scope of table -nam e, the imperative -statement -1 which is part of the AT END  clause will be executed .  \nAfter this, control will fall into the next statement following the SEARCH .  If there is no AT END  clause, con trol \nsimply falls into the next statement following the SEARCH . \nSee Also\u2026  \nDefining Tables ( OCCURS ) 0 \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The SET index  Statement  6.2.39.4  \n \n  \nSEARCH table -name -1\n[ VARYING index-name-1]\n[ AT END imperative -statement -1]\n{ WHEN conditional -expression -1imperative -statement -2 } \u2026\n[ END-SEARCH]", "start_char_idx": 378, "end_char_idx": 2648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "171e36f0-ffcb-4166-be99-d765ef071fcb": {"__data__": {"id_": "171e36f0-ffcb-4166-be99-d765ef071fcb", "embedding": null, "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191", "node_type": "4", "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "948dec8181205b7559b03689d346a476d1dbc81578199a352e367f49c3daee76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64b10c67-f37d-43b6-bead-ed79d8ad7f04", "node_type": "1", "metadata": {}, "hash": "5f6ad367210ee9cfe04e1544d9c486f183db784834ba1c89938182169e6c2fa4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-100 6.2.38.2.  SEARCH Format 2 \u2013 Binary, or Half -interval Search  (SEARCH ALL)  \nFigure 6-91 - Binary SEARCH (ALL) Syntax  \n This format of the SEARCH  statement \nperforms a binary, or half -interval, search \nagainst a sorted table.  \n1. ", "start_char_idx": 0, "end_char_idx": 318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64b10c67-f37d-43b6-bead-ed79d8ad7f04": {"__data__": {"id_": "64b10c67-f37d-43b6-bead-ed79d8ad7f04", "embedding": null, "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191", "node_type": "4", "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "948dec8181205b7559b03689d346a476d1dbc81578199a352e367f49c3daee76", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "171e36f0-ffcb-4166-be99-d765ef071fcb", "node_type": "1", "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ddd2550b3b89608503886019f3a4d88ea6aef1e629ca3799672a997523cf5788", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbd67790-22ab-40b4-bdef-0fee95edf233", "node_type": "1", "metadata": {}, "hash": "258e367a42c2935503a35c3f5050815bc403d22e214a0d8704e9356ceb4f2dfb", "class_name": "RelatedNodeInfo"}}, "text": "The definition of table -name -1 must include the OCCURS , ASCENDING  (and/ or DESCENDING ) KEY and INDEXED BY  \nclauses . \n2. In order for a table to be searchable via the SEARCH ALL  statement, each of the following must be true:  \na. The table meets the requirements of rule # 1 above . \nb. Just because the table has one or more KEY clause s doesn\u2019t mean the data is actually in that sequence in the \ntable \u2013 the actual sequence of the data must  agree with the KEY clause (s)!33 \nc. No tw o records in the table may have the same KEY field values.   If the table has multiple KEY definitions, then \nno two records in the table may have the same combination of KEY field values.  \nIf rule \u201ca\u201d is violated, the compiler will reject the SEARCH ALL .  If rules \u201cb\u201d and/or \u201cc\u201d are violated, there will be no \nmessage issued by the compiler, but the run-time results of a SEARCH ALL  against the table will probably be \nincorrect.  \n3. The conditional -expression -1 should involve the KEY fields, using the table\u2019s INDEXED BY  index name as a subscript.  \n4. The WHEN  clause is mandatory , unlike format 1 of the SEARCH statement.   \n5. There can only be one WHEN  clause specified . \n6. The function of the WHEN  is to compare the key field(s) of the table, as indexed by the table\u2019s  INDEXED  BY index \ndata item , against whatever  literal and/or identifier values  you are searching for in order to locate the desired entry \nin the table .  The table\u2019s index will be automatically varied by the SEARCH ALL  statement in a manner designed to \nrequi re the minimum number of tests.  \n", "start_char_idx": 318, "end_char_idx": 1905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbd67790-22ab-40b4-bdef-0fee95edf233": {"__data__": {"id_": "dbd67790-22ab-40b4-bdef-0fee95edf233", "embedding": null, "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191", "node_type": "4", "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "948dec8181205b7559b03689d346a476d1dbc81578199a352e367f49c3daee76", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64b10c67-f37d-43b6-bead-ed79d8ad7f04", "node_type": "1", "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1a1d45cdd6bbae29f091ad4bcbfc588abcdfa2167f46482fa1c52c597b58d67c", "class_name": "RelatedNodeInfo"}}, "text": "7. The internal processing of the SEARCH ALL  statement begins by setting internal \u201cfirst\u201d and \u201clast\u201d pointers to the 1st \nand last entry locations of the table.  Processing then proceeds as follows34: \na. The entry half -way between \u201cfirst\u201d and \u201clast\u201d is identified.  We\u2019ll call this the \u201ccurrent\u201d entry, and will set i ts \ntable entry location into index -name -1. \nb. The WHEN  is evaluated.  This comparison of the key (s) against the target literal/identifier values will have one \nof three possi ble outcomes:  \ni. If the key(s) and value(s) match , imperative -statement -2 is executed, after which control falls thru into the \nnext statement following the SEARCH ALL . \nii. If the key(s) are LESS THAN  the value(s), then the table entry being searched for can only occur in the \n\u201ccurrent\u201d to \u201clast\u201d range of the table, so a new \u201cfirst\u201d pointer value is set (it will be set to the \u201ccurrent\u201d \npointer).  \niii. If the key(s) are GREATER THAN  the value(s), then the table entry being searched for can only occur in the \n\u201cfirst\u201d to \u201c current \u201d range of the table, so a new \u201c last\u201d pointer value is set (it will be set to the \u201ccurrent\u201d \npointer).  \n                                                                 \n33 Of course, if the data sequence doesn\u2019t agree with the KEY clause, you can easily make it that way using a table SORT  \n34 This is a simplified view of the algorithm intended purely as a pedagogical tool \u2013 an actual implementation of it requires a few \nadditional picky little details to make it work (such as what to do when rule \u201ca\u201d identifies a \u201ccurrent\u201d entry of 12.5!)  \nSEARCHALL table -name -1\n[ AT END imperative -statement -1]\nWHEN conditional -expression -1imperative -statement -2\n[ END-SEARCH]", "start_char_idx": 1905, "end_char_idx": 3632, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c0bdf44-70c2-426e-9ea0-c830693784ae": {"__data__": {"id_": "2c0bdf44-70c2-426e-9ea0-c830693784ae", "embedding": null, "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59fd8556-7588-455b-801f-90f1aa5ea54e", "node_type": "4", "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6708737afacb2acd354c38fb7aeee48f69b574b1b92a9e394d82ba70375da439", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28471846-62eb-45fb-8ea3-47ed68dc8552", "node_type": "1", "metadata": {}, "hash": "b2649b4d1d5df3767d796e199894bdf69534cdd521ba837b1a31c3580781e166", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-101 c. If the new \u201cfirst\u201d and \u201clast\u201d pointers are different than the old \u201cfirst\u201d and \u201clast\u201d pointers, there\u2019s more left to \nbe searched, so return to step \u201ca\u201d and continue.  \nd. If the new \u201cfirst\u201d and \u201clast\u201d pointers are the same as the old \u201cfirst\u201d and \u201clast\u201d pointers, the table has been \nexhausted and the entry being searched for cannot be found; imperative -statement -1 is executed, after which \ncontrol falls thru into the next statement following the SEARCH ALL .  If there is no AT END  clause coded, \ncontrol simply falls into the next statement following the SEARCH ALL . \nThe net effect of the above algorithm is that only a fraction of the number of elements in the tab le need ever be \ntested in order to decide whether or not a particular entry exists.  This is because the SEARCH ALL  discards half the \nremaining entries in the table each time it checks an entry.   \nComputer scientists will compare these two search technique s as follows:  \n A sequential search (format 1) will need an average  of n/2 tests and a worst case of n tests in order to find an \nentry and n tests to identify that an entry doesn\u2019t exist ( n = the number of entries in the table).  \n A binary search (format 2) wi ll need worst case of log 2n tests in order to find an entry and log 2n tests to identify \nthat an entry doesn\u2019t exist ( n = the number of entries in the table).  \nHere\u2019s a more practical view of the difference.  Let\u2019s say that a table has 1,000 entries in it.  With a sequential \n(format 1) search, on average, you\u2019ll have to check 500 of them to find an entry and you\u2019ll have to look at all 1,000 \nof them to find that an entry doesn\u2019t exist.  With a binary search, express the number of entries as a binary number \n(1,000 10 = 1111101000 2) and count the number of digits in the result (10) -THAT is the worst -case  number of tests \nrequired to find an entry or to identify that it doesn\u2019t exist.  That\u2019s quite an improvement ! \n", "start_char_idx": 0, "end_char_idx": 2021, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28471846-62eb-45fb-8ea3-47ed68dc8552": {"__data__": {"id_": "28471846-62eb-45fb-8ea3-47ed68dc8552", "embedding": null, "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59fd8556-7588-455b-801f-90f1aa5ea54e", "node_type": "4", "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6708737afacb2acd354c38fb7aeee48f69b574b1b92a9e394d82ba70375da439", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c0bdf44-70c2-426e-9ea0-c830693784ae", "node_type": "1", "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "02c5e649f001c33b426881a8c0454ab8cbf3841175b461a6a6dcf6057615b4da", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nDefining Tables ( OCCURS ) 0 \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The SORT  Statement (Table Sort)  6.4.40.2  \n \n  ", "start_char_idx": 2021, "end_char_idx": 2157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2147871d-2550-426a-807f-e01780a7d4a8": {"__data__": {"id_": "2147871d-2550-426a-807f-e01780a7d4a8", "embedding": null, "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6845cba9-b5d5-4c9a-a999-0d54d4c6d6ac", "node_type": "4", "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cffe2b21c511cd15f96affe3d7be5b8815e9331b28bc8f07da96851058b5896b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54c9e226-e659-4416-82aa-6dcbace6013b", "node_type": "1", "metadata": {}, "hash": "3220a7f8a53154a265901170edf2eb316862f8110da8ddc51917effbe10ce1d0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-102 6.2.39.  SET  \n6.2.39.1.  SET Format 1 \u2013 SET ENVIRONMENT  \nFigure 6-92 - SET ENVIRONMENT Syntax  \n A SET ENVIRONMENT  statement provides a straight -\nforward means of setting environment values from \nwithin a program.  \n1. Environment variables created or changed from within GNU COBOL  programs will be available to any sub -shell \nprocesses spawned by that program (i.e. CALL \u201cSYSTEM\u201d ) but will not be known to the shell or console window that \nstarted the GNU COBOL  program.  \n2. This is a much simpler and more readable means of setting environment variables than by using the DISPLAY  \nstatement.  For example, these two code sequences produce identical results:  \nDISPLAY  \n    \u201cVARNAME\u201d UPON ENVIRONMENT -NAME \nEND-DISPLAY \nDISPLAY  \n    \u201cVALUE\u201d UPON ENVIRONMENT -VALUE \nEND-DISPLAY  SET ENVIRONMENT \u201cVARNAME\u201d TO \u201cVALUE\u201d  \nSee Also\u2026  \nThe DISPLAY Statement (Environment)  6.2.12.3  \n  \n6.2.39.2.  SET Format 2 \u2013 SET Program -Pointer  \nFigure 6-93 - SET Program Pointer Syntax  \n This form of SET allows you to retrieve the address of a \nPROCEDURE DIVISION  code module \u2013 specifically a \ndeclared entry -point into the PROCEDURE DIVISION . \n1. If you have used other versions of COBOL before (partic ularly mainframe implementations), you\u2019ve possibly seen \nsubroutine CALL s made passing a PROCEDURE DIVISION  paragraph or SECTION  name as an argument \u2013 that is not \npossible in GNU COBOL ; instead, you need to know how to use this form of the SET statement.  \n2. ", "start_char_idx": 0, "end_char_idx": 1556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54c9e226-e659-4416-82aa-6dcbace6013b": {"__data__": {"id_": "54c9e226-e659-4416-82aa-6dcbace6013b", "embedding": null, "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6845cba9-b5d5-4c9a-a999-0d54d4c6d6ac", "node_type": "4", "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cffe2b21c511cd15f96affe3d7be5b8815e9331b28bc8f07da96851058b5896b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2147871d-2550-426a-807f-e01780a7d4a8", "node_type": "1", "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3722af8a9a4bd61f483ee137e73af08d646ac950b17ef9c4c2e28c8855fd0c9", "class_name": "RelatedNodeInfo"}}, "text": "The USAGE  of program -pointer -1 must be PROGRAM -POINTER . \n3. The literal -1 or identifier -1 value specified must name a primary entry -point name ( PROGRAM -ID of a subroutine or \nFUNCTION -ID of a user -defined function) or an alternate e ntry-point defined via an ENTRY  statement  within a \nsubprogram . \n4. Once the address of a PROCEDURE DIVISION  code area has been acquired in this way, the address could be passed \nto a subroutine (usually written in C) for whatever use it needs it f or.  For examples of PROGRAM -POINTERS  at work, \nsee the discussions of the CBL_ERROR_PROC  and CBL_EXIT_PROC  built -in subroutines.  \nSee Also\u2026  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nThe ENTRY  Statement  6.2.14  \n The CBL_ERROR_PROC  Subroutine  8.3.1.24  \nThe CBL_EXIT_PROC  Subroutine  8.3.1.25  \n \n6.2.39.3.  SET Format 3 \u2013 SET ADDRESS  \nSETENVIRONMENT TOliteral -1\nidentifier -1literal -2\nidentifier -2\nSET program -pointer -1TOENTRYliteral -1\nidentifier -1", "start_char_idx": 1556, "end_char_idx": 2526, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23be1abc-0d6a-4513-9162-d71d7ad070ee": {"__data__": {"id_": "23be1abc-0d6a-4513-9162-d71d7ad070ee", "embedding": null, "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f835bcf-fe07-4b4b-9519-b487a4e317cf", "node_type": "4", "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cef0a611e5fe4120534d859960b5147f6cb484f262ef98c95a17f1db4ed7d83d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8052bd9-03f2-4b50-bff7-fe2b62a97cb9", "node_type": "1", "metadata": {}, "hash": "bb4bc94c65d0abb4bafc46dfd65fc1901b28beca6b0b8d2321f0110741e45a0c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-103 Figure 6-94 - SET ADDRESS Syntax  \n This form of the SET statement can be used to work with \nthe addresses of data items rather than their contents.  \n1. When the ADDRESS OF  clause is used before  the TO you will be using the SET to alter the address of a LINKAGE \nSECTION  or BASED  data item .  Without that clause you will be assigning an address to one or more USAGE POIN TER \ndata items.  \n2. When the ADDRESS OF  clause is used after  the TO, SET will be identifying the address of identifier -2 as the address \nto be assi gned to identifier -1 or stored in pointer -name -1.  If the \u201cADDRESS OF \u201d clause is absent after the TO, the \ncontents of pointer -name -2 will serve as the address to be assigned.  \nSee Also\u2026  \nThe DATA DIVISION  5 \nDynamically Allocated Items ( BASED ) 5.2.1.2  \n Storage Format of Data ( USAGE ) 5.2.1.11  \n \n6.2.39.4.  SET Format 4 \u2013 SET I ndex  \nFigure 6-95 - SET Index Syntax  \n This SET statement assigns a value to a USAGE INDEX  data item.  \n \n1. The USAGE  of index -name -1 should be INDEX , or index -name -1 must be identified in a table INDEXED BY  clause.  \nSee Also\u2026  \nDefining Tables ( OCCURS ) 0 \n Storage Format of Data ( USAGE ) 5.2.1.11  \n \n6.2.39.5.  SET Format 5 \u2013 SET UP/DOWN  \nFigure 6-96 - SET UP/DOWN Syntax  \n This format of SET is used to increment or decrement the \nvalue of an index or pointer by a specified amount.  \n \n1. ", "start_char_idx": 0, "end_char_idx": 1469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8052bd9-03f2-4b50-bff7-fe2b62a97cb9": {"__data__": {"id_": "a8052bd9-03f2-4b50-bff7-fe2b62a97cb9", "embedding": null, "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f835bcf-fe07-4b4b-9519-b487a4e317cf", "node_type": "4", "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cef0a611e5fe4120534d859960b5147f6cb484f262ef98c95a17f1db4ed7d83d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23be1abc-0d6a-4513-9162-d71d7ad070ee", "node_type": "1", "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1da30200d6d11ffc3c3cc7b6cbf840a36f05b17c20506d632dfc6b8112005cb", "class_name": "RelatedNodeInfo"}}, "text": "The USAGE  of identifier -1 must be INDEX , POINTER  or PROGRAM -POINTER . \n2. The typical  usage when identifier -1 is a USAGE INDEX  data item is to increment it\u2019s value UP or DOWN  by 1, since \nan INDEX  is usually  being used to sequentially walk through the elements of a table.  \nSee Also\u2026  \nDefining Tables ( OCCURS ) 0 \n Storage Format of Data ( USAGE ) 5.2.1.11  \n \n \nSET[ ADDRESS OF]                \u2026\nTO[ ADDRESS OF]pointer -name -1\nidentifier -1\npointer -name -2\nidentifier -2\nSET index -name -1TOliteral -1\nidentifier -1\nSET identifier -1\nBY[ LENGTHOF]UP\nDOWN\nliteral -1\nidentifier -2", "start_char_idx": 1469, "end_char_idx": 2065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d6525f0-f8ad-47c6-979d-50ca0cb4a470": {"__data__": {"id_": "9d6525f0-f8ad-47c6-979d-50ca0cb4a470", "embedding": null, "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b78649b4-7496-4360-8675-5946975a5619", "node_type": "4", "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14ad231b5733db72957342aa8b8b8af15514a16318682b1c2eaebbacd0db8c91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "046d7b87-368e-4800-a0ed-f650cb87400d", "node_type": "1", "metadata": {}, "hash": "dc081961639dbc15609f47ddf74f6d0b8dab6b144c06881229fde40569791db0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-104 6.2.39.6.  SET Format 6 \u2013 SET Condition Name  \nFigure 6-97 - SET Condition Name Syntax  \n This format provides one method of specifying the TRUE / \nFALSE value of a level -88 condition name.  \n \n1. ", "start_char_idx": 0, "end_char_idx": 281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "046d7b87-368e-4800-a0ed-f650cb87400d": {"__data__": {"id_": "046d7b87-368e-4800-a0ed-f650cb87400d", "embedding": null, "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b78649b4-7496-4360-8675-5946975a5619", "node_type": "4", "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14ad231b5733db72957342aa8b8b8af15514a16318682b1c2eaebbacd0db8c91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d6525f0-f8ad-47c6-979d-50ca0cb4a470", "node_type": "1", "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b6763e73a2b6cd2178b9ae0eeb0fc5afc40134cc841cd8d0940729eb818bb0ec", "class_name": "RelatedNodeInfo"}}, "text": "By setting the specified condition name(s) to a TRUE  or FALSE  value, you will actually be assigning a value to the \nparent data item(s) to which the condition name data item(s) is subordinate to.  \n2. When specifying TRUE , the value assigned to each parent data item will be the first VALUE  specified on the \ncondition name\u2019s definition.  \n3. When specifying FALSE  on the SET, the value assigned  to each parent data item will be the value specified for the \nFALSE  clause of the condition name\u2019s definition; if any condition -name -1 occurrence lacks a FALSE  clause, the SET \nstatement will be rejected by the compiler.  \nSee Also\u2026  \nDefining Level -88 Conditio n Names  5.2.7  \n  \n6.2.39.7.  SET Format 7 \u2013 SET Switch  \nFigure 6-98 - SET Switch Syntax  \n Use this SET statement type to turn a switch ON or OFF. \n \n1. Switches are defined using the SPECIAL -NAMES  paragraph.  \n2. Switches may be tested via the IF statement and a switch -status  condition . \nSee Also\u2026  \nThe SPECIAL -NAMES  Paragraph  4.1.4  \nSwitch -Status Conditions  6.1.4.2.4  \n The IF Statement  6.2.21  \n \n6.2.39.8.  SET Format 8 \u2013 SET ATTRIBUTE  \nFigure 6-99 - SET ATTRIBUTE Syntax   \n The SET ATTRIBUTE  statement may be used to \nmodify one or more attributes of a SCREEN \nSECTION  data item at run -time.  \n1. When making an attribute change to identifier -1, the change will not become visible on the screen until the SCREEN \nSECTION  data item c ontaining identifier -1 is next ACCEPT ed (if identifier -1 is an input field) or is next DISPLAY ed (if \nidentifier -1 is not an input field).  \nSee Also\u2026  \nDefining Screens  5.2.2  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \n The DISPLAY Statement (Screen Data)  6.4.12.4  \n \nSET{ condition -name -1} \u2026 TOTRUE\nFALSE\nSET{ mnemonic -name -1} \u2026 TOON\nOFF\nBELL\nBLINK\nHIGHLIGHT\nLEFTLINE\nLOWLIGHT\nOVERLINE\nREVERSE-VIDEO\nUNDERLINESET identifier -1ATTRIBUTEON\nOFF", "start_char_idx": 281, "end_char_idx": 2172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b43805c2-dcd8-46c2-8db7-612b1edbbc45": {"__data__": {"id_": "b43805c2-dcd8-46c2-8db7-612b1edbbc45", "embedding": null, "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bd3882a-1032-4173-94e0-156d59c0200e", "node_type": "4", "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f06fcbc42717e2babb23ac8444738c9e629927f61d315ac215d50f320482d43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b", "node_type": "1", "metadata": {}, "hash": "856908416462f0a69488802ee3e7a73489f33a6ccbf91c8b0a4f0466c56a7721", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-105 6.2.40.  SORT  \n6.2.40.1.  SORT Format 1 \u2013 File -based Sort  \nFigure 6-100 - File-Based SORT Syntax  \n This format \nof the SORT  \nstatement \nis designed \nto sort large \nvolumes of \ndata \naccording \nto one or \nmore key \nfields.  \n1. The sort-file-1 named on the SORT  statement must be defined using a sort description ( SD) in the FILE SECTION  of \nthe DATA DIVISIO N.  This file is referred to as the \u201csort work file\u201d.  \n2. If specified, file-name -1 and file-name -2 must reference ORGANIZATION LINE SEQUENTIAL  or ORGANIZATION \nRECORD BINARY SEQUENTIAL  files.  These files must be defined using a file description ( FD) in the FILE SECTION  of \nthe DATA DIVISION .  The same file (s) may  be used for file-name -1 and file-name -2. \n", "start_char_idx": 0, "end_char_idx": 820, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b": {"__data__": {"id_": "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b", "embedding": null, "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bd3882a-1032-4173-94e0-156d59c0200e", "node_type": "4", "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f06fcbc42717e2babb23ac8444738c9e629927f61d315ac215d50f320482d43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b43805c2-dcd8-46c2-8db7-612b1edbbc45", "node_type": "1", "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "819750555225484927c4308d298dd3aca9ebbecda8ebda618bad8ccc02c3711e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "308179ed-013f-4c0b-a23d-16e4958879cb", "node_type": "1", "metadata": {}, "hash": "4a42e5537197c642110bc54ed73dd2514b61ed39179e6167de3964dd50325dd7", "class_name": "RelatedNodeInfo"}}, "text": "3. The identifier -1 \u2026 field(s) must be defined as field(s) within a record of sort-file. \n4. The WITH DUPLICATES IN ORDER  clause is supported for compatibility purposes with other versions of COBOL, but \nis non -functional in GNU COBOL  \nWhile any COBOL implementation\u2019s SORT  or MERGE  facilities guarantee tha t records with duplicate key values will \nbe in proper sequence with regard to other records with different  key values, they generally make no promises as \nto the resulting relative sequence of records having duplicate key values with one another.  \nSome COBOL  implementations provide this optional clause to force their SORT  and MERGE  facilities to retain \nduplicate key -value records in their original input sequence, relative to one another.  \nGNU COBOL  always behaves as if the WITH DUPLICATES IN ORDER  clause is sp ecified, even if it isn\u2019t.  \n5. ", "start_char_idx": 820, "end_char_idx": 1693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "308179ed-013f-4c0b-a23d-16e4958879cb": {"__data__": {"id_": "308179ed-013f-4c0b-a23d-16e4958879cb", "embedding": null, "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bd3882a-1032-4173-94e0-156d59c0200e", "node_type": "4", "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2f06fcbc42717e2babb23ac8444738c9e629927f61d315ac215d50f320482d43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b", "node_type": "1", "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5c1a247eb2c5ad16d87bf65e6b1142e5c56f000909d06ef7cb11a37991bf6eb5", "class_name": "RelatedNodeInfo"}}, "text": "A sort work file (see #1) is never OPEN ed or CLOSE d. \n6. The SORT  statement works in three stages, as follows:  \nSTAGE I (the input phase):  \na. The data to be sorted is loaded into the sort file.  This is accomplished either by taking the entire contents of \nthe file(s) named on the USING  clause or by utilizing an INPUT PROCEDURE  defined as procedure -name 1  or \nprocedure -name -1 THRU procedure -name -2. \nb. When USING  is specified, file-name -1 \u2026 must not be OPEN  at the time the SORT  is executed.  \nc. When an INPUT PROCEDURE  is used, the procedure(s) specified on the INPUT PROCEDURE  clause will be \ninvoked as if by a procedural PERFORM  statement with no VARYING  or UNTIL  options specified.  Records wil l \nbe loaded into the sort work file \u2013 one at a time \u2013 within the INPUT PROCEDURE  using the RELEASE  statement.   \nSORT sort-file-1\n{ ON                KEY identifier -1\u2026 } \u2026\n[ WITHDUPLICATES IN ORDER ]\n[ COLLATING SEQUENCE IS alphabet -name -1]\nUSING file-name -1\u2026\nINPUTPROCEDURE IS procedure -name -1[ THRU|THROUGH procedure -name -2]\nGIVING file-name -2\u2026\nOUTPUTPROCEDURE IS procedure -name -3[ THRU|THROUGH procedure -name -4]ASCENDING\nDESCENDING", "start_char_idx": 1693, "end_char_idx": 2871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1123a6f5-bfc0-4133-9040-21b67b6fb2aa": {"__data__": {"id_": "1123a6f5-bfc0-4133-9040-21b67b6fb2aa", "embedding": null, "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f5346c-b27f-4573-aebf-badb465945c7", "node_type": "4", "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3cff2a258bdd862d39c06bdf04c309e0abff00208421101b5db30f76fcb16fa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "287a2303-acb5-4e6e-acb7-566aec503816", "node_type": "1", "metadata": {}, "hash": "b417e39c1197f8f4d72e7a419a4024a952d42cf1d61e7e2169874df5ab1c9386", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-106 As data is loaded into the sort file, it is actually  being buffered in dynamically -allocated memory.  Only if the \namount of data to be sorted exceeds the amount of available sort memory (128 MB)35 will actual disk files be \nallocated and utilized.  These \u201csort work files\u201d will be discussed again shortly.  \nA GO TO  statement that transfers control out of the INPUT PROCEDURE  will terminate the SORT  but allows the \nprogram to continue executing from the point where the GO TO  transferred control to.  Once an INPUT \nPROCEDURE  has been aborted using a GO TO  it cannot be resumed, and the contents of the sort work file are \nlost.  You  may, however, re -execute the SORT  statement itself.  USING A \u201cGO TO\u201d TO PREMATURELY \nTERMINATE A SORT, OR RE -STARTING A PREVIOUSLY -CANCELLED SORT IS NOT CONSIDERED GOOD \nPROGRAMMING STYLE AND SHOULD BE AVOIDED.  \nAn INPUT PROCEDURE  is terminated in the same w ay a procedural PERFORM  would be.  Once the INPUT \nPROCEDURE  terminates, the input phase is complete.  \nd. The scope of the INPUT PROCEDURE  must not allow a file -based SORT , MERGE  or RETURN  statement to be \nexecuted.  \nSTAGE 2 (the sort phase):  \na. The sort will take place by arranging the data records in the sequence defined by the ASCENDING KEY  and/or \nDESCENDING KEY  specification(s) on the SORT  statement according to the COLLATING SEQUENCE  spec ified on \nthe SORT  (if any)  or \u2013 if none was defined \u2013 the PROGRAM COLLATING SEQUENCE  specified or implied by the \nOBJECT -COMPUTER  paragraph.   Keys may be any supported data type and USAGE  except for  level -78 or level -\n88 da ta items.  \n", "start_char_idx": 0, "end_char_idx": 1704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "287a2303-acb5-4e6e-acb7-566aec503816": {"__data__": {"id_": "287a2303-acb5-4e6e-acb7-566aec503816", "embedding": null, "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f5346c-b27f-4573-aebf-badb465945c7", "node_type": "4", "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3cff2a258bdd862d39c06bdf04c309e0abff00208421101b5db30f76fcb16fa7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1123a6f5-bfc0-4133-9040-21b67b6fb2aa", "node_type": "1", "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7596b7049c4427e3d13ce7fd4fbe147ea3fae9cba2ce9aba71848b029e43d5c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1158319a-97f4-485b-be5e-569b33aafd73", "node_type": "1", "metadata": {}, "hash": "91a81fcee5af94ef77fc1033347a634fb3dbb3656b49b18b4e56156131e16ae6", "class_name": "RelatedNodeInfo"}}, "text": "For example, let\u2019s assume we\u2019re sorting a series of financial transactions.  The SORT  statement might look like \nthis:  \nSORT Sort -File \n    ASCENDING  KEY Transaction -Date \n    ASCENDING  KEY Account -Number \n    DESCENDING KEY Transaction -Amount \n    . \n    . \n    ", "start_char_idx": 1704, "end_char_idx": 1975, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1158319a-97f4-485b-be5e-569b33aafd73": {"__data__": {"id_": "1158319a-97f4-485b-be5e-569b33aafd73", "embedding": null, "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f5346c-b27f-4573-aebf-badb465945c7", "node_type": "4", "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3cff2a258bdd862d39c06bdf04c309e0abff00208421101b5db30f76fcb16fa7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "287a2303-acb5-4e6e-acb7-566aec503816", "node_type": "1", "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c9ebd1005119e686f3858c6e6e74308bd2db67bb6959f51af2fd1a38863e4260", "class_name": "RelatedNodeInfo"}}, "text": ". \nThe effect of this statement will be to sort all transactions into ascending order of the date the transaction took \nplace (oldest first, newest last).  Unless the business running this program is going out of business, there are \nmost -likely many transactions for any given date \u2013 therefore, within each grouping of transactions all with the \nsame date, transactions will be sub -sorted into ascending sequence of the account number the transactions \napply to.  Since it\u2019s quite possible there might b e multiple transactions for an account on any given date, a third \nlevel sub -sort will arrange all transactions for the same account on the same date into descending sequence of \nthe actual amount of the transaction (largest first, smallest last).  If two or  more transactions of $100.00 were \nrecorded for account #12345 on the 31st of August 2009, those transactions will be retained in the order in \nwhich they were read from the USING  file(s) or were RELEASE d to the SORT . \nStage 3 (the output phase):  \na. Once the so rt phase is complete, a copy of the sorted data will be written to  each  file-name -2 if the GIVING  \nclause was specified .  When GIVING  is specified,  none of the  file-name -2 files can be OPEN  at the time the \nSORT  is executed.  \nb. When an OUTPUT PROCEDURE  is used, the procedure(s) specified on the OUTPUT PROCEDURE  clause will be \ninvoked as if by a procedural PERFORM  statement with no VARYING  or UNTIL  options specified.  Records will \nbe retrieved from the sort work file \u2013 one at a time and in sorted sequence \u2013 within the INPUT PROCEDURE  \nusing the RETURN  statement.   \nA GO TO  statement that transfers control out of the OUTPUT PROCEDURE  will terminate the SORT  but allows \nthe program to continue executing from the point where the GO TO  transferred control to.  Once an OUTPUT \nPROCEDURE  has been aborted using a GO TO  it cannot be resumed.  You may, however, re -execute the SORT  \n                                                                 \n35 There is a runtime environment va riable (COB_SORT_MEMORY) that you may use to allocate more or less memory to the \nsorting process.  See section 8.2.4 . ", "start_char_idx": 1975, "end_char_idx": 4148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12422c48-9e7e-44db-87cc-17c28b985bdc": {"__data__": {"id_": "12422c48-9e7e-44db-87cc-17c28b985bdc", "embedding": null, "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e", "node_type": "4", "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d8a8b4a878b1679079a4e1d8246ff4eaa561b2a25e87197d9cd1d0816b5c90eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "494ec5ff-bda4-44a3-aadd-18c94a07a1ce", "node_type": "1", "metadata": {}, "hash": "23fc2be4b51d8bba83f51cb8c481da6667b261a8e219e416e236e1a97860571e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-107 statement itself.  USING A \u201cGO TO\u201d TO PREMATURELY TERMINATE A SORT, OR RE -STARTING A PREVIOUSLY -\nCANCELLED SORT IS NOT CONSIDERED GOOD PROGRAMMING STYLE AND SHOULD BE AVOIDED.  \nc. Once the OUTPUT PROCEDURE  terminates, the output phase \u2013 and the SORT  statement itself - is complet e.  \nAny sorted records that have not yet been RETURN ed from the sort work file will be lost.  \nd. The scope of the OUTPUT PROCEDURE  must not allow a file -based SORT , MERGE  or RELEASE . \n7. Should disk work files be necessary due to the amount of data being sorted, t hey will be automatically allocated to \ndisk in a folder defined by the TMPDIR , TMP  or TEMP  environment variables ( checked for existence in that \nsequence ).  These disk files will be automatically purged upon SORT  termination or program execution termination  \n(normal or otherwise).   \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nThe OBJECT -COMPUTER  Paragraph  4.1.2  \nDescribing the Structure of a File (FD/SD)  5.1 \nDefining Data Items  5.2 \nStorage Format of Data ( USAGE ) 5.2.1.11  \nThe CLOSE  Statement  6.4.7  \n The MERGE  Statement  6.4.25  \nThe OPEN  Statement  6.4.29  \nThe RELEASE  Statement  6.2.33  \nThe RETURN  Statement  6.2.35  \nExecution -time Environment Variables  8.2.4  \n \n \n6.2.40.2.  SORT Format 2 \u2013 Table Sort  \nFigure 6-101 - Table SORT Syntax  \n This format of the SORT  statement sorts relatively \nsmall quantities of data \u2013 namely data contained in \na DATA DIVISION  table \u2013 according to one or more \nkey fields.  \n", "start_char_idx": 0, "end_char_idx": 1587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "494ec5ff-bda4-44a3-aadd-18c94a07a1ce": {"__data__": {"id_": "494ec5ff-bda4-44a3-aadd-18c94a07a1ce", "embedding": null, "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e", "node_type": "4", "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d8a8b4a878b1679079a4e1d8246ff4eaa561b2a25e87197d9cd1d0816b5c90eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12422c48-9e7e-44db-87cc-17c28b985bdc", "node_type": "1", "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0903f2fa036e867bfa15e66a40879fa968275c54a51bdd2c51e9e8c3fb547712", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9384594b-f542-421e-b9e4-e2064c34229d", "node_type": "1", "metadata": {}, "hash": "ddad42c46f8276a0c0fb1abd30f2a1ab9c6bffa46c7f6cf0242481ed36787ac9", "class_name": "RelatedNodeInfo"}}, "text": "1. The table -name -1 data item must have an OCCURS  clause  in its definition . \n2. The identifier -1 \u2026 field(s) , if any,  must be defined as data items subordinate to table -name -1. \n3. The WITH DUPLICATES IN ORDER  clause is supported for compatibility purposes, but is non -functional.   See the \ndiscussion of this clause in the previous section for more information.  \n", "start_char_idx": 1587, "end_char_idx": 1964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9384594b-f542-421e-b9e4-e2064c34229d": {"__data__": {"id_": "9384594b-f542-421e-b9e4-e2064c34229d", "embedding": null, "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e", "node_type": "4", "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d8a8b4a878b1679079a4e1d8246ff4eaa561b2a25e87197d9cd1d0816b5c90eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "494ec5ff-bda4-44a3-aadd-18c94a07a1ce", "node_type": "1", "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0c83e19ebe3ee2315470bfaba70828f860a7851ebca96132f0075b5f2d82cdf6", "class_name": "RelatedNodeInfo"}}, "text": "4. The data within table -name -1 will be sorted in -place (i.e. no sort fil e is required) according to the KEY \nspecification(s) made on the SORT  statement.   \n5. Although the specification of KEY clause(s) is optional36, currently, a table SORT  with no KEY specification (s) made \non the SORT  statement is unsupported by GNU COBOL  and will be rejected by the compiler.  \n6. The sort will take place by arranging the data records in the sequence defined by the ASCENDING KEY  and/or \nDESCENDING KEY  specification(s) on the SORT  statement accord ing to the COLLATING SEQUENCE  specified on the \nSORT  (if any) or \u2013 if none was defined \u2013 the PROGRAM COLLATING SEQUENCE  specified or implied by the OBJECT -\nCOMPUTER  paragraph.  Keys may be any supported data type and USAGE  except for level -78 or level -88 data \nitems.  \n7. The SORT  will be performed in -place within table -name -1 \u2013 no sort file is required.   \n                                                                 \n36 When lacking a KEY clause, a ccording to the COBOL2002 standards, a table sort will use the table\u2019s KEY clause  \nSORT table -name -1\n[ ON                KEY identifier -1\u2026 ] \u2026\n[ WITHDUPLICATES IN ORDER ]\n[ COLLATING SEQUENCE IS alphabet -name -1]ASCENDING\nDESCENDING", "start_char_idx": 1964, "end_char_idx": 3224, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d033964b-bf0f-47ac-9f5b-df4c42fbf64f": {"__data__": {"id_": "d033964b-bf0f-47ac-9f5b-df4c42fbf64f", "embedding": null, "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90c802f5-b356-493d-b9b2-50d549375b18", "node_type": "4", "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "06b4c796c3a7c76318616fe627b8c4c557f877f7ddfe1acd40ac97d4933a4eed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7f980a1-cc44-455e-878b-cb94ea0fe6dd", "node_type": "1", "metadata": {}, "hash": "55e620853d9ebddd114fbdccf3c9c91e4ca68837bd6feafc8f5067c9613a9e52", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-108 6.2.41.  START  \nFigure 6-102 - START Syntax  \n   \nThe START  statement defines the logical starting point within a file for subsequent sequential  read operations.  \n", "start_char_idx": 0, "end_char_idx": 250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7f980a1-cc44-455e-878b-cb94ea0fe6dd": {"__data__": {"id_": "c7f980a1-cc44-455e-878b-cb94ea0fe6dd", "embedding": null, "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90c802f5-b356-493d-b9b2-50d549375b18", "node_type": "4", "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "06b4c796c3a7c76318616fe627b8c4c557f877f7ddfe1acd40ac97d4933a4eed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d033964b-bf0f-47ac-9f5b-df4c42fbf64f", "node_type": "1", "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "11378debcd0b383e47aee18668f8319f343a68a6d3a22f34c2f8990b7ec6da5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "168aeea7-832a-43f6-9c2d-fa5fd4786ae6", "node_type": "1", "metadata": {}, "hash": "fa31c580e8071d3699ccb96349c647b0af4abb22842a6be6ab27aacf3b37c35b", "class_name": "RelatedNodeInfo"}}, "text": "1. ", "start_char_idx": 88, "end_char_idx": 91, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "168aeea7-832a-43f6-9c2d-fa5fd4786ae6": {"__data__": {"id_": "168aeea7-832a-43f6-9c2d-fa5fd4786ae6", "embedding": null, "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90c802f5-b356-493d-b9b2-50d549375b18", "node_type": "4", "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "06b4c796c3a7c76318616fe627b8c4c557f877f7ddfe1acd40ac97d4933a4eed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7f980a1-cc44-455e-878b-cb94ea0fe6dd", "node_type": "1", "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "be645ad862ad474250b3470d38cf2f119b76e50e60ede61c47ec0aa1c17a2120", "class_name": "RelatedNodeInfo"}}, "text": "File-name -1 must be an ORGANIZATION RELATIVE  or ORGANIZATION INDEXED  file. \n2. File-name -1 must have been SELECT ed with an ACCESS MODE DYNAMIC  or ACCESS MODE SEQUENTIAL . \n3. File-name -1 must be OPEN  in either INPUT  or I-O mode at the time the START  is executed.  \n4. If no KEY clause is specified, \u201c KEY IS EQUAL TO  identifier -1\u201d will be assumed  (see the next point for the definition of \nidentifier -1). \n5. If file-name -1 is an ORGANIZATION RELATIVE  file, identifier -1 must be the defined  RELATIVE KEY  of the file.  If file-\nname -1 is an ORGANIZATION INDEXED  file, identifier -1 must be the  defined  RECORD KEY  of the file (if no KEY \nclause was specified) or may be the RECORD KEY  or any  of the ALTERNATE RECORD KEY  fields for the file  is a KEY \nclause is specified .   \n6. After successful execution of a START  statement, the internal record pointer into the file-name -1 data will be \npositioned such that the next sequential READ  statement execute d against file-name -1 will read  either : \na. The first record that satisfies the KEY clause specification if the relation check specified is EQUAL TO , GREATER \nTHAN  or GREATER THAN OR EQUAL TO  (or any of their syntactical equivalents) , or \u2026  \nb. The last record that satisfies the KEY clause specification if the relation check specified is LESS THAN  or LESS \nTHAN OR EQUAL TO  (or any of their syntactical equivalents).  \n7. The START  statement only positions the file for a subsequent sequential READ  \u2013 it does not actually popu late file-\nname -1s  01-level records with new data.  You must issue a sequential READ  after a successful START  to actually \nread the record  that satisfies the KEY clause.  \n8. The optional invalid -key-clause  may be used to detect and recover from errors encountered during execution of the \nSTART .  Such errors might be actual I/O errors or \u201c Key Not Exists\u201d errors ( FILE STATUS  23), indicating no record \nexists that satisfies the KEY clause requirements.   Lacking such a clause, you\u2019ll need to test the file\u2019s FILE STATUS \ndata item manually after the START in order to determine success or failure.  \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nDefining File Characteristics (SELECT)  4.2.1  \nFILE-STATUS Values  Figure \n4-15 \n Relation Tests  6.1.8.2.5  \nThe OPEN  Statement  6.4.29  \nThe READ Statement  6.4.31  \n \n \n  \nSTART file-name -1\nIS EQUALTO | IS =| EQUALS\nIS GREATER THAN |IS >\nKEY IS  ISGREATER THAN OREQUALTO |IS >=|IS NOTLESSTHAN  identifier -1\nIS LESSTHAN |IS <\nIS LESSTHAN OREQUALTO | IS <=| IS NOTGREATER THAN\n[ invalid -key-clause]\n[ END-START ]", "start_char_idx": 253, "end_char_idx": 2846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8fdaa288-db87-4204-a58e-72df30846c15": {"__data__": {"id_": "8fdaa288-db87-4204-a58e-72df30846c15", "embedding": null, "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f", "node_type": "4", "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa5938dc356c5aa794064620bed06e24907e608a013bcae90990861b29377f20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaa2bb40-1513-4834-8a13-d206164d61e2", "node_type": "1", "metadata": {}, "hash": "a105c89efb339b806735f804fb9b9670b7585e0e47d6c8353d469dbe50a61743", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-109 6.2.42.  STOP  \nFigure 6-103 - STOP Syntax  \n The STOP  statement halts the \nprogram, returning control to the \noperating system.  \n1. The RUN  clause halts the program without displaying any special message to that effect.  \n2. The literal -2 clause displays the specified text on SYSOUT /STDOUT , waits for the user to press the Enter  key and \nthen \u2013 once the key has been pressed \u2013 allows the program to continue execution . \n3. ", "start_char_idx": 0, "end_char_idx": 516, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaa2bb40-1513-4834-8a13-d206164d61e2": {"__data__": {"id_": "aaa2bb40-1513-4834-8a13-d206164d61e2", "embedding": null, "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f", "node_type": "4", "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa5938dc356c5aa794064620bed06e24907e608a013bcae90990861b29377f20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fdaa288-db87-4204-a58e-72df30846c15", "node_type": "1", "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50c8c142b48ceccdc6665072ab8eafd5affa128e8715e2370960ddba98dcad87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67289dca-78fe-433f-b738-e68362893ad4", "node_type": "1", "metadata": {}, "hash": "a329dcb3a8d1bafb87c1e7cd54189768a6c8f3d0fd0b96fc5250b5701e1dcef4", "class_name": "RelatedNodeInfo"}}, "text": "The optional RETURNING /GIVING  clause (t he RETURNING  and GIVING  clauses may be used interchangeably ) \nprovides the opportunity to return a numeric value to the operating system  (a \u201creturn code\u201d) .  The manner in \nwhich the return code may be interrogated by the operating system varies, but Windows can use %ERRORLEVEL% \nto query the return code while Unix shells such as sh, bash and ksh can query the return code as \u201c$?\u201d.  Other Unix \nshells may have different ways to access return code values.  \n4. The STATUS  clause provides another means of returni ng a return code.  Using the STATUS  clause with a \nliteral/identifier specification is functionally equivalent to using the RETURNING /GIVING  clause.  \nUsing the STATUS  clause without a literal/identif ier specification will return a  return code  of 0 if the NOR MAL  \nkeyword is used or a 1 if ERROR  was specified.  \n5. Your program will ALWAYS  return a  return code , even if no RETURNING /GIVING  or STATUS  clause is specified.  In \nthe absence of the use of these clauses, the value in the special register RETURN -CODE  at the time the STOP  \nstatement is executed will be used  as the return code . \n6. Any programmer -defined exit procedure (established via the CBL_EXIT_PROC  built -in subroutine) will be executed \nby STOP RUN , but not by STOP  literal . \n7. ", "start_char_idx": 516, "end_char_idx": 1854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67289dca-78fe-433f-b738-e68362893ad4": {"__data__": {"id_": "67289dca-78fe-433f-b738-e68362893ad4", "embedding": null, "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f", "node_type": "4", "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa5938dc356c5aa794064620bed06e24907e608a013bcae90990861b29377f20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaa2bb40-1513-4834-8a13-d206164d61e2", "node_type": "1", "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6487cf8eda95d6b8ecc8c744fd966061a22fee6490ae8502ae04d3f6b1ec9228", "class_name": "RelatedNodeInfo"}}, "text": "Valid  return code va lues can be in the range -2147483648 to +2147483647 . \n8. The code snippets below are all equivalent  \u2013 they show different ways in which a GNU COBOL  program may be \ncoded to pass a return code value of 16 back to the operating system  and then halt .   \nSTOP RUN RETURNING 16  MOVE 16 TO RETURN -CODE  \nSTOP RUN  \nSTOP RUN WITH ERROR STATUS 16   \n  \nSee Also\u2026  \nBuilt -in Device Names  Figure \n4-8 \nSpecial Registers  6.1.13  \n The CBL_EXIT_PROC  Subroutine  8.3.1.25  \n \n  \nRUN[                                         ]\nliteral -3STOPRETURNING |GIVING\nWITH          STATUS [            ]ERROR\nNORMALliteral -2\nidentifier -2literal -1\nidentifier -1", "start_char_idx": 1854, "end_char_idx": 2527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9baabe20-d2ff-456b-b59d-405423f34716": {"__data__": {"id_": "9baabe20-d2ff-456b-b59d-405423f34716", "embedding": null, "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3", "node_type": "4", "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0b43e75d8277758d20ac5c633098cb39c2b5d90cc75d782a0c1a384f4268f63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4597828f-432c-4e9f-b482-a86b1d34eaee", "node_type": "1", "metadata": {}, "hash": "a0126325eb2c86d04fa87afdc2a60eb9bad2ba1cb784738a80b4e6a1c92da866", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-110 6.2.43.  STRING  \nFigure 6-104 - STRING Syntax  \n The STRING  statement is used to \nconcatenate all or a part of one or  strings \ntogether, forming a new string.  \n1. ", "start_char_idx": 0, "end_char_idx": 250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4597828f-432c-4e9f-b482-a86b1d34eaee": {"__data__": {"id_": "4597828f-432c-4e9f-b482-a86b1d34eaee", "embedding": null, "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3", "node_type": "4", "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0b43e75d8277758d20ac5c633098cb39c2b5d90cc75d782a0c1a384f4268f63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9baabe20-d2ff-456b-b59d-405423f34716", "node_type": "1", "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dd1ddfc089aa6848d8e0ce5803357d01b8693906bffab68bad866210e884d277", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c769bfed-504d-4107-9aab-6862b7750b40", "node_type": "1", "metadata": {}, "hash": "a9e0ea96f62f315e0b7c3a6f319813e04919d80dcab1a10e2908120a00618b8a", "class_name": "RelatedNodeInfo"}}, "text": "Literal -1, literal -2, identifier -1, identifier -2 and identifier -3 must be explicitly or implicitly defined as alphanumeric \nUSAGE DISPLAY  data.   Any of those identifiers may be group items.  \n", "start_char_idx": 250, "end_char_idx": 449, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c769bfed-504d-4107-9aab-6862b7750b40": {"__data__": {"id_": "c769bfed-504d-4107-9aab-6862b7750b40", "embedding": null, "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3", "node_type": "4", "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0b43e75d8277758d20ac5c633098cb39c2b5d90cc75d782a0c1a384f4268f63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4597828f-432c-4e9f-b482-a86b1d34eaee", "node_type": "1", "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "90ff43f6f59e1eed32e1f4c4b059f039b8ce8eb4bdf147f391ff8e89f09fa8ee", "class_name": "RelatedNodeInfo"}}, "text": "2. Identifier -4 must be a non -edited elementary integer numeric data item with a value greater than zero.    \n3. Each literal -1 / identifie r-1 will be known as a sending item.  \n4. During the processing of the STRING  statement, data will be copied from each sending item, in turn, into identifier -\n3, one character at a time at a position defined by the current character pointer .   \n5. The initial value of the current character pointer  will be the value of identifier -4 at the time the STRING  statement \nbegan execution.  If no WITH POINTER  clause is coded, a value of 1 (meaning \u201cthe 1st character position\u201d) will be \nassumed for the current character pointer . \n6. For each sending item, the contents of the sending item will be copied \u2013 character -by-character \u2013 into identifier -3 \nat the character position specified by the current character pointer .  After a character is copied, the current \ncharacter pointer  will be i ncremented by 1 so that it points to the position within identifier -3 where the next \ncharacter should be copied.  \n7. The DELIMITED BY  clause specifies how much of each sending item will be copied into the identifier -3.  DELIMITED \nBY SIZE  (the default if no DELIMITED BY  clause is specified) causes the entire  contents of the sending item to be \ncopied into identifier -3.  Using DELIMITED BY literal -2 or DELIMITED BY identifier -2 causes only the contents of the \nsending item up to but not including the character sequence specified by the literal or identifier to be copied.   \n8. STRING  process ing will cease  when one of the following occurs:  \na. All sending items have been fully processed, or \u2026  \nb. The initial value of the current character pointer  is less than 1, or \u2026  \nc. The value of the current character pointer exceeds the size of identifier -3 at the point the STRING statement \nwants to copy a character into identifier -3 \nEvents b and c reflect an overflow condition, which may be handled by use of the optional overflow -clause .  Note \nthat in the case event b occurs, no data will be copied into identifier -3. \n9. Identifier -3) is neither  automatically initialized (to SPACES  or any  other value) at the start of a STRING  statement \nnor will it be SPACE  filled should the total number of sending item characters copied into it be less than its size.  \nYou may explicitly initialize  identifier -3 yourself via the INITIALIZE or MOVE  statements before executing the \nSTRING  if you wish.  \nSee Also\u2026  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nHandling Overflow ( ON OVERFLOW ) 6.1.12.5  \n The INITIALIZE  Statement  6.2.22  \nThe MOVE  Statement  6.2.26  \n \n  \nSTRING\nSIZE\n{             [ DELIMITED BY  literal -2] } \u2026\nidentifier -2\nINTO identifier -3\n[ WITH POINTER identifier -4]\n[ overflow -clause]\n[ END-STRING]literal -1\nidentifier -1", "start_char_idx": 449, "end_char_idx": 3275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b079175-e295-4a11-8646-cb2400aa2a5f": {"__data__": {"id_": "3b079175-e295-4a11-8646-cb2400aa2a5f", "embedding": null, "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca", "node_type": "4", "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "89bfd8b57b83c3c29cc04b97f07380fd941b82756f82f13bf06663f64af333b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41d6c060-7629-4d42-9ac6-7cf21899c923", "node_type": "1", "metadata": {}, "hash": "0d8aa874e2e94f4e0f17b21bf2ed49b4885b5c1bc4391e63a85da19bb3683647", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-111 6.2.44.  SUBTRACT  \n6.2.44.1.  SUBTRACT Format 1 \u2013 SUBTRACT FROM  \nFigure 6-105 - SUBTRACT FROM Syntax  \n This format of the ADD  statement generates the \narithmetic sum of all arguments that appear \nbefore the FROM  (identifier -1 or literal -1) and \nsubtracts that sum from  each  identifier -2. \n \n1. ", "start_char_idx": 0, "end_char_idx": 387, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41d6c060-7629-4d42-9ac6-7cf21899c923": {"__data__": {"id_": "41d6c060-7629-4d42-9ac6-7cf21899c923", "embedding": null, "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca", "node_type": "4", "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "89bfd8b57b83c3c29cc04b97f07380fd941b82756f82f13bf06663f64af333b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b079175-e295-4a11-8646-cb2400aa2a5f", "node_type": "1", "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c08137bd8861ef85275d1c3d7cf64c63fe7f052fbf342af9e6a7ae59022b26fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fce250c-4c58-4906-97f4-2891bb048018", "node_type": "1", "metadata": {}, "hash": "bfcbfe5dcd59f869ecf11a47ad30b764d3cee17d350073647aa0b7cdfdd24b51", "class_name": "RelatedNodeInfo"}}, "text": "Identifier -1 and identifier -2 must be numeric unedited data items.  \n2. Literal -1 must be a numeric literal.  \n3. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how  non-integer result s will be \nsaved.  \n4. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n \n6.2.44.2.  SUBTRACT Format 2 \u2013 SUBTRACT GIVING  \nFigure 6-106 - SUBTRACT GIVING Syntax  \n This format of the SUBTRACT  statement \ngenerates the arithmetic sum of all \narguments that appear before the FROM  \n(identifier -1 or literal -1), subtracts that sum \nfrom the contents of identifier -2 and then \nreplaces the contents of the identifiers listed \nafter the GIVING  (identifier -3) with that \nresult.  \n \n1. ", "start_char_idx": 387, "end_char_idx": 1309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fce250c-4c58-4906-97f4-2891bb048018": {"__data__": {"id_": "5fce250c-4c58-4906-97f4-2891bb048018", "embedding": null, "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca", "node_type": "4", "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "89bfd8b57b83c3c29cc04b97f07380fd941b82756f82f13bf06663f64af333b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41d6c060-7629-4d42-9ac6-7cf21899c923", "node_type": "1", "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d5057bde8fe08b771b949025aa4ad323ba209e7a589d0c10be298b909877da71", "class_name": "RelatedNodeInfo"}}, "text": "Identifier -1 and identifier -2 must be numeric unedited data items.  \n2. Identifier -3 must be a numeric (edited or unedited) data item.  \n3. Literal -1 must be a numeric literal.  \n4. The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how  non-integer result s will be \nsaved.  \n5. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n \n  \nSUBTRACT\nFROM{ identifier -2[ rounding -option] } \u2026\n[ size-error -clause]\n[ END-SUBTRACT ]literal -1\nidentifier -1\nSUBTRACT\nFROM identifier -2\nGIVING{ identifier -3[ rounding -option] } \u2026\n[ size-error -clause]\n[ END-SUBTRACT ]literal -1\nidentifier -1", "start_char_idx": 1309, "end_char_idx": 2141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3562c0cb-6908-47fb-8c9e-5379051b6722": {"__data__": {"id_": "3562c0cb-6908-47fb-8c9e-5379051b6722", "embedding": null, "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c685f54-a752-4dcf-ab48-1d9dad78a9f4", "node_type": "4", "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "32c56d29890d82b6cf2d7c6fc38cf81c6c65cf28bc533d8d69664caa86e83256", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38b6660b-838c-445f-8591-53b2b14e8fb9", "node_type": "1", "metadata": {}, "hash": "fe4f485b6aab5f1440b01b7f7565e9cc8f41decd1d81c92e5a28fe267876e50c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-112 6.2.44.3.  SUBTRACT Format 3 \u2013 SUBTRACT CORRESPONDING  \nFigure 6-107 - SUBTRACT CORRESPONDING Syntax  \n \n This format of the SUBTRACT  statement generates code \nequivalent to individual SUBTRACT FROM  statements for \ncorresponding matches of data items found subordinate \nto the two identifiers.  \n4. When corresponding matches are established, the effect of a SUBTRACT  CORRESPONDING  on those matches will \nbe as if a series of individual SUBTRACT FROM  statements  were done \u2013 one for each match.  \n5. ", "start_char_idx": 0, "end_char_idx": 588, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38b6660b-838c-445f-8591-53b2b14e8fb9": {"__data__": {"id_": "38b6660b-838c-445f-8591-53b2b14e8fb9", "embedding": null, "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c685f54-a752-4dcf-ab48-1d9dad78a9f4", "node_type": "4", "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "32c56d29890d82b6cf2d7c6fc38cf81c6c65cf28bc533d8d69664caa86e83256", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3562c0cb-6908-47fb-8c9e-5379051b6722", "node_type": "1", "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0c457a6073e3db2e28d070828104b26203e9d685e8233bbf4b6f59f2f3fe7cb", "class_name": "RelatedNodeInfo"}}, "text": "The optional \u201c rounding -option \u201d clause available to each identifier -2 will control how non -integer results will be \nsaved.   \n6. The optional size-error -clause  may be used to detect arithmetic overflow situations where identifier -2 is \ninsufficiently sized to hold the generated results.  \nSee Also\u2026  \nThe CORRESPONDING  Clause  6.1.12.2  \nHandling Size Errors ( ON SIZE ERROR ) 6.1.12.6  \n Rounding Options  6.1.12.7  \n \n  \nSUBTRACT CORRESPONDING identifier -1\nFROM identifier -2[ rounding -option]\n[ size-error -clause]\n[ END-SUBTRACT ]", "start_char_idx": 588, "end_char_idx": 1133, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63f45eba-e510-4ad6-8d07-2868bc0e8334": {"__data__": {"id_": "63f45eba-e510-4ad6-8d07-2868bc0e8334", "embedding": null, "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba0558ef-5afe-43de-b184-6aa94adb4fb9", "node_type": "4", "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2946787caaf303e094f32029ae5c4c6c4a98c91a865f53f732891f1be9c3ade3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6eb35303-b16e-46f9-8318-204b06e79881", "node_type": "1", "metadata": {}, "hash": "51265e38886862b94834decdab98d26ca49a71c5d278ccd2f8bc10c7f61ca1b7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-113 6.2.45.  SUPPRESS  \nFigure 6-108 - SUPPRESS Syntax  \n \n Although syntactically recognized by the GNU COBOL  compiler, the SUPPRESS  \nstatement is non -functional because the RWCS (COBOL Report Writer) is not \ncurrently supported  by GNU COBOL . \n \n  \n", "start_char_idx": 0, "end_char_idx": 334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6eb35303-b16e-46f9-8318-204b06e79881": {"__data__": {"id_": "6eb35303-b16e-46f9-8318-204b06e79881", "embedding": null, "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba0558ef-5afe-43de-b184-6aa94adb4fb9", "node_type": "4", "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2946787caaf303e094f32029ae5c4c6c4a98c91a865f53f732891f1be9c3ade3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63f45eba-e510-4ad6-8d07-2868bc0e8334", "node_type": "1", "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fabaa718ccfc5de7580ed5b604c425f88638a2bde95cd9cf88c340d01d29d17c", "class_name": "RelatedNodeInfo"}}, "text": "SUPPRESS PRINTING", "start_char_idx": 334, "end_char_idx": 351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17cde1e8-8cd3-419a-82c2-231aaa6ceac0": {"__data__": {"id_": "17cde1e8-8cd3-419a-82c2-231aaa6ceac0", "embedding": null, "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da687cd3-9b78-426e-8668-5a05a36a2516", "node_type": "4", "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1f448d48ee38069ca7f2c5ac135573bd612439ea80a78bbf02b6938c8f763159", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "825fc91b-632e-41c9-9ce1-ff254fb8149a", "node_type": "1", "metadata": {}, "hash": "0807bc12ca07b2e976b5dfb91136282b4b31833abf52156e7f665e033ce24ef4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-114 6.2.46.  TERMINATE  \nFigure 6-109 - TERMINATE Syntax  \n Although syntactically recognized by the GNU COBOL  compiler, the TERMINATE  \nstatement is non -functional because the RWCS (COBOL Report Writer)  is not \ncurrently supported  by GNU COBOL . \n \n  \n", "start_char_idx": 0, "end_char_idx": 336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "825fc91b-632e-41c9-9ce1-ff254fb8149a": {"__data__": {"id_": "825fc91b-632e-41c9-9ce1-ff254fb8149a", "embedding": null, "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da687cd3-9b78-426e-8668-5a05a36a2516", "node_type": "4", "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1f448d48ee38069ca7f2c5ac135573bd612439ea80a78bbf02b6938c8f763159", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17cde1e8-8cd3-419a-82c2-231aaa6ceac0", "node_type": "1", "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "def0b7a455e6d5347cd755ba23ca4c81f5c72c3f46b86874eccbefcaf1052b55", "class_name": "RelatedNodeInfo"}}, "text": "TERMINATE identifier -1\u2026", "start_char_idx": 336, "end_char_idx": 360, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dff7a6ca-1d44-434e-a6db-875d1b02b938": {"__data__": {"id_": "dff7a6ca-1d44-434e-a6db-875d1b02b938", "embedding": null, "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f31f09f-0b40-4acc-88cd-df9d871a115c", "node_type": "4", "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "69abb5b9f779e64008b167ec164b508029f479eba695ddeb89db6fbede45f1d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bbc6c76-8f06-4c69-8d61-af5d3c10f99f", "node_type": "1", "metadata": {}, "hash": "c0de428748d5c68ffcf8865204db5b9f8991234fc1f38c2015548c4264d43507", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-115 6.2.47.  TRANSFORM  \nFigure 6-110 - TRANSFORM Syntax  \n The TRANSFORM  statement scans a \ndata item performing a series of \nmonoalphabetic substitutions, defined \nby the arguments before and after the \n\u201cTO\u201d clause.  \n1. ", "start_char_idx": 0, "end_char_idx": 303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bbc6c76-8f06-4c69-8d61-af5d3c10f99f": {"__data__": {"id_": "9bbc6c76-8f06-4c69-8d61-af5d3c10f99f", "embedding": null, "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f31f09f-0b40-4acc-88cd-df9d871a115c", "node_type": "4", "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "69abb5b9f779e64008b167ec164b508029f479eba695ddeb89db6fbede45f1d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dff7a6ca-1d44-434e-a6db-875d1b02b938", "node_type": "1", "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "752f1a83d244041416d19f4bc40d2097467abff2666914e97055813e019f8130", "class_name": "RelatedNodeInfo"}}, "text": "Both literal -1 and/or literal -2 must be alphanumeric literals.  \n2. All of identifier -1, identifier -2 and identifier -3 must either be group items or alphanumeric data items.  Data items \nthat are PICTURE 9 USAGE DISPLAY  are acceoted, but will generate warning message s from the compiler.  \n3. The TRANSFORM  statement will replace characters within identifier -1 that are found in the string specified before \nthe TO keyword with the corresponding characters from the string specified after the TO keyword.  \n4. This statement exists within GNU COBOL  only to provide compatibility with COBOL programs written to pre -1985 \nstandards.  The TRANSFORM  verb was made obsolete in the 1985 standard of COBOL, having been replaced by the \nCONVERTING  clause of the INSPECT  statement.  New programs should be coded to use INSPECT CONVERTING  \nrather than TRANSFORM . \nSee Also\u2026  \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The INSPECT  Statement  6.2.24.3  \n \n \n  \nTRANSFORM identifier -1FROM TOliteral -1\nidentifier -2literal -2\nidentifier -3", "start_char_idx": 303, "end_char_idx": 1392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76975238-8e92-4bfb-a98d-5ad1f514fb63": {"__data__": {"id_": "76975238-8e92-4bfb-a98d-5ad1f514fb63", "embedding": null, "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "931e986f-63a7-4835-b289-ea8ae5f24f6e", "node_type": "4", "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "563aaf16c693cf42d03907d8e1fd0fc390c32e48222d926e7d36e6adc7c19881", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6aeb8a71-2912-40eb-9639-5e0abac2932b", "node_type": "1", "metadata": {}, "hash": "79ce985c4a1c083f5350f3d5e5ffc6e4bda9abce81d5f0a96fd6cd42ec645165", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-116 6.2.48.  UNLOCK  \nFigure 6-111 - UNLOCK Syntax  \n This statement syncs any as -yet unwritten file I/O buffers \nto the specified file (if any) and releases any record locks \nheld for records belonging to the named file.  \n1. ", "start_char_idx": 0, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6aeb8a71-2912-40eb-9639-5e0abac2932b": {"__data__": {"id_": "6aeb8a71-2912-40eb-9639-5e0abac2932b", "embedding": null, "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "931e986f-63a7-4835-b289-ea8ae5f24f6e", "node_type": "4", "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "563aaf16c693cf42d03907d8e1fd0fc390c32e48222d926e7d36e6adc7c19881", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76975238-8e92-4bfb-a98d-5ad1f514fb63", "node_type": "1", "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c39f4866d56d9cab594bbab1529311aa2a4414928ded9c2d4ac4ee8b443ed604", "class_name": "RelatedNodeInfo"}}, "text": "If file-name -1 is a S ort/Merge work file , no action will be taken.  \n2. Not all GNU COBOL  impl ementations sup port locking .  Whether they do or not depends upon the operating system \nthey were built for and the build options that were used when GNU COBOL  was generated.37  When a program \nusing one of those GNU COBOL  implementations issues a n UNLOCK , it will ignored .  There will be no compiler \nmessage issued.   Buffer syncing, if needed, will still occur.  \nSee Also\u2026  \nRecord Locking  6.1.9.1  \n  \n \n \n  \n                                                                 \n37 The author of this manual \u2013 for example \u2013 uses a GNU COBOL  build for Windows that utilizes the MinGW build/runtime \nenvironment and uses the Berkeley Database module for adv anced file I/O.  That GNU COBOL  build does NOT support LOCKing.  \nGenerally speaking, UNIX builds will support record locking.  \nRECORD\nRECORDSUNLOCK file-name -1", "start_char_idx": 307, "end_char_idx": 1235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f602a83-609b-43bf-8bd2-b2df55ea06cd": {"__data__": {"id_": "9f602a83-609b-43bf-8bd2-b2df55ea06cd", "embedding": null, "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64", "node_type": "4", "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9249bb05af08edf2612a326d2bbdeb03941bc2bed4d46251a2805bfe1dc1ceda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d367960-34c5-4625-8db5-6947de44498b", "node_type": "1", "metadata": {}, "hash": "865d48c1eab93d9e25f2af91cbaa8fe86bd96a089875b92d3e48bef8a126f42a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-117 6.2.49.  UNSTRING  \nFigure 6-112 - UNSTRING Syntax  \n The \nUNSTRING  \nstatement \nparses a \nstring, \nextracting \nany \nnumber of \nsubstrings \nfrom it.  \n1. ", "start_char_idx": 0, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d367960-34c5-4625-8db5-6947de44498b": {"__data__": {"id_": "3d367960-34c5-4625-8db5-6947de44498b", "embedding": null, "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64", "node_type": "4", "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9249bb05af08edf2612a326d2bbdeb03941bc2bed4d46251a2805bfe1dc1ceda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f602a83-609b-43bf-8bd2-b2df55ea06cd", "node_type": "1", "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a7116ff48e8bc11e9d37869487658204c33b5278c5bbbb67b937565bb6fbd326", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a09c23ed-1ef4-4ea1-8b19-5f1686900131", "node_type": "1", "metadata": {}, "hash": "5c697d94766c3a3ef1c89065d2aa3d011be8cc85992c45688f9e19f5392b1abb", "class_name": "RelatedNodeInfo"}}, "text": "Identifier -1 through identifier -5 must be explicitly or implicitly defined as alphanumeric USAGE DISPLAY  data.   Any \nof those identifiers may be group items.    \n2. Literal -1 and literal -2 must be alphanumeric literals.  \n3. Identifier -7 and identifier -8 must be elementary non -edited integer numeri c items.    \n4. Identifier -7 must have a value greater than 0.  \n5. Identifier -1 is known as the source string .  Identifier -4 is known as the destination field . \n6. The source string will be broken up into substrings starting from the character position indicated by identifier -7 (or \nfrom position 1 if there is no WITH POINTER  clause).  If the initial value of identifier -7 is less than 1 or greater than \nthe size of the source string, an \u201coverflow\u201d condition results.  An overflow condition can be detected and dealt with \nusing the optional overflow -clause . \n", "start_char_idx": 237, "end_char_idx": 1120, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a09c23ed-1ef4-4ea1-8b19-5f1686900131": {"__data__": {"id_": "a09c23ed-1ef4-4ea1-8b19-5f1686900131", "embedding": null, "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64", "node_type": "4", "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9249bb05af08edf2612a326d2bbdeb03941bc2bed4d46251a2805bfe1dc1ceda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d367960-34c5-4625-8db5-6947de44498b", "node_type": "1", "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a1f47486903ce1485ddec7fc54bccb1b894bd8455b31b07c258fb904a12cfec1", "class_name": "RelatedNodeInfo"}}, "text": "7. Substrings are identified by using the various delimiter strings  specified on the DELIMITED BY  clause  as inter -\nsubstring separators.   Using the \u201c ALL\u201d option allows a delimiter sequence to be an arbitrarily long sequence of \noccurrences of the delimiter literal whereas its absence treats each occurrence as a separate delimiter.   When \nmultiple delimiters are specified, they will be looked f or in the source string in the sequence in which they are \ncoded.    \n8. Two consecutive delimiter sequences will identify a null substring .   \n9. Each destination field may have a n optional  DELIMITER  clause.  If a DELIMITER  clause is specified, identifier -5 will \nhave the delimiter character string used to identify the substring for the destination field MOVE d to it  if and only if  \ndata was actually found for that destination field (if not, identifier -5 remains unchanged).  \n10. Each destination field may have an optional COUNT  clause.  If a COUNT  clause is specified, identifier -6 will have the \nsize of the substring for the destination field MOVE d to it  if and only if  data was actually found for that destination \nfield (if not, identifier -6 remains unchanged).  \n11. The TALLYING  clause \u2013 if present \u2013 will be incremented  by 1 each time a parsed substring is MOVE d to a \ndestination field.   \n12. None of identifier -4, identifier -5, identifier -6, identifier -7 or identifier -8 are initialized by the UNSTRING  statement.  \nYou need to do that yourself via MOVE  or INITIALIZE . \nUNSTRING identifier -1\nDELIMITED BY                   [ OR ] \u2026\nINTO{ identifier -4[ DELIMITER IN identifier -5] [ COUNTIN identifier -6] } \u2026\n[ WITH POINTER identifier -7]\n[ TALLYING IN identifier -8]\n[ overflow -clause]\n[ END-UNSTRING ][ ALL] literal -2\nidentifier -3[ ALL] literal -1\nidentifier -2", "start_char_idx": 1120, "end_char_idx": 2937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05727bc2-4777-4def-852a-2eb724798a32": {"__data__": {"id_": "05727bc2-4777-4def-852a-2eb724798a32", "embedding": null, "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77075934-e8a7-4531-a24a-d04820dc0948", "node_type": "4", "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "51ad04d48fbae4a52aa794fa02a8bbd834d3d396d6ec0518738abf529f4c1d7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40ecb72a-4984-4a52-a3ff-68fea1e80feb", "node_type": "1", "metadata": {}, "hash": "b82abb593bc4d5af445f8a0866073b2b940cd892eba3ecd4a3609c58bce8f684", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-118 The following sample program illustrates the UNSTRING  statement.  \nIDENTIFICATION DIVISION.  \n", "start_char_idx": 0, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40ecb72a-4984-4a52-a3ff-68fea1e80feb": {"__data__": {"id_": "40ecb72a-4984-4a52-a3ff-68fea1e80feb", "embedding": null, "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77075934-e8a7-4531-a24a-d04820dc0948", "node_type": "4", "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "51ad04d48fbae4a52aa794fa02a8bbd834d3d396d6ec0518738abf529f4c1d7c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05727bc2-4777-4def-852a-2eb724798a32", "node_type": "1", "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9e5b9fbe384685340bb15472fe245758953e0fcbef6045ff08fb178ba70677c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13a3e385-2554-4316-a285-20d54f94c404", "node_type": "1", "metadata": {}, "hash": "13fff365b7a2655a122ab907072e979c3276031811073761ccedee7906d52cd5", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. DEMOUNSTRING.  \nDATA DIVISION.  \nWORKING-STORAGE SECTION.  \n01  Full -Name                   PIC X(40).  \n01  Parsed -Info. \n    05 Last-Name                PIC X(15).  \n    05 First -Name               PIC X(15).  \n    05 MI                       PIC X(1).  \n    05 Delim -LN                 PIC X(1).  \n    05 Delim -FN                 PIC X(1).  \n    05 Delim -MI                 PIC X(1).  \n    05 Count -LN                 BINARY -CHAR. \n    05 Count -FN                 BINARY -CHAR. \n    05 Count -MI                 BINARY -CHAR. \n    05 Tallying -Ctr             BINARY -CHAR. \nPROCEDURE DIVISION.  \n", "start_char_idx": 178, "end_char_idx": 799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13a3e385-2554-4316-a285-20d54f94c404": {"__data__": {"id_": "13a3e385-2554-4316-a285-20d54f94c404", "embedding": null, "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77075934-e8a7-4531-a24a-d04820dc0948", "node_type": "4", "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "51ad04d48fbae4a52aa794fa02a8bbd834d3d396d6ec0518738abf529f4c1d7c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40ecb72a-4984-4a52-a3ff-68fea1e80feb", "node_type": "1", "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9b7c857395b51aae9596f6f8cf9cbc18618bfb1c7d35ad414ce50e3004e1e4ab", "class_name": "RelatedNodeInfo"}}, "text": "P1. PERFORM UNTIL EXIT  \n        DISPLAY \"Enter Full Name (null quits):\"  \n            WITH NO ADVANCING  \n        ACCEPT Full -Name \n        IF Full-Name = SPACES  \n            EXIT PERFORM  \n        END-IF \n        INITIALIZE Parsed -Info \n        UNSTRING Full -Name DELIMITED BY \", \"  \n                                     OR \",\"  \n                                     OR ALL SPACES  \n           INTO Last -Name  DELIMITER IN Delim -LN  \n                           COUNT IN Count -LN \n                First-Name DELIMITER IN Delim -FN  \n                           COUNT IN Count -FN \n                MI         DELIMITER IN Delim -MI  \n                           COUNT IN Count -MI \n           TALLYING Tallying -Ctr \n        DISPLAY \"First-Name=\" First -Name        \n                \" Delim='\"    Delim -FN  \n                \"' Count=\"    Count -FN \n        DISPLAY \"MI        =\" MI \"              \"  \n                \" Delim='\"    Delim -MI  \n                \"' Count=\"    Count -MI \n        DISPLAY \"Last -Name =\" Last -Name         \n                \" Delim='\"    Delim -LN  \n                \"' Count=\"    Count -LN \n        DISPLAY \"Tally=     \" Tallying -Ctr \n    END-PERFORM \n    DISPLAY \"Bye!\"  \n    STOP RUN  \n    . \n The following is sample output from the program:  \nEnter Full Name (null quits): Cutler, Gary L  \nFirst-Name=Gary            Delim=' ' Count=+004  \nMI        =L               Delim=' ' Count=+001  \nLast-Name =Cutler          Delim=',' Count=+006  \nTally=     +003  \nEnter Full Name (null quits): Snoddgrass,Throckmorton,P  \nFirst-Name=Throckmorton    Delim=',' Count=+012  \nMI        =P               Delim=' ' Count=+001  \nLast-Name =Snoddgrass      Delim=',' Count=+010  \nTally=     +003  \nEnter Full Name (null quits): Munster   Herman  \nFirst-Name=Herman          De lim=' ' Count=+006  \nMI        =                Delim=' ' Count=+000  \nLast-Name =Munster         Delim=' ' Count=+007  \nTally=     +002  \nEnter Full Name (null quits):  \nBye! \n \nSee Also\u2026  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nHandling Overflow ( ON OVERFLOW ) 6.1.12.5  \n The INITIALIZE  Statement  6.2.22  \nThe MOVE  Statement  6.2.26  \n \n  ", "start_char_idx": 799, "end_char_idx": 2951, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3895072f-d445-4832-a69f-f312070c68f4": {"__data__": {"id_": "3895072f-d445-4832-a69f-f312070c68f4", "embedding": null, "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd8d4023-3ddf-44a6-a122-d884032c2cf5", "node_type": "4", "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a2e0b30ac038d6471a48a7f31f5c2038692adbb7f2876d039c12596ab9c372f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dedd692-1f51-4eb8-b932-dd9740fd7266", "node_type": "1", "metadata": {}, "hash": "83d08c00552f977cc1f69015c21db69c42dda5e62c0563688220597db14b88d5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-119 6.2.50.  WRITE  \nFigure 6-113 - WRITE Syntax  \n The WRITE  statement writes a new record \nto an OPEN  file. \n1. Record -name -1 must be defined as an 01 -level record subordinate to the File Description  (FD) of a file that is \ncurrently OPEN  for OUTPUT , I-O or EXTEND . \n2. Literal -1 or identifier -1 must be explicitly or implicitly defined as alphanumeric USAGE DISPLAY  data.  Identifier -1 \nmay be a group item.  \n3. The optional FROM  clause will cause literal -1 or identifier -1 to be impl icitly MOVE d into record -name -1 prior to \nwriting record -name -1 to the file.  \n4. The optional LOCK  clauses allow you to lock the newly -written record ( LOCK ) or to explicitly state that it should not \nbe locked ( NO LOCK ).  The default is WITH NO LOCK . \n5. The optiona l invalid -key-clause  is legal only on WRITE  statements used against for ORGANIZATION RELATIVE  or \nORGANIZATION INDEXED  files; it may be used to detect and recover from situations where a non -zero FILE STATUS  \nresults from the WRITE  (as might be the case if you try to WRITE  a relative file record that already exists (use \nREWRITE  instead) or attempt to duplicate a RECORD KEY  value when WRITE ing to an INDEXED  file. \nThe following points apply exclusivel y to files SELECT ed and ASSIGN ed to a LINE ADVANCING   file, or to files with an \nORGANIZATION  of LINE SEQUENTIAL  \n6. The ADVANCING  and END -OF-PAGE  clauses are intended for use only with these types of  files.  Using this clause \nwith any other ORGANIZATION  will either be rejected outright by the compiler ( ORGANIZATION IS RELATIVE  or \nORGANIZATION IS INDEXED ) or may introduce unwanted characters into the file ( ORGANIZATION IS RECORD \nBINARY SEQUENTIAL ). \n7. ", "start_char_idx": 0, "end_char_idx": 1808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dedd692-1f51-4eb8-b932-dd9740fd7266": {"__data__": {"id_": "5dedd692-1f51-4eb8-b932-dd9740fd7266", "embedding": null, "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd8d4023-3ddf-44a6-a122-d884032c2cf5", "node_type": "4", "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a2e0b30ac038d6471a48a7f31f5c2038692adbb7f2876d039c12596ab9c372f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3895072f-d445-4832-a69f-f312070c68f4", "node_type": "1", "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3658794880d784b1936a882b1db5050d4d7b1772cf9fdaa01f46a437c5f9a04a", "class_name": "RelatedNodeInfo"}}, "text": "Both of these file types will use an end -of-record delimiter character sequence to signify where one record ends \nand the next record begins.  This delim iter sequence may be any of the following:  \na. A line -terminator sequence consisting of an ASCII carriage -return/line -feed character sequence (X\u20190D0A\u2019) if you \nare running a MinGW or native Windows build of GNU COBOL  \nb. A line -terminator sequence consisting of an ASCII line -feed character (X\u20190A\u2019) if you are running a Cygwin, Linix, \nUnix or OSX build of GNU COBOL  \nc. An ASCII formfeed character  \n8. If no ADVANCING  clause is specified on a WRITE  to an ORGANIZATION LINE SEQUENTIAL  file, BEFORE ADVANCING \nWRITE record -name -1\n[ FROM ]\nWITH LOCK\nWITH NOLOCK\n[          ADVANCING ]\n[ ATEND-OF-PAGE| EOP imperative -statement -1]\n[ NOTAT END-OF-PAGE| EOP imperative -statement -2]\n[ invalid -key-clause]\n[ END-WRITE]literal -1\nidentifier -1\nAFTER\nBEFOREliteral -2\nidentifier -2LINE|LINES\nmnemonic -name -1\nPAGE", "start_char_idx": 1808, "end_char_idx": 2787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99c863f4-03ad-49ac-ad88-3933726c5ec8": {"__data__": {"id_": "99c863f4-03ad-49ac-ad88-3933726c5ec8", "embedding": null, "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90", "node_type": "4", "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "95ccd4897cd8e8b8143a531571311908708c6e273c2e838e8f520fe4783ebb59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f637d46-42e4-420b-954e-71ea3024fb35", "node_type": "1", "metadata": {}, "hash": "1b91223b2e6dded58cd18fe6fb9e8232bf6c45b578a6e8bc3c8e6215c6b5ff9e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-120 The following points apply exclusivel y to files SELECT ed and ASSIGN ed to a LINE ADVANCING   file, or to files with an \nORGANIZATION  of LINE SEQUENTIAL  \n1 LINE will be assumed.  \n9. ", "start_char_idx": 0, "end_char_idx": 269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f637d46-42e4-420b-954e-71ea3024fb35": {"__data__": {"id_": "9f637d46-42e4-420b-954e-71ea3024fb35", "embedding": null, "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90", "node_type": "4", "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "95ccd4897cd8e8b8143a531571311908708c6e273c2e838e8f520fe4783ebb59", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99c863f4-03ad-49ac-ad88-3933726c5ec8", "node_type": "1", "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9ea01ddb7b44aa35805647f5ab1399eb3da81478447916890354f545edcb1cd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04d14bae-6fe1-4a03-a1b7-1eb924a2bd10", "node_type": "1", "metadata": {}, "hash": "e9e3e232666170cd9e911cd870b8e7a611d2e749f1347e554e40db169e4fbebd", "class_name": "RelatedNodeInfo"}}, "text": "If no ADVANCING  clause is specified on a WRITE  to a LINE ADVANCING  file, AFTER ADVANCING 1 LINE  will be \nassumed.  \n10. When BEFORE ADVANCING  is used (or implied), the record is written to the file before the ADVANCIN G action \nwrites line -terminator characters to the file.    \n11. If AFTER ADVANCING  is used (or implied), the ADVANCING  action takes place and then the record data is written \nto the file.  \n12. The ADVANCING n LINES  clause will introduce the specified number of line -terminator character sequences into \nthe file either before the written record ( AFTER ADVANCING ) or after the written record ( BEFORE ADVANCING ). \n13. If the LINAGE  clause i s absent  from the file\u2019s FD: \na. The ADVANCING PAGE  clause will introduce an ASCII formfeed character into the file either before the written \nrecord ( AFTER PAGE ) or after the written record ( BEFORE ADVANCING ).  \nb. Management of areas on the printed page such as top-of page headers, bottom -of-page footers, dealing with \n\u201cfull page\u201d situations and the like are the complete responsibility of the programmer  \n14. If the LINAGE  clause is present  in the file\u2019s FD:  \na. The ADVANCING PAGE  clause will introduce the appropriate numb er of line -terminator character sequences \ninto the file either before the written record ( AFTER ADVANCING ) or after the written record ( BEFORE \nADVANCING ) so as to force the printer to automatical ly advance to a new sheet of paper when the file prints.   \nWhen LINAGE is specified, no formfeed characters will be generated.  Instead, it is assumed that the printer to \nwhich the report will be printed will be loaded with special forms with specific chara cteristics as to page body \nsize (the total number of printable lines on the paper) and skipped top - and/or bottom -of-page margins within \nwhich printing physically could  occur, but in the case of these forms shouldn\u2019t.  \nb. Management of areas on the printed pag e such as top -of page headers, bottom -of-page footers, dealing with \n\u201cfull page\u201d situations and the like are now the joint responsibility of the programmer and the GNU COBOL  run-\ntime library, which provides tools such as the LINAGE -COUNTER  special; register  and the AT END -OF-PAGE  \nclause on the WRITE  statement to deal with page formatting issues.  \nc. The AT END -OF-PAGE  and NOT AT END -OF-PAGE  clauses are legal only for ORGANIZATION LINE SEQUENTIAL  \nor ORGANIZATION R ECORD BINARY SEQUENTIAL  files whose file descriptions contain a LINAGE  clause.  The AT \nEND -OF-PAGE  clause will be triggered (thus executing imperative -statement -1) if the WRITE  statement \nintroduces a data line or line -feed character into the file at a line  position within the Page Footer area (see \nFigure 5-3).  The NOT AT END -OF-PAGE  clause will be triggered (thus executing imperative -statement -2) if no \nend-of-page condition occurred during the WRITE .   \n \nA report is to be written to a special form that consists of \n24 total possible printed lines; the layout of the report is \nshown to the right.  \n", "start_char_idx": 269, "end_char_idx": 3326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04d14bae-6fe1-4a03-a1b7-1eb924a2bd10": {"__data__": {"id_": "04d14bae-6fe1-4a03-a1b7-1eb924a2bd10", "embedding": null, "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90", "node_type": "4", "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "95ccd4897cd8e8b8143a531571311908708c6e273c2e838e8f520fe4783ebb59", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f637d46-42e4-420b-954e-71ea3024fb35", "node_type": "1", "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "799701a91815b27c30a80684f156b932480c37de9b6f15b031a91c14af38d197", "class_name": "RelatedNodeInfo"}}, "text": "The GNU COBOL  LINAGE clause that describes this layout \nis as follows.  Colors in the code below relate to the \ncolored areas on the page layout.  \nLINAGE IS  20 LINES  \nFOOTING 19  \nLINES AT TOP 2  \nLINES AT BOTTOM 2  \nThe total vertical size of the form (as measured in \nprintable lines) is the sum of the LINES AT TOP , LINAGE  \nand LINES AT BOTTOM  clause values.  The FOOTING  \nclause indicates at what relative line number within the \n16-LINEDETAIL AREA2-Line Page Header\n(2nd line blank)\n2-Line Page Footer\n(1stline blank)2 Blank Lines\n2 Blank Lines1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n241\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n2020-Line Page Body", "start_char_idx": 3326, "end_char_idx": 4012, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "626d8a1f-ffaa-4c04-9360-93e6ca7fffde": {"__data__": {"id_": "626d8a1f-ffaa-4c04-9360-93e6ca7fffde", "embedding": null, "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85039423-8416-4d2b-8196-cde99cddd876", "node_type": "4", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d181ed4ebf48354981c83109aee068f3d4588e5092359ee21f4a73f3a1c933d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70f41368-a063-4137-8a18-1639682d265b", "node_type": "1", "metadata": {}, "hash": "878c1f490210b3ca4e1303bfccf9c3c71c7d0274c1836ff8f8c8b53fbe17c8dc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-121 page body (the value specified on the LINAGE  clause) the detail area is to end and the footer area is to begin.  It is at the \npoint where printing reaches this FOOTING  point that an END -OF-PAGE  cond ition exists.  \nThe following program generates a test report (of 25 detail lines) using the page layout just described.  \n IDENTIFICATION DIVISION.  \n ", "start_char_idx": 0, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70f41368-a063-4137-8a18-1639682d265b": {"__data__": {"id_": "70f41368-a063-4137-8a18-1639682d265b", "embedding": null, "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85039423-8416-4d2b-8196-cde99cddd876", "node_type": "4", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d181ed4ebf48354981c83109aee068f3d4588e5092359ee21f4a73f3a1c933d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "626d8a1f-ffaa-4c04-9360-93e6ca7fffde", "node_type": "1", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7e7654c5608adf1e94cb1f73b567766e7a3daabe9752bc410e3f039ab21ac60b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bfb8b4d-2feb-4e27-a377-d07566abe3b4", "node_type": "1", "metadata": {}, "hash": "abb17ddc1242c7aba11404c7fe009f5dfb50242053dd0b205610856c46a79539", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. DEMOLINAGE.  \n ENVIRONMENT DIVISION.  \n INPUT-OUTPUT SECTION.  \n FILE-CONTROL.  \n     SELECT Data -File            ASSIGN TO  \n                                 \"linage-ls.txt\" \n                                 LINE SEQUENTIAL.  \n DATA DIVISION.  \n FILE SECTION.  \n FD  Data -File \n     LINAGE IS 20 LINES  \n     FOOTING 19 \n     LINES AT TOP 2  \n     LINES AT BOTTOM 2.  \n 01  Data-Rec. \n     05 FILLER                   PIC X(7).  \n     05 DR-Write-No              PIC 9(2).  \n     05 FILLER                   PIC X(28).  \n     05 DR-LINAGE-COUNTER        PIC 9(3).  \n WORKING-STORAGE SECTION.  \n 01  Flags.  \n     05 Report -Complete -Flag     PIC X(1).  \n        88 Report -Complete VALUE 'Y' FALSE IS 'N'.  \n 01  I                           PIC 9(2).  \n PROCEDURE DIVISION.  \n ", "start_char_idx": 439, "end_char_idx": 1232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bfb8b4d-2feb-4e27-a377-d07566abe3b4": {"__data__": {"id_": "5bfb8b4d-2feb-4e27-a377-d07566abe3b4", "embedding": null, "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85039423-8416-4d2b-8196-cde99cddd876", "node_type": "4", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d181ed4ebf48354981c83109aee068f3d4588e5092359ee21f4a73f3a1c933d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70f41368-a063-4137-8a18-1639682d265b", "node_type": "1", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3188a8e3d35467221ba5fec0c1bdec842dd7c322f33f2c137293fe9659e930c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c42952f7-b9d6-40cd-abef-16d840cfcc72", "node_type": "1", "metadata": {}, "hash": "8a910abdccd48005966223f98ca71b867931674b38d4a7fa139602efd3f70d71", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n*>--------------------  \n*> Open the report file and print the initial page  \n*> header  \n*>--------------------  \n     OPEN OUTPUT Data -File \n     SET Report -Complete TO FALSE  \n     PERFORM 100 -Page-Header \n*>--------------------  \n*> Print 25 report detail lines  \n*>--------------------  \n     PERFORM VARYING I FROM 1 BY 1 UNTIL I > 25  \n         MOVE \"Detail NN            LINAGE -COUNTER=\"  \n           TO Data-Rec \n         MOVE I TO DR-Write-No \n         MOVE LINAGE-COUNTER OF Data -File  \n           TO DR-LINAGE-COUNTER \n         WRITE Data -Rec \n             AT EOP      \n                 IF LINAGE -COUNTER >= 19 \n                     PERFORM 200 -Page-Footer \n                     PERFORM 100 -Page-Header \n                 ELSE \n                     PERFORM 100 -Page-Header \n                 END-IF \n         END-WRITE \n     END-PERFORM \n*>--------------------  \n*> Print enou gh blank detail lines to produce the  \n*> final page  footer \n*>--------------------  \n     SET Report -Complete TO TRUE  \n     PERFORM UNTIL LINAGE -COUNTER OF DATA-FILE >= 19 \n         MOVE '                     LINAGE -COUNTER='  \n           TO Data-Rec \n         MOVE LINAGE-COUNTER OF Data -File  \n           TO DR-LINAGE-COUNTER \n         WRITE Data -Rec \n             AT EOP      \n                 PERFORM 200 -Page-Footer \n                EXIT PERFORM  \n         END-WRITE \n     END-PERFORM And here are the pages of the generate d report:  \n1.  \n2.  \n", "start_char_idx": 1232, "end_char_idx": 2700, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c42952f7-b9d6-40cd-abef-16d840cfcc72": {"__data__": {"id_": "c42952f7-b9d6-40cd-abef-16d840cfcc72", "embedding": null, "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85039423-8416-4d2b-8196-cde99cddd876", "node_type": "4", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d181ed4ebf48354981c83109aee068f3d4588e5092359ee21f4a73f3a1c933d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bfb8b4d-2feb-4e27-a377-d07566abe3b4", "node_type": "1", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ac7936363ea231db6a3400c30f0796f861be112b8c675cc67b55f0050dc0bb6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc93cc7e-5092-4892-a108-bea46bcd52ee", "node_type": "1", "metadata": {}, "hash": "6cc34562b903a7c657b1752ceafaa4773b7151bb03ecc6dc22da96fc9bf3fb17", "class_name": "RelatedNodeInfo"}}, "text": "3. Page Header          LINAGE -COUNTER= 001  \n4.  \n5. Detail 01            LINAGE -COUNTER= 003  \n6. Detail 02            LINAGE -COUNTER= 004  \n7. Detail 03            LINAGE -COUNTER= 005  \n8. Detail 04            LINAGE -COUNTER= 006  \n9. Detail 05            LINAGE -COUNTER= 007  \n10. Detail 06            LINAGE -COUNTER= 008  \n11. Detail 07            LINAGE -COUNTER= 009  \n12. Detail 08            LINAGE -COUNTER= 010  \n13. Detail 09            LINAGE -COUNTER= 011  \n14. Detail 10            LINAGE-COUNTER= 012  \n15. Detail 11            LINAGE -COUNTER= 013  \n16. Detail 12            LINAGE -COUNTER= 014  \n17. Detail 13            LINAGE -COUNTER= 015  \n18. Detail 14            LINAGE -COUNTER= 016  \n19. Detail 15            LINAGE -COUNTER= 017  \n20. Detail 16            LINAGE -COUNTER= 018  \n21.  \n22. Page Footer          LINAGE -COUNTER= 020  \n23.  \n24.  \n", "start_char_idx": 2700, "end_char_idx": 3580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc93cc7e-5092-4892-a108-bea46bcd52ee": {"__data__": {"id_": "cc93cc7e-5092-4892-a108-bea46bcd52ee", "embedding": null, "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85039423-8416-4d2b-8196-cde99cddd876", "node_type": "4", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d181ed4ebf48354981c83109aee068f3d4588e5092359ee21f4a73f3a1c933d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c42952f7-b9d6-40cd-abef-16d840cfcc72", "node_type": "1", "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0ae62cb8fbd00ad23ff928a5a0c0170cbe434df139b5ad34d7288df88397068c", "class_name": "RelatedNodeInfo"}}, "text": "1.  \n2.  \n3. Page Header          LINAGE -COUNTER= 001  \n4.  \n5. Detail 17            LINAGE -COUNTER= 003  \n6. Detail 18            LINAGE -COUNTER= 004  \n7. Detail 19            LINAGE -COUNTER= 005  \n8. Detail 20            LINAGE -COUNTER= 006  \n9. Detail 21            LINAGE -COUNTER= 007  \n10. Detail 22            LINAGE -COUNTER= 008  \n11. Detail 23            LINAGE -COUNTER= 009  \n12. Detail 24            LINAGE-COUNTER= 010  \n13. Detail 25            LINAGE -COUNTER= 011  \n14.                      LINAGE-COUNTER= 012  \n15.                      LINAGE-COUNTER= 013  \n16.                      LINAGE-COUNTER= 014  \n17.                      LINAGE-COUNTER= 015  \n18.                      LINAGE-COUNTER= 016  \n19.                      LINAGE-COUNTER= 017  \n20.                      LINAGE-COUNTER= 018  \n21.  \n22. Page Footer          LINAGE -COUNTER= 020  \n23.  \n24.  \n ", "start_char_idx": 3580, "end_char_idx": 4464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b8e6a2b-8266-43e5-83b5-3f8447f695b5": {"__data__": {"id_": "4b8e6a2b-8266-43e5-83b5-3f8447f695b5", "embedding": null, "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10370bc2-338f-48f3-b0e0-e21eba5e013c", "node_type": "4", "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0e51a15945be2633beb44645bf1890ef93ae98bcd9155726b1fa95e3fa14d48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bffedf82-fda0-48f0-bdee-91047df8e757", "node_type": "1", "metadata": {}, "hash": "9d163edca8853c627b84afb0bb055c66171d97bd8d5507158df3dc61b8c8efac", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  PROCEDURE DIVISION  \n \n11FEB2012 Version   6-122 *>--------------------  \n** All done!  \n*>--------------------  \n     CLOSE Data -File  \n     STOP RUN  \n     . \n ", "start_char_idx": 0, "end_char_idx": 197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bffedf82-fda0-48f0-bdee-91047df8e757": {"__data__": {"id_": "bffedf82-fda0-48f0-bdee-91047df8e757", "embedding": null, "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10370bc2-338f-48f3-b0e0-e21eba5e013c", "node_type": "4", "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0e51a15945be2633beb44645bf1890ef93ae98bcd9155726b1fa95e3fa14d48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b8e6a2b-8266-43e5-83b5-3f8447f695b5", "node_type": "1", "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "47c9e638ae7667c1f3432ecb7f2b95bae76299e510f09cfde6554eb011b0f0e5", "class_name": "RelatedNodeInfo"}}, "text": "100-Page-Header. \n     MOVE \"Page Header          LINAGE -COUNTER=\"  \n       TO Data-Rec \n     MOVE LINAGE-COUNTER OF Data -File TO \n       DR-LINAGE-COUNTER \n     WRITE Data -Rec BEFORE ADVANCING 2 LI NES \n     . \n 200-Page-Footer. \n     WRITE Data -Rec FROM SPACES  \n         BEFORE ADVANCING 1 LINES  \n     MOVE \"Page Footer          LINAGE -COUNTER=\"  \n       TO Data-Rec \n     MOVE LINAGE-COUNTER OF Data -File \n       TO DR-LINAGE-COUNTER \n     IF Report -Complete  \n*>--------------------  \n*> \"BEFORE 0 LINES\" Won't push into the next page  \n*>--------------------  \n         WRITE Data -Rec BEFORE ADVANCING 0 LINES  \n     ELSE \n         WRITE Data -Rec BEFORE ADVANCING PAGE  \n     END-IF \n     . \nSee Also\u2026  \nTypes of Files  1.3.3.5  \nDefining File Characteristics (SELECT)  4.2.1  \nFILE-STATUS Values  Figure \n4-15 \nDescribing the Structure of a File (FD/SD)  5.1 \nDescribing Record Layouts  5.1.1  \n Storage Format of Data ( USAGE ) 5.2.1.11  \nHandling Invalid Keys ( INVALID KEY ) 6.1.12.3  \nThe CLOSE  Statement  6.4.7  \nThe MOVE  Statement  6.2.26  \nThe OPEN  Statement  6.4.29  \nThe REWRITE  Statement  6.4.36  \n ", "start_char_idx": 197, "end_char_idx": 1327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb964db0-b684-4e3e-a8c3-22a31d2e3eaf": {"__data__": {"id_": "eb964db0-b684-4e3e-a8c3-22a31d2e3eaf", "embedding": null, "metadata": {"page_label": "211", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1074c79-82a4-4ff2-aa2c-036126c86bca", "node_type": "4", "metadata": {"page_label": "211", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6a5e2070de13cf3ade0f1dcc2de461e0e5348797d4a1e33b56afa97edac078ba", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   6-1   ", "start_char_idx": 0, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61f61a63-4908-4eaa-9c1b-6e75d3127b6c": {"__data__": {"id_": "61f61a63-4908-4eaa-9c1b-6e75d3127b6c", "embedding": null, "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68790215-4530-499c-9367-48e4d1731a1c", "node_type": "4", "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7db19c85417a87acf5a00819ed44b65926157a65556888c59656b0d09c95217a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03", "node_type": "1", "metadata": {}, "hash": "f322d7b18fad894354c9578a6da9815719a832066d277a684025f60b4ec1a2e6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-2 7. Sub -Programming with GNU COBOL  \n7.1. Subprograms, Subroutines and User -Defined Functions  \nSimply stated, a SUBPROGRAM  is a program that is invoked by another program; the subprogram performs whatever \nits designed operations are and \u2013 when complete \u2013 typically returns control back to the program that invoked it.  \nThere are two different types of subprograms supported by GNU COBOL  \u2013 subroutines and user -defined functions.  \nThe distinction between these two subprogram types lies in the manner in which they are executed . \nWhen program \u201cA\u201d invokes subprogram \u201cB\u201d as a SUBROUTINE , it does so using a special statement  dedicated to that \nfunction \u2013 the CALL  statement  \u2013 just as if \u201cB\u201d were one of the built -in system subroutines.  When program \u201cA\u201d invokes \nprogram \u201cB\u201d as a USER -DEFIN ED FUNCTION , it does so in a manner identical to how \u201cB\u201d would have been invoked had \nit been one of the many built -in intrinsic functions.   In either instance, program \u201cA\u201d is referred to as the CALLING \nPROGRAM  while program - \u201cB\u201d is known as the CALLED PROGRAM .  GNU COBOL  program s may be a calling progra m, a \ncalled program or both.  A program written in t he C programming language may serve as either the calling or called \nprogram too.  A called program may act as a calling program to a called program.  When a calling program does not \nserve as a called program to any program, that calling program is known as  a MAIN PROGRAM .   \nBoth subroutines and user -defined functions may return a value.  ", "start_char_idx": 0, "end_char_idx": 1612, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03": {"__data__": {"id_": "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03", "embedding": null, "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68790215-4530-499c-9367-48e4d1731a1c", "node_type": "4", "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7db19c85417a87acf5a00819ed44b65926157a65556888c59656b0d09c95217a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61f61a63-4908-4eaa-9c1b-6e75d3127b6c", "node_type": "1", "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "70d8eb282d508954ebb86419f12d6a00fc554e5aec2c4b9d60cffb8c3b57bbb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8faa2299-0148-4e5a-9941-ecba0f691325", "node_type": "1", "metadata": {}, "hash": "eda2a323e7c3366de5e728ff43bfeb1eace18319e0fdfd2c2ea1a2eabec9ff0a", "class_name": "RelatedNodeInfo"}}, "text": "The value they return will be  a USAGE BINARY LONG  \nSIGNED  integer in the range -2147483648 to +2147483647.  This value will be available in the register RETURN -CODE  \nand also as the value of the data item specified on the RETURNING /GIVING  clause of a subroutine\u2019s CALL . \nSee Also\u2026  \nStorage Format of Data ( USAGE ) 5.2.1.11  \nIntrinsic Functions  6.1.7  \nSpecial Registers  6.1.13  \n The CALL  Statement  6.4.5  \nBuilt -in System Subroutines  8.3 \n \n7.2. Specifying and Using Alternate Entry Points  \nAny subroutine  (but not a user -defined function) may have multiple entry -points defined within it.  ", "start_char_idx": 1612, "end_char_idx": 2225, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8faa2299-0148-4e5a-9941-ecba0f691325": {"__data__": {"id_": "8faa2299-0148-4e5a-9941-ecba0f691325", "embedding": null, "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68790215-4530-499c-9367-48e4d1731a1c", "node_type": "4", "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7db19c85417a87acf5a00819ed44b65926157a65556888c59656b0d09c95217a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03", "node_type": "1", "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1b2c5cccf2373e7db28a80b257c28c0ff9bf1d154a0e6eb510ef700209f7a1ac", "class_name": "RelatedNodeInfo"}}, "text": "This means the \nsubroutine could be called either via a \u201c CALL  \u2018effective -program -name \u201d or a \u201c CALL  \u2018entry -point \u2019\u201d statement.  There \nmay be any number of alternate entry -points defined within a subroutine.  \nThe intent of alternate entry -points is to provide multiple ways in which the same subroutine could be CALL ed, under \nthe assumption that each entry -point will provide some different functionality to the calling program.  For example, if \nyou wished to write a subroutine that manipulates \u201cstudent\u201d records in a database, you might have the primary entry -\npoint name (section 3) be for the coding that retrieves a student record from the database, while the alternate entry \npoints \u201cADD -STUDENT\u201d, \u201cUPDATE -STUDENT\u201d and \u201cDELETE -STUDENT\u201d provide the alternate f unctions implied by their \nentry -point names.  The alternative to using multiple entry points in your subroutine, by the way, would be to include \nan additional argument to the primary (and only) entry point of the subroutine; this new argument might be name d \n\u201cSTUDENT -FUNCTION\u201d and might have values of \u201cFETCH\u201d, \u201cADD\u201d, \u201cUPDATE\u201d or \u201cDELETE\u201d.  \nThe primary entry -point for any subroutine is always the first executable (and non -DECLARATIVES ) statement in the \nPROCEDURE DIVISION .  The name of that entry -point (the name that will be CALL ed) is the subroutine\u2019s PROGRAM -\nID. \nAlternate entry points are added to a subroutine simply by adding ENTRY  statements to the subroutine.   \nWhen an alternate entry -point is CALL ed, execution within th e subroutine will begin at the first executable statement \nfollowing the ENTRY  statement.  \nSee Also\u2026  \nThe IDENTIFICATION DIVISION  3 \nUsing DECLARATIVES  6.1.4  \n The CALL  Statement  6.4.5  \nThe ENTRY  Statement  6.2.14  \n \n7.3. Dynamic Versus Static Subprograms  ", "start_char_idx": 2225, "end_char_idx": 4030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f2682ad-7a72-4a5c-84c2-6bf4bf229be8": {"__data__": {"id_": "9f2682ad-7a72-4a5c-84c2-6bf4bf229be8", "embedding": null, "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f15c89a8-6c75-49f9-9649-b44454060c33", "node_type": "4", "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a7e800f1ed04b007ec71212c6c024c4577f600fd7566581f844241e214a0492", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc077712-e360-4535-84b0-cff36becd3bb", "node_type": "1", "metadata": {}, "hash": "cedaffcbd9eca19ac6f4f18bc2fcd93d975f5c8411339f13fa30de7e83191fc1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-3 Any subprogram may be either statically or dynamically loaded into memory.  \nSTATIC ALLY -LOADED  (or simply STATIC ) subprograms are part of the same executable file as their calling program and \nare loaded into memory as part of and at the same time as the calling program.  DYNAMICALLY -LOADED  (or \nDYNAMIC ) subprograms  exist as an executable file separate from that conta ining the calling program; these dynamic \nsubprograms are located and l oaded into memory the first time they are executed.  Dynamic subprograms may be \nunloaded from memory via the CANCEL  statement , if desired.  \nThere are no functional differences between static and dynamic subprograms other than how they are compiled and \nwhen they are loaded into memory.  \nHere are the rules about GNU COBOL  dynamically -loadable subprogram modules:  \n1. There may be any number of GNU COBOL  subprograms contained  within a single dynamically -loadable module.  \n2. Dynamically -loadable modules will be named \u201cxxxxxxxx.dll\u201d on a Windows system or \u201cxxxxxxxx.so\u201d on a Unix \nsystem, where \u201cxxxxxxxx\u201d exactly matches, including the usage of upper - and lower -case letters, the prima ry \nentry -point name ( PROGRAM -ID) or an alternate entry point name defined via the ENTRY  statement  of one of the \nGNU COBOL  programs included in that module.  \n3. The first time any of the GNU COBOL  subprograms in the dynamically -loadable module are invoked, the entry -\npoint referenced must be the one for which the \u201c.dll\u201d or \u201c.so\u201d file is named (see rule #2).  \n4. ", "start_char_idx": 0, "end_char_idx": 1623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc077712-e360-4535-84b0-cff36becd3bb": {"__data__": {"id_": "bc077712-e360-4535-84b0-cff36becd3bb", "embedding": null, "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f15c89a8-6c75-49f9-9649-b44454060c33", "node_type": "4", "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a7e800f1ed04b007ec71212c6c024c4577f600fd7566581f844241e214a0492", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f2682ad-7a72-4a5c-84c2-6bf4bf229be8", "node_type": "1", "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cb583c3f9b04ea8a16a7b5fef3c1f4ba0fca235f08e4fb5cc440db569762ee17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cda4cda8-8b59-4fa2-bebf-43d40db9b808", "node_type": "1", "metadata": {}, "hash": "620b09a666a0bee6ba5b4759a435edf1c709bab56fd20601717a11c3b4076734", "class_name": "RelatedNodeInfo"}}, "text": "The dynamically -loadable module file will be sought in the same directory from which the main program was \nloaded.  If it cannot be found there, each director y named in the PATH that is in -effect for the main program\u2019s \nexecution will be searched.  If it still cannot be found, execution will be terminated with an error message \n(\u201clibcob: Cannot find module ' xxxxxxxx '\u201d). \n5. Once the dynamically -loadable module has be en successfully loaded (see rule #3), any of the entry -points \ncontained within it are now available for reference, even if the dynamically -loadable module is subsequently \nCANCEL ed. \nSee Also\u2026  \nThe IDENTIFICATION DIVISION  3 \nThe CANCEL  Statement  6.2.6  \nThe ENTRY  Statement  6.2.14  \n Compiling & Dynamic -Linking Programs  8.1.3.2  \nCompiling & Static -Linking Programs  8.1.3.3  \n \n7.4. Subprogram Execution Flow  \nWhen a subprogram is invoked, the flow of execution will differ slightly depending on whether the subprogram is a \nsubroutine or a user -defined function.  \n", "start_char_idx": 1623, "end_char_idx": 2633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cda4cda8-8b59-4fa2-bebf-43d40db9b808": {"__data__": {"id_": "cda4cda8-8b59-4fa2-bebf-43d40db9b808", "embedding": null, "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f15c89a8-6c75-49f9-9649-b44454060c33", "node_type": "4", "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a7e800f1ed04b007ec71212c6c024c4577f600fd7566581f844241e214a0492", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc077712-e360-4535-84b0-cff36becd3bb", "node_type": "1", "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9785d784225215762ec5eee7a6f4e75e677bf9b495f5bce99a6630f0b16edbb9", "class_name": "RelatedNodeInfo"}}, "text": "7.4.1.  Subroutine Execution Flow  \n1. The calling program issues a statement of the form CALL \u201c entry -point \u201d USING \u2026  to transfer control to the \nsubroutine.  \n2. The called program will be located.  If it is a STATIC subroutine it will already be part of the executable program \nissuing the CALL .  If i t is a DYNAMIC subroutine, it will be located and loaded as needed . \n3. Execution of the calling program is suspended and control will transfer to the called program, as follows:  \na. If the PROGRAM -ID clause of the subprogram included the INITIAL clause (section 3), the program will be \nreinitialized back to its compile -time state.  \nb. LOCAL -STORAGE , if any, will be allocated and initialized.  \nc. Execution will begin at the first executable statement following the subprograms entry -point.  The entry point \nwill be either:  \n The top of the PROCEDURE DIVISION , following any DECLARATIVES  that might be present, if the \nsubprogram was invoked using its primary entry -point name.  ", "start_char_idx": 2633, "end_char_idx": 3637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7aaeef2a-f4c7-4d15-8085-23ddd7d75400": {"__data__": {"id_": "7aaeef2a-f4c7-4d15-8085-23ddd7d75400", "embedding": null, "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8", "node_type": "4", "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17195bc97c467be81b0917f9a27b007ba2f448b6cc0d4a18693e80fa6b06804f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9181075c-0b27-4af4-9471-5ea78ba20c7f", "node_type": "1", "metadata": {}, "hash": "15b19a1af7aafdf7f77d9ce2133243a19fddca6dd0cb7d9d441a04ea07e61d3a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-4 \n The first executable statement following the  ENTRY  statement  naming the entry -point specified on the \nCALL  if the subprogram was invoked using an alternate entry point.  \n4. ", "start_char_idx": 0, "end_char_idx": 274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9181075c-0b27-4af4-9471-5ea78ba20c7f": {"__data__": {"id_": "9181075c-0b27-4af4-9471-5ea78ba20c7f", "embedding": null, "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8", "node_type": "4", "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17195bc97c467be81b0917f9a27b007ba2f448b6cc0d4a18693e80fa6b06804f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7aaeef2a-f4c7-4d15-8085-23ddd7d75400", "node_type": "1", "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fc16710aa271d126ba8383a49e91303d221f9a83efe83e5da960f607f5723832", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9911ae7-0973-4319-b3cf-a4d3b6409e23", "node_type": "1", "metadata": {}, "hash": "45f0b41f434093c32936feb70dc0b2e8d3f87297ea335d236f80ced7df22d1c9", "class_name": "RelatedNodeInfo"}}, "text": "The flow of execution will then progress through the coding of the subprogram as it wou ld with any other \nprogram.  \n5. If the subprogram issues a STOP RUN  statement, program execution ceases and control returns to the operating \nsystem or whatever execution monitor invoked the main program.  \n6. If the subprogram wishes to return control back to the calling program , it will do so  using either the GOBACK  or \nEXIT PROGRAM  statement.  At this time : \na. If the subprograms PROCEDURE DIVISION  header or ENTRY  statements included a RETURNING  clause, the \nvalue of the data item found on that clause is MOVE d to the RETURN -CODE  special register38. \nb. LOCAL -STORAGE , if any, is de -allocated.  \nc. If the calling program included a RETURNING  clause on the CALL  statement that invoked the subprogram, the \nvalue of the  \u201cRETURNING \u201d data item in the subroutine (see # 6.a above)  is MOVE d to that data item.  \nd. Execution will resume back in the calling program with the first executable statement following the CALL  that \ninvoked the subprogram.  \nSee Also\u2026  \nThe IDENTIFICATION DIVISION  3 \nThe DATA DIVISION  5 \nThe PROCEDURE DIVISION  6 \nSpecial Registers  6.1.13  \nUsing DECLARATIVES  6.1.4  \nThe CALL  Statement  6.4.5  \n The ENTRY  Statement  6.2.14  \nThe EXIT PROGRAM Statement  6.2.16  \nThe GOBACK  Statement  6.2.19  \nThe STOP RUN  Statement  6.4.42  \nDynamic vs Static Subprograms  7.3 \n \n7.4.2.  User -Defined Function Execution Flow  \n1. ", "start_char_idx": 274, "end_char_idx": 1742, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9911ae7-0973-4319-b3cf-a4d3b6409e23": {"__data__": {"id_": "d9911ae7-0973-4319-b3cf-a4d3b6409e23", "embedding": null, "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8", "node_type": "4", "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17195bc97c467be81b0917f9a27b007ba2f448b6cc0d4a18693e80fa6b06804f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9181075c-0b27-4af4-9471-5ea78ba20c7f", "node_type": "1", "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eacd1a484bcecf6c922587fe9d18266ff9d770c74ebf760297ff41fb934a6386", "class_name": "RelatedNodeInfo"}}, "text": "The calling program, while in the process of evaluating an expression, encounters a reference to a user -defined \nfunction .  Note that, unlike the built -in intrinsic functions, user -defined functions need never have the \n\u201cFUNCTION \u201d keyword coded in their references; the reason for this is that any program referencing a user -\ndefined function must  include that function in its REPOSITORY  paragraph \u2013 that is sufficient to allow the compiler \nto recognize the function name as a function when it encounters a reference to it.  \n2. The called program which is that user -defined function will be located.  If it is a STATIC user -defined function  it \nwill already be part of the executable program.  If it is a DYNAMIC user -defined function , it will be located and \nloaded.   Note that user -defined functions can only have primary entry points \u2013 the ENTRY  statement is not valid \nwithin a user -defined func tion.  \n3. Execution of the calling program is suspended and control will transfer to the called program, as follows:  \na. LOCAL -STORAGE , if any, will be allocated and initialized.  \nb. Execution will begin at the top of the PROCEDURE DIVISION , following any DECLARATIVES  that might be \npresent.  \n4. The flow of execution will then progress through the coding of the subprogram as it would with any other \nprogram.  \n5. If the subprogram issues a STOP RUN  statement , program execution ceases and control returns to the operating \nsystem or  whatever execution monitor invoked the main program.  \n                                                                 \n38 This behavior can be altered utilizing the CALL -CONVENTION  feature of the SPECIAL -NAMES  paragraph to define a subroutine \ncalling convention that leaves RETURN -CODE  unchanged, and then using that calling convention on the CALL  that invokes the \nsubroutine.  ", "start_char_idx": 1742, "end_char_idx": 3598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a833e759-3e19-4519-b744-e73a1182a428": {"__data__": {"id_": "a833e759-3e19-4519-b744-e73a1182a428", "embedding": null, "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef25f7ae-8b20-49e6-b6cc-31eb4489b5c3", "node_type": "4", "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ad35cf3b1c349b1c22faa11b40271fed6f154601110b7f993278007fc9a49d89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39b250d2-6c9f-4874-8a50-64d0431bb864", "node_type": "1", "metadata": {}, "hash": "9d0f39940d8d193ca910a8a442788bac4da5d2ae8a478a7f6f274625d819911e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-5 6. If the subprogram wishes to return control back to the calling program , it will do so  using either the GOBACK  or \nEXIT FUNCTION  statement.  At this time : \na. The value of the data item found on the user -defined functions PROCEDURE DIVISION RETURNING  clause is \nMOVE d to the RETURN -CODE  special register.  \nb. LOCAL -STORAGE , if any, is de -allocated.  \nc. Execution will resume back in the calling program at the point in the expression evaluation process where the \nreturned value of the function is needed.  At that point, the value in the RETURN -CODE  special register will be \nused for the functions value . \nSee Also\u2026  \nThe REPOSITORY  Paragraph  4.1.3  \nThe DATA DIVISION  5 \nSpecial Registers  6.1.13  \nUsing DECLARATIVES  6.1.4  \nThe ENTRY  Statement  6.2.14  \n The EXIT FUNCTION  Statement  6.2.16  \nThe GOBACK  Statement  6.2.19  \nThe STOP RUN  Statement  6.4.42  \nDynamic vs Static Subprograms  7.3 \n \n7.5. Sharing Data Between Calling and Called Programs  \n7.5.1.  ", "start_char_idx": 0, "end_char_idx": 1085, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39b250d2-6c9f-4874-8a50-64d0431bb864": {"__data__": {"id_": "39b250d2-6c9f-4874-8a50-64d0431bb864", "embedding": null, "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef25f7ae-8b20-49e6-b6cc-31eb4489b5c3", "node_type": "4", "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ad35cf3b1c349b1c22faa11b40271fed6f154601110b7f993278007fc9a49d89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a833e759-3e19-4519-b744-e73a1182a428", "node_type": "1", "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fb105b1c107eeb208e67995647339edee63825d305645368a7bdddcc37edb41", "class_name": "RelatedNodeInfo"}}, "text": "Subprogram Arguments  \n7.5.1.1.  Calling Program Considerations  \nData items defined in a calling program may be passed to either type of  called program (subroutine or user -defined \nfunction) as ARGUMENTS .   \nArguments must be described in both the calling and called programs, and should be described in an identical manner  \nwith regard to the following characteristics:  \n PICTURE  (including both type and length)  \n SIGN  \n SYNCHRONIZED  \n USAGE  \nA subroutine may be passed a maximum of 36 arguments39.  There is no built -in GNU COBOL  limit to how many \narguments a user -defined function may b e passed.  \nWhether or not changes made to an argument within a subroutine will be \u201cvisible\u201d to the calling program depends on \nhow the argument was passed.  There are three ways in which arguments may be passed from a calling program to a \nsubroutine, as defi ned by the use of optional \u201c BY\u201d clauses in the CALL  statement\u2019s list of arguments.  \nAs an example, the following CALL  statement passes three arguments to a subroutine \u2013 each argument is passed \ndifferently.  \nCALL \u201csubroutine\u201d USING BY REFERENCE arg-1 \n                        BY CONTENT arg-2 \n                        BY VALUE arg-3 \nEND-CALL \nThe three  ways  arguments are passed are  as follows.  \nBY REFERENCE  When a subroutine argument is passed BY REFERENCE , the subroutine is passed the address  of the \nactual data item being passed as an argument.  The item may anything defined within the DATA \nDIVISION  of the program.  If the subroutine modifies the contents of this argument, the calling \n                                                                 \n39 If you build the GNU COBOL  software yourself from the distributed source, you CAN change this value by altering the defined \nvalue of COB_MAX_FIELD_PARAMS in the \u201ccommon.h\u201d header file.  ", "start_char_idx": 1085, "end_char_idx": 2919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8b01ac1-b5d2-4b21-b005-653b50a10139": {"__data__": {"id_": "c8b01ac1-b5d2-4b21-b005-653b50a10139", "embedding": null, "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "358ea664-5ddf-4710-8b71-ceab28c800b3", "node_type": "4", "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "885a18e2667c5bd0cdeb16d2d7fa0466fa5cc33f7ec26e81209d4a87229d9638", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc64a61b-0e7f-428c-82b4-45de39085bd0", "node_type": "1", "metadata": {}, "hash": "0d9fbd5f606abac7e2265f20e7b309d1a40b8619a6c85766f83e7ab3297e0155", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-6 program will \u201csee\u201d the results of that change when t he subroutine returns control.  This is the \ndefault manner in which GNU COBOL  passes arguments to a subroutine, should no \u201c BY\u201d clauses be \nincluded on the CALL . \nBY CONTENT  When a subroutine is passed an argument BY CONTENT , the subroutine  is passed the address  of a \ncopy  of the actual data being passed as an argument.  The item may anything defined within the \nDATA DIVISION  of the program.  The copy is made each time the CALL  statement is executed, \nimmediately before the CALL  is actually exe cuted.  If the subroutine modifies the contents of this \nargument, it will be the copy  that is modified, not the original data item specified on the CALL ; the \ncalling program will therefore not \u201csee\u201d the results of that change when the subroutine returns \ncontrol.  \nBY VALUE  Passing a subroutine argument BY VALUE  passe s the actual value of the data being passed as an \nargument.  The item may any elementary binary numeric  item (see Figure 7-1) defined within the \nDATA DIVISION  of the program.  If the subroutine modifies the contents of this argument, the calling \nprogram will not \u201csee\u201d the results of that change when the subroutine returns control.  \nThe first two ways in which arguments may be passed ( BY REFERENCE  and BY CONTENT ) are intended for use when a \nGNU COBOL  program, is being called, while the first and third ( BY REFERENCE  and BY VALUE ) are intended for use \nwhen a C program i s being called.  You can use BY VALUE  arguments when calling GNU COBOL  subroutines, but \nremember that those arguments are limited to being a numeric binary data type.  \nEach \u201c BY\u201d clause on a CALL  statement may list multiple arguments . \nArguments to user -defin ed functions are automatically  passed BY REFERENCE . \n", "start_char_idx": 0, "end_char_idx": 1894, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc64a61b-0e7f-428c-82b4-45de39085bd0": {"__data__": {"id_": "cc64a61b-0e7f-428c-82b4-45de39085bd0", "embedding": null, "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "358ea664-5ddf-4710-8b71-ceab28c800b3", "node_type": "4", "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "885a18e2667c5bd0cdeb16d2d7fa0466fa5cc33f7ec26e81209d4a87229d9638", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8b01ac1-b5d2-4b21-b005-653b50a10139", "node_type": "1", "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3e8b4a87e148279d4ba1531e362557e17868f39944c2c4e5bcdc52517d6850b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e487d5b3-4fa0-44cb-b6b5-838c10477673", "node_type": "1", "metadata": {}, "hash": "952e4a6794f2cc2b903de7fe428031222a03bcafce423ad84d7e3e822014af67", "class_name": "RelatedNodeInfo"}}, "text": "See Also\u2026  \nDefining Data Items  5.2 \nThe CALL  Statement  6.4.5  \n Subprograms : Subroutines vs Functions  7.1 \n \n7.5.1.2.  Called Program Considerations  \nWhen coding a GNU COBOL  subprogram (a subroutine or user -defined function), all arguments to the subprogram \nmust be defined in t he subprogram\u2019s LINKAGE SECTION .  These  arguments must be explicitly included on the \nPRO CEDURE DIVISION  header via a \u201c USING \u201d clause that lists the arguments in the sequence in which they will be \npassed to the subprogram.  \nThese arguments listed in a USING  clause included on the PROCEDURE DIVISION  header may each be defined as \neither \u201c BY REFERENCE \u201d, if they are being passed to the  subprogram as \u201c BY REFERENCE \u201d or \u201c BY CONTENT \u201d arguments \n(on the CALL ) or as \u201c BY VALUE \u201d if they are being passed \u201c BY VALUE \u201d.  By default, all arguments are assumed to be \u201c BY \nREFERENCE \u201d unless explicitly stated otherwise.  ", "start_char_idx": 1894, "end_char_idx": 2814, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e487d5b3-4fa0-44cb-b6b5-838c10477673": {"__data__": {"id_": "e487d5b3-4fa0-44cb-b6b5-838c10477673", "embedding": null, "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "358ea664-5ddf-4710-8b71-ceab28c800b3", "node_type": "4", "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "885a18e2667c5bd0cdeb16d2d7fa0466fa5cc33f7ec26e81209d4a87229d9638", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc64a61b-0e7f-428c-82b4-45de39085bd0", "node_type": "1", "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa61f5108fa111e57bd9ab0094f533f1536715aef2816335ac07b5d6e83be418", "class_name": "RelatedNodeInfo"}}, "text": "Arguments to a user -defined functio n are always to be specified as \n\u201cBY REFERENCE \u201d (either explicitly or by not using any \u201c BY\u201d). \nIf the subprogram returns a value, the data item in which the value is returned must also be defined in the \nsubprogram\u2019s LINKAGE SECTION , with an effective PICTURE  and USAGE  of BINARY -LONG SIGNED . \nSee Also\u2026  \nDefining a Data Item\u2019s PICTURE  5.2.1.6  \nStorage Format of Data ( USAGE ) 5.2.1.11  \n The PROCEDURE DIVISION  6 \n \n7.5.2.  GLOBAL Data Items  \nAnother way in which a data item may be shared between a calling program (\u201cA\u201d) and a called program (\u201cB\u201d) is by \ndefining the data item in the calling program and at taching the GLOBAL clause to it so that it may be used within the \ncalled program.  In order for this to work, program \u201cB\u201d (the one called  by program \u201cA\u201d) must be a nested subprogram  \nwithin program \u201cA\u201d.   ", "start_char_idx": 2814, "end_char_idx": 3682, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "460963d0-5c13-4fc8-825f-29c6d6768284": {"__data__": {"id_": "460963d0-5c13-4fc8-825f-29c6d6768284", "embedding": null, "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66748b71-348d-408b-893c-28400c287b84", "node_type": "4", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "19de679ce87223f1783cef08dc8d9fafa75754b82dd6b4cba9b471037008307f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "373120ad-b2b8-486a-9598-1d710e1a5dde", "node_type": "1", "metadata": {}, "hash": "953e1c0363dc2ceee05967258cb72173d839a90445a8b0cdb8bc690dfd968aee", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-7 Here\u2019s a small example:  \nProgram Source Code  DISPLAYed Output When Executed  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. DemoGLOBAL.  \n       ENVIRONMENT DIVISION.  \n       DATA DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 302, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "373120ad-b2b8-486a-9598-1d710e1a5dde": {"__data__": {"id_": "373120ad-b2b8-486a-9598-1d710e1a5dde", "embedding": null, "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66748b71-348d-408b-893c-28400c287b84", "node_type": "4", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "19de679ce87223f1783cef08dc8d9fafa75754b82dd6b4cba9b471037008307f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "460963d0-5c13-4fc8-825f-29c6d6768284", "node_type": "1", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "968578ac2864055a76bc45af347d9e94a861c27ca4ee26df324aca535a9c9395", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70117239-c252-4312-9b99-af08d1e1c4ff", "node_type": "1", "metadata": {}, "hash": "72dad5d40d692f7be5fc042c807bc9f513eda9ccd56985e6365e181d39f13106", "class_name": "RelatedNodeInfo"}}, "text": "WORKING-STORAGE SECTION.  \n       01  Arg GLOBAL                     PIC X(10).  \n       PROCEDURE DIVISION.  \n       000-Main. \n           MOVE ALL \"X\" TO Arg  \n           CALL \"DemoSub\" END -CALL \n           DISPLAY \"DemoGLOBAL: \" Arg END -DISPLAY \n           GOBACK \n           . \n \n       IDENTIFICATION DIVISION.  \n       ", "start_char_idx": 302, "end_char_idx": 629, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70117239-c252-4312-9b99-af08d1e1c4ff": {"__data__": {"id_": "70117239-c252-4312-9b99-af08d1e1c4ff", "embedding": null, "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66748b71-348d-408b-893c-28400c287b84", "node_type": "4", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "19de679ce87223f1783cef08dc8d9fafa75754b82dd6b4cba9b471037008307f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "373120ad-b2b8-486a-9598-1d710e1a5dde", "node_type": "1", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d41a7a5b63adae453cfa6f2e78eae7c2ff43ceb4de65cfc30cddb70802e69949", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22cf24c3-7b7c-42d8-ad4c-ad6997b6e326", "node_type": "1", "metadata": {}, "hash": "6209c91be2d7d8885f07b4f1de3193d8499d4d6e6ef9afef157956e95fa628b9", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. DemoSub.  \n       PROCEDURE DIVISION.  \n       000-Main. \n           MOVE ALL \"*\" TO Arg.  \n           GOBACK \n           . \n       END PROGRAM DemoSub.  \n \n       END PROGRAM De moGLOBAL. DemoGLOBAL: **********  \nSee Also\u2026  \nDetails of Nested Subprograms  7.6 \n  \n7.5.3.  EXTERNAL Data Items  \nThe final way in which a data item may be shared between a calling program (\u201cA\u201d) and a called program (\u201cB\u201d) is by \ndefining the data item (with the same name) in both programs and attaching the EXTERNAL  clause to it (again, in both \nprograms).  This approach  works regardless of whether the called program is nested within the calling program or not.  \n", "start_char_idx": 629, "end_char_idx": 1291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22cf24c3-7b7c-42d8-ad4c-ad6997b6e326": {"__data__": {"id_": "22cf24c3-7b7c-42d8-ad4c-ad6997b6e326", "embedding": null, "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66748b71-348d-408b-893c-28400c287b84", "node_type": "4", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "19de679ce87223f1783cef08dc8d9fafa75754b82dd6b4cba9b471037008307f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70117239-c252-4312-9b99-af08d1e1c4ff", "node_type": "1", "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "803440c2c133ad7ddebc6e032a9baa62284769df77db68d88ea26460888fc1ec", "class_name": "RelatedNodeInfo"}}, "text": "It also works even if the two programs are compiled separately.   \nHere\u2019s a small example:  \nProgram Source Code  DISPLAYed Output When Executed  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. DemoEXTERNAL.  \n       ENVIRONMENT DIVISION.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Arg EXTERNAL                PIC X(10).  \n       PROCEDURE DIVISION.  \n       000-Main. \n           MOVE ALL \"X\" TO Arg  \n           CALL \"DemoSub\" END -CALL \n           DISPLAY \"DemoEXTERNAL: \" Arg END -DISPLAY \n           GOBACK \n           . \n       END PROGRAM DemoEXTERNAL.  \n \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. DemoSub.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Arg EXTERNAL                PIC X(10).  \n       PROCEDURE DIVISION.  \n       000-Main. \n           MOVE ALL \"*\" TO Arg.  \n           GOBACK \n           . \n       END PROGRAM DemoSub.  DemoEXTERNAL : **********  ", "start_char_idx": 1291, "end_char_idx": 2233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed567de4-ffb7-4631-980d-aef67205138f": {"__data__": {"id_": "ed567de4-ffb7-4631-980d-aef67205138f", "embedding": null, "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709", "node_type": "4", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d1a81594f14a9cd07c98a763637577db558b38fdddfa00912860c24fb22155c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a58338f-f3d1-4671-a4e0-5e96fba8e41b", "node_type": "1", "metadata": {}, "hash": "8bf523c47f54727267bffd98cfdf728319de3dbd1d7491622297f7c0eed88986", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-8 7.6. Nested Subprograms  \nNormally, GNU COBOL  source files contain the coding for a single program; that program may be a main program or a \nsubprogram.  \nThere\u2019s no reason, however, why you cannot include multiple GNU COBOL  programs into a single source file \u2013 one \nafter the other \u2013 provided you structure the programs in the source file as follows:  \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. ", "start_char_idx": 0, "end_char_idx": 488, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a58338f-f3d1-4671-a4e0-5e96fba8e41b": {"__data__": {"id_": "4a58338f-f3d1-4671-a4e0-5e96fba8e41b", "embedding": null, "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709", "node_type": "4", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d1a81594f14a9cd07c98a763637577db558b38fdddfa00912860c24fb22155c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed567de4-ffb7-4631-980d-aef67205138f", "node_type": "1", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2b1f7f5cbce4119b6c8fc90c1131cd89f5144fe4ad7dca7162adfd6ecef6f466", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21", "node_type": "1", "metadata": {}, "hash": "4c90bb4f8718ba35226bfd8c87f37aede45d487e2ae69a4c403dd73a48164344", "class_name": "RelatedNodeInfo"}}, "text": "PROG1.  \n\u2026 \nEND PROGRAM PROG1.  \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. ", "start_char_idx": 488, "end_char_idx": 560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21": {"__data__": {"id_": "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21", "embedding": null, "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709", "node_type": "4", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d1a81594f14a9cd07c98a763637577db558b38fdddfa00912860c24fb22155c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a58338f-f3d1-4671-a4e0-5e96fba8e41b", "node_type": "1", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5e35b16b56dd59c7d9b267ac15b22a5f9678dcfe819e188a5661889bfdbd522e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6e723cd-ef67-45d7-8a56-0c002ead1964", "node_type": "1", "metadata": {}, "hash": "27f498aa66306495979e4c4cdd42ff7e3f215bc3500354083b16352228971f0e", "class_name": "RelatedNodeInfo"}}, "text": "PROG2.  \n\u2026 \nEND PROGRAM PROG2.  \n Program source code may be concatenated as shown here, provided an \n\u201cEND PROGRAM \u201d statement naming the PROGRAM -ID of the just -\ncompleted program is used to separate one program from another.  \nThere\u2019s no reason that user -defined functions cannot be included too \u2013 \nthey\u2019ll just have FUNCTION -IDs and will be ended by  \u201cEND FUNCTION \u201d \nstatements.  \nThe last program in any GNU COBOL  source file need not have an END \nPROGRAM  (or END FUNCTION ) statement.  \nWhen multiple programs occur in a source file, it is assumed that the \nprograms are related to one another in that they will be CALL ed or \nexecuted as functions from the others.  \nIt is also possible to create source files where GNU COBOL  programs are nested inside each other.  Take for example \nthese four GNU COBOL  programs:  \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. ", "start_char_idx": 560, "end_char_idx": 1430, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6e723cd-ef67-45d7-8a56-0c002ead1964": {"__data__": {"id_": "b6e723cd-ef67-45d7-8a56-0c002ead1964", "embedding": null, "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709", "node_type": "4", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0d1a81594f14a9cd07c98a763637577db558b38fdddfa00912860c24fb22155c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21", "node_type": "1", "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "db300cf8c8b61ba161a930930c8c36a66d5578b36870d02e359422705f5be585", "class_name": "RelatedNodeInfo"}}, "text": "PROG1.  \n\u2026 \nIDENTIFIC ATION DIVISION.  \nPROGRAM-ID. PROG2.  \n\u2026 \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. PROG3.  \n\u2026 \nEND PROGRAM PROG3.  \nEND PROGRAM PROG2.  \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. PROG4.  \n\u2026 \nEND PROGRAM PROG4.  \nEND PROGRAM PROG1.  Here we see that PROG2 is nested inside of PROG1 because there is no \nEND PROGRAM  statement separating them.  This means that data items \nor files defined within PROG1 can be used within PROG2 simply by \nattaching the \u201c GLOBAL \u201d attribute to them back in PROG1 when they are \ndefined.  \nSimilarly, since there is no END PROGRAM  statement separating PROG3 \nfrom PROG2, it is possible for PROG3 to access GLOBAL files and data \nitems defined within PROG2.  Since PROG2 is nested within PROG1, any \nGLOBAL  resources defined wi thin PROG1 will be available to PROG3 as \nwell.  \nThe two END PROGRAM  statements for PROG3 and PROG2 (note their \nsequence) mean that PROG4 is nested within PROG1 only.  It will not have \naccess to any GLOBAL  resources defined within either PROG2 or PROG3.  \nSee Also\u2026  \nProgram Structure  1.5.2  \nThe IDENTIFICATION DIVISION  3 \n The CALL  Statement  6.4.5  \n \n7.7. Recursive GNU COBOL  Subprograms  \nIt is possible for a subroutine to CALL  itself, either directly or indirectly from another subroutine that it CALL s.  Any \nsubroutine that indulges in this sort of behavior (called RECURSION ) is called a RECURSIVE SUB ROUTINE .  A GNU \nCOBOL  subroutine can be recursively invoked only  if it is defined to the GNU COBOL  compiler as being a recursive \nsubroutine.   This is accomplished by adding the RECURSIVE  attribute to the subroutines PROGRAM -ID clause . \nAll User -defined functions can be invoked recursiv ely. \nHere is an example of a main program (DEMO FACT ) that CALL s both a subprogram (RECURSIVESUB) and a user -\ndefined function (RECURSIVEFUNC) to compute the factorial value of a number.  \nDEMO FACT  \n(Main Program)  ", "start_char_idx": 1430, "end_char_idx": 3350, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "155f99b3-213a-4334-a32d-bc072236b1bb": {"__data__": {"id_": "155f99b3-213a-4334-a32d-bc072236b1bb", "embedding": null, "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1", "node_type": "4", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cab32adec5b9385c983c704f02f796ea6a264f0adfd755d1d728098786a019ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09274819-6c2a-4375-8c09-5f88c1cd4744", "node_type": "1", "metadata": {}, "hash": "01c44f65cf0a457b131948c56c530a823d6844bdc30d3b5f8aead2df1319ad0c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-9 IDENTIFICATION DIVISION.  \nPROGRAM-ID. DEMO FACT. \nENVIRONME NT DIVISION.  \nCONFIGURATION SECTION.  \nREPOSITORY.  \n    FUNCTION RECURSIVEFUNC.  \nDATA DIVISION.  \nWORKING-STORAGE SECTION.  \n01  Result    USAGE BINARY -LONG. \n01  Arg       USAGE BINARY -LONG VALUE 6.  \nPROCEDURE DIVISION.  \n", "start_char_idx": 0, "end_char_idx": 383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09274819-6c2a-4375-8c09-5f88c1cd4744": {"__data__": {"id_": "09274819-6c2a-4375-8c09-5f88c1cd4744", "embedding": null, "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1", "node_type": "4", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cab32adec5b9385c983c704f02f796ea6a264f0adfd755d1d728098786a019ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "155f99b3-213a-4334-a32d-bc072236b1bb", "node_type": "1", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fcb99de456f6df0cee9c680c621101f9eadc4135240a27c31341e2ee9fb97190", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20c4e11a-d30a-47b4-b87f-195724488233", "node_type": "1", "metadata": {}, "hash": "e7a89d479b7ac5a0c303706dc94435aa66101c2636009ed23656fcfa20f1c51d", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n    CALL \"RECURSIVESUB\"  \n        USING BY CONTENT Arg  \n        RETURNING Result  \n    DISPLAY Arg \"! = \"  \n            Result \n    DISPLAY Arg \"! = \"  \n            RECURSIVEFUNC(Arg)  \n    GOBACK \n    . \nEND PROGRAM DEMO FACT. \nRECURSIVESUB  \n(a RECURSIVE subroutine)  RECURSIVEFUNC  \n(a user -defin ed function)  \nIDENTIFICATION DIVISION.  \nPROGRAM-ID. RECURSIVESUB RECURSIVE.  \nDATA DIVISION.  \nWORKING-STORAGE SECTION.  \n01  Result       USAGE BINARY -LONG. \n01  Next -Arg     USAGE BINARY -LONG. \n01  Next -Result  USAGE BINARY -LONG. \nLINKAGE SECTION.  \n01  Arg                     USAGE BINARY -LONG. \nPROCEDURE DIVISION USING Arg RETURNING Result.  \n000-Main. \n    DISPLAY \"Entering RECURSIVESUB Arg=\" Arg  \n    IF Arg = 1  \n        MOVE 1 TO Result  \n        DISPLAY \"Leaving RECURSIVESUB Returning \" \nResult \n    ELSE \n        SUBTRACT 1 FROM Arg GIVING Next -Arg \n        CALL \"RECURSIVESUB\"  \n            USING BY CONTENT Next -Arg  \n            RETURNING Next -Result \n        COMPUTE Result = Arg * Next -Result \n        DISPLAY \"Leaving RECURSIVESUB Returning \"  \n                Result \"=\" Arg \"*\" Next -Result \n    END-IF \n    GOBACK \n    . \nEND PROGRAM RECURSIVESUB.  ", "start_char_idx": 383, "end_char_idx": 1581, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20c4e11a-d30a-47b4-b87f-195724488233": {"__data__": {"id_": "20c4e11a-d30a-47b4-b87f-195724488233", "embedding": null, "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1", "node_type": "4", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cab32adec5b9385c983c704f02f796ea6a264f0adfd755d1d728098786a019ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09274819-6c2a-4375-8c09-5f88c1cd4744", "node_type": "1", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50bcd75520652005e8ef3c5f701fe0efe0b6929e949a28b2064828f8ee456811", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4704137b-2268-42fc-bbd8-57e784075f68", "node_type": "1", "metadata": {}, "hash": "030581b85fd5b8fb0c60463e2ef3cdadda9c3e1ca4b6bb447ac561f68f82ea28", "class_name": "RelatedNodeInfo"}}, "text": "IDENTIFICATION DIVISION.  \nFUNCTION -ID. RECURSIVEFUNC.  \nENVIRONMENT DIVISION.  \nCONFIGURATION SECTION.  \nREPOSITORY.  \n    FUNCTION RECURSIVEFUNC.  \nDATA DIVISION.  \nWORKING-STORAGE SECTION.  \nLINKAGE SECTION.  \n01  Arg     USAGE BINARY -LONG. \n01  Result  USAGE BINARY -LONG SIGNED.  \nPROCEDURE DIVISION USING Arg RETURNING Result.  \n", "start_char_idx": 1581, "end_char_idx": 1918, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4704137b-2268-42fc-bbd8-57e784075f68": {"__data__": {"id_": "4704137b-2268-42fc-bbd8-57e784075f68", "embedding": null, "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1", "node_type": "4", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cab32adec5b9385c983c704f02f796ea6a264f0adfd755d1d728098786a019ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20c4e11a-d30a-47b4-b87f-195724488233", "node_type": "1", "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c343c99885b3a1352c27c7976d733c6132644a4ef6c3dc88be92c3605d1d5151", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n    DISPLAY \"Entering RECURSIVEFUNC Arg=\" Arg  \n    IF Arg = 1  \n        MOVE 1 TO Result  \n    ELSE \n        COMPUTE Result = Arg *  \n                         RECURSIVEFUNC(Arg - 1) \n    END-IF \n    DISPLAY \"Leaving RECURSIVEFUNC Returning \" \nResult \n    GOBACK \n    . \nEND FUNCTION RECURSIVEFUNC.  \n \nWhen DEMOFACT is executed, \nthe output shown to the right \nis generated.  E:\\Programs \\Demos>demo fact \nEntering RECURSIVESUB Arg=+0000000006  \nEntering RECURSIVESUB Arg=+0000000005  \nEntering RECURSIVESUB Arg=+0000000004  \nEntering RECURSIVESUB Arg=+0000000003  \nEntering RECURSIVESUB Arg=+0000000002  \nEntering RECURSIVESUB Arg=+0000000001  \nLeaving RECURSIVESUB Returning +0000000001  \nLeaving RECURSIVESUB Returning +0000000002=+0000000002*+0000000001  \nLeaving RECURSIVESUB Returning +0000000006=+0000000003*+0000000002  \nLeaving RECURSIVESUB Returning +0000000024=+0000000004*+0000000006  \nLeaving RECURSIVESUB Returning +0000000120=+0000000005*+0000000024  \nLeaving RECURSIVESUB Returning +0000000720=+0000000006*+0000000120  \n+0000000006! = +0000000720  \nEntering RECURSIVEFUNC Arg=+00000000 06 \nEntering RECURSIVEFUNC Arg=+0000000005  \nEntering RECURSIVEFUNC Arg=+0000000004  \nEntering RECURSIVEFUNC Arg=+0000000003  \nEntering RECURSIVEFUNC Arg=+0000000002  \nEntering RECURSIVEFUNC Arg=+0000000001  \nLeaving RECURSIVEFUNC Returning +0000000001  \nLeaving RECURSIVEFUNC Returning +0000000002  ", "start_char_idx": 1918, "end_char_idx": 3332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c424730e-2a91-47b7-9885-30bb433c8b86": {"__data__": {"id_": "c424730e-2a91-47b7-9885-30bb433c8b86", "embedding": null, "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357", "node_type": "4", "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "143a2fdd673e20eecbd0823efa6f67548e2ba63df651fa152a5a64d06944a8dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71427092-11c9-4891-adc0-1a2c1b424f81", "node_type": "1", "metadata": {}, "hash": "73b49ceca4918c42a1dd5bcae84ec7eada79ed44e880a22ad183a648929304c6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-10 Leaving RECURSIVEFUNC Returning +0000000006  \nLeaving RECURSIVEFUNC Returning +0000000024  \nLeaving RECURSIVEFUNC Returning +0000000120  \nLeaving RECURSIVEFUNC Returning +0000000720  \n+0000000006! = +0000000720  \nSee Also\u2026  \nThe IDENTIFICATION DIVISION  3 \nThe CALL  Statement  6.4.5  \n Subprograms : Subroutines vs Functions  7.1 \n \n7.8. Combining COBOL and C Programs  \nLinkage between GNU COBOL  and C language programs is possible, but may require a little bit of special coding in one \nprogram or the other in order to meaningfully pass data between them.  The issues involved deal predominantly with \nthree topics, as follows .  ", "start_char_idx": 0, "end_char_idx": 729, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71427092-11c9-4891-adc0-1a2c1b424f81": {"__data__": {"id_": "71427092-11c9-4891-adc0-1a2c1b424f81", "embedding": null, "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357", "node_type": "4", "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "143a2fdd673e20eecbd0823efa6f67548e2ba63df651fa152a5a64d06944a8dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c424730e-2a91-47b7-9885-30bb433c8b86", "node_type": "1", "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "91bcf970384fc90f1dc3a36c875490ae7e74483507688abc28807dfa5af9c08b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d99592fa-59a8-4759-bb5f-acec403b94c6", "node_type": "1", "metadata": {}, "hash": "379bcc30d2dd12faf1f51822966cfa7afb3a8b8e2323a7bdcaf652d9021f0745", "class_name": "RelatedNodeInfo"}}, "text": "Each issue is discussed, with upcoming coding samples illustrating specifics as to how those \nissues are overcome in actual program code.  \n", "start_char_idx": 729, "end_char_idx": 869, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d99592fa-59a8-4759-bb5f-acec403b94c6": {"__data__": {"id_": "d99592fa-59a8-4759-bb5f-acec403b94c6", "embedding": null, "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357", "node_type": "4", "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "143a2fdd673e20eecbd0823efa6f67548e2ba63df651fa152a5a64d06944a8dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71427092-11c9-4891-adc0-1a2c1b424f81", "node_type": "1", "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f24c5847f0dab05f3a47d91de8943f453222099d8d8e4436d78582dc6d5c5b4c", "class_name": "RelatedNodeInfo"}}, "text": "7.8.1.  GNU COBOL  Run -Time Library Requirements  \nLike most other implementations of the COBOL language, GNU COBOL  utilizes a run -time library.  When the first \nprogram  executed in a given execution sequence is a GNU COBOL  program, any run -time library initialization will be \nperformed by that COBOL code in a manner that is transparent to the C -language programmer.  If,  however, a C \nprogram  is the first to execute, the burden of perform GNU COBOL  run-time library initialization falls upon the C \nprogram.  \n7.8.2.  String Allocation Differences  Between GNU COBOL  and C  \nBoth languages store strings as a fixed -length continuous sequenc e of characters.   \nCOBOL stores these character sequences up to a specific quantity limit imposed by the PICTURE  cause of the data \nitem.  For example:  \n01  LastName   PIC X(15).  \nThere is never an issue of exactly what the length of a string contained in a USAGE DISPLAY  data item is \u2013 there are \nalways exactly how ever many characters as were allowed for by the PICTURE  clause.  In the example above, \n\u201cLastName\u201d will always contain exactly fifteen characters; of course, there may be anywhere from 0 to 15 traili ng \nSPACES  as part of the current LastName value.  \nC actually has no \u201cstring\u201d datatype \u2013 rather, it stores strings as an array of \u201cchar\u201d datatype items where each element \nof the array is a single character.  Being an array, there is an upper limit to how man y characters may be stored in a \ngiven \u201cstring\u201d.  For example:  \nchar lastName[15]; /* 15 chars: lastName[0] thru lastName[14] */  \nC provides a robust set of string -manipulation functions to copy strings from one char array to another, search strings \nfor certa in characters, compare one char array to another, concatenate char arrays and so forth.  To make these \nfunctions possible, it was necessary to be able to define the logical end of a string.  C accomplishes this via the \nexpectation that all strings (char ar rays) will be terminated by a NULL character (x\u201900\u2019).  Of course, no one forces a \nprogrammer to do this, but if [s]he ever expects to use any of the C standard functions to manipulate that string they \nhad better  be doing it.  \nSo, GNU COBOL  programmers expec ting to pass strings to or receive strings from C programs had best be prepared to \ndeal with the null -termination issue.  \nSee Also\u2026  \nDefining Data Items  5.2 \n  \n7.8.3.  Matching C Data Types with GNU COBOL  USAGEs  ", "start_char_idx": 869, "end_char_idx": 3317, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f632186d-cf0d-4b20-9f7f-22e0324fdff4": {"__data__": {"id_": "f632186d-cf0d-4b20-9f7f-22e0324fdff4", "embedding": null, "metadata": {"page_label": "221", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74b2ed3b-192f-46c6-8037-25ecfc16706c", "node_type": "4", "metadata": {"page_label": "221", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1b8307b4bf1b4aa96275c93b806d8bebb764d090b751352b7250de1e4c2e85c2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-11 This is pretty simple, the GNU COBOL  and C programmer must just be aware of the following correspondence \nbetween C data types and COBOL USAGE specifications:  \nFigure 7-1 - C/GNU COBOL  Data Type Matches  \nThis COBOL USAGE\u2026  \n(no PICTURE allowed)  Occupies this \nspace\u2026  Holds these numeric values\u2026  And corresponds to this C \ndata type\u2026  \nBINARY -CHAR  \nBINARY -CHAR UNSIGNED  1 byte  0 to 255  unsigned char  \nBINARY -CHAR SIGNED  1 byte  -128 to +127  signed char  \nBINARY -SHORT  \nBINARY -SHORT UNSIGNED  2 bytes  0 to 65535  unsigned  \nunsigned int  \nunsigned short  \nunsigned short int  \nBINARY -SHORT SIGNED  2 bytes  -32768 to +32767  int \nshort  \nshort int  \nsigned int  \nsigned short  \nsigned short int  \nBINARY -LONG  \nBINARY -LONG UNSIGNED  4 bytes  0 to 4294967295  unsigned long  \nunsigned long int  \nBINARY -LONG SIGNED  \nBINARY -INT 4 bytes  -2147483648 to +2147483647  long  \nlong int  \nsigned long  \nsigned  long int  \nBINARY -C-LONG SIGNED  \n 4 bytes  or 8 \nbytes  -2147483648 to +2147483647  \nOr \n-9223372036854775808 to \n+9223372036854775807  long  \n(see the description of \nUSAGE BINARY -C-LONG in \nFigure 5-10) \nBINARY -DOUBLE  \nBINARY -DOUBLE UNSIGNED  8 bytes  0 to 18446744073709551615  unsigned long long  \nunsigned long long int  \nBINARY -DOUBLE SIGNED  \nBINARY -LONG -LONG  8 bytes  -9223372036854775808 to \n+9223372036854775807  long long int  \nsigned long long int  \nCOMPUTATIONAL -1 4 bytes  -3.4 x 1038 to +3.4 x 1038 \n(six decimal digits of precision)  float  \nCOMPUTATIONAL -2 8 bytes  -1.7 x 10308 to +1.7 x 10308 \n(15 decimal digits of precision) double  \nN/A (no GNU COBOL  \nequivalent)  12 bytes  -1.19 x 104932 to +1.19 x 104932  \n(18 decimal digits of precision) long double  ", "start_char_idx": 0, "end_char_idx": 1813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f82f364-33cd-492c-bf3d-848b05bdcbb6": {"__data__": {"id_": "8f82f364-33cd-492c-bf3d-848b05bdcbb6", "embedding": null, "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0", "node_type": "4", "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37501cd79c4d0c985125ae71ebd5417691774ddcdb5a48cba10ad30a2e97bf34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58729b5c-a404-4c8f-9ccf-294992a37587", "node_type": "1", "metadata": {}, "hash": "ab3d44bb8a9066676419aff5d7369db8c0ba360864f37ff9e41ce161c5b5b794", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-12 There are other GNU COBOL  PICTURE/USAGE combinations that can define the same storage size and value range \ncombinations, but (with the exception of COMP -1 and COMP -2), these are the ANSI2002 standard specifications for C -\nprogram data compatibility and GNU COBOL  programmers should get used to using them when data is being shared \nwith C programs (they\u2019re good documentation too, highlighting the fact that the data will be \u201cshared\u201d with a C \nprogram).  \nThe minimum values shown for the various SIGNED integer USAGE s are appropriate for a computer system that uses \n2s-complement representation for negative signed binary values (such as those CPUs typically found in Windows PCs).  \nA computer system using 1s -complement representation for negative signed binary values wo uld have minimum \nvalues that are 1 greater ( -127 instead of -128, for example).  \n7.8.4.  GNU COBOL  Main Programs CALLing C Subprograms  \nHere are samples of a GNU COBOL  program that CALL s a C subprogram.  \nFigure 7-2 - GNU COBOL  CALL ing C \n(maincob.cbl)  \nThis GNU COBOL  MAIN PROGRAM\u2026  (subc.c)  \n\u2026wants to CALL this C SubProgram  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. maincob.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Arg1           PIC X(7).  \n       01  Arg2           PIC X(7).  \n       01  Arg3           USAGE BINARY -LONG. \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 1500, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58729b5c-a404-4c8f-9ccf-294992a37587": {"__data__": {"id_": "58729b5c-a404-4c8f-9ccf-294992a37587", "embedding": null, "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0", "node_type": "4", "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37501cd79c4d0c985125ae71ebd5417691774ddcdb5a48cba10ad30a2e97bf34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f82f364-33cd-492c-bf3d-848b05bdcbb6", "node_type": "1", "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c8c8eb6a079386069e3e6a9107fc9d0cfc897da847d1c7eebcb7149a5789c5f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "046b8fc2-22ac-4e94-be0b-41874c7e1706", "node_type": "1", "metadata": {}, "hash": "bb665b2d3de002299249e35d1e07aa392b50c249a1abcc9df1c7de54b82aa767", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n           DISPLAY 'Starting cobmain'.  \n           MOVE 123456789 TO Arg3.  \n           STRING 'Arg1'  \n                  X'00' \n                  DELIMITED SIZE  \n                  INTO Arg1  \n           END-STRING. \n           STRING 'Arg2'  \n                  X'00' \n                  DELIMITED SIZE  \n                  INTO Arg2  \n           END-STRING. \n           CALL 'subc' USING BY CONTENT   Arg1,   \n                             BY REFERENCE Arg2,  \n                             BY REFERENCE Arg3.  \n           DISPLAY 'Back'.  \n           DISPLAY 'Arg1=' Arg1.  \n           DISPLAY 'Arg2=' Arg2.  \n           DISPLAY 'Arg3=' Arg3.  \n           DISPLAY 'Returned va lue='  \n                   RETURN-CODE. \n           ", "start_char_idx": 1500, "end_char_idx": 2240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "046b8fc2-22ac-4e94-be0b-41874c7e1706": {"__data__": {"id_": "046b8fc2-22ac-4e94-be0b-41874c7e1706", "embedding": null, "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0", "node_type": "4", "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37501cd79c4d0c985125ae71ebd5417691774ddcdb5a48cba10ad30a2e97bf34", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58729b5c-a404-4c8f-9ccf-294992a37587", "node_type": "1", "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1f4e00f5102bde95dc30967dedba86f0f712be7a3f18e4739c7da8d9399ec3e8", "class_name": "RelatedNodeInfo"}}, "text": "STOP RUN . #include <stdio.h>  \n \nint subc(char *arg1,  \n         char *arg2,  \n         unsigned long *arg3) {  \n  char nu1[7]=\"New1\";  \n  char nu2[7]=\"New2\";  \n  printf(\"Starting subc \\n\"); \n  printf(\"Arg1=%s \\n\",arg1);  \n  printf(\"Arg2=%s \\n\",arg2);  \n  printf(\"Arg3=%d \\n\",*arg3);  \n  arg1[0]='X';  \n  arg2[0]='Y';  \n  *arg3=987654321;  \n  return 2;  \n} \nThe idea is to pass two string and one full -word unsigned arguments to the subprogram, have the subprogram print \nthem out, change all three and pass a return code of 2 back to the caller .  The caller will then re -display the three \narguments (showing chang es only  to the two BY REFERENCE  arguments), display the return code and halt.  While \nsimple, these two programs illustrate the techniques required quite nicely.  \nNote how the COBOL program ensures that a null end -of-string terminator is  present on both string arguments.   \nSince the C program is planning on making changes to all three arguments, it declares all three as pointers in the \nfunction header and references the third argument as a pointer in the function body.40  \n                                                                 \n40 It actually had no choice for the two string (char array) arguments \u2013 they must  be defined as p ointers in the function even \nthough the function code references them without the leading \u201c*\u201d that normally signifies pointers.  ", "start_char_idx": 2240, "end_char_idx": 3641, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f79cb9a2-20df-442a-b4ca-21f9aa22f9d4": {"__data__": {"id_": "f79cb9a2-20df-442a-b4ca-21f9aa22f9d4", "embedding": null, "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3", "node_type": "4", "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ec01a9f795852dcb0636af99d27ca85900fb2812b98d9b7c2423cd56bb79965", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbc0c819-760b-4464-ba06-0c55be80f0a6", "node_type": "1", "metadata": {}, "hash": "c4b8ff015237a5a54276317bb82747d5824ac63cbe67cd04285f11b84898ad8c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-13 These programs ar e compiled and executed as follows .  The example assumes a UNIX system with a GNU COBOL  build \nthat uses the native C compiler on that system ; the technique works equally well regardless of which C compiler and \nwhich operating system you\u2019re using.  \n$ cc \u2013c subc.c \n$ cobc -x maincob.cbl subc.o  \n$ maincob  \nStarting cobmain  \nStarting subc  \nArg1=Arg1  \nArg2=Arg2  \nArg3=123456789  \nBack  \nArg1=Arg1  \nArg2=Yrg2  \nArg3=+0987654321  \nReturned value=+000000002  \n$ \nRemember that the null characters are actually in the GNU COBOL  \u201cArg1\u201d and \u201cArg2\u201d data items.  They don\u2019t appear in \nthe output, but they ARE there.  ", "start_char_idx": 0, "end_char_idx": 733, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbc0c819-760b-4464-ba06-0c55be80f0a6": {"__data__": {"id_": "cbc0c819-760b-4464-ba06-0c55be80f0a6", "embedding": null, "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3", "node_type": "4", "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ec01a9f795852dcb0636af99d27ca85900fb2812b98d9b7c2423cd56bb79965", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f79cb9a2-20df-442a-b4ca-21f9aa22f9d4", "node_type": "1", "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "784cb3a82b009de3c2245a6f87920eb87bf252096488baa94320b693797c2ef7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "411e1bc3-7633-477f-ba9c-cb018489c24b", "node_type": "1", "metadata": {}, "hash": "75a774011517841c3e2f3508826aa1b0b187bfb178f6ff4bd6e1f93267318d46", "class_name": "RelatedNodeInfo"}}, "text": "When passing character strings to C programs, it\u2019s probably a good idea to make a \nnull-terminated copy  of the string items and pass those copies to the C program.  \n7.8.5.  C Main Programs CALLing GNU COBOL  Subprograms  \nNow, the roles of the two languages in the previous section will be reversed, having a C main program execute a GNU \nCOBOL  subprogram.  \nFigure 7-3 - C CALL ing GNU COBOL  \n(mainc.c)  \nThis C MAIN PROGRAM\u2026  (subcob.cbl)  \n\u2026wants to CALL this GNU COBOL  SubProgram  \n#include <libcob.h>  \n#include <stdio.h>  \n \nint main (int argc, char **argv) {  \n   int returnCode;  \n   char arg1[7] = \"Arg1\";  \n   char arg2[7] = \"Arg2\";  \n   unsigned long arg3 = 123456789;  \n   printf(\"Starting mainc... \\n\"); \n   cob_init (argc, argv);  \n   returnCode = subcob(arg1,arg2,&arg3);  \n   printf(\"Back \\n\"); \n   printf(\"Arg1=%s \\n\",arg1);  \n   printf(\"Arg2=%s \\n\",arg2);  \n   printf(\"Arg3=%d \\n\",arg3);  \n   printf(\"Returned value=%d \\n\",returnCode);  \n   return returnCode;  \n}        IDENTIFICATION DIVISION.  \n       PROGRAM-ID. ", "start_char_idx": 733, "end_char_idx": 1773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "411e1bc3-7633-477f-ba9c-cb018489c24b": {"__data__": {"id_": "411e1bc3-7633-477f-ba9c-cb018489c24b", "embedding": null, "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3", "node_type": "4", "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9ec01a9f795852dcb0636af99d27ca85900fb2812b98d9b7c2423cd56bb79965", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbc0c819-760b-4464-ba06-0c55be80f0a6", "node_type": "1", "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0dca7d0a5e8c0697519daef0de66decd315ee880498131c6d0583f9228f02384", "class_name": "RelatedNodeInfo"}}, "text": "subcob.  \n       DATA DIVISION.  \n       LINKAGE SECTION.  \n       01  Arg1           PIC X(7).  \n       01  Arg2           PIC X(7).  \n       01  Arg3           USAGE BINARY -LONG. \n       PROCEDURE DIVISION USING  \n           BY VALUE     Arg1,  \n           BY REFERENCE Arg2,  \n           BY REFERENCE Arg3.  \n       000-Main. \n           DISPLAY 'Starting cobsub.cbl'.  \n           DISPLAY 'Arg1=' Arg1.  \n           DISPLAY 'Arg2=' Arg2.  \n           DISPLAY 'Arg3=' Arg3.  \n           MOVE 'X' TO Arg1 (1:1).  \n           MOVE 'Y' TO Arg2 (1:1).  \n           MOVE 987654321 TO Arg3.  \n           MOVE 2 TO RETURN-CODE. \n           GOBACK. \nSince the C program is the one that will execute first, before the GNU COBOL  subroutine, the burden of initializing the \nGNU COBOL  run-time environment lies with that C program; it will have to invoke the \u201ccob_init\u201d function, which is \npart of the \u201clibcob\u201d library.  The two required C sta tements are shown  highlighted . \nThe arguments to the \u201ccob_init\u201d routine are the argument count and value parameters passed to the main function \nwhen the program began execution.  By passing them into the GNU COBOL  subprogram, it will be possible for that \nGNU COBOL  program to retrieve the command line or individual command -line arguments.  If that won\u2019t be \nnecessary, \u201ccob_init(0,NULL);\u201d could be specified instead.  \nSince the C program wants to allow \u201carg3\u201d to be changed by the subprogram, it prefixes it with a  \u201c&\u201d to force a CALL  \nBY REFERENCE for that argument.  Since \u201carg1\u201d and \u201carg2\u201d are strings (char arrays), they are automatically passed by \nreference.  ", "start_char_idx": 1773, "end_char_idx": 3388, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e1a7eb0-f474-41e9-96d0-9fb5a43f2f30": {"__data__": {"id_": "2e1a7eb0-f474-41e9-96d0-9fb5a43f2f30", "embedding": null, "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f473616-908b-4a06-9571-8ca1eec6fe60", "node_type": "4", "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "27800c9c720321b3ee95e98e7dc64ef19f472771ac1aa7f286ed0cf985b8c631", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a35c244-ab44-444e-ac17-14af107f406f", "node_type": "1", "metadata": {}, "hash": "308d13cc1a0d06c579a826abc17cfc96ae231d21a582eb971eb2278d3e4c022e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Sub-programming With GNU COBOL  \n \n11FEB2012 Version   7-14 Here\u2019s the output of the compilation process as well as the program\u2019s execution .  The example assumes a Windows  \nsystem with a GNU COBOL  build that uses the GNU  C compiler on that system; the technique works equally well \nregardless of which C compiler and which operating system you\u2019re using.  \nC:\\Users\\Gary\\Documents \\Programs> cobc -S subcob.cbl  \nC:\\Users\\Gary\\Documents \\Programs> gcc mainc.c subcob.s \u2013o mainc.exe -llibcob \nC:\\Users\\Gary\\Documents \\Programs> mainc.exe  \nStarting mainc...  \nStarting cobsub.cbl  \nArg1=Arg1  \nArg2=Arg2  \nArg3=+0123456789  \nBack \nArg1=Xrg1  \nArg2=Yrg2 \nArg3=987654321  \nReturned value=2  \nC:\\Users\\Gary\\Documents \\Programs>  \nNote that even though we told GNU COBOL  that the 1st argument was to be BY VALUE , it was treated as if it were BY \nREFERENCE  anyway.  String (char array) arguments passed from C callers t o GNU COBOL  subprograms will be \nmodifiable by the subprogram.  It\u2019s best to pass a copy  of such data if you want to ensure that the subprogram doesn\u2019t \nchange it.  \n", "start_char_idx": 0, "end_char_idx": 1122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a35c244-ab44-444e-ac17-14af107f406f": {"__data__": {"id_": "3a35c244-ab44-444e-ac17-14af107f406f", "embedding": null, "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f473616-908b-4a06-9571-8ca1eec6fe60", "node_type": "4", "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "27800c9c720321b3ee95e98e7dc64ef19f472771ac1aa7f286ed0cf985b8c631", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e1a7eb0-f474-41e9-96d0-9fb5a43f2f30", "node_type": "1", "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "476b18e52599374caf3c7ee0d4a7ecd2affa215f744728671014577ef5b454c2", "class_name": "RelatedNodeInfo"}}, "text": "The third argument is different, however.  Since it\u2019s not an array you have the choice of pas sing it either BY \nREFERENCE41 or BY VALUE42. \n \n \n \n                                                                 \n41 Use \u201c&\u201d with the argument in the C calling program; specify the argument as BY REFERENCE in the COBOL \nsubprogram  \n42 Don\u2019t use \u201c&\u201d with the argument in the C calling program; specify the argument as BY VALUE in the COBOL \nsubprogram  \n ", "start_char_idx": 1122, "end_char_idx": 1576, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b685780-dda7-40d5-b626-9649c4d5b037": {"__data__": {"id_": "3b685780-dda7-40d5-b626-9649c4d5b037", "embedding": null, "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcc592e4-e140-4bf5-a14b-4a600f13b673", "node_type": "4", "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1443e9ed80bb7c591d4bd68ae13bcee7b6df7b632a81477c99c2288f45849cac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0140e678-f287-40f6-876a-094a7b806fe3", "node_type": "1", "metadata": {}, "hash": "91ccf20009987db8503f05da5d2480f03c4b5a4f1a87b7685e2efa357f43ba10", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-1 8. The GNU COBOL  System Interface  \n8.1. Using the GNU  COBOL  Compiler  (cobc)  \n8.1.1.  Introduction  \nProgram source files should have extensions of \u201c.cob\u201d or \u201c.cbl\u201d.   \nProgram filenames should match exactly  the specification of PROGRAM -ID (including case).  The reason for this was \ndiscussed in section 3. \n", "start_char_idx": 0, "end_char_idx": 409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0140e678-f287-40f6-876a-094a7b806fe3": {"__data__": {"id_": "0140e678-f287-40f6-876a-094a7b806fe3", "embedding": null, "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcc592e4-e140-4bf5-a14b-4a600f13b673", "node_type": "4", "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1443e9ed80bb7c591d4bd68ae13bcee7b6df7b632a81477c99c2288f45849cac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b685780-dda7-40d5-b626-9649c4d5b037", "node_type": "1", "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab49e9e2fd13d3de0e54a430f16beac9ff8b46c6ae94435d3476b34e183c6553", "class_name": "RelatedNodeInfo"}}, "text": "Spaces cannot be included in primary entry -point names (section 3) and therefore should not be included in program \nfilenames.  \nThe GNU COBOL  compiler will translate your COBOL program into C source code, compile that C source code into \nexecutable binary form  using the \u201cC\u201d compiler specified when GNU COBOL  was built and link that executable binary \ninto either directly executable form, static -linkable form or dynamically -loadable executable form.  \nThe GNU COBOL  compiler is named \u201ccobc\u201d  (\u201ccobc.exe\u201d on a Windows s ystem) . \n8.1.2.  Syntax and Options  \nThe following describes the syntax and option switches of the cobc command.  This information may be displayed by \nentering the command \u201ccobc --help\u201d.  \n \nUsage: cobc [options] file ...  \n \nOptions:  \n  -help                 Display this message  \n  -version, -V          Display compiler version  \n  -info, -i             Display compiler build information  \n  -v                    Display the commands invoked by the compiler  \n  -x                    B uild an executable program  \n  -m                    Build a dynamically loadable module (default)  \n  -std=<dialect>        Warnings/features for a specific dialect :  \n                          cobol2002   Cobol 2002  \n                          cobol85     Cobol  85 \n                          ibm         IBM Compatible  \n                          mvs         MVS Compatible  \n                          bs2000      BS2000 Compatible  \n                          mf          Micro Focus Compatible  \n                          default     When not specified  \n                        See config/default.conf and config/*.conf  \n  -free                 Use free source format  \n  -fixed                Use fixed source format (default)  \n  -O, -O2, -Os          Enable optimization  \n  -g                    Enable C compiler debug / stack check / trace  \n  -debug                Enable all run -time error checking  \n  -o <file>             Place the output into <file>  \n  -b                    Combine all input files into a single  \n                        dynamically loadable module  \n  -E                    Preprocess only; do not compile or link  \n  -C                    Translation only; convert COBOL to C  \n  -S                    Compile only; output assembly file  \n  -c                    Compile and assemble, but do not link  \n  -P(=<dir or file>)    Generate preprocessed program listing (.lst)  \n  -Xref                 Generate cross reference through 'cobxref'  \n                        (V. Coen's 'cobxref' must be in path)  \n  -I <directory>         Add <directory> to copy/include search path  \n  -L <directory>        Add <directory> to library search path  \n  -l <lib>              Link the library <lib>  \n  -A <options>          Add <options> to the C compile phase  \n  -Q <options>          Add <opti ons> to the C link phase  \n  -D <define>           DEFINE <define> to the COBOL compiler  ", "start_char_idx": 409, "end_char_idx": 3354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "afe44c8c-888e-445f-b320-cc2c2d885b2f": {"__data__": {"id_": "afe44c8c-888e-445f-b320-cc2c2d885b2f", "embedding": null, "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac12e8d1-a576-427e-b52b-120c9060e7d7", "node_type": "4", "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab8d0133c86276375d7aa109bc7c21e95915036b1e8a51f480dd850991d23234", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b37b101e-5c8c-462f-ac1e-e33aa3bdbfb7", "node_type": "1", "metadata": {}, "hash": "5825c29b7de3c0e54ec28b671670b2742c265500269352b119ab8f30146dda7b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-2   -K <entry>            Generate CALL to <entry> as static  \n  -conf=<file>          User defined dialect configuration - See -std= \n  -list-reserved        Display reserved words  \n  -list-intrinsics      Display intrinsic functions  \n  -list-mnemonics       Display mnemonic names  \n  -list-system          Display system routines  \n  -save-temps(=<dir>)   Save intermediate files  \n                        - Default : current directory  \n  -ext <extension>      Add default file extension  \n \n  -W                    Enable ALL warnings  \n  -Wall                 Enable all warnings except as noted below  \n  -Wobsolete            Warn if obsolete features are used \n  -Warchaic             Warn if archaic features are used  \n  -Wredefinition        Warn incompatible redefinition of data items  \n  -Wconstant            Warn inconsistent constant  \n  -Woverlap             Warn overlapping MOVE items \n  -Wparentheses         Warn lack of parentheses around AND within OR  \n  -Wstrict-typing       Warn type mismatch strictly  \n  -Wimplicit -define     Warn implicitly defined data items  \n  -Wcorresponding       Warn CORRESPONDING with no matching items  \n  -Wexternal-value      Warn EXTERNAL item with VALUE clause  \n  -Wcall-params         Warn non 01/77 items for CALL params \n   - NOT set with -Wall \n  -Wcolumn-overflow     Warn text after column 72, FIXED format  \n   - NOT set with -Wall \n  -Wterminator          Warn la ck of scope terminator END -XXX \n   - NOT set with -Wall \n  -Wtruncate            Warn possible field truncation  \n   - NOT set with -Wall \n  -Wlinkage             Warn dangling LINKAGE items  \n   - NOT set with -Wall \n  -Wunreachable         Warn unreachable state ments \n   - NOT set with -Wall \n \n  -fsign=<value>        Define display sign representation  \n   - ASCII or EBCDIC (Default : machine native)  \n  -ffold-copy=<value>   Fold COPY subject to value  \n   - UPPER or LOWER (Default : no transformation)  \n  -ffold-call=<va lue>   Fold PROGRAM -ID, CALL, CANCEL subject to value  \n   - UPPER or LOWER (Default : no transformation)  \n  -fdefaultbyte=<value> Initialize fields without VALUE to decimal value  \n   - 0 to 255 (Default : initialize to picture)  \n  -fintrinsics=<value>   Intrinsics to be used without FUNCTION keyword  \n   - ALL or intrinsic function name (,name,...)  \n  -ftrace               Generate trace code  \n   - Executed SECTION/PARAGRAPH  \n  -ftraceall            Generate trace code  \n   - Executed SECTION/PARAGRAPH/STATEME NTS \n   - Turned on by -debug \n  -fsyntax-only         Syntax error checking only; don't emit any output  \n  -fdebugging -line      Enable debugging lines  \n   - 'D' in indicator column or floating >>D  \n  -fsource-location     Generate source location code  \n   - Turned on by -debug/-g/-ftraceall  \n  -fimplicit -init       Automatic initialization of the Cobol runtime system  \n  -fstack-check         PERFORM stack checking  \n   - Turned on by -debug or -g \n  -fsyntax-extension    Allow syntax extensions  \n   - eg. Switch name SW1, etc.  \n  ", "start_char_idx": 0, "end_char_idx": 3134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b37b101e-5c8c-462f-ac1e-e33aa3bdbfb7": {"__data__": {"id_": "b37b101e-5c8c-462f-ac1e-e33aa3bdbfb7", "embedding": null, "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac12e8d1-a576-427e-b52b-120c9060e7d7", "node_type": "4", "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab8d0133c86276375d7aa109bc7c21e95915036b1e8a51f480dd850991d23234", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afe44c8c-888e-445f-b320-cc2c2d885b2f", "node_type": "1", "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eb2f97faf5e92a099aedc474aa23391d16bbd418ad9c9403dca84d37c5778247", "class_name": "RelatedNodeInfo"}}, "text": "-fwrite-after         Use AFTER 1 for WRITE of LINE SEQUENTIAL  \n   - Default : BEFORE 1  \n  -fmfcomment           '*' or '/' in column 1 treated as comment  \n   - FIXED format only  \n  -fnotrunc             Allow numeric field overflow  \n   - Non-ANSI behaviour  ", "start_char_idx": 3134, "end_char_idx": 3398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c909920-fe5f-4688-986b-55cb8bc11b62": {"__data__": {"id_": "6c909920-fe5f-4688-986b-55cb8bc11b62", "embedding": null, "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591", "node_type": "4", "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8e7cd82441718e95d544616669ef9ab95543256fc9cd765b5e2840b2bd65c5c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d7d55e8-89e8-4d17-ae56-0e4378798eb2", "node_type": "1", "metadata": {}, "hash": "403e00b6da3452c91c7611c4ff0a5cb9a90d181cc2f8f871c49b2f9e878db9af", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-3   -fodoslide            Adjust items following OCCURS DEPENDING  \n   - Requires implicit/explicit relaxed syntax  \n  -fsingle-quote        Use a single quote (apostrophe) for QUOTE  \n   - Default : double quote  \n  -frecursive -check     Check recursive program call  \n  -frelax-syntax        Relax syntax checking  \n   - eg. REDEFINES position  \n  -foptional -file       Treat all files as OPTIONAL  \n   - unless NOT OPTIONAL specified  \nAs discussed in section 2, program compilation group s may consist of multiple programs defined sequentially in a \nsingle source file.  By specifying multiple source files on the \u201ccobc\u201d comma nd, it is possible for a single execution of \nthe \u201ccobc\u201d command to process multiple compilation group s. \n8.1.3.  Compiling GNU COBOL  Programs  \n8.1.3.1.  Compiling Directly -Executable GNU COBOL  Programs  \nThe simplest mode of compilation is to generate a single executable file f rom one or more GNU COBOL  source files : \ncobc \u2013x prog1.cbl prog2.cbl prog3.cbl  \nThe main program must be the first program  found in the \u201cprog1.cbl\u201d file.  The remainder of \u201cprog1.cbl\u201d as well as all \nof \u201cprog2.cbl\u201d and \u201cprog3.cbl\u201d must be subprograms (subrout ines or user -defined functions) or nested subprograms.  \nThis will generate a single executable file (UNIX) or exe file (Windows) which has all COBOL programs contained within \nthe source files specified on the \u201ccobc\u201d command included in the file.  The first program found in the first specified \nsource file is presumed to be the main program and all other programs found in the remainder of that first source file \nas well as in all the remaining source files will be static subroutines and/or user -defined function s.  Any subroutines or \nuser -defined functions that weren\u2019t included in any of the source files will be treated as dynamically loadable \nsubprograms.  \nOptionally, the \u201c -o\u201d option may be used to specify the name of the generated executable file.  If \u201c -o\u201d is not specified, \notherwise, the filename of the 1st source file named on the command will be used.  The appropriate extension for the \ngenerated file (\u201cexe\u201d, on a Windows computer, for example) will be added to the filename that is explicitly or \nimplicitly us ed for the output file.  \n", "start_char_idx": 0, "end_char_idx": 2340, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d7d55e8-89e8-4d17-ae56-0e4378798eb2": {"__data__": {"id_": "5d7d55e8-89e8-4d17-ae56-0e4378798eb2", "embedding": null, "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591", "node_type": "4", "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8e7cd82441718e95d544616669ef9ab95543256fc9cd765b5e2840b2bd65c5c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c909920-fe5f-4688-986b-55cb8bc11b62", "node_type": "1", "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f0acddaf0d684bdff3cc09f374c39a595a371fe3ec4d460a251aeb42ecf261d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "094fa640-a7dd-4d57-89e1-ed82d5eb8226", "node_type": "1", "metadata": {}, "hash": "ad11bfa059409ee6854ab787dc0b4290d63af43901e83034cb921c2e6b190323", "class_name": "RelatedNodeInfo"}}, "text": "8.1.3.2.  Compiling Dynamically -Loadable GNU COBOL  Subprograms  \nSubprograms that are to be dynamically loaded into memory at execution time must be compiled using the \u201c -m\u201d \noption on the cobc command , as follows:  \ncobc \u2013m sprog1.cbl  \ncobc \u2013m sprog1.cbl sprog2.cbl sprog3.cbl  \ncobc \u2013m \u2013b sprog1.cbl sprog2.cbl sprog3.cbl  \n The first command above generates a single dynamically -loadable module .  The  second example generates three  \ndynamically -loadable modules (one for each source file) .  ", "start_char_idx": 2340, "end_char_idx": 2844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "094fa640-a7dd-4d57-89e1-ed82d5eb8226": {"__data__": {"id_": "094fa640-a7dd-4d57-89e1-ed82d5eb8226", "embedding": null, "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591", "node_type": "4", "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8e7cd82441718e95d544616669ef9ab95543256fc9cd765b5e2840b2bd65c5c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d7d55e8-89e8-4d17-ae56-0e4378798eb2", "node_type": "1", "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a01756df38d4eb4f851d4e821918876a807e71855dbb2ff1ef87591b06a32f1a", "class_name": "RelatedNodeInfo"}}, "text": "The third command generates a single dynamically -loadabl;e \nmodule.  \n Optionally, when a single output file is being generated, the \u201c -o\u201d option may be used to specify its  name (otherwise, \nthe filename of the 1st source file named on the command will be used).   The appropriate extension for the generated \nfile (\u201cdll\u201d, on a Windows computer, for example) will be added to the filename that is explicitly or implicitly used for \nthe output file.  \nIt is also possible to generate main programs as dynamically -loadable libraries.  Just use the \u201c -m\u201d option (as shown \nhere) rather than the \u201c -x\u201d option .  To execute these main programs, you\u2019ll need to utilize the cobcrun command, as \ndiscussed in section 8.2.2 .  \n8.1.3.3.  Compiling Static GNU COBOL  Subprograms  ", "start_char_idx": 2844, "end_char_idx": 3617, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fecdb54-4072-40b4-95c2-b8db3047af73": {"__data__": {"id_": "7fecdb54-4072-40b4-95c2-b8db3047af73", "embedding": null, "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b97aee-0be4-4194-85a3-2d0c21eab203", "node_type": "4", "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "84332d0f132954cc6c3441dcd9da5201cd9e4cb6d6162599f272804ba699de4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9a49e94-c49b-4d7b-a6ba-51497c30d77f", "node_type": "1", "metadata": {}, "hash": "57ccca0022034e9a15a0a38cddd1e44e6eff20cc510e51a925e18a8074f6c5ec", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-4 You may compile GNU COBOL  subprograms  into assembler source code  which can then be assembled and linked with \na main program when that main program is compiled.  To create such an assembler source file , compile the \nsubprogram(s) as follows:  \ncobc \u2013S sprog1.cbl             (Note: \u201c-S\u201d is an uppercase -S) \nThis will create an assembler source  file named \u201csprog1.s\u201d.  If you specify multiple input  files, they\u2019ll each create their \nown \u201c.s\u201d files.  \nTo compile a main program , ass emble an assembler source file  and static -link it all together : \ncobc \u2013x mainprog.cbl sprog1.s  \nIf multiple subprograms are needed, simply add their \u201c.s\u201d files to the command line.  Any subprogram  entry -point s for \nwhich \u201c.s\u201d files were not specified will be CALL ed at runtime as dynamically -loadable modules.  \nPrecompiled subroutines intended to be statically linked (usually they end in \u201c.o\u201d) may be automatically located by the \nGNU COBOL  compiler (cobc) and the loader (ld) by using the LD_LIBRARY_PATH  environment variable (section 8.1.4 ). \n8.1.4.  Important Compilation -Time Environment Variables  \nThe following chart documents the various environment variab les that can play a role in the compilation of GNU \nCOBOL  programs.    \nFigure 8-1 - Compiler Environment Variables  \nEnvironment Variable  Use \nCOB_CC   Set to the name of the C compiler you wish GNU COBOL  \nto use.  \nUSE THIS FEATURE AT YOUR OWN RISK \u2013 YOU SHOULD \nALWAYS  USE THE C COMPILER YOUR GNU COBOL  \nBUILD WAS GENERATED FOR  \nCOB_CFLAGS  43 Set to any switches that you \u2019d like to pass on to the C \ncompiler from the cobc compiler (in addition to any that \ncobc will specify).  The default is \u201c -Iprefix /include \u201d, \nwhere \u201c prefix \u201d is the path prefix specified when the \nGNU COBOL  binaries you are using were created.  \nCOB_CONFIG_DIR  Set to the path to the folder where GNU COBOL  \n\u201cconfig\u201d files are kept.   \nCOB_COPY_DIR  If copybooks  your program needs are NOT stored in the \nsame directory as your program, set this environment \nvariable to the folder in which the copybooks  may be \nfound (IBM mainframe programmers will recognize this \nas \u201cSYSLIB\u201d).  \nCOB_LDADD  41 Set to any additional linker switches (ld) that can specify \nwhere standard libraries that must be linked with the \nprogram can be found.  The default is \u201c\u201d (null).  \nCOB_LDFLAGS  41 Set to any linker/loader (ld) switches that you\u2019d like to \npass on to the C compiler from the cobc compiler (in \naddition to any that cobc will specify).  The default is \nnone.  \n                                                                 \n", "start_char_idx": 0, "end_char_idx": 2680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9a49e94-c49b-4d7b-a6ba-51497c30d77f": {"__data__": {"id_": "f9a49e94-c49b-4d7b-a6ba-51497c30d77f", "embedding": null, "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b97aee-0be4-4194-85a3-2d0c21eab203", "node_type": "4", "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "84332d0f132954cc6c3441dcd9da5201cd9e4cb6d6162599f272804ba699de4f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fecdb54-4072-40b4-95c2-b8db3047af73", "node_type": "1", "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53314ec1c0a00c9c32689ba82093bda3124e19d5280b53eecbdf3c7132046764", "class_name": "RelatedNodeInfo"}}, "text": "43 These switches are intended for use only in very special circumstances by very advanced users; their usage is discouraged.  A  \nfuture release of GNU COBOL  will introduce a better way to pass switched to the C compiler and/or the loader from the cobc \ncommand.  ", "start_char_idx": 2680, "end_char_idx": 2946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91527bb0-7e2b-403f-87a7-f2f5be922fca": {"__data__": {"id_": "91527bb0-7e2b-403f-87a7-f2f5be922fca", "embedding": null, "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fefc5875-f032-4e27-8da2-6a25f3e91ae6", "node_type": "4", "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "39b11c240966da152349d59d5d4145e45d90aa75212e2598e3177be40cd1675b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b45830ab-5582-46c8-92a9-8654660df610", "node_type": "1", "metadata": {}, "hash": "9bc3f5878dae844dff455a0715beb63ce9fc7131ca0a26865fceaaefbf4222fc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-5 Environment Variable  Use \nCOB_LIBS  41 Set to any linker switches (ld) that specify where \nstandard libraries that must be linked with the program \ncan be found.  The default is \u201c -Lprefix /lib -lcob \u201d , where \n\u201cprefix \u201d is the path prefix specified when the GNU \nCOBOL  binaries you are using were created.  \nCOBCPY  This environment variable provides an additional means \nof specifying where copybooks  may be found by the \ncompiler (see also COB_COPY_DIR, above).   \nLD_LIBRARY_PATH  If you are planning on using static -linked subroutine \nlibraries, set this variable to the path to the directory \ncontaining your l ibraries.  \nTMPDIR  \nTMP  \n(checked in this order)  Set to a directory/folder appropriate to create \ntemporary files in.  The intermediate working files \ncreated by cobc will be created here (a nd deleted once \nthey\u2019re no longer needed).   \nOn a Windows system, the TMP environment variable is \nnormally set for you when you logon.  If you wish to use \na different  temporary folder, you may set TMPDIR \nyourself and have no fear of disrupting other Windows \nsoftware that relies on TMP.  \nSee Also\u2026  \nCopybooks  1.3.3.3  \nThe COPY  Statement  2.1.1  \n Compiler Switches Reference  8.1.2  \nGNU COBOL  \u201cconfig\u201d Files  8.1.6  \n \n8.1.5.  Locating Copybooks at Compilation Time  \nThe GNU COBOL  compiler will attempt to locate copybooks by searching for them in the following folders.  The search \nwill occur in the sequence shown below, and will terminate once a copybook is found.  \n The folder named as the library -name -1 on the COPY  statement.  \n The folder in which the program being compiled resides.  \n The folder named on the \u201c -I\u201d compiler switch  \n Each of the folders named on the COBCPY environment variable (see section Error! Reference source not found. ", "start_char_idx": 0, "end_char_idx": 1881, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b45830ab-5582-46c8-92a9-8654660df610": {"__data__": {"id_": "b45830ab-5582-46c8-92a9-8654660df610", "embedding": null, "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fefc5875-f032-4e27-8da2-6a25f3e91ae6", "node_type": "4", "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "39b11c240966da152349d59d5d4145e45d90aa75212e2598e3177be40cd1675b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91527bb0-7e2b-403f-87a7-f2f5be922fca", "node_type": "1", "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6e969883b2c664e5a63634a6b36c08ffdf3835fa85e086e4de0a240df8a134b7", "class_name": "RelatedNodeInfo"}}, "text": ").  \nA single folder may be named or multiple folders may be specified, separated  by a system -appropriate delimiter \ncharacter.44  When multiple folders are specified, they will be searched in the order they are named on the \nenvironment variable.  \n The folder specified on the COB_COPY_DIR  environm ent variable.  \nAs each of the above folders is searched for a copybook - \u201cCOPY XXXXXXXX.\u201d, for example \u2013 the GNU COBOL  compiler \nwill attempt to locate the copybook file by any of the following names, in the sequence shown:  \n XXXXXXXX. CPY \n XXXXXXXX .CBL  \n XXXXXXXX .COB  \n XXXXXXXX .cpy \n XXXXXXXX .cbl \n XXXXXXXX .cob  \n XXXXXXXX  \nThe COPY command is case -sensitive on UNIX systems; \u201cCOPY copybookname\u201d and \u201cCOPY COPYBOOKNAME\u201d will both \nfail to locate the \u201cCopyBookName\u201d copybook on a UNIX system.  Windows implementations of GNU COBOL  may or \n                                                                 \n44 If the GNU COBOL  compiler you are using was built to utilize a native Windows environment, use a semicolon (;).  If, however, \nthe GNU COBOL  comp iler was built for a Unix or Linux environment, or was built for a Windows environment utilizing either \nthe Cygwin or MinGW Unix \u201cemulators\u201d, use a colon character (:) as the separator.  ", "start_char_idx": 1881, "end_char_idx": 3145, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a7dcb17-785e-4789-8483-35b80ac96426": {"__data__": {"id_": "4a7dcb17-785e-4789-8483-35b80ac96426", "embedding": null, "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29e048cf-1454-4eee-b8df-5454adf056f9", "node_type": "4", "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5812343f776723d804a81148dc798eb373d63c1b9433e0898524d68e9fc03977", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31bfbe17-f5b1-4170-8b60-6c41062584ee", "node_type": "1", "metadata": {}, "hash": "32259a833b15174e4f07ac030a0ee87685e59a305a43c9a10c8ec84aa9b0c54c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-6 may not be similarly case sensitive with regard to copybook names, depending upon the Windows version and GNU \nCOBOL  build options \u2013 it is safest to simply treat the COPY command as case -sensitive in all environments.  \nSee Also\u2026  \nCopybooks  1.3.3.3  \nThe COPY  Statement  2.1.1  \n Compiler Switches Reference  8.1.2  \nCompilation -time Environment Variables  8.1.4  \n \n8.1.6.  Using Compiler Configuration Files  \nGNU COBOL  uses compiler configuration files  to define various options that will control the compilation process.  \nThese configuration files are specified using the \u201c -conf\u201d compilation switch or are found in the folder defined by the \nCOB_CONFIG_PATH environment variable . \nThe following is a verbatim listing of the \u201cdefault\u201d configuration file (the one used if you don\u2019t specify the \u201c -conf \u201d \nswitch), just to show you the types of settings that may appear:  \n# COBOL compiler configuration      -*- sh -*- \n \n# Value: any string  \nname: \"GNU COBOL \" \n \n# Value: int  \ntab-width: 8  \ntext-column: 72  \n \n# Value: 'cobol2002', 'mf', 'ibm'  \n#  \nassign-clause: mf  \n \n# If yes, file names  are resolved at run time using environment variables.  \n# For example, given ASSIGN TO \"DATAFILE\", the actual file name will be  \n#  1. the value of environment variable 'DD_DATAFILE' or  \n#  2. the value of environment variable 'dd_DATAFILE' or  \n#  3. the value  of environment variable 'DATAFILE' or  \n#  4. the literal \"DATAFILE\"  \n# If no, the value of the assign clause is the file name.  \n", "start_char_idx": 0, "end_char_idx": 1602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31bfbe17-f5b1-4170-8b60-6c41062584ee": {"__data__": {"id_": "31bfbe17-f5b1-4170-8b60-6c41062584ee", "embedding": null, "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29e048cf-1454-4eee-b8df-5454adf056f9", "node_type": "4", "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5812343f776723d804a81148dc798eb373d63c1b9433e0898524d68e9fc03977", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a7dcb17-785e-4789-8483-35b80ac96426", "node_type": "1", "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c5e6ed77690d33c91b752e4759d91974ddeb023196a7cf49d8078a852580b494", "class_name": "RelatedNodeInfo"}}, "text": "#  \n# Value: 'yes', 'no'  \nfilename -mapping: yes  \n \n# Value: 'yes', 'no'  \npretty-display: yes  \n \n# Value: 'yes', 'no'  \nauto-initialize: yes  \n \n# Value: 'yes', 'no'  \ncomplex-odo: no \n \n# Value: 'yes', 'no'  \nindirect -redefines: no  \n \n# Binary byte size - defines the allocated bytes according to PIC  \n# Value:         signed  unsigned  bytes  \n#                ------  --------   ----- \n# '2-4-8'        1 -  4                2 \n#                5 -  9                4  \n#               10 - 18                8  \n# \n# '1-2-4-8'      1 -  2                1  \n#                3 -  4                2  \n#                5 -  9                4  \n#               10 - 18                8 \n# ", "start_char_idx": 1602, "end_char_idx": 2302, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca414aec-0be8-43bb-bf14-70913a2327b4": {"__data__": {"id_": "ca414aec-0be8-43bb-bf14-70913a2327b4", "embedding": null, "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dee6fc4-8b59-4f01-bb37-d063be0ec777", "node_type": "4", "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c55df5478ae2c55bc6147aa143c6d27bd38b3f03ed684ff2cee68a984b6fd0c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ff14fbf-956c-47ba-bc92-29dcfa2a3492", "node_type": "1", "metadata": {}, "hash": "34acf062680cf8f368113c56b813169ba2b04792c248f13d01288365e2897efe", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-7 # '1--8'         1 -  2    1 -  2      1  \n#                3 -  4    3 -  4      2  \n#                5 -  6    5 -  7      3  \n#                7 -  9    8 -  9      4  \n#               10 - 11   10 - 12      5  \n#               12 - 14   13 - 14      6 \n#               15 - 16   15 - 16      7  \n#               17 - 18   17 - 18      8  \nbinary-size: 1-2-4-8 \n \n# Value: 'yes', 'no'  \nbinary-truncate: yes  \n \n# Value: 'native', 'big -endian' \nbinary-byteorder: big -endian \n \n# Value: 'yes', 'no'  \nlarger-redefines -ok: no \n \n# Value: 'yes', 'no'  \nrelaxed-syntax-check: no  \n \n# Perform type OSVS - If yes, the exit point of any currently executing perform  \n# is recognized if reached.  \n# Value: 'yes', 'no'  \nperform-osvs: no  \n \n# If yes, linkage -section items remain allocated  \n# between invocations.  \n# Value: 'yes', 'no'  \nsticky-linkage: no  \n \n# If yes, allow non -matching level numbers  \n# Value: 'yes', 'no'  \nrelax-level-hierarchy: no  \n \n# not-reserved:  \n# Value: Word to be taken out of the reserved words list  \n# (case independent)  \n \n# Dialect featur es \n# Value: 'ok', 'archaic', 'obsolete', 'skip', 'ignore', 'unconformable'  \nauthor-Paragraph    obsolete  \nmemory-size-clause:   obsolete  \nmultiple -file-tape-clause:  obsolete  \nlabel-records-clause:  obsolete  \nvalue-of-clause:   obsolete  \ndata-records-clause:  obsolete \ntop-level-occurs-clause:  skip \nsynchronized -clause:  ok \ngoto-statement -without-name: obsolete  \nstop-literal-Statement   obsolete  \ndebugging -line:   obsolete  \npadding-character -clause:  obsolete  \nnext-sentence -phrase:  archaic \neject-Statement    skip \nentry-Statement    obsolete  \nmove-noninteger -to-alphanumeric: error  \nodo-without-to:   ok \n8.2. Running GNU COBOL  Programs  \n8.2.1.  ", "start_char_idx": 0, "end_char_idx": 1853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ff14fbf-956c-47ba-bc92-29dcfa2a3492": {"__data__": {"id_": "5ff14fbf-956c-47ba-bc92-29dcfa2a3492", "embedding": null, "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6dee6fc4-8b59-4f01-bb37-d063be0ec777", "node_type": "4", "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c55df5478ae2c55bc6147aa143c6d27bd38b3f03ed684ff2cee68a984b6fd0c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca414aec-0be8-43bb-bf14-70913a2327b4", "node_type": "1", "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ce193b313c243a236af10a3050e0fc960943857232853dfc422c60a8aba5707d", "class_name": "RelatedNodeInfo"}}, "text": "Executing Programs Directly  ", "start_char_idx": 1853, "end_char_idx": 1882, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f821f59-9944-4be5-8ed5-d475ec91ee22": {"__data__": {"id_": "5f821f59-9944-4be5-8ed5-d475ec91ee22", "embedding": null, "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "535029b4-28bf-478f-9388-e9b45546db29", "node_type": "4", "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9392407776ac99f9ce09921bd0fc432242819f202fc266d4f779bbc99a5efe0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2bddb1b9-598a-47d7-ba73-e8183da4305d", "node_type": "1", "metadata": {}, "hash": "d56f73d18a8d51c2b112ce557e5593105fea454cb5f1c05454e17ce90cc205d5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-8 GNU COBOL  programs compiled with the \u201c -x\u201d option will be generated as directly -executable programs.  For example, \non a Windows system, the \u201c -x\u201d option will be generated as an \u201c.exe\u201d file.  \n", "start_char_idx": 0, "end_char_idx": 288, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2bddb1b9-598a-47d7-ba73-e8183da4305d": {"__data__": {"id_": "2bddb1b9-598a-47d7-ba73-e8183da4305d", "embedding": null, "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "535029b4-28bf-478f-9388-e9b45546db29", "node_type": "4", "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9392407776ac99f9ce09921bd0fc432242819f202fc266d4f779bbc99a5efe0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f821f59-9944-4be5-8ed5-d475ec91ee22", "node_type": "1", "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1795eaa55e79573d7fc18531ebfa213cb0893c111de2fcc47b4f0d8cc6adadd7", "class_name": "RelatedNodeInfo"}}, "text": "These native executables are appropriate for execution as non -graphical user interface programs.   \nOn a UNIX system this means the programs may be executed fr om a command shell such as bash, csh, ksh and so \nforth.  When a GNU COBOL  program runs on a Windows system, it runs within a console window (i.e. \u201ccmd.exe\u201d).   \nInteractions between the program and the user will take place using the standard input, standard  output and standard \nerror streams.  Any SCREEN SECTION I/O performed by the program will take place within the command shell \n\u201cwindow\u201d.  \nDirect program execution syntax is as follows:  \n[path ]program  [arguments ] \nFor example:  \n/usr/local/printaccount ACCT=66253 78  \nOr\u2026  \nC:\\Users \\Me\\Documents \\Programs \\printaccount.exe ACCT=6625378  \n8.2.2.  Using the \u201ccobcrun\u201d Utility  \nIt is possible to generate executable modules  for all GNU COBOL  programs, not just subroutines, by choosing to use \nthe \u201c-m\u201d option  to specify the compiler output format even for main programs.  \nSome may prefer  to compile their GNU COBOL  main programs into these dynamically -loadable modules in the \ninterests of using the same general compilation command for all programs without having t o think \u201cIs it a main \nprogram or a subroutine?\u201d.  \nMain programs compiled in this manner should be executed as follows:  \n[path ]cobcrun program  [arguments ] \nDo not specify the \u201c.so\u201d or \u201c.dll\u201d extension on the program name.  The \u201c program \u201d value must exactly match the \nprimary entry -point name (section 3) of the main program (including upper - and lower -case letters).  \nThe general usage  and syntax of cobcrun is as follows:  \nUsage: cobcrun PROGRAM [param ...]  \nor   : cobcrun --help (-h) \n       Print this help  \nor   : cobcrun --version ( -V) \n       Print version information  \nor   : cobcrun --info (-i) \n       Print build information  \nFor an examp le of the use of cobcrun:  \ncd /usr/local  \ncobcrun printaccount ACCT=6625378  \nOr\u2026  \ncd C:\\Users \\Me\\Documents \\Programs  \ncobcrun printaccount.exe ACCT=6625378  \nNote how the cobcrun command does not allow a path to be specified with the program name \u2013the directory i n which \nthe programs dynamically loadable module exists must either be the current directory or must be defined in the \ncurrent PATH.  \nSee Also\u2026  \nCompiler Switches Reference  8.1.2  \n  ", "start_char_idx": 288, "end_char_idx": 2616, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe2fb6d8-9693-45b5-95dc-a93d4811b973": {"__data__": {"id_": "fe2fb6d8-9693-45b5-95dc-a93d4811b973", "embedding": null, "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4afd0b4-2463-41d6-9f58-9ae2dafd739d", "node_type": "4", "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "036cd03e2b8948656bdc77c066fffad65ee16a759292cc5302d0f80af465ebec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "471301e5-3811-4004-a7da-4cb4d288e7e7", "node_type": "1", "metadata": {}, "hash": "8bf0b93fcd07334081f05f2577376b3794a757a9e6c94465a69a1c7d40a9cead", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-9 8.2.3.  Program Arguments  \nRegardless of the manner in which a program is executed, a ny arguments specified to the program may be retrieved \nvia either of the following ,: \n ACCEPT \u2026 FROM COMMAND -LINE  \n ACCEPT \u2026 FROM ARGUMENT -VALUE  \n See Also\u2026  \nThe ACCEPT Statement (Command Line)  6.2.1.2  \n  \n8.2.4.  Important Execution -Time Environment Variables  \nThe following chart documents the various environment variables that can play a role in the execution of GNU COBOL  \nprograms.   \nFigure 8-2 - Run-Time Environment Variables  \nEnvironment Variable  Use \nCOB_DISPLAY_WARNINGS  If set to a value of \u201cY\u201d, any run -time warnings (such as \nnoting the implicit CLOSE  of open files when a GOBACK  \nor STOP RUN  is executed) will be displayed.  Any other \nvalue for this environment variable (including not \nsetting the variable at all) will suppress such messages.  \nCOB_LIBRARY_PATH  At runtime, GNU COBOL  will attempt to locate and load \nany application dynamically -load able libraries from the \nPATH  and the directory in which the program \nexecutable was found.  If these library files could be \nsomewhere else, specify the directory path using this \nvariable.  \nCOB_PRE_LOAD  If set to any non -null value, this variable will cause all \ndynamically -loadable libraries to be loaded when the \nprogram begins  execution (rather than searching for \nand loading the module upon first use).  \nCOB_SET_DEBUG  If a USE FOR DEBUGGING  section is included in \nDECLARATIVES , the code within it will be disabled \nunless this environment variable is set to a value of \u201cY\u201d, \n\u201cy\u201d or \u201c1\u201d.  \nCOB_SET_TRACE  If the \u201c\u2013ftrace \u201d or \u201c\u2013ftraceall \u201d options were used when \nthe program was compiled, setting this environment \nvariable to a value of \u201c Y\u201d will activate the trace  at the \npoin t the program begins execution .  Setting this \nenvironment variable to any other value (or never \nsetting it to ANY value) will disable tracing.   ", "start_char_idx": 0, "end_char_idx": 2020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "471301e5-3811-4004-a7da-4cb4d288e7e7": {"__data__": {"id_": "471301e5-3811-4004-a7da-4cb4d288e7e7", "embedding": null, "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4afd0b4-2463-41d6-9f58-9ae2dafd739d", "node_type": "4", "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "036cd03e2b8948656bdc77c066fffad65ee16a759292cc5302d0f80af465ebec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe2fb6d8-9693-45b5-95dc-a93d4811b973", "node_type": "1", "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b956c834447a7414db005bffa801d23a3ba34d6c2b8c4f1040d27172db6fad3", "class_name": "RelatedNodeInfo"}}, "text": "See the \nREADY TRACE  and RESET TRACE   statements for \nadditional ways to control tracing.  \nCOB_SCREEN_ESC  If set to any non -blank value, this variable allows the \nACCEPT  verb to detect the Esc key.  See Figure 6-23 for \nadditional information.  \nCOB_SCREEN_EXCEPTIONS  Setting this variable to any non -blank value will allow \nthe ACCEPT  verb to detect the Esc, PgUp and PgDn \nkeys.  See Figure 6-23 for additional information.  ", "start_char_idx": 2020, "end_char_idx": 2456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b3bb05d-0068-4fbd-9b6e-ca9700b63bdc": {"__data__": {"id_": "4b3bb05d-0068-4fbd-9b6e-ca9700b63bdc", "embedding": null, "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a93c02df-fd8c-44c1-993e-f22923aacaa6", "node_type": "4", "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6f2a869ddc215bab18063cf8bdbbdf75a54b766070ae227820a4b451dc362ef0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eeb31901-632f-4f34-a2ce-37dd367e1f8d", "node_type": "1", "metadata": {}, "hash": "79833f51cfe0ed7897bc12e500db72efd4753727739c4df5367e9f590c42ab64", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-10 Environment Variable  Use \nCOB_SORT_MEMORY  The value of this variable (an integer) will be used to \ndefine how much memory will be allocated for use in \nsorting.  If the value is 1048576 or greater, that value \nwill be used \u201cas is\u201d as the amount of memory (in bytes) \nto allocate.  ", "start_char_idx": 0, "end_char_idx": 377, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eeb31901-632f-4f34-a2ce-37dd367e1f8d": {"__data__": {"id_": "eeb31901-632f-4f34-a2ce-37dd367e1f8d", "embedding": null, "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a93c02df-fd8c-44c1-993e-f22923aacaa6", "node_type": "4", "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6f2a869ddc215bab18063cf8bdbbdf75a54b766070ae227820a4b451dc362ef0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b3bb05d-0068-4fbd-9b6e-ca9700b63bdc", "node_type": "1", "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "153633c4d815898c6d00ce99b462d5f44d8f9ecaa8cd1c50b2867ad23fcb5fc8", "class_name": "RelatedNodeInfo"}}, "text": "If the value is les s than 1048576 .  The \ndefault sort memory amount is 128 MB.  \nCOB_SWITCH_n  (n=0 to 15); These environment variables correspond to \nSWITCH -0 through SWITCH -15, defined in the SPECIAL -\nNAMES  paragraph .  Setting them to \u201cON\u201d will activate \nthem ; any other value turns them  off.   \nCOB_SYNC  If set to a value of upper - or lowercase \u201c p\u201d, this variable \nwill force a file commit every time a file is written to \n(ensuring that data is immediat ely written to the file \nrather than retained in memory until a future commit \noccurs).  This will slow -down update access to files, but \nwill provide for better integrity in the event of a \nprogram failure.  \nCOB_TRACE_FILE  If set to a value, this environment variable specifies the \nfile to which all \u2013ftrace  and \u2013ftraceall  output will be \nwritten.  \nIf this is NOT set to a value, all \u2013ftrace  and \u2013ftraceall  \noutput will be written to STDERR, where it may be \npiped via a \u201c2>  filename\u201d on the command that \nexecutes the program.  \nDB_HOME  If your GNU COBOL  build uses the Berkeley Database \n(BDB) package, use this environment variable to specify \nthe folder in which the lock management files to be \nassociated with all non -SORT  files opened by the \nprogram will be stored45.  Having this variable defined \nwill activate record locking features on the READ , \nREWRITE  and WRITE  statements46.   \nPATH  The GNU COBOL  \u201cbin\u201d directory should be defined in \nthe PATH . \nTMPDIR  \nTMP  \nTEMP  \n(checked in this order)  Set to a directory/folder appropriate to create \ntemporary files in.  This will be used by SORT  and \nMERGE  to create temporary work files.  You may also \nuse this folder for any temporary files your application \nmay require.  \nGood form dictates that \u2013 if your application DOES \ncreate temporary working files \u2013 it should clean -up \nafter itself.47. \nSee Also\u2026  \n                                                                 \n45 ORGANIZATION INDEXED  files will also ha ve their data file allocated in the DB_HOME folder, if DB_HOME exists.  \n46 Even with DB_HOME, locking will not work with ORGANIZATION SEQUENTIAL  (either type) or ORGANIZAION \nRELATIVE  files with GNU COBOL builds created for Windows/MinGW.  ORGANIZATION INDEXED  locks will work \nwith Windows/MinGW + BDB and all locks will work for all file organizations with UNIX GNU COBOL builds.  \n47 Take a look at the C$DELETE  and CBL_DELETE_FILE  built -in subroutines.  ", "start_char_idx": 377, "end_char_idx": 2817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70ec31eb-d00b-405d-871a-eb6ae464a16b": {"__data__": {"id_": "70ec31eb-d00b-405d-871a-eb6ae464a16b", "embedding": null, "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0cc664b9-8de1-43e1-b96a-31cb2731586f", "node_type": "4", "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c9ea040df856f62f2223bbd6b1c4424bf975db643f37b9c3a3d34b458515193c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbb6fc99-ca60-46ac-bf7a-73ae2ea015b6", "node_type": "1", "metadata": {}, "hash": "6c2320dcf4d9054357382bf9a286bea55f52f2acc6d242e2fe7713a2dcfd1263", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-11 The SPECIAL -NAMES  Paragraph  4.1.4  \nUsing DECLARATIVES  6.1.4  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \nThe CLOSE  Statement  6.4.7  \nThe GOBACK  Statement  6.2.19  \nThe MERGE  Statement  6.4.25  \nThe READ Statement  6.4.31  \n The READY TRACE  Statement  6.2.32  \nThe RESET TRACE  Statement  6.4.34  \nThe REWRITE  Statement  6.4.36  \nThe SORT  Statement (File Sort)  6.4.40.1  \nThe STOP RUN  Statement  6.4.42  \nThe WRITE  Statement  6.4.50  \nCompiler Switches Reference  8.1.2  \n \n8.3. Built -In System Subroutines  \n8.3.1.  \u201cCall  by Name \u201d Routines  \nThere are a number of built -in system subroutines included with GNU COBOL .  Generally, these routines are intended \nto match those available in Mi cro Focus COBOL (CBL_...) or ACU COBOL (C$...).  \nThese routines , all executed via their UPPERCASE NAMES,  are capable of performing the following Functions  \n Changing the current directory  \n Copying files  \n Creating a directory  \n Creating, Opening, Closing, Reading and Writing byte -stream files  \n Deleting directories (folders)  \n Deleting files  \n Determining how many arguments were passed to a subroutine  \n Getting file information (size and last -modification date/time)  \n Getting the length (in bytes) of an argument passed to a subroutine  \n Justifying a field left -, right - or center -aligned  \n Moving files (a destructive \u201ccopy\u201d)  \n Putting the program \u2018to sleep\u2019, specifying the sleep time in seconds  \n Putting the program \u2018to sleep\u2019, specifying the sleep time in nanoseconds; CAVEAT: although you\u2019ll express the \ntime in nanoseconds, Windows systems will only be able to sleep at a millise cond granularity  \n Retrieving information about the currently -executing program  \n Submitting a command to the shell environment appropriate for the version of GNU COBOL  you are using for \nexecution  \nThe following table describes the various built -in subroutines.   ALL SUBROUTINE ARGUMENTS ARE MANDATORY \nEXCEPT WHERE EXPLICITLY NOTED TO THE CONTRARY.   ", "start_char_idx": 0, "end_char_idx": 2081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbb6fc99-ca60-46ac-bf7a-73ae2ea015b6": {"__data__": {"id_": "cbb6fc99-ca60-46ac-bf7a-73ae2ea015b6", "embedding": null, "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0cc664b9-8de1-43e1-b96a-31cb2731586f", "node_type": "4", "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c9ea040df856f62f2223bbd6b1c4424bf975db643f37b9c3a3d34b458515193c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70ec31eb-d00b-405d-871a-eb6ae464a16b", "node_type": "1", "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f9ae1d98852a3f59a7e8cf8ba7deec814e735e85642cbe1b2b2f779710261b4", "class_name": "RelatedNodeInfo"}}, "text": "Any subroutine returning a value to RETURN -CODE  could \nutilize the RETURNING /GIVING  clause on the CALL  to return the result back to the full -word binary COMP -5 data ite m \nof your choice.   \nSee Also\u2026  \nThe CALL  Statement  6.4.5  \n  \n8.3.1.1.  CALL \u201cC$CALLEDBY\u201d USING prog -name -area  \nThis routine  returns the name of the program that CALL ed the currently -executing program.  The program name will \nbe returned, left -justified and SPACE filled, in the specified prog -name -area  argument, which should be a PIC X ", "start_char_idx": 2081, "end_char_idx": 2609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92d1bae6-ae12-4f72-96f2-de0a7dd51af5": {"__data__": {"id_": "92d1bae6-ae12-4f72-96f2-de0a7dd51af5", "embedding": null, "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6", "node_type": "4", "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fda2d94a08a94a397cd1343053a68a80569e2fa047f8d9a65568591342f96a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7f35387-b22e-4fee-b97f-b5136af93249", "node_type": "1", "metadata": {}, "hash": "2887c439dc6dd66fc7c5773ccad8c90947fbb5df3364bf48b3907c7ec6c6ce9f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-12 elementary item or a group item.  If prog -name -area  is too small to receive the entire program name, the program \nname value will be truncated to fit the size of the argument.  \nThe RETURN -CODE  register will be set to one of the following values:  \n-1 An error occurred.  ", "start_char_idx": 0, "end_char_idx": 371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7f35387-b22e-4fee-b97f-b5136af93249": {"__data__": {"id_": "c7f35387-b22e-4fee-b97f-b5136af93249", "embedding": null, "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6", "node_type": "4", "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fda2d94a08a94a397cd1343053a68a80569e2fa047f8d9a65568591342f96a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92d1bae6-ae12-4f72-96f2-de0a7dd51af5", "node_type": "1", "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2b13367107c27323f0a8c5df4b9b79de8cc0260aa69fe7d48be1ed827464e3bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fef175c-7e87-4f0c-a3ac-aba24302d3b3", "node_type": "1", "metadata": {}, "hash": "de4b02e12232c1ec5f72217ad6fdd91d103ac6cd719a5dcac21d6fc0107737d0", "class_name": "RelatedNodeInfo"}}, "text": "The prog -name-area  contents will be unchanged.  \n0 The program CALL ing \u201cC$ CALL EDBY\u201d was not called by any other program (in other words, it is a main program,).  \nThe prog -name -area  contents will be set entirely to SPACES.  \n1 The program CALL ing \u201cC$ CALL EDBY\u201d was indeed c alled by another program, and that program\u2019s name has been \nsaved in prog -name -area . \n8.3.1.2.  CALL \u201cC$CHDIR\u201d USING directory -path , result  \nThis routine makes  directory -path  (an a lphanumeric literal or identifier ) the current directory . \nThe return code of the operation is returned both in the result  argument (any non -edited numeric identifier) as well as \nin the RETURN -CODE  special register.    The return code of the operation will be either 0=Success or 128=failure.  \nThe directory change remains in effect until the program terminates (in which the original current directory at the \ntime the program was restarted will be automatically restored) or until another C$CHDIR is executed.  \n8.3.1.3.  CALL \u201cC$COPY\u201d USING src-file-path, dest -file-path , 0 \nUse this subroutine to copy file src-file-path  to dest -file-path  as if it were done via the \u201cCP\u201d (Unix) or \u201cCOPY\u201d \n(Windows) command.  \nBoth file path arguments may be alphanumeric literals or identifiers.  \n", "start_char_idx": 371, "end_char_idx": 1644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fef175c-7e87-4f0c-a3ac-aba24302d3b3": {"__data__": {"id_": "3fef175c-7e87-4f0c-a3ac-aba24302d3b3", "embedding": null, "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6", "node_type": "4", "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4fda2d94a08a94a397cd1343053a68a80569e2fa047f8d9a65568591342f96a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7f35387-b22e-4fee-b97f-b5136af93249", "node_type": "1", "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7be5dfc1f4fd1b4cd584bc1ad4a6e8ce503a2f59df2457ea203dc55eebef33bb", "class_name": "RelatedNodeInfo"}}, "text": "The third argument is required, but is unused.  \nIf the attempt to copy the file fails (for example, it or the destination directory doesn't exist), RETURN -CODE  will be set \nto 128; on successful completion it will be set to 0.  \n8.3.1.4.  CALL \u201cC$DELETE\u201d USING file-path , 0 \nThis routine deletes the file specified by the file -path argument (an alphanumeric literal or identifier) just as if that \nwere done using the \u201cRM\u201d (Unix) or \u201cERASE\u201d (Windows) command.  \nThe second argument is required, but is unused.  \nIf the attempt to delete the file fails (for example, it doesn't exist), RETURN -CODE  will be set to 128; on successful \ncompletion it will be set to 0.   \n8.3.1.5.  CALL \u201cC$FILEINFO\u201d USING file-path , file-info  \nWith this routine you may  retrieve the size of the file48 specified as the file-path  argument (an alphanumeric literal or \nidentifier) and the date/time that file was last modified.  The information is returned to the file-info argument, which \nis defined as the following 16 -byte are a: \n        01  File -Info. \n            05 File-Size-In-Bytes  PIC 9(18) COMP.  \n            05 Mod-YYYYMMDD        PIC 9(8)  COMP. *> Modification Date  \n            05 Mod-HHMMSS00        PIC 9(8)  COMP. *> Modification Time  \n                                                                 \n48 File size information may not be available in the part icular GNU COBOL  build / Operating System combination you are using \nand may therefore always be returned as zero.  \n ", "start_char_idx": 1644, "end_char_idx": 3137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3764c2e5-3cc6-4857-82f3-8a31b179a485": {"__data__": {"id_": "3764c2e5-3cc6-4857-82f3-8a31b179a485", "embedding": null, "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e963c169-e15c-40df-a425-e5888daecf23", "node_type": "4", "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a100edd30654f34d5389d2b9eb8c958c641d451c85fa16692915737ae02b6c0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d52b139f-8995-475a-bc6e-da0699f86715", "node_type": "1", "metadata": {}, "hash": "362340332e82f6873da5648fe5a7dbd16c41c16cd00226a2fabe4ffaa7c67702", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-13 The last two decimal digits in the modification time will always be 0.  \nIf the subroutine is successful, a value of 0 will be returned in RETURN -CODE .  Failure to retrieve the needed statistics \non the file will cause a RETURN -CODE  value of 35 to be passed back.  Supplying less than two arguments will generate \na 128 RETURN -CODE  value.  \n8.3.1.6.  CALL \u201cC$GETPID\u201d  \nUse the C$GETPID  to return the PID of the executing GNU COBOL  program.  The PID value is returned into the \nRETURN -COD E register.  \nAs you can see, there are no arguments to this routine.  \n", "start_char_idx": 0, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d52b139f-8995-475a-bc6e-da0699f86715": {"__data__": {"id_": "d52b139f-8995-475a-bc6e-da0699f86715", "embedding": null, "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e963c169-e15c-40df-a425-e5888daecf23", "node_type": "4", "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a100edd30654f34d5389d2b9eb8c958c641d451c85fa16692915737ae02b6c0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3764c2e5-3cc6-4857-82f3-8a31b179a485", "node_type": "1", "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6dec8189a12de514cc68b8fb23868d7340838d725ccc0864f48050eb3947d52c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "894ffa2b-f97b-4543-9912-3979c977623e", "node_type": "1", "metadata": {}, "hash": "0b9e4ce4e47d22d2fc0e844bfb46fe477fdf2dee47df453b659f2074e496acbb", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.7.  CALL \u201cC$JUSTIFY\u201d USING data -item , \u201cjustification -type \u201d \nUse C$JUSTIFY  to left, right or center -justify an alphabetic, alphanumeric or numeric edited data-item .  The \njustification -type  argument indicates the type of the justification to be performed.  The value of that argument will be \ninterpreted as follows:  \nabsent  Treated the same as if it were \"R\"  \nCxxx...  If it begins with a capital \"C\", the value will  be centered  \nRxxx...  If it begins with a capital \"R\", the value will be right -justified, space -filled to the left  \nLxxx...  If it begins with a capital \"L\", the value will be left -justified, space -filled to the right  \nanything else  Treated as if it were \"R\"  \n8.3.1.8.  CALL \u201cC$MAKEDIR\u201d USING dir-path  \nWith this routine you may create a new directory  \u2013 the name of which is supplied as the dir-path  argument (an \nalphanumeric literal or identifier ).  \nOnly the lowest -level directory (last) in the specified pa th can be created \u2013 all others must already exist.  This \nsubroutine will NOT behave as a \u201cmkdir \u2013p\u201d (Unix) or \u201cmkdir /p\u201d (Windows).  \nRETURN -CODE  will be set to the return code of the operation; the value will be either 0=Success or 128=f ailure.  \n8.3.1.9.  CALL \u201cC$NARG\u201d USING arg-count -result  \nC$NARG  returns the number of arguments passed to a subroutine  that calls C$NARG back to the numeric field arg-\ncount -result .  When called from within a user -defined function, a value of one (1) is returned if any arguments were \npassed to the function or a zero (0) otherwise.  \nWhen CALL ed from a main program, the returned value will always be 0.  \n8.3.1.10.  CALL \u201cC$PARAMSIZE\u201d USING argument -number  \nThis subroutine return s the size (in bytes) of the subroutine argument  supplied using the argument -number parameter \n(a numeric literal or data item) . \nThe size is returned in the RETURN -CODE  special register.  \nIf the specified argu ment does not exist, or an invalid argument number is specified, a value of 0 is returned.  \n", "start_char_idx": 663, "end_char_idx": 2672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "894ffa2b-f97b-4543-9912-3979c977623e": {"__data__": {"id_": "894ffa2b-f97b-4543-9912-3979c977623e", "embedding": null, "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e963c169-e15c-40df-a425-e5888daecf23", "node_type": "4", "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a100edd30654f34d5389d2b9eb8c958c641d451c85fa16692915737ae02b6c0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d52b139f-8995-475a-bc6e-da0699f86715", "node_type": "1", "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e1121d42f5816c9d4f7864693c4426653104d5a18aa99e870935781f78d22a97", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.11.  CALL \u201cC$PRINTABLE\u201d USING data -item [ , char  ] \nThe C$PRINTABLE  subroutine converts the contents of the data -item  specified as the first argument  to printable \ncharacters.  Those characters that are deemed printable (as defined by the characterset used by data -item ) will \nremain unchanged, while those that are NOT printable will be converted to the character specified as the second \nargument.  If no s econd argument is provided, a period (\u201c.\u201d) will be used.  ", "start_char_idx": 2672, "end_char_idx": 3153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4a98139-8d81-4bea-8f19-a732201dc4fd": {"__data__": {"id_": "b4a98139-8d81-4bea-8f19-a732201dc4fd", "embedding": null, "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "419e6e22-f936-47bb-96a9-338c6707b1da", "node_type": "4", "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6626cb9dec6563bb0815e6dade4c7dda1d80a421cac73322a0af0e4871c9c77f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0533fa0-1f65-42a8-b8f9-b5c3a712b148", "node_type": "1", "metadata": {}, "hash": "36279a4eeed0e1a3a7e921b40351b48d56d05ba3f29f4085c53a9630b63da85a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-14 8.3.1.12.  CALL \u201cC$SLEEP\u201d USING seconds -to-sleep  \nC$SLEEP puts the program to sleep for the specified number of seconds .  The seconds -to-sleep argument may be a \nnumeric literal or data item.  \nSleep times less than 1 will be interpreted as 0, which immediately returns without any sleep delay.  \n8.3.1.13.  CALL \u201cC$TOLOWER\u201d USING data -item , BY VALUE convert -length  \nThis routine will converts convert -length  (a numeric literal or data item) leading characters of data -item  (an \nalphanumeric identifier) to lower -case . \nThe convert -length  argument must be specified BY VALUE .  It specifies how many (leading) characters in data -item  will \nbe converted \u2013 any characters after that will remain unchanged . \nIf convert -length  is negative or zero, no conversion will be performed.  \n8.3.1.14.  CALL \u201cC$TO UPP ER\u201d USING data -item , BY VALUE convert -length  \nUse the C$TOUPPER  subroutine to change the  convert -length  (a numeric literal or data item) leading characters of \ndata -item  (an alphanumeric identifier) to upper -case . \nThe convert -length  argument must be specified BY VALUE .  It specifies how many (leading) characters in data -item  will \nbe converted \u2013 any characters after that will remain unchanged . \nIf convert -length  is negative or zero, no conversion will be performed.  \n", "start_char_idx": 0, "end_char_idx": 1413, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0533fa0-1f65-42a8-b8f9-b5c3a712b148": {"__data__": {"id_": "a0533fa0-1f65-42a8-b8f9-b5c3a712b148", "embedding": null, "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "419e6e22-f936-47bb-96a9-338c6707b1da", "node_type": "4", "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6626cb9dec6563bb0815e6dade4c7dda1d80a421cac73322a0af0e4871c9c77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4a98139-8d81-4bea-8f19-a732201dc4fd", "node_type": "1", "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "63cc4b126a75af66c8c3ef92b8381e2039207ba965219f2c31a4808cd149feb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ffa2e1e-20bc-43c8-a0e4-cd8971233cce", "node_type": "1", "metadata": {}, "hash": "9219865e63360b80609e438692b3ed08a988f93bb4be636f78ec12151239cf51", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.15.  CALL \u201cCBL_AND\u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs a bit -by-bit logical AND operation between the left -most 8* byte -length  correspondin g bits of \nitem -1 and item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cAND\u201d  process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 0 \n0 1 0 \n1 0 0 \n1 1 1 \n \n8.3.1.16.  CALL \u201c CBL_CHANGE_DIR \u201d USING directory -path  \nThis routine makes  directory -path  (an a lphanumeric literal or identifier ) the current directory . \nThe directory change remains in effect until the program terminates (in which the original current directory at the \ntime the program was restarted will be automatically restored) or until another CBL_CHANGE_DIR (or C$CHDIR)  is \nexecuted.  \nThe retu rn code of the operation is returned in the RETURN -CODE  special register.    ", "start_char_idx": 1413, "end_char_idx": 2716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ffa2e1e-20bc-43c8-a0e4-cd8971233cce": {"__data__": {"id_": "3ffa2e1e-20bc-43c8-a0e4-cd8971233cce", "embedding": null, "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "419e6e22-f936-47bb-96a9-338c6707b1da", "node_type": "4", "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6626cb9dec6563bb0815e6dade4c7dda1d80a421cac73322a0af0e4871c9c77f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0533fa0-1f65-42a8-b8f9-b5c3a712b148", "node_type": "1", "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36c313bbf68ab5a3b9eba9da101451619b86cdd8daa946a27990ea05f3e72fbc", "class_name": "RelatedNodeInfo"}}, "text": "The return code of the operation \nwill be either 0=Success or 128=failure.  ", "start_char_idx": 2716, "end_char_idx": 2792, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ac99c54-d900-4f60-a450-173d97562ee7": {"__data__": {"id_": "2ac99c54-d900-4f60-a450-173d97562ee7", "embedding": null, "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc", "node_type": "4", "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25111dd44e86f8efb34996a86054f78d2ecdaca0cef20ccfe4d870b3f6516b2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5457532a-2d22-4c08-ad2b-e92d289295c1", "node_type": "1", "metadata": {}, "hash": "f1e0f4b3dece2121a8bb52abe077dbb779e75196a3a449a97d26b0cb0bc41e56", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-15 8.3.1.17.  CALL \u201cCBL_CHECK_FILE_EXIST\u201d USING file-path , file-info  \nWith this routine you may retrieve the size of the file49 specified as the file-path  argument (an alphanumeric literal or \nidentifier) and the date/time that file was last modified.  The information is returned to the file-info argument, which \nis defined as the following 16 -byte area:  \n        01  Argument -2. \n            05 File-Size-In-Bytes  PIC 9(18)   COMP. \n            05 Mod-DD              PIC 9(2)   COMP.  *> Modification Time  \n            05 Mod-MO              PIC 9(2)    COMP. \n            05 Mod-YYYY            PIC 9(4)    COMP.  *> Modification Date  \n            05 Mod-HH               PIC 9(2)    COMP. \n            05 Mod-MM               PIC 9(2)    COMP. \n            05 Mod-SS               PIC 9(2)    COMP. \n            05 FILLER                PIC 9(2)    COMP.  *> This will always be 00  \nIf the subroutine is successful, a value of 0 will be returned in RETURN -CODE .  Failure to retrieve the needed statistics \non the file will cause a RETURN -CODE  value of 35 to be passed back.  Supplying less than t wo arguments will generate \na 128 RETURN -CODE  value.  \n8.3.1.18.  CALL \u201cCBL_CLOSE_FILE\u201d USING file-handle  \nThe CBL_CLOSE_FILE subroutine c loses a bytestream file previously opened by either the CBL_OPEN_FILE  or \nCBL_CREATE_FILE  subroutines . \nIf the file defined by the file-handle  argument (a PIC X(4) USAGE COMP -X data item) was opened for output, an implicit \nCBL_FLUSH_FILE  will be performed before the file is closed.  \nIf the subroutine is successful, a value of 0 will be returned in RETURN -CODE .  ", "start_char_idx": 0, "end_char_idx": 1724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5457532a-2d22-4c08-ad2b-e92d289295c1": {"__data__": {"id_": "5457532a-2d22-4c08-ad2b-e92d289295c1", "embedding": null, "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc", "node_type": "4", "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25111dd44e86f8efb34996a86054f78d2ecdaca0cef20ccfe4d870b3f6516b2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ac99c54-d900-4f60-a450-173d97562ee7", "node_type": "1", "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "355d5dbd04454437d5bcf75991c89bebd786e908dfb0ff198abce265d73f500a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fafebe3-e835-4caa-8f20-de6a57f234e5", "node_type": "1", "metadata": {}, "hash": "d782808112bbae99c7d58591cfa612f927a21f93edbd92a9ce7a240559a0e9a6", "class_name": "RelatedNodeInfo"}}, "text": "Failure will cause a RETURN -CODE  value \nof -1 to be passed back.   \n8.3.1.19.  CALL \u201c CBL_COPY_FILE \u201d USING src-file-path , dest -file-path  \nUse this subroutine to copy file src-file-path  to dest -file-path  as if it were done via t he \u201cCP\u201d (Unix) or \u201cCOPY\u201d \n(Windows) command.  \nBoth file path arguments may be alphanumeric literals or identifiers.  \nIf the attempt to copy the file fails (for example, it or the destination directory doesn't exist), RETURN -CODE  will be se t \nto 128; on successful completion it will be set to 0.  \n8.3.1.20.  CALL \u201c CBL_CREATE_DIR \u201d USING dir-path  \nWith this routine you may create a new directory  \u2013 the name of which is supplied as the dir-path  argument (an \nalphanumeric literal or identifier ).  \nOnly the lowest -level directory (last) in the specified path can be created \u2013 all others must already exist.  This \nsubroutine will NOT behave as a \u201cmkdir \u2013p\u201d (Unix) or \u201cmkdir /p\u201d (Windows).  \nRETURN -CODE  will be set to the return code of the operation; the value will be either 0=Success or 128=failure.  \n", "start_char_idx": 1724, "end_char_idx": 2779, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fafebe3-e835-4caa-8f20-de6a57f234e5": {"__data__": {"id_": "1fafebe3-e835-4caa-8f20-de6a57f234e5", "embedding": null, "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc", "node_type": "4", "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25111dd44e86f8efb34996a86054f78d2ecdaca0cef20ccfe4d870b3f6516b2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5457532a-2d22-4c08-ad2b-e92d289295c1", "node_type": "1", "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a9fc089b917751f0a1f57ac061f92146af3740c512c6eef5f5e9df512f72ba5", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.21.  CALL \u201cCBL_CREATE_FILE\u201d USING file-path , 2, 0, 0, file-handle  \nThe CBL_CREATE_FILE subroutine creates the new file specified using the file-path  argument and opens it for output \nas a byte -stream file usable by CBL_WRITE_FILE .. \n                                                                 \n49 File size information may not be available in the particular GNU COBOL  build / Operating System combination you are using \nand may therefore  always be returned as zero.  \n ", "start_char_idx": 2779, "end_char_idx": 3266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f6abef7-0ff4-443e-aa72-a96a111bbf89": {"__data__": {"id_": "4f6abef7-0ff4-443e-aa72-a96a111bbf89", "embedding": null, "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b", "node_type": "4", "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b0fe68877fb53de39a23dc51afcbb1d31db988441606930634eba7b0b633d799", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95684395-58e0-4abc-bb3e-75e6fe4f63a0", "node_type": "1", "metadata": {}, "hash": "823fcdb059bf53f018d6cc0e9eff8a8aa82c0d9d6d7b11b1c16df7e11b0f5435", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-16 Arguments 2, 3 and 4 should be coded as the constant values shown.50 \nA file handle (PIC X(4) USAGE COMP -X) will be returned, for any subsequent CBL_WRITE_FILE  or CBL_CLOSE_FILE  calls.  \nThe success or failure of the subroutine will be reported back in the RETURN -CODE  register, with a  RETURN -CODE  \nvalue of -1 indicat ing an invalid argument  and a value of 0 indicat ing success.  \n", "start_char_idx": 0, "end_char_idx": 486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95684395-58e0-4abc-bb3e-75e6fe4f63a0": {"__data__": {"id_": "95684395-58e0-4abc-bb3e-75e6fe4f63a0", "embedding": null, "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b", "node_type": "4", "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b0fe68877fb53de39a23dc51afcbb1d31db988441606930634eba7b0b633d799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f6abef7-0ff4-443e-aa72-a96a111bbf89", "node_type": "1", "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4df9233e8774129e0695ce2b37252da6699d52f546e14f8d4b82fc13469e9da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef62c422-b13c-41e3-9b44-56461e128783", "node_type": "1", "metadata": {}, "hash": "5b3cf2df724d080f7be8cb9c95248c9f9084a8a86347c8da2b0e5d5bad476ec4", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.22.  CALL \u201c CBL_DELETE_DIR\u201d USING dir-path  \nDelete an empty directory  via CBL_DELETE_DIR.  \nThe only argument \u2013 dir-path  (an alphanumeric literal or identifier) \u2013 is the name of the directory to be deleted.  \nOnly the lowest -level directory (last) in  the specified path will be deleted, and that directory must be empty to be \ndeleted.  \nRETURN -CODE  will be set to the return code of the operation; the value will be either 0=Success or 128=failure.  \n8.3.1.23.  CALL \u201c CBL_DELETE_FILE \u201d USING file-path  \nThis routine deletes the file specified by the file -path argument (an alphanumeric literal or identifier) just as if that \nwere done using the \u201cRM\u201d (Unix) or \u201cERASE\u201d (Windows) command.  \nIf the attempt to delete the file fails (for exa mple, it doesn't exist), RETURN -CODE  will be set to 128; on successful \ncompletion it will be set to 0.   \n8.3.1.24.  CALL \u201cCBL_ERROR_PROC\u201d USING function , program -pointer  \nThis routine registers a general error -handling routine . \nThe function  argument must be a numeric literal or a 32 -bit binary COMP -5 data item ( USAGE BINARY -LONG , for \nexample) with a value of 0 or 1.  A value of 0 means that you will be registering (\u201cinstalling\u201d) an error procedure  while \na value of 1 indicates you\u2019re deregistering (\u201cuninstalling\u201d) a previously -installed error procedure.  \nThe program -pointer  must be a USAGE PROGRAM -POINTER  data item containing the address of your error procedure.  \nThis item should be given a value using the SET program -pointer  statement.  If the error procedure is written in GNU \nCOBOL , it must be a subroutine, not a user -defined function.  \nA success (0) or failure (non -0) result will be passed back in the RETURN -COD E register.   \nA custom error  procedure , will trigger when a runtime error condition is encountered.  An error procedure may be \nregistered  by a main program or a subprogram, but regardless of from where it was registered, it applies to t he overall \nprogram compilation group  and will trigger when a runtime error occurs anywhere  in the executable program.  If the \nerror procedure was defined by a subprogram, that program must  be loaded at the time the error procedure is \nexecuted.  \nThe code wit hin the handler will be executed and \u2013 once the handler issues a return (C) or an EXIT PROGRAM  or  \nGOBACK  (GNU COBOL ), the system -standard error handling routine will be executed.  \nOnly one user -defined error procedure may be in effect at any time.  \nThe following is a sample GNU COBOL  program that registers an error procedure.  The output of that program is \nshown as well - as you can see, the error handler\u2019s messages appear followed by the standard GNU COBOL  message.  \n       IDENTIFICATION DIVISION.  \n       ", "start_char_idx": 486, "end_char_idx": 3237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef62c422-b13c-41e3-9b44-56461e128783": {"__data__": {"id_": "ef62c422-b13c-41e3-9b44-56461e128783", "embedding": null, "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b", "node_type": "4", "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b0fe68877fb53de39a23dc51afcbb1d31db988441606930634eba7b0b633d799", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95684395-58e0-4abc-bb3e-75e6fe4f63a0", "node_type": "1", "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7de42620967fe63c9796d31af1e6a4c4e3ce165c56c3314b43b02227ea3cc913", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. DemoERRPROC.  \n       ENVIRONMENT DIVISION.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  Err-Proc-Address            USAGE PROCEDURE -POINTER.  \n       PROCEDURE DIVISION.  \n                                                                 \n50 CBL_CREATE_FILE is actually a special -case of the CBL_OPEN_FILE routine - see that routine for a description of the meanings \nof arguments 2, 3 and 4.   ", "start_char_idx": 3237, "end_char_idx": 3672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "865d8d13-7378-4640-9b3c-dedc3603c3e1": {"__data__": {"id_": "865d8d13-7378-4640-9b3c-dedc3603c3e1", "embedding": null, "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "244e9faa-8f88-4169-b498-df7174ac5b2e", "node_type": "4", "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8933301bdfb656e9acfa0937a7c2caef23a3080499129ebd1bf90e04b67002bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4", "node_type": "1", "metadata": {}, "hash": "6072d342c43140fa63a8b932b86b8870947a7e1aa593fde135595ebb1af464de", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-17        S1. \n           DISPLAY 'Program is starting'  \n           SET Err-Proc-Address TO ENTRY 'ErrProc'  \n           CALL 'CBL_ERROR_PROC' USING 0, Err -Proc-Address \n           CALL 'Tilt' *> THIS DOESN'T EXIST!!!!  \n           DISPLAY 'Program is stopping'  \n           STOP RUN  \n           . \n       END PROGRAM Demo ERRPROC.   \n \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID. ErrProc.  \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4": {"__data__": {"id_": "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4", "embedding": null, "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "244e9faa-8f88-4169-b498-df7174ac5b2e", "node_type": "4", "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8933301bdfb656e9acfa0937a7c2caef23a3080499129ebd1bf90e04b67002bd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "865d8d13-7378-4640-9b3c-dedc3603c3e1", "node_type": "1", "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7246022aec200650e399d9c24a28f4ef6f467e8a134bf3e2e7b504fb3e90d3bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cd83e89-56cd-489e-92f2-b2cf7e6e9e0d", "node_type": "1", "metadata": {}, "hash": "19c294b5e750b28314a57ea5ffe32b7243762080a9ba6ac1f323b4d10a542dad", "class_name": "RelatedNodeInfo"}}, "text": "000-Main. \n           DISPLAY 'Error: ' EXCEPTION -LOCATION  \n           DISPLAY '       ' EXCEPTION -STATEMENT  \n           DISPLAY '       ' EXCEPTION -FILE \n           DISPLAY '       ' EXCEPTION -STATUS \n           DISPLAY '*** Returning to Standard Error Routine ***'  \n           EXIT PROGRAM  \n           . \n       END PROGRAM ErrProc.  \nWhen executed, this sample program generates the following console output:  \n>demoerrproc  \nProgram is starting  \nError: DemoERRPROC; S1; 13  \n       CALL \n       00 \n       EC-PROGRAM-NOT-FOUND \n*** Returning to Standard Error Routine ***  \nDEMOERRPROC.cbl: 28: libcob: Cannot find module 'Tilt'  \n8.3.1.25.  CALL \u201cCBL_ EXIT _PROC\u201d USING function , program -pointer  \nThis routine registers a general exit-handling routine . \nThe function  argument must be a numeric literal or a 32 -bit binary COMP -5 data item (USAGE BINARY -LONG, for \nexample) with a value of 0 or 1.  A value of 0 means that you will be registering (\u201cinstalling\u201d) an exit procedure  while a  \nvalue of 1 indicates you\u2019re deregistering (\u201cuninstalling\u201d) a previously -installed exit procedure.  \nThe program -pointer  must be a USAGE PROGRAM -POINTER  data item containing the address of your exit procedure.  \nA success (0) or failure (non -0) result will be passed back in the RETURN -CODE  register.   \nAn exit procedure will trigger when a \u201c STOP RUN \u201d or its equivalent (i.e. \u201c GOBACK \u201d executed in a main program) is \nexecuted.  The exit procedure code will be executed and \u2013 once it issues an EXIT PROGRAM  or a GOBACK , the system -\nstandard program termination routine will be executed.  \nOnly one user -defined exit procedure may be in effect at any time.  \nAn exit procedure may  be defined by a main program or a subprogram, but regardless of from where it was registered, \nit applies to the overall program compilation group  and will trigger when a STOP RUN  is executed anywhere  in the \nexecutable program.  If the exit procedure was d efined by a subprogram, that program must  be loaded at the time the \nexit procedure is executed.  \nAn exit procedure should terminate using EXIT PROGRAM  or a GOBACK . \nThe following is a sample GNU COBOL  program that \nregisters an exit procedure.  The output of  that \nprogram is shown as well.  \n       IDENTIFICATION DIVISION.  \n       ", "start_char_idx": 531, "end_char_idx": 2840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cd83e89-56cd-489e-92f2-b2cf7e6e9e0d": {"__data__": {"id_": "4cd83e89-56cd-489e-92f2-b2cf7e6e9e0d", "embedding": null, "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "244e9faa-8f88-4169-b498-df7174ac5b2e", "node_type": "4", "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8933301bdfb656e9acfa0937a7c2caef23a3080499129ebd1bf90e04b67002bd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4", "node_type": "1", "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e32a6e93ee2a2c8eec149b29fb5593a2e209f54eeba7d99c9cf8036df9c8c7fb", "class_name": "RelatedNodeInfo"}}, "text": "PROGRAM-ID. demoexitproc.  \nExecuting a STOP RUN...\n*** STOP RUN has been executed ***\n***    2009/08/28  10:01:29    ***Program output\u2026", "start_char_idx": 2840, "end_char_idx": 2976, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "437feafa-9c49-4020-af64-fb21a48150c5": {"__data__": {"id_": "437feafa-9c49-4020-af64-fb21a48150c5", "embedding": null, "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d092018d-6ffc-4107-b13c-65353c2fbb80", "node_type": "4", "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "df264bd5dcece543ae4acf62499b5280334418a6e5d76ca1abbb52ad19693005", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c3645e2-d63d-436d-ae4f-7e8540f845ef", "node_type": "1", "metadata": {}, "hash": "595203ac9b683a29b0f7f50d0d9242f2e4377e82eb49baef3f378717aa12ba02", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-18        ENVIRONMENT DIVISION.  \n       DATA DIVISION.  \n       ", "start_char_idx": 0, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c3645e2-d63d-436d-ae4f-7e8540f845ef": {"__data__": {"id_": "0c3645e2-d63d-436d-ae4f-7e8540f845ef", "embedding": null, "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d092018d-6ffc-4107-b13c-65353c2fbb80", "node_type": "4", "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "df264bd5dcece543ae4acf62499b5280334418a6e5d76ca1abbb52ad19693005", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "437feafa-9c49-4020-af64-fb21a48150c5", "node_type": "1", "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a89ca309d9fb4092c468c35cafff5fec873228bf0dac2d37cb4c43999e450fe4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91453e0c-5588-4f23-9518-079b43e70b04", "node_type": "1", "metadata": {}, "hash": "f20fd31844401ad5468e6d68b912419c8552e570d46ad1262f0b4c6fb3a63c94", "class_name": "RelatedNodeInfo"}}, "text": "WORKING-STORAGE SECTION.  \n       78  Exit -Proc-Install           VALUE 0.  \n       01  Current -Date                PIC X(8).  \n       01  Current -Time                PIC X(8).  \n       01  Exit -Proc-Address           USAGE PROCEDURE -POINTER.  \n       01  Formatted -Date              PIC XXXX/XX/XX.  \n       01  Formatted -Time              PIC XX/XX/XX.  \n       PROCEDURE DIVISION.  \n       000-Register -Exit-Proc. \n           SET Exit -Proc-Address TO ENTRY \"999 -Exit\" \n           CALL \"CBL_EXIT_PROC\"  \n               USING Exit -Proc-Install, Exit -Proc-Address \n           END-CALL \n           IF RETURN -CODE NOT = 0  \n               DISPLAY 'Error: Could not register Exit Procedure'  \n           END-IF \n           . \n       099-Now-Test-Exit-Proc. \n           DISPLAY  \n               'Executing a STOP RUN...'  \n           END-DISPLAY \n           GOBACK \n           . \n       999-Exit-Proc. \n           ENTRY \"999 -Exit\" \n           DISPLAY  \n               '*** STOP RUN has been executed ***'  \n           END-DISPLAY \n           ACCEPT  \n               Current-Date FROM DATE YYYYMMDD  \n           END-ACCEPT \n           ACCEPT  \n               Current-Time FROM TIME  \n           END-ACCEPT \n           MOVE Current -Date TO Formatted -Date \n           MOVE Current -Time TO Formatted -Time \n           INSPECT Formatted -Time REPLACING ALL '/' BY ':'  \n           DISPLAY \n               '***    ' Formatted -Date '  ' Formatted -Time '    ***'  \n           END-DISPLAY \n           GOBACK \n           . \n \n8.3.1.26.  CALL \u201cCBL_ EQ\u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs a bit -by-bit test for equality  between the left -most 8* byte -length  corresponding bits of item -\n1 and item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  ", "start_char_idx": 156, "end_char_idx": 2007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91453e0c-5588-4f23-9518-079b43e70b04": {"__data__": {"id_": "91453e0c-5588-4f23-9518-079b43e70b04", "embedding": null, "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d092018d-6ffc-4107-b13c-65353c2fbb80", "node_type": "4", "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "df264bd5dcece543ae4acf62499b5280334418a6e5d76ca1abbb52ad19693005", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c3645e2-d63d-436d-ae4f-7e8540f845ef", "node_type": "1", "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b9f32c95072c795451930ee74833a7ba12307b22e4eee69f248712dc95e0d46b", "class_name": "RelatedNodeInfo"}}, "text": "Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cEQ\u201d process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 1 \n0 1 0 \n1 0 0 \n1 1 1 \n ", "start_char_idx": 2007, "end_char_idx": 2490, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51b21bc9-6150-4180-a52b-914879d2ea8f": {"__data__": {"id_": "51b21bc9-6150-4180-a52b-914879d2ea8f", "embedding": null, "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61", "node_type": "4", "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "423353e3128afadda9f2ff6ac6c781bbed2d35cf50e32b9fe342cc3b91e259fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d172b56a-71b2-439a-93af-56fd77fa2a1c", "node_type": "1", "metadata": {}, "hash": "8f062cffc4d65f12c645720075b44a0bb41baa9d49e8a9cf39e22c414428973a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-19 8.3.1.27.  CALL \u201cCBL_FLUSH_FILE\u201d USING file-handle  \nIn Micro Focus  COBOL, CALL ing this subroutine flushes any as -yet unwritten memory buffers for the ( output ) file \nwhose file-handle  is specified as the argument  to disk . \nThis routine is non -functional in GNU COBOL .  ", "start_char_idx": 0, "end_char_idx": 373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d172b56a-71b2-439a-93af-56fd77fa2a1c": {"__data__": {"id_": "d172b56a-71b2-439a-93af-56fd77fa2a1c", "embedding": null, "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61", "node_type": "4", "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "423353e3128afadda9f2ff6ac6c781bbed2d35cf50e32b9fe342cc3b91e259fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51b21bc9-6150-4180-a52b-914879d2ea8f", "node_type": "1", "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b7a990d593e946335e7620f8982875a69e9cdf0b33b60e8a9996cfb57b313b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fc2cc90-37b3-4e74-9e77-1a798bf31c00", "node_type": "1", "metadata": {}, "hash": "b913031c1a45aaebe958ab141d3612632b52465766a66634069cfafe3a37d3d1", "class_name": "RelatedNodeInfo"}}, "text": "It exists only to provide compatibility for applications that may have \nbeen developed for Micro Focus  COBOL.  \n8.3.1.28.  CALL \u201cCBL_GET_CURRENT_DIR\u201d USING BY VALUE 0, BY VALUE \nlength , BY REFERENCE buffer  \nThis r etrieves the fully -qualified pathname of the current dir ectory , saving up to length  characters of that name into \nthe specified buffer . \nThe first argument is unused, but must be specified.  ", "start_char_idx": 373, "end_char_idx": 786, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9fc2cc90-37b3-4e74-9e77-1a798bf31c00": {"__data__": {"id_": "9fc2cc90-37b3-4e74-9e77-1a798bf31c00", "embedding": null, "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61", "node_type": "4", "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "423353e3128afadda9f2ff6ac6c781bbed2d35cf50e32b9fe342cc3b91e259fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d172b56a-71b2-439a-93af-56fd77fa2a1c", "node_type": "1", "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1c0af505b3d3638866304b31884178462d687387a6122d7ccdaf28dcc61bcc43", "class_name": "RelatedNodeInfo"}}, "text": "It must be specified BY VALUE . \nThe length  argument must be specified BY VALUE . \nThe buffer argument must be specified BY REFERENCE . \nThe value specified for the length  argument ( a numeric literal or data item ) should not exceed the actual length of the \nbuffer  argument .   \nIf the value specified for the length  argument is LESS THAN the actual length of the buffer  argument , the current \ndirectory path will be left -justified and space filled within the first length  bytes of buffer   \u2013 any bytes in buffer  after \nthat point will be unchanged.  \nIf the routine is successful, a value of 0 will be returned to the RETURN -CODE  register.  If t he routine failed because of \na problem with an argument (such as a negative or 0 length ), a RETURN -CODE  value of 128 will result.  Finally, if the  1st \nargument  value is anything but zero, the routine will fail with a 129 RETURN -CODE . \n8.3.1.29.  CALL \u201cCBL_GET_CSR_POS\u201d  USING cursor -locn -buffer  \nThis subroutine will retrieve the current cursor location on the screen, returning a 2 -byte value into the supplied \ncursor -locn-buffer .  The first byte of cursor -locn-buffer  will receive the current line ( row) location while the second \nreceives the current column location.  \nThe returned location data will be in exact binary (i.e. USAGE COMPUTATIONAL) form, and will be based upon starting \nvalues of 0, meaning that if the cursor is located at line 15, column 1 2 at the time this routine is called, a value of \n(14,11) will be returned.  \nThe following is a typical cursor -locn-buffer  definition:  \n01  CURSOR -LOCN-BUFFER. \n    05 CURSOR -LINE          USAGE BINARY -CHAR. \n    05 CURSOR -COLUMN        USAGE BINARY -CHAR. \nValues of 1 (Line) and 1 (column) will be returned if GNU COBOL  was not generated to include screen I/O.  \n8.3.1.30.  CALL \u201cCBL_GET_SCR_SIZE\u201d USING no-of-lines, no -of-cols  \nUse this subroutine to retrieve the current console screen size.  When t he system is running in a windowed \nenvironment, this will be the sizing of the console window in which the program is executing.  When the system is not \nrunning a windowing environment, the physical console screen attributes will be returned.  In environme nts such as a \nWindows console window, where the logical size of the window may far exceed that of the physical console window, \nthe size returned will be that of the physical console window.   Two one -byte values will be returned \u2013 the first will be \nthe curr ent number of lines (rows) while the second will be the number of columns.  \nThe returned size data will be in exact binary (i.e. USAGE COMPUTATIONAL) form.  \nThe following are typical no-of-lines  and no-of-columns  Definitions  \n01  NO-OF-LINES             USAGE  BINARY-CHAR. ", "start_char_idx": 786, "end_char_idx": 3542, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a7d0cb4-46c2-43b4-ba85-a8cdde3768b3": {"__data__": {"id_": "3a7d0cb4-46c2-43b4-ba85-a8cdde3768b3", "embedding": null, "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "595a714f-e8d6-4d09-9482-291afaa48c9c", "node_type": "4", "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03596498f4af57d78f253ef99b605119e001748852b67e13b9fb76d28d302b54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30a05a20-e1c0-450b-8eda-f11268c0bc0b", "node_type": "1", "metadata": {}, "hash": "3a04c5e1ff098f591e9f78746f7d27e53b576b2600a26a6bd68cd4b287d1d8d1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-20 01  NO-OF-COLUMNS           USAGE BINARY -CHAR. \nGNU COBOL  run-time screen management must have been initialized prior to CALL ing this routine in order to receive \nmeaningful values.  This means that a screen -data  DISPLAY and/or a screen -data  ACCEPT must have been executed \nprior to the CALL . \nZero values will be returned if the screen has not been initialized  and values of 24 (lines) and 80 (columns) will be \nreturned if GNU COBOL  was not generated to include screen I/O. .  Compare this result with that of a screen -\ninformation  ACCEPT.  \nSee Also\u2026  \nThe ACCEPT Statement (Screen Data)  6.4.1.4  \nThe ACCEPT  Statement (Screen Info):  6.4.1.6  \n The DISPLAY Statement (Screen Data)  6.4.12.4  \n \n8.3.1.31.  CALL \u201cCBL_ IMP \u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs a bit -by-bit \u201cimplies\u201d test  between the left -most 8* byte -length  corresponding bits of item -1 \nand item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cIMP\u201d process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 1 \n0 1 1 \n1 0 0 \n1 1 1 \n \n8.3.1.32.  CALL \u201cCBL_ NIMP \u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs the negation of a bit -by-bit \u201cimplies\u201d test  between the left -most 8* byte -length  \ncorresponding bits of item -1 and item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  ", "start_char_idx": 0, "end_char_idx": 1947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30a05a20-e1c0-450b-8eda-f11268c0bc0b": {"__data__": {"id_": "30a05a20-e1c0-450b-8eda-f11268c0bc0b", "embedding": null, "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "595a714f-e8d6-4d09-9482-291afaa48c9c", "node_type": "4", "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03596498f4af57d78f253ef99b605119e001748852b67e13b9fb76d28d302b54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a7d0cb4-46c2-43b4-ba85-a8cdde3768b3", "node_type": "1", "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c020d1b079d03191af2495de31b09d6d6edd5956c096090ff4b0774361e7d470", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f14e90d5-2d7a-494a-a45e-08fa1c4be1f2", "node_type": "1", "metadata": {}, "hash": "b0f94bf4b06099cd4cd1a60bc87a25f48b929f460cbfa6510e56b321d2028927", "class_name": "RelatedNodeInfo"}}, "text": "Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cNIMP \u201d process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 0 \n0 1 0 \n1 0 1 \n1 1 0 \n \n8.3.1.33.  CALL \u201cCBL_ NOR \u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs the negation of a bit -by-bit \u201cOR\u201d test  between the left -most 8* byte -length  corresponding \nbits of item -1 and item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  ", "start_char_idx": 1947, "end_char_idx": 2764, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f14e90d5-2d7a-494a-a45e-08fa1c4be1f2": {"__data__": {"id_": "f14e90d5-2d7a-494a-a45e-08fa1c4be1f2", "embedding": null, "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "595a714f-e8d6-4d09-9482-291afaa48c9c", "node_type": "4", "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03596498f4af57d78f253ef99b605119e001748852b67e13b9fb76d28d302b54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30a05a20-e1c0-450b-8eda-f11268c0bc0b", "node_type": "1", "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9705b0dc7f0a4afee76c1dbcdfa659f9635288a2c8a168090bf87eb64787c2b", "class_name": "RelatedNodeInfo"}}, "text": "Item -2 must be a data item.  The length  of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cNOR \u201d process.  Arg #1  Arg #2  New ", "start_char_idx": 2764, "end_char_idx": 3051, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "070ba16b-9a75-4565-bd54-7b82b17d88e1": {"__data__": {"id_": "070ba16b-9a75-4565-bd54-7b82b17d88e1", "embedding": null, "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544", "node_type": "4", "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "71412e1fd178f7e3eda11f1a1c15ef71f3f9cda13c0e7afb709752959aaebb20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271", "node_type": "1", "metadata": {}, "hash": "21bcfbde71d6b96766613306c75d26a239334f0502aa29d192bd97901a24840b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-21 Any bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  bit bit Arg #2  \nbit \n0 0 1 \n0 1 0 \n1 0 0 \n1 1 0 \n \n8.3.1.34.  CALL \u201cCBL_ NOT \u201d USING item -1, BY VALUE byte -length  \nThis subroutine \u201cflips\u201d the  left-most 8* byte -length  bits of item -2, storing the resulting bit string into item -2. \nItem -2 must be a data item.  The length of item -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cNOT\u201d process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  ", "start_char_idx": 0, "end_char_idx": 870, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271": {"__data__": {"id_": "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271", "embedding": null, "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544", "node_type": "4", "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "71412e1fd178f7e3eda11f1a1c15ef71f3f9cda13c0e7afb709752959aaebb20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "070ba16b-9a75-4565-bd54-7b82b17d88e1", "node_type": "1", "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "43fea2ee8970d8705c8872312a2622a71130777a55b47514a710862cfa676b89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5155dd24-1e21-4cda-9bec-48b1536b6af6", "node_type": "1", "metadata": {}, "hash": "143c510e7f497222a26bcbe06a5f14be6feee72fa291ab408cfa3be915c4af6d", "class_name": "RelatedNodeInfo"}}, "text": "Old \nArg #2 \nbit New \nArg #2  \nbit \n0 1 \n1 0 \n \n8.3.1.35.  CALL \u201cCBL_OC_NANOSLEEP\u201d USING nanoseconds -to-sleep  \nCB_OC_NANOSLEEP puts the program to sleep for the specified number of nanoseconds . \nThe nanoseconds -to-sleep  argument is a numeric literal or data item.  \nThere are one BILLION nanoseconds in a second, so if you wanted to put the program to sleep for 1/4 second you'd \nuse a nanoseconds -to-sleep  value of 250000000.  \n8.3.1.36.  CALL \u201cCBL_OPEN_FILE\u201d file-path , access -mode , 0, 0, handle  \n.This routine o pens an existing file for use as a byte -stream file usable by CBL_WRITE_FILE or CBL_READ_FILE . \nThe file-path  argument  is an alphanumeric literal or data -item.  \nThe access -mode  argument is a numeric literal or data item with a PIC X USAGE COMP -X (or USAGE BINARY -CHAR) \ndefinition; it specifies how you wish to use the file, as follows:  \n1 = input (read -only)  \n2 = output (write -only)  \n3 = input and/or output  \nThe third and f ourth arguments would specify a locking mode and device specification, respectively, but they\u2019re not \nimplemented in GNU COBOL  (currently, at least) \u2013 just specify each as 0.  \nThe final argument \u2013 handle  - is a PIC X(4) USAGE COMP -X item that will receive th e handle to the file.  That handle is \nused on all other byte -stream functions to reference this specific file.  \nA RETURN -CODE  value of -1 indicates an invalid argument, while a value of 0 indicates success.  A value of 35 means \nthe file does not exist.  \n8.3.1.37.  CALL  \u201cCBL_ OR\u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs a bit -by-bit \u201cOR\u201d test  between the left -most 8* byte -length  corresponding bits of item -1 and \nitem -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  ", "start_char_idx": 870, "end_char_idx": 2676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5155dd24-1e21-4cda-9bec-48b1536b6af6": {"__data__": {"id_": "5155dd24-1e21-4cda-9bec-48b1536b6af6", "embedding": null, "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544", "node_type": "4", "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "71412e1fd178f7e3eda11f1a1c15ef71f3f9cda13c0e7afb709752959aaebb20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271", "node_type": "1", "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cfc4cbde83e2abaa3c4dd5893bde42d1b58b305ea0e80db6c3314611e79ffc6b", "class_name": "RelatedNodeInfo"}}, "text": "Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data item, and must be specified using BY VALUE . ", "start_char_idx": 2676, "end_char_idx": 2875, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20e091fe-ed82-4010-bee5-436d0e63058b": {"__data__": {"id_": "20e091fe-ed82-4010-bee5-436d0e63058b", "embedding": null, "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "700f443b-0350-4537-bd3b-75a1bd68947c", "node_type": "4", "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b6a7cba71b2010e6c7794fe3b8786c2e488c30c4f8a5bd187811595ab607171", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4be6c80-1824-48f8-b7ff-2873e98443ea", "node_type": "1", "metadata": {}, "hash": "d5cc99bb022025780dba95ff8c497b26abe0592af8fb063b453758023709722c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-22 The truth table show n below documents the \u201cOR\u201d process.  \n \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  ", "start_char_idx": 0, "end_char_idx": 299, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4be6c80-1824-48f8-b7ff-2873e98443ea": {"__data__": {"id_": "a4be6c80-1824-48f8-b7ff-2873e98443ea", "embedding": null, "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "700f443b-0350-4537-bd3b-75a1bd68947c", "node_type": "4", "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b6a7cba71b2010e6c7794fe3b8786c2e488c30c4f8a5bd187811595ab607171", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20e091fe-ed82-4010-bee5-436d0e63058b", "node_type": "1", "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c3cb907ab4c7eb92fcccb5094e6524166d680d4b449155d3a52174c11311614b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7444e014-ebb5-42fd-bc60-601a36b87485", "node_type": "1", "metadata": {}, "hash": "9f50e111995d606f7f6a8f4e8901c7a7aec0a94f53263909533c361e8176be55", "class_name": "RelatedNodeInfo"}}, "text": "Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 0 \n0 1 1 \n1 0 1 \n1 1 1 \n \n8.3.1.38.  CALL \u201cCBL_READ_FILE\u201d USING handle , offset , nbytes , flag , buffer  \nThis routine reads nbytes  of data starting at byte number offset  from the byte -stream file defined by handle  into the \nspecified buffer . \nThe handle  argument ( PIC X(4) USAGE COMP -X) must have been populated by a prior call to CBL_OPEN_FILE . \nThe offset  argument ( PIC X(8) USAGE COMP -X) defines the location in the file of the first byte to be read.  The first \nbyte of a file is byte offset 0.  \nThe nbytes  argument ( PIC X(4) US AGE COMP -X) specifies how many bytes (maximum) will be read.  \nIf the flags  argument is specified as 128, the size of the file (in bytes) will be returned into the file offset argument \n(argument 2) upon completion.51  The only other valid value for flags  is 0.  This argument may be specified either as a \nnumeric literal or as a PIC X USAGE COMP -X data item.  \nUpon completion, RETURN -CODE  will be set to 0 if the read was successful or to 10 if an \u201cend -of-file\u201d condition \noccurred.  If RETURN -CODE  has a value of -1, a problem was identified with the subroutine arguments.  \n8.3.1.39.  CALL \u201cCBL_RENAME_FILE\u201d USING old-file-path , new -file-path  \nYou may use this subroutine to rename a file.  \nThe file specified by old-file-path  will be \u201crenamed\u201d to the name specified as new -file-path .  Each argument may be an \nalphanumeric literal or data item.  \nDespite what the name of this routine might make you believe, this routine is more than just a simple \u201crename\u201d \u2013 it \nwill actually move  the file supplied as the 1st argument to the file specified as the 2nd argument.  Think of it as a two -\nstep sequence, first copying the old-file-path  to the new -file-path  and then a second step where the old-file-path  is \ndeleted.  \nIf the attempt to move the fi le fails (for example, it doesn't exist), RETURN -CODE  will be set to 128; on successful \ncompletion it will be set to 0.  \n", "start_char_idx": 299, "end_char_idx": 2298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7444e014-ebb5-42fd-bc60-601a36b87485": {"__data__": {"id_": "7444e014-ebb5-42fd-bc60-601a36b87485", "embedding": null, "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "700f443b-0350-4537-bd3b-75a1bd68947c", "node_type": "4", "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b6a7cba71b2010e6c7794fe3b8786c2e488c30c4f8a5bd187811595ab607171", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4be6c80-1824-48f8-b7ff-2873e98443ea", "node_type": "1", "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1c6c0e8962d8c2853712622984ed4731ebbbe86150cb1c2dfaf9e8f0894aae67", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.40.  CALL \u201c CBL_TOLOWER \u201d USING data -item , BY VALUE convert -length  \nThis routine will converts convert -length  (a numeric literal or data item) leading characters of data -item  (an \nalphanumeric identifier) to lower -case . \nThe convert -length  argument must be specified BY VALUE .  It specifies how many (leading) characters in data -item  will \nbe converted \u2013 any character s after that will remain unchanged.  \nIf convert -length  is negative or zero, no conversion will be performed.  \n8.3.1.41.  CALL \u201c CBL_TOUPPER \u201d USING data -item , BY VALUE convert -length  \n                                                                 \n51 Not all operating system/ GNU COBOL  environments may be able to retrieve file sizes \u2013 in such cases, a value of zero will be \nreturned.  ", "start_char_idx": 2298, "end_char_idx": 3087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4096d52f-af71-4d6c-ba98-4aa973a1d2fa": {"__data__": {"id_": "4096d52f-af71-4d6c-ba98-4aa973a1d2fa", "embedding": null, "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32d16191-9537-46c6-891a-d555a7b58d71", "node_type": "4", "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b4f5d96a7db1228b230dc25454ff9b4953cab200b88fde4915f896d14ec768dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72", "node_type": "1", "metadata": {}, "hash": "8afa1e0dc6109870f81b36e780bda4a6a3cb976d35b8e84973894703d700c1f6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-23 Use C$TOUPPER  to change the  convert -length  (a numeric literal or data item) leading characters of data -item  (an \nalphanumeric identifier) to upper -case . \nThe convert -length  argument must be specified BY VALUE .  It specifies how many (leading) characters in data -item  will \nbe converted \u2013 any characters after that will remain unchanged.  \nIf convert -length  is negative or zero, no conversion will be performed.  \n", "start_char_idx": 0, "end_char_idx": 522, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72": {"__data__": {"id_": "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72", "embedding": null, "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32d16191-9537-46c6-891a-d555a7b58d71", "node_type": "4", "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b4f5d96a7db1228b230dc25454ff9b4953cab200b88fde4915f896d14ec768dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4096d52f-af71-4d6c-ba98-4aa973a1d2fa", "node_type": "1", "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "745d168f68926c12329443b68301225c4588ea9d60d5028608ce364671eeb8a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2a5aaf2-9791-4e65-a21c-674aaf47f629", "node_type": "1", "metadata": {}, "hash": "f7d924e32ad62bec055aa5b6b4e3d15d248c1346206344e3fac0f5e69a7fff20", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.42.  CALL \u201cCBL_ WRITE _FILE\u201d USING handle , offset , nbytes , 0, buffer  \nThis routine writes nbytes  of data from the specified buffer  to the byte -stream file defined by handle  starting at byte \nnumber offse t. \nThe handle  argument ( PIC X(4) USAGE COMP -X) must have been populated by a prior call to CBL_OPEN_FILE . \nThe offset  argument ( PIC X(8) USAGE COMP -X) defines the location in the file of the first byte to be written to .  The \nfirst byte of a file is byte offset 0.  \nThe nbytes  argument ( PIC X(4) USAGE COMP -X) specifies how many bytes (maximum) will be written . \nThe only allowable value or the flags  argument is 0.  This argument may be specified either as a numeric literal or as a \nPIC X USAGE COMP -X data item.  \nUpon completion, RETURN -CODE  will be set to 0 if the write  was successful or to 30 if an I/O error  condition occurred.  \nIf RETURN -CODE  has a value of -1, a problem was identified with the subroutine arguments.  \n", "start_char_idx": 522, "end_char_idx": 1492, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2a5aaf2-9791-4e65-a21c-674aaf47f629": {"__data__": {"id_": "e2a5aaf2-9791-4e65-a21c-674aaf47f629", "embedding": null, "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32d16191-9537-46c6-891a-d555a7b58d71", "node_type": "4", "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b4f5d96a7db1228b230dc25454ff9b4953cab200b88fde4915f896d14ec768dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72", "node_type": "1", "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0f216d54db585bce7762cd37f1fa1088382f62b80b3e4ae5d7f55c69abaa9419", "class_name": "RelatedNodeInfo"}}, "text": "8.3.1.43.  CALL \u201cCBL_ XOR \u201d USING item -1, item -2, BY VALUE byte -length  \nThis subroutine performs a bit -by-bit exclusive \u201cOR\u201d test  between the left -most 8* byte -length  corresponding bits of \nitem -1 and item -2, storing the resulting bit string into item -2. \nItem -1 may be an alphanumeric literal or a data item.  Item -2 must be a data item.  The length of both item -1 and \nitem -2 must be at least 8* byte -length . \nByte -length  may be  a numeric literal or data  item, and must be specified using BY VALUE . \nThe truth table shown to the right documents the \u201cXOR \u201d process.  \nAny bits in item -2 after the 8* byte -length  point will be unaffected.  \nA result of zero will be passed back in the RETURN -CODE  register.  Arg #1  \nbit Arg #2  \nbit New \nArg #2  \nbit \n0 0 0 \n0 1 1 \n1 0 1 \n1 1 0 \n \n8.3.1.44.  CALL \u201cSYSTEM\u201d USING command  \nThis subroutine submits the specified  command  (an alphanumeric literal or data item) to a command shell . \nA shell will be opened subordinate to the GNU COBOL  program issuing the CALL  to SYSTEM.  \nOutput from the command (if any) will appear in the command window in which the GNU COBOL  program was \nexecuted.  \nOn a Unix system, the shell environment will be established using the default shell program.  This is also true when \nusing a GNU COBOL  build created with and for the Cygwin Unix emulator.  \nWith native Windows Windows/MinGW builds, the shell environment will  be the Windows console window command \nprocessor (usually \u201ccmd.exe\u201d) appropriate for the version of Windows you\u2019re using.  \nTo trap output from the executed command and process it within the GNU COBOL  program, use a pipe (>) to send the \ncommand output to a t emporary file which you then READ from within the program once control returns.  \n8.3.2.  \u201cCall by Number\u201d Subroutines  ", "start_char_idx": 1492, "end_char_idx": 3304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "823fc1de-e171-4e04-acdf-32b909ca150c": {"__data__": {"id_": "823fc1de-e171-4e04-acdf-32b909ca150c", "embedding": null, "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd4e564e-27c0-4b3a-acba-e5591f45ae50", "node_type": "4", "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ed3eb925912d6dbb11ac3e69dfbb232a02ac25754107726e05fee8c59b487c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f08dd9a-188f-4296-89f4-95f35b5730da", "node_type": "1", "metadata": {}, "hash": "3e28d58b523a2a8289e533766ce37a7833b442102532c7657769bc91817609e2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-24 Early versions of Micro Focus COBOL allowed programmers to access various runtime library routines by using a single \ntwo-digit hexadecimal number a s the entry=point name.  These were known as call -by-number routines.  Over time, \nMicro Focus COBOL evolved, replacing most of the call -by-number routines with ones accessible using a more \nconventional call -by-name technique.   \nMost of the call -by-number r outines have evolved into even more powerful call -by-name routines, many of which are \nsupported by GNU COBOL  and were already presented in section 8.3 \nThree of the original call -by-number routines never evolved call -by-name equivalents; GNU COBOL  supports these \nroutines . \n8.3.2.1.  CALL X\u201d91\u201d USING return -code , function -code , binary -variable -arg \nThe original Micro Focus version of this routine is capable of providing a wide variety of functions \u2013 GNU COBOL  \nsupports just three of those Functions  \n Turning runtime switches (SWITCH -1, \u2026 , SWITCH -8) on \n Turning runtime switches (SWITCH -1, \u2026 , SWITCH -8) off  \n Retrieving the number of arguments passed to a subroutine52 \nThe return -code  argument must be a binary numeric data item (USAGE BINARY -CHAR  is recommended).  It will receive \na value of 0 if the operation was succ essful, 1 otherwise.  \nThe function code  argument must be either a numeric literal or a binary numeric data item (USAGE BINARY -CHAR is \nrecommended).  \nThe third argument \u2013 variable -arg \u2013 is defined differently depending upon the function -code value, as follows : \nValue of  \nfunction -code  Action To Be Performed  Definition and usage of variable -arg \n11 Sets and/or clears all eight  of the \nCOBOL switches (SWITCH -1 through \nSWITCH -8) that are available for \ndefinition within SPECIAL -NAMES  \n(see section 4.1.4 )53 Variable -arg should be an OCCURS 8 TIMES array of USAGE \nBINARY -CHAR.  \nEach occurrence that is set to a v alue of zero prior to the \nCALL  will cause the corresponding switch to be cleared.  \n", "start_char_idx": 0, "end_char_idx": 2085, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f08dd9a-188f-4296-89f4-95f35b5730da": {"__data__": {"id_": "7f08dd9a-188f-4296-89f4-95f35b5730da", "embedding": null, "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd4e564e-27c0-4b3a-acba-e5591f45ae50", "node_type": "4", "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6ed3eb925912d6dbb11ac3e69dfbb232a02ac25754107726e05fee8c59b487c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "823fc1de-e171-4e04-acdf-32b909ca150c", "node_type": "1", "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0f0cb38838599477d045ed56e40859f357643c0d509888e7463c3568fca1835", "class_name": "RelatedNodeInfo"}}, "text": "Each occurrence set to 1 prior to the CALL  will cause the \ncorresponding switch to be set.  \nValues other than 0 or 1 will be ignored.  \n12 Reads all eight  of the COBOL \nswitches (SWITCH -1 through \nSWITCH -8) that are available for \ndefinition within SPECIAL -NAMES \n(see section 4.1.4 ) This argument should b e an OCCURS 8 TIMES array of \nUSAGE BINARY -CHAR.  \nEach of the 1st eight occurrences of the array will be set to \neither 0 or 1 \u2013 1 if the corresponding switch is set, 0 \notherwise.  \n16 Retrieves the number of arguments \npassed to the program executing \nthe CALL  X\u201d91\u201d  This argument should be a binary numeric data item (USAGE \nBINARY -CHAR is recommended).   \nThe number of arguments passed to the subroutine \nexecuting the CALL  X\u201d91\u201d will be stored here.  \n8.3.2.2.  CALL X\u201cE4\u201d  \nUse X\u201dE4\u201d  to clear the screen.  There are no arguments and no returned value.  \n8.3.2.3.  CALL X\u201dE5\u201d  \n                                                                 \n52 GNU COBOL  actually has two other ways to accomplish this task \u2013 the C$NARG  subroutine and the NUMBER -OF-CALL -\nPARAMETERS  special register;  I recommend you use one of these methods instead of the X\u201d91\u201d routine when coding new \nprograms  \n53 If you only wish to set and/or clear some of the switches, it is recommended that you first use function 12 to read the curre nt \nvalues of the switches and then change the variable -arg  occurrences for the switch(es) you wish to change before using \nfunction 11 to actually make the changes.  ", "start_char_idx": 2085, "end_char_idx": 3600, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2951346-57b7-4fc7-bc18-2439e6db34d0": {"__data__": {"id_": "a2951346-57b7-4fc7-bc18-2439e6db34d0", "embedding": null, "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6", "node_type": "4", "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50d07e536c0a7e207eae597bb16ed6b7df4a763f0540569b2e83feb878631d5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ed30f11-7473-4049-8ceb-9939b3605247", "node_type": "1", "metadata": {}, "hash": "f32d72f25b971404e5b01859b6383c101e993216a09400c7c27b98557058f155", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-25 The X\u201dE5\u201d  routine will sound the PC \u201cbell\u201d.  There are no arguments  and no returned value . \n", "start_char_idx": 0, "end_char_idx": 189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ed30f11-7473-4049-8ceb-9939b3605247": {"__data__": {"id_": "9ed30f11-7473-4049-8ceb-9939b3605247", "embedding": null, "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6", "node_type": "4", "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50d07e536c0a7e207eae597bb16ed6b7df4a763f0540569b2e83feb878631d5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2951346-57b7-4fc7-bc18-2439e6db34d0", "node_type": "1", "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5f21b370de8d2b73d2d36c7bd5093ca1930db6e1ec9a397ce54b1638787b05ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d802b767-a2d0-4525-8b38-a41638c3ebf5", "node_type": "1", "metadata": {}, "hash": "8d38d8970b6b71348c03c370f7002dfb01b5dc40a327e9e52cc3e33581a18af1", "class_name": "RelatedNodeInfo"}}, "text": "8.3.2.4.  CALL X\u201dF4\u201d USING byte , table  \nThe Routine X\u201dF4\u201d  packs  an 8 -byte area containing 8 1 -byte binary values of 0 or 1 into the corresponding bit positions \nof a 1 -byte data item.  \nThe byte  data item need be only a single byte in size.  ", "start_char_idx": 189, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d802b767-a2d0-4525-8b38-a41638c3ebf5": {"__data__": {"id_": "d802b767-a2d0-4525-8b38-a41638c3ebf5", "embedding": null, "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6", "node_type": "4", "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "50d07e536c0a7e207eae597bb16ed6b7df4a763f0540569b2e83feb878631d5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ed30f11-7473-4049-8ceb-9939b3605247", "node_type": "1", "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5876f9c5ee515224b74250786fc49cd13859ac21a24326eaabf0c9360c268158", "class_name": "RelatedNodeInfo"}}, "text": "If it is longer, the excess will be unaffected  by this subroutine.  \nTable  must be  a data item at least 8 bytes long.  If it is longer, the excess will be ignored  by this subroutine.  Typically, \ntable  is defined similarly to the following:  \n01  table. \n    05 each-byte OCCURS 8 TIMES USAGE BINARY -CHAR. \nThe following diagram illustrates how this subroutine works.  \n \nThe colored squares represent the bits in the 1st 8 bytes of array  that will be packed into byte .  The white squares \nrepresent the bits in each each -byte  that will be ignored.  \n8.3.2.5.  CALL X\u201dF 5\u201d USING byte, table  \nThis routine unpacks each bit of a byte into an 8 -byte area so they may be individually accessed and manipulated . \nThe byte  data item need be only a single byte in size.  If it is longer, the excess will be ignored  by this subroutine.  \nTable  must be a data item at least 8 bytes long.  If it is longer, the excess will be unaffected  by this subroutine.   \nTypically, table  is defined similarly to the following:  \n01  table. \n    05 each-byte OCCURS 8 TIMES USAGE BINARY -CHAR. \nThe following diagram illustrates how this subroutine works.  \n \nThe colored squares represent each of the 8 bits in byte .  The diagram shows how those bits will be \u201cunpacked\u201d into \nthe rightmost bit of each of the 1st 8 consecutive bytes of array.   The whit e squares represent the remaining bits in \neach of the 1st 8 each -byte  occurrences \u2013 all of which will be set to 0.  \n8.4. Binary Truncation  \neach -byte (1)each -byte (2)each -byte (3)each -byte (4)each -byte (5)each -byte (6)each -byte (7)each -byte (8)\nbyte\neach -byte (1)each -byte (2)each -byte (3)each -byte (4)each -byte (5)each -byte (6)each -byte (7)each -byte (8)\nbyte", "start_char_idx": 439, "end_char_idx": 2170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80d6e646-12a4-4e2f-8317-1000e63e9b2a": {"__data__": {"id_": "80d6e646-12a4-4e2f-8317-1000e63e9b2a", "embedding": null, "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "947558ac-45e0-4dc6-9001-a4df85838719", "node_type": "4", "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8d0cc3c5967d3c8a924c140afaf65ef5119d58e0ca55299429c9fd5b6ab91d46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03d27074-68aa-4699-b0e1-33ad05fc6395", "node_type": "1", "metadata": {}, "hash": "f988aef92c3258c91476f261ccba2c7f0e8e5fe02f73e1b60a7f0da6212dec1a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-26 By default, the GNU COBOL  compiler will \ntruncate binary data items to the precision \nindicated by their PICTURE clause.  For  \nexample, the following data item will have 2 \nbytes of storage allocated for it:  \n01  Comp -5-Item   PIC 9(3) COMP -5. \nBecause of truncation, even though this field \nhas enough bits allocated (16) to store values \nfrom 0 to 65535 , it will be limited to values o f 0 \nto 999 because of its PICTURE.  \nOr is it?  \n", "start_char_idx": 0, "end_char_idx": 538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03d27074-68aa-4699-b0e1-33ad05fc6395": {"__data__": {"id_": "03d27074-68aa-4699-b0e1-33ad05fc6395", "embedding": null, "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "947558ac-45e0-4dc6-9001-a4df85838719", "node_type": "4", "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8d0cc3c5967d3c8a924c140afaf65ef5119d58e0ca55299429c9fd5b6ab91d46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80d6e646-12a4-4e2f-8317-1000e63e9b2a", "node_type": "1", "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "933139fe16b3d36ec3a07db256fd6b82f7b35679feb91e53f8cbb7ac75ddf65c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "897e9bb7-bead-4acc-9946-7af4df170be1", "node_type": "1", "metadata": {}, "hash": "47b67d478dc6134a9bd8486deba9af483f1afc62d1c29c12fa7e2c7b2b75ab4e", "class_name": "RelatedNodeInfo"}}, "text": "Take a look at the small demo program shown \nhere.  This program will perform three different \ntypes of operations against a binary field, \ndisplaying the results of each.  \nHere are the results when the program is \ncompiled (with truncation in -effect by default) \nand executed:  \n \nYou can see that truncation affected the \nDISPLAY statements but appears to have had \nno impact whatsoever on the MOVE  and ADD \nstatements.  This is the hidden secret about \ntruncation in GNU COBOL :  it doesn\u2019t really  \ntruncate the internally -stored values \u2013 it just \ntruncates the DISPLAY of them!  Figure 8-3 - A Binary Truncation Demo Program  \n \nIf that same program is recompiled without truncation (by adding the \u201c -fnotrunc \u201d switch to the \u2018cobc\u2019 command), \nthe results are as follows:  \nIf this was all there was to the binary truncation issue it \nwouldn\u2019t be worth a section in this document.  The fact is, \nhowever, that bin ary truncation has a significant effect on the \nperformance of GNU COBOL  programs.  When binary \ntruncation is in effect, arithmetic operations performed \nagainst all types of numeric data items (even USAGE DISPLAY) are slowed down.  \nBefore continuing, it\u2019s wo rth making the point that we\u2019re NOT talking about astronomical performance degradations \nhere.  Today\u2019s computers are FAST, and a user sitting at the keyboard, running a GNU COBOL  program is unlikely to \nnotice.  BUT \u2026 if you have a GNU COBOL  program that ha s to process large amounts of data, performing some \nsignificant \u201cnumber crunching\u201d against that data as it goes, the impact of truncation could become noticeable.  \nThe demo program shown in Figure 8-4 compares the performance of performing arithmetic operations (in a totally \nnon-scientific, non -rigorous way) against USAGE DISPLAY, COMP , COMP -5 and BINARY -xxx54 numeric  data .  It was \nactually  my intent when I first wrote the program to merely demonstrate the relative performance differences \nbetween the first  three types of numeric data storage, and it certainly met that objective.  \nImagine my surprise, however, when I discovered that the use of  \u201c-fnotrunc \u201d also made a significant difference!  \n                                                                 \n54 USAGE BINARY -xxx  is supposed to store numeric data identically to USAGE COMP -5, but I felt it couldn\u2019t hurt to check.  \nBin-Item -1=760 Disp -Item -1=032760\nBin-Item -1=765 Disp -Item -1=032765\nBin-Item -1=767 Disp -Item -1=032767\nIDENTIFICATION DIVISION.\nPROGRAM-ID. ", "start_char_idx": 538, "end_char_idx": 3042, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "897e9bb7-bead-4acc-9946-7af4df170be1": {"__data__": {"id_": "897e9bb7-bead-4acc-9946-7af4df170be1", "embedding": null, "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "947558ac-45e0-4dc6-9001-a4df85838719", "node_type": "4", "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8d0cc3c5967d3c8a924c140afaf65ef5119d58e0ca55299429c9fd5b6ab91d46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03d27074-68aa-4699-b0e1-33ad05fc6395", "node_type": "1", "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "801a01526db5f9506d6f75514b6cd2f9694cf70adc05b99563042df8919b2332", "class_name": "RelatedNodeInfo"}}, "text": "DEMOTRUNC.\nENVIRONMENT DIVISION.\nDATA DIVISION.\nWORKING-STORAGE SECTION.\n01  Bin-Item-1            PIC 9(3)\nCOMP-5\nVALUE 32760.\n01  Disp -Item-1           PIC 9(6).\nPROCEDURE DIVISION.\n000-Main.\nMOVE Bin-Item-1 TO Disp -Item-1\nDISPLAY\n'Bin-Item-1='  Bin-Item-1 \n' Disp-Item-1=' Disp -Item-1\nEND-DISPLAY\nADD 5           TO Bin -Item-1\nMOVE Bin-Item-1 TO Disp -Item-1\nDISPLAY\n'Bin-Item-1='  Bin-Item-1 \n' Disp-Item-1=' Disp -Item-1\nEND-DISPLAY\nMOVE 32767      TO Bin -Item-1\nMOVE Bin -Item-1 TO Disp -Item-1\nDISPLAY\n'Bin-Item-1='  Bin-Item-1\n' Disp-Item-1=' Disp -Item-1\nEND-DISPLAY\nSTOP RUN. \nBin-Item -1=32760 Disp -Item -1=032760\nBin-Item -1=32765 Disp -Item -1=032765\nBin-Item -1=32767 Disp -Item -1=032767", "start_char_idx": 3042, "end_char_idx": 3750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e7d6cce-c6bd-49f1-a9f2-e5b26dd70b39": {"__data__": {"id_": "5e7d6cce-c6bd-49f1-a9f2-e5b26dd70b39", "embedding": null, "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c5ac2c6-2298-45c5-912c-714e59a2ef2e", "node_type": "4", "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fedd2773e6cec78f4d01b28d385e601d40db9fc4277fe5a8aa6aa92a685232b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69b49676-2b4a-441e-bfcf-dc7701a0c288", "node_type": "1", "metadata": {}, "hash": "1edff4fb0bdc91df44190805c407ebb21c6719d0909e571c676ef81ebcad1643", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-27 Here\u2019s what the program does:  \n There are four  numeric data items in the program \u2013 one USAGE DISPLAY, one USAGE COMP , one USAGE COMP -5 \nand one USAGE BINARY -LONG .  Since the program was run on a computer with a n Intel -architecture processor \n(actually it\u2019s an AMD, but results are identical with Intel) I wanted to see just how much more efficient COMP -5 \nwas over COMP.  \n Each data item will have 7 added to it ten million times.   ", "start_char_idx": 0, "end_char_idx": 537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69b49676-2b4a-441e-bfcf-dc7701a0c288": {"__data__": {"id_": "69b49676-2b4a-441e-bfcf-dc7701a0c288", "embedding": null, "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c5ac2c6-2298-45c5-912c-714e59a2ef2e", "node_type": "4", "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fedd2773e6cec78f4d01b28d385e601d40db9fc4277fe5a8aa6aa92a685232b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e7d6cce-c6bd-49f1-a9f2-e5b26dd70b39", "node_type": "1", "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "eb339948472320de2c1a684c43296270e0cf1a450e0e80b489610c44a52bc266", "class_name": "RelatedNodeInfo"}}, "text": "You\u2019ll see why shortly.  \n The time (to o ne-one-hundredth  of a second) will be r etrieved before and after e ach test and the difference  \nbetween the two will be DISPLAYed .  This is why the computations were done so many times \u2013 it was to make \nsure the timing was \u201cmeasurable\u201d with only a 1/100 secon d \u201cstopwatch\u201d.  \nGNU COBOL  is retrieving wall -clock time, not  actual CPU -used time, so other  activities taking place on the computer \nhad to be kept to a minimum while the tests were running.  I also ran the tests multiple times, just to make sure I had \nconsi stent results (I did).   Like I mentioned earlier \u2013 this is not a rigorous, scientific benchmark of numeric \nperformance; it\u2019s just a quick -and-dirty comparison.  \nFigure 8 -4 shows the program and the test results received when executing both with and without the \u201c -fnotrunc \u201d \nswitch.  \nHere are the conclusions I drew from running these tests  many times (30).  The timings shown are average times from \nall Tests  \nWith truncation ON:  \n USAGE COMP has a  significant performance advantage over USAGE DISPLAY  \n USAGE COMP -5 has a n even greater  performance advantage over USAGE COMP, than COMP did over DISPLAY  \n USAGE BINARY -LONG (and presumably the other BINARY -xxx USAGEs as well) perform identically (within the \nmeasurement tole rances of the test) with COMP -5; this should be no surprise since COMP -5 and BINARY -xxx both \nallocate data the same way  \nWith truncation OFF:  \n There was a huge drop in both USAGE DISPLAY and US AGE COMP timings.  \n The relative performance advantage of USAGE COMP over USAGE DISPLAY is even larger with truncation off than \nit was with it on . \n USAGE COMP -5 and USAGE BINARY -xxx appear to be virtually unaffected by the truncation on/off status , \nalthough t here was a .01 second increase in average execution time of those tests without truncation over those \nwith truncation.  Given the number of times I ran the tests, it\u2019s obvious that something makes COMP -5/BINARY -\nxxx  run slower without truncation than with it; that difference, however, is so miniscule that I discount it as being \nstatistically irrelevant55. \nMy final observation is that I see absolutely no reason whatsoever why the \u201c -fnotrunc \u201d option shouldn\u2019t be used on \nall GNU COBOL  compilations.  \nIf you want  to squeeze every last bit of performance out of your GNU COBOL  programs, don\u2019t forget to investigate the \nvarious \u201c\u2013O\u201d (optimization) switches.  Actually run programs using various optimization switches (or not) and compare \nexecution times, don\u2019t just comp are the generated C code because sometimes the differences can\u2019t be \u201cseen\u201d at the C \nsource -code level.  \n \n                                                                 \n55 Remember \u2013 that\u2019s a .01 second difference over TEN MILLION iterations!  ", "start_char_idx": 537, "end_char_idx": 3359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0d7995f-f4ac-42cd-97b4-ec3554c2dacd": {"__data__": {"id_": "f0d7995f-f4ac-42cd-97b4-ec3554c2dacd", "embedding": null, "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4", "node_type": "4", "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "57e253945527393f84679c55f5ba5ab552692dd30671915b096dfda7f49ad3e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f00feb7-2967-47e7-9a6d-0376f6b37a92", "node_type": "1", "metadata": {}, "hash": "db467c3b773f97ef63d747b22583bc5f2618d62141ff76ab33caa90419b77179", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  The GNU COBOL System Interface  \n \n11FEB2012 Version   8-28 Figure 8-4 - A Non-Scientific Comparison of Numeric Data Item USAGE Performance  \n \n \nIDENTIFICATION DIVISION.\nPROGRAM-ID. DEMOMATH.\nDATA DIVISION.\nWORKING-STORAGE SECTION.\n01  Begin -Time.\n05 BT-HH                    PIC 9(2).\n05 BT-MM                    PIC 9(2).\n05 BT-SS                    PIC 9(2).\n05 BT-HU                    PIC 9(2).\n01  Binary -Item         BINARY -LONG SIGNED VALUE 0.\n01  Comp -Item           COMP    PIC S9(9)  VALUE 0.\n01  Comp -5-Item         COMP -5  PIC S9(9)  VALUE 0.\n01  Display -Item        DISPLAY PIC S9(9)  VALUE 0.\n01  End-Time.\n05 ET-HH                    PIC 9(2).\n05 ET-MM                    PIC 9(2).\n05 ET-SS                    PIC 9(2).\n05 ET-HU                    PIC 9(2).\n78  Repeat -Count                VALUE 10000000.\n01  Time -Diff                   PIC ZZ9.99.\nPROCEDURE DIVISION.\n010-Test-Usage-DISPLAY.\nACCEPT  Begin -Time FROM TIME END -ACCEPT\nPERFORM Repeat -Count TIMES ADD 7 TO Display -Item END -PERFORM\nPERFORM 100 -Determine -Time-Diff\nDISPLAY 'USAGE DISPLAY: ' Time -Diff ' SECONDS' END -DISPLAY.\n020-Test-Usage-COMP.\nACCEPT Begin -Time FROM TIME END -ACCEPT\nPERFORM Repeat -Count TIMES ADD 7 TO Comp -Item END -PERFORM\nPERFORM 100 -Determine -Time-Diff\nDISPLAY 'USAGE COMP:    ' Time -Diff ' SECONDS' END -DISPLAY.\n030-Test-Usage-COMP-5.\nACCEPT Begin -Time FROM TIME END -ACCEPT\nPERFORM Repeat -Count TIMES ADD 7 TO Comp -5-Item END -PERFORM\nPERFORM 100 -Determine -Time-Diff\nDISPLAY 'USAGE COMP -5:  ' Time -Diff ' SECONDS' END -DISPLAY.\n040-Test-Usage-BINARY.\nACCEPT Begin -Time FROM TIME END -ACCEPT\nPERFORM Repeat -Count TIMES ADD 7 TO Binary -Item END -PERFORM\nPERFORM 100 -Determine -Time-Diff\nDISPLAY 'USAGE BINARY:  ' Time -Diff ' SECONDS' END -DISPLAY.\n099-Done.\n", "start_char_idx": 0, "end_char_idx": 1832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f00feb7-2967-47e7-9a6d-0376f6b37a92": {"__data__": {"id_": "6f00feb7-2967-47e7-9a6d-0376f6b37a92", "embedding": null, "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4", "node_type": "4", "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "57e253945527393f84679c55f5ba5ab552692dd30671915b096dfda7f49ad3e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0d7995f-f4ac-42cd-97b4-ec3554c2dacd", "node_type": "1", "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d8c4eec3ab7d9f32d4f2ded11201580a5fb8fa941fc44d238b034f0f54038a35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "939689c9-930d-4c0f-8e1c-9387450786c4", "node_type": "1", "metadata": {}, "hash": "2712100863d004a66677caa2bd8af05d119c82788268640097ab40a323fef676", "class_name": "RelatedNodeInfo"}}, "text": "STOP RUN.\n", "start_char_idx": 1832, "end_char_idx": 1842, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "939689c9-930d-4c0f-8e1c-9387450786c4": {"__data__": {"id_": "939689c9-930d-4c0f-8e1c-9387450786c4", "embedding": null, "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4", "node_type": "4", "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "57e253945527393f84679c55f5ba5ab552692dd30671915b096dfda7f49ad3e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f00feb7-2967-47e7-9a6d-0376f6b37a92", "node_type": "1", "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7fb6980d8d47393ce2663124eb15aba0ec921305cbf341fea0f0f545cce79d96", "class_name": "RelatedNodeInfo"}}, "text": "100-Determine -Time-Diff.\nACCEPT End -Time FROM TIME END -ACCEPT\nCOMPUTE Time -Diff =\n( (ET-HH * 360000 + ET -MM * 6000 + ET -SS * 100 + ET -HU)\n-(BT-HH * 360000 + BT -MM * 6000 + BT -SS * 100 + BT -HU) )\n/ 100.USAGE DISPLAY:   0.69 SECONDS\nUSAGE COMP:      0.06 SECONDS\nUSAGE COMP -5:    0.05 SECONDS\nUSAGE BINARY:    0.05 SECONDSResults with truncation\nturned off (\u201c -fnotrunc \u201d \nused on \u2018 cobc \u2019)USAGE DISPLAY:   6.49 SECONDS\nUSAGE COMP:      2.81 SECONDS\nUSAGE COMP -5:    0.04 SECONDS\nUSAGE BINARY:    0.04 SECONDSResults with truncation\nturned on (the default)", "start_char_idx": 1842, "end_char_idx": 2408, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b338c463-f35d-4ede-8c2e-0b45adbe86c6": {"__data__": {"id_": "b338c463-f35d-4ede-8c2e-0b45adbe86c6", "embedding": null, "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7", "node_type": "4", "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fb9c9270ec2af7de960fc732fac69b475a26d7b6a51381ad52bf5b16a5e0ecbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb097d24-28fe-403f-969f-b636ac5eae7e", "node_type": "1", "metadata": {}, "hash": "4e67cbc6a50aec97d5ea37ee17a15229d65c105f406484504d0591cd59230934", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-1 9. So, You\u2019re a New COBOL Programmer?  \nThis chapter deals with a variety of stylistic issues that may be of interest to someone who is just starting out learning \nand using COBOL.  Much of this chapter makes stylistic recommendations and suggestions for how to write your own \nprograms.  The sample programs in chapter 10 (\u201cSample Program s\u201d) were coded using almost all of these \nrecommendations.  \nThere\u2019s no particular order of importance to the topics presented here.  \n", "start_char_idx": 0, "end_char_idx": 572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb097d24-28fe-403f-969f-b636ac5eae7e": {"__data__": {"id_": "bb097d24-28fe-403f-969f-b636ac5eae7e", "embedding": null, "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7", "node_type": "4", "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fb9c9270ec2af7de960fc732fac69b475a26d7b6a51381ad52bf5b16a5e0ecbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b338c463-f35d-4ede-8c2e-0b45adbe86c6", "node_type": "1", "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "89240792a97f5a533badf049a0ab8a8f5f7e0fa72d2a1793a921684f03a8c579", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d10738cd-ce72-4b30-abc8-9039436c9f0e", "node_type": "1", "metadata": {}, "hash": "c5e708f51ff2ddecd99e8b9b65e4d43286090db196ccbcf2075340079b1a5f6d", "class_name": "RelatedNodeInfo"}}, "text": "9.1. Marking Changes in Programs  \nFor quite a while now (back to the 1980s), the \u201csequence number ar ea\u201d of a COBOL statement (columns 1 -6) has come \nto be used as a change indicator area.  Programmers would place a code in columns 1 -6 of every line they changed in a \nprogram.  The author works in a COBOL shop where change indicators of the form \u201cxxmmyy\u201d ar e required on every \naltered line of a program \u2013 \u201cxx\u201d is the initials of the programmer while \u201cmmyy\u201d are the month and two -digit year of \nthe date the change was made.   This is frequently accompanied by a comment block at or near the top of a COBOL \nprogram p roviding general documentation of what changes were made and what change indicator was used to mark \nthat change.  \nThe GCic  sample program source listing provides an excellent example of such documentation.  \nThis technique of using columns 1 -6 as a change ind icator will ONLY work if  fixed s ource -record format  is in effect.  \nMarking changes becomes more of a challenges when free -format source code is in effect.  Creating a top -of-program \ncomment block to generically describe changes that have been made isn\u2019t dif ficult, even in free -form.  What IS \ndifficult, however, is comping up with a scheme for per -statement markup of changes that doesn\u2019t introduce a \nridiculously excessive number of source lines to the program.  I\u2019m not sure there is a good answer to this prob lem (if a \nreader has one, please let me know).  Generally, I\u2019ve noticed that shops using free -format conventions for their COBOL \nsource tend to stick with just the top -of-program comment block combined with minimal comment blocks sprinkled \nthroughout the p rogram noting areas that underwent major changes.  \nSee Also\u2026  \nFixed -Format Source Code  1.5.1.1  \n Sample Programs: GCic  10.4  \n \n9.2. Data Item Coding and Naming Conventions  \nWhen programs get very large, it becomes more and more challenging to keep track of the data items that will be \nused in the program.  Here are, in no particular order of importance, are a variety of conventions that can simplfy that \nproblem.  \n", "start_char_idx": 572, "end_char_idx": 2677, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d10738cd-ce72-4b30-abc8-9039436c9f0e": {"__data__": {"id_": "d10738cd-ce72-4b30-abc8-9039436c9f0e", "embedding": null, "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7", "node_type": "4", "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fb9c9270ec2af7de960fc732fac69b475a26d7b6a51381ad52bf5b16a5e0ecbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb097d24-28fe-403f-969f-b636ac5eae7e", "node_type": "1", "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "69d5e6425e5fb869fb83d5b3553b355a80e519ae296f4e91119202fde888d9db", "class_name": "RelatedNodeInfo"}}, "text": "Remember that the points described here are intended to make things easier for you \u2013 the programmer.  No COBOL \ncompiler cares one way or another whether any of these suggestions are followed.  \n1. Avoid the use of level 77 data items in new programs.  Once (1968 and before) there were valid reasons for \ncreating level -77 data items, but since the 1974 ANSI standard of COBOL there really hasn\u2019t been any reason why \nan el ementary level -01 data item couldn\u2019t have been used instead of a level -77 item.  \n2. Allocate level -01 data items in alphabetical sequence in the program source wherever practical.  This will make it \nvastly  easier to locate the definition of an 01 -level item in  the program source.  \n3. Consider prefixing data items with an indication of where in the program structure they were created.  For \nexample:  \n\uf0b7 Everything defined in the FILE SECTION  starts with \u201c F-\u201c \n\uf0b7 Everything defined in WORKING -STORAGE  starts with  \u201c WS-\u201c \n\uf0b7 Everything defined in LOCAL -STORAGE  starts with \u201c LS-\u201c \n\uf0b7 Everything defined in the LINKAGE SECTION  starts with  \u201c L-\u201c \n\uf0b7 Everything defined in the SCREEN SECTION  starts with \u201c S-\u201c ", "start_char_idx": 2677, "end_char_idx": 3827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "844d0a60-2d02-4a39-8153-966b64de8a04": {"__data__": {"id_": "844d0a60-2d02-4a39-8153-966b64de8a04", "embedding": null, "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6", "node_type": "4", "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b90f60042674a6ca0587fdd9889cc70a1bc017ad9d53b3d4fe20515576ec9b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67bfd251-00be-4e27-9209-cdf9f2f83dc2", "node_type": "1", "metadata": {}, "hash": "ee43253df821f1c83ff29303e0c5f33e17afeab3c349873808c3e53d3f0e4f72", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-2 A convention such as this makes it simple, when you\u2019re reviewing code in the PROCEDU RE DIVISION , to know \nwhat section of the DATA DIVISION  to look in to locate the detailed description of a data item.  \n4. Consider including a n acronym to be ins erted into the name of any data item defined directly or indirectly \nsubordinate to an 01 -level item,  typically to be specified after  any section -level tag, if you\u2019re using them, as \ndiscussed in item # 3  above.  For example, consider the names used in the followin g structure : \n01  WS-FILE-STATUS-MESSAGE.  \n    05 FILLER                     PIC X(13) VALUE \u2018Status Code: \u2018.  \n    05 WS-FSM-Status-CD           PIC 9(2).  \n    05 FILLER                     PIC X(11) VALUE \u2018, Meaning: \u2018.  \n    05 WS-FSM-Msg-TXT             PIC X(25). \nThe \u201c -FSM -\u201c acronyms make it easier  to locate \u2013 in the program source code - the description of the 01 -item the \nstatus code and message text items belong to.  \n5. Consider including a trailing descriptor  of the nature of all data items in their names.  Two examples of this \u2013 \u201c-\nCD\u201d and \u201c -TXT\u201d were  included in the above example.  The following chart presents a variety of such descriptors \nthe author has encountered and used through the years:  \nDescriptor  Usage  \n-ADDR  The data item contains all or a part of an Address (City -ADDR, State -ADDR, Street -ADDR, \u2026)  \n-BOOL  A level -88 data item (which only has the value TRUE or FALSE)  \n-CD A CODE whose value denotes information content  above and beyond that of the  mere value itself.  \nSome examples could be \u201cError -CD\u201d, \u201cStatus -CD\u201d, \u201cBilling -CD\u201d  \n-CHR  A data item containing a single character of data.  \n-CONST  A constant, specified as a level -78 data item, a level -01 item with the CONST attribute  \n-DT The data item cont ains a complete or partial date (Birth -DT, Birth -Month -DT, Birth -Year -DT, \u2026)  \n-DTTM  A data item containing both a date and a time  \n-FILE A file name.  Note that these items would probably also have a \u201c F-\u201c prefix.  \n", "start_char_idx": 0, "end_char_idx": 2118, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67bfd251-00be-4e27-9209-cdf9f2f83dc2": {"__data__": {"id_": "67bfd251-00be-4e27-9209-cdf9f2f83dc2", "embedding": null, "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6", "node_type": "4", "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b90f60042674a6ca0587fdd9889cc70a1bc017ad9d53b3d4fe20515576ec9b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "844d0a60-2d02-4a39-8153-966b64de8a04", "node_type": "1", "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5097367b8a83c400f3ec60cc1376b8f3727d7f014f718d63b1de99e17d9e2707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8dadd252-bac6-45d4-9eb9-81d9340fdb69", "node_type": "1", "metadata": {}, "hash": "844bfd6f8b4f95135018d86ba2934dfc033cf5a68b4da6b79e03fa5754889c3c", "class_name": "RelatedNodeInfo"}}, "text": "-IDX A data item used as a table index (see section 9.3) \n-NM All or a portion of a person\u2019s  name.  These could be extended to include business names, pr oduct \nnames, etc.  \n-PTR A data item whose USAGE  is POINTER   \n-NUM  A generic numeric data item that doesn\u2019t fit into any of the other categories  \n-QTY  A count of something  \n-REC An 01 -level item defined in the FILE SECTION  (constituting the layout  of a record within a file). Note \nthat these items would probably also have a \u201c F-\u201c prefix.  \n-SCR The data item contains a complete or partial screen description (appropriate for SCREEN SECTION  \n01-level data items).  \n-SUB  A numeric item used as a table subscript (see section 9.3) \n-TEL All or part of a telephone number  \n-TM The data item contains a complete or partia l time value  \n-TXT The data item contains generic alphanumeric text that doesn\u2019t fit into any of the other categories.  \nThe above is by no means an exhaustive list, but good programmers will use a s few of these descriptors as \npossible as having too many defeats any benefits of such classification/documentation efforts.  \n", "start_char_idx": 2118, "end_char_idx": 3234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8dadd252-bac6-45d4-9eb9-81d9340fdb69": {"__data__": {"id_": "8dadd252-bac6-45d4-9eb9-81d9340fdb69", "embedding": null, "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6", "node_type": "4", "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b90f60042674a6ca0587fdd9889cc70a1bc017ad9d53b3d4fe20515576ec9b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67bfd251-00be-4e27-9209-cdf9f2f83dc2", "node_type": "1", "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36dadd3357e91523be87f77250dcae88831a6e56b0ce34843a12fd5ac6ded53b", "class_name": "RelatedNodeInfo"}}, "text": "9.3. Table Subscript ing versus Table Index ing \nThe elements of a table may be referenced either using a subscript or an index.  Syntactica lly, this is coded using \nparenthesis, as per the following  three  examples, all of which store the letter \u201cA\u201d into the 17th occurrence of a data \nitem named WSS - Output -Image -TXT:  \n1. MOVE \u2018A\u2019 TO WSS -Output-Image-TXT (17)  \n2. MOVE 17 TO WSS -OI-SUB \n MOVE \u2018A\u2019 TO WSS-Output-Image-TXT (WSS-OI-SUB) \n3. SET WSS-OI-IDX TO 17  ", "start_char_idx": 3234, "end_char_idx": 3706, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b2a613d-36da-4441-b03a-70ade77a1ceb": {"__data__": {"id_": "6b2a613d-36da-4441-b03a-70ade77a1ceb", "embedding": null, "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3037eab8-ef41-41ca-8448-f90be2519dd6", "node_type": "4", "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f4663a2c8f9938d8968d3f57ae14cdabe0ac1406b763183f12ea8c0ff47d151c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a708ed8-4078-46b0-8327-42c19cfc5fd4", "node_type": "1", "metadata": {}, "hash": "686cd1f36e8c7ad6e20672cffeaa88cd00d55280d0230e3678c0326b0463e20b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-3 MOVE \u2018A\u2019 TO WSS -Output-Image-TXT (WSS-OI-IDX) \nExamples 1 and 2 are referred to as subscripting while example 3 is known as indexing.  The distinction is fairly simple \n\u2013 INDEXING is the process of refer encing an element of a table utilizing a data item with an explicitly or implicitly \ndefined USAGE of INDEX to select the desired occurrence, while SUBSCRIPTING is the process of referencing an \nelement of a table utilizing  either a numeric constant or an un edited numeric data item to select the desired \noccurrence.  \nVarious implementations of COBOL generate object code that is quite different in each of these three situations, an d \nGNU COBOL  is no exception.  In general, table references such as example #1 (con stant subscript) generate the \nsmallest, simplest  and fastest object code while table references such as example #2 (numeric data item subscript) \ngenerate the largest, most -complicated and slowest object code.  Table references such as example #3 (table in dexing) \ngenerate object code that falls in the middle of the other two but is far closer in efficiency to example #1 than #2.  \nSome COBOL statements (SEARCH, SEARCH ALL and table -based SORT) require  you to index the affected table and to \nutilize that index with those statements.  With any other references to tables, the choice is left to the programmer as \nto which approach should be used.  In general, follow these rules:  \n1. Use constant subscripts (example #1) wherever possible/practical.  \n2. If references  to table  elements are going to be performed many, many  times (tens or hundreds of thousands of \ntimes or more) during program execution, you will probably see a noticeable improvement in program execution \ntime if you use indexing versus subscripting.    \nSince it\u2019s impossible to perform any arithmetic operation against an index data item directly (other than a simple \nincrementation or decrementation operation), situations where any non -trivial computations are required to \ncalculate the effective occurrence number for  a table reference will require you to use a numeric data item to \nserve as the receiving field for the calculation.  That calculated value would then need to be saved into the index \ndata item via a SET statement.  \nIf you only need to use the computed occurr ence number once, you might as well just use the computed \noccurrence number data item as a subscript.  If, however, you will need to use a computed \u201csubscript\u201d more than \nonce, the run -time overhead of converting that occurrence value to an index (via SET) will be worth the coding \neffort.  \nWhew!  \n3. If references to table elements are not going to be performed many, many times it probably won\u2019t make much \ndifference whether you use indexing or subscripting.  \nIf you are comfortable with the \u201cC\u201d programming language, you might find the following simple GNU COBOL  program \nuseful in exploring the differences between subscripting and indexing:  \n       IDENTIFICATION DIVISION.  \n       PROGRAM-ID.  ", "start_char_idx": 0, "end_char_idx": 3107, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a708ed8-4078-46b0-8327-42c19cfc5fd4": {"__data__": {"id_": "3a708ed8-4078-46b0-8327-42c19cfc5fd4", "embedding": null, "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3037eab8-ef41-41ca-8448-f90be2519dd6", "node_type": "4", "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f4663a2c8f9938d8968d3f57ae14cdabe0ac1406b763183f12ea8c0ff47d151c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b2a613d-36da-4441-b03a-70ade77a1ceb", "node_type": "1", "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4b803e80fadb8651677d4899ef2ac2370a52fa783ba5415d62447b0cdfa0925b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3feb080-b17e-491b-bdd4-2ad01ef43f30", "node_type": "1", "metadata": {}, "hash": "2bf85f69f04a41cd345382c26f35c4d8e49831d9d459b578862c9ec07b586e59", "class_name": "RelatedNodeInfo"}}, "text": "SUBVSINDEX.  \n       DATA DIVISION.  \n       WORKING-STORAGE SECTION.  \n       01  WS-TABLE-SUB                BINARY -LONG. \n       01  WS-TABLE. \n           05 WS-TABLE-ENTRY           OCCURS 20 TIMES  \n                                       INDEXED BY WS -TABLE-IDX \n                                       PIC X(1).  \n       PROCEDURE DIVISION.  \n       ", "start_char_idx": 3107, "end_char_idx": 3464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3feb080-b17e-491b-bdd4-2ad01ef43f30": {"__data__": {"id_": "a3feb080-b17e-491b-bdd4-2ad01ef43f30", "embedding": null, "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3037eab8-ef41-41ca-8448-f90be2519dd6", "node_type": "4", "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f4663a2c8f9938d8968d3f57ae14cdabe0ac1406b763183f12ea8c0ff47d151c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a708ed8-4078-46b0-8327-42c19cfc5fd4", "node_type": "1", "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "94cc9ce9623c3bf9e3c918d7f0c3b4bb8ebd82b9168e4d18878c8a55fdaf2944", "class_name": "RelatedNodeInfo"}}, "text": "000-Main SECTION.  \n       E1. MOVE 'A' TO WS -TABLE-ENTRY (17)  \n           . \n       E2. MOVE 17 TO WS -TABLE-SUB \n           MOVE 'A' TO WS -TABLE-ENTRY (WS -TABLE-SUB) \n           . \n       E3. SET WS -TABLE-IDX TO 17  \n           MOVE 'A' TO WS -TABLE-ENTRY (WS -TABLE-SUB) \n           . ", "start_char_idx": 3464, "end_char_idx": 3757, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b450be89-f98e-4a1e-8180-b30c78c9b448": {"__data__": {"id_": "b450be89-f98e-4a1e-8180-b30c78c9b448", "embedding": null, "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bde6c50-662a-475b-8a4d-95a59267d5cd", "node_type": "4", "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "59cb28961a5a3cff70a49d0fe0d69c6531ebb0fb7fc2dc1743e5211b59587630", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95cf2059-f79c-4163-848b-e3e73c3c5624", "node_type": "1", "metadata": {}, "hash": "e94f161d012328c647c1eac5be95979fa9850f4485b2de3dc2900c4eb8b401eb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-4 Compile this program as follows (the assumption is made that you are executing the cobc command from the \ndirectory in which the above program source code (subvsindex.cbl ) exists.  \ncobc \u2013C \u2013save-temps subvsindex.cbl  \nAfter this command is executed, the files \u201c subvsindex.c \u201d will contain the \u201cPROCEDURE DIVISION\u201d C code and \n\u201csubvsindex.c.1.h\u201d will contain the \u201cWORKING -STORAGE\u201d C code.  \nSee Also\u2026  \nGiving a Data Item a Compile -Time VALUE  5.2.1.12  \nReferencing Table Entries  6.1.1  \nThe SEARCH  Statement  6.4.38.1  \nThe SET UP /DOWN  Statement  6.2.39.5  \n The SEARCH ALL  Statement  6.4.38.2  \nThe SORT  Statement (Table Sort)  6.4.40.2  \nThe SET (Index) Statement  6.2.39.4  \n \n9.4. Copybook  Naming Conventions and Usage  \nSince the intent of a copybook is to introduce  COBOL code into a particular spot in a program via the COPY statement, \nit is always a good idea to prefix copybook names with a two -character sequence that identifies where in a program \nit\u2019s contents are inten ded to be COPYed.  \nFor example:  \nIDxxxxxxxx  copybooks containing code intended for the  IDENTIFICATION DIVISION .  These will be rare as you \nalmost never encounter COPYed code in the IDENTIFICATION DIVISION . \nEDxxxxxxxx  copybooks containing code intended for us e in the  ENVIRONMENT DIVISION .  These copybooks are \ngenerally used for predefined SPECIAL -NAMES  or FILE-CONTROL  syntax,  \nDDxxxxxxxx  copybooks that contain data definitions.  \nPDxxxxxxxx  copybooks that contain executable instructions.  \n", "start_char_idx": 0, "end_char_idx": 1609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95cf2059-f79c-4163-848b-e3e73c3c5624": {"__data__": {"id_": "95cf2059-f79c-4163-848b-e3e73c3c5624", "embedding": null, "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bde6c50-662a-475b-8a4d-95a59267d5cd", "node_type": "4", "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "59cb28961a5a3cff70a49d0fe0d69c6531ebb0fb7fc2dc1743e5211b59587630", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b450be89-f98e-4a1e-8180-b30c78c9b448", "node_type": "1", "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "70d7789149145c444e477864883142fda1c933642e15fb34cc0264a67b534a20", "class_name": "RelatedNodeInfo"}}, "text": "9.5. PROCEDURE DIVISION Sections Versus  Paragraphs  \nThe issue of whether to use section and /or paragraph names (collectively referred to as procedure names ) within the \nPROCEDURE DIVISION is one approaching religious significance with many COBOL programmers.  \nCOBO L programming standards used by many organizations that use the language generally call for procedure names \nto: \n1. Contain a leading numeric component  \n2. Be defined in the PROCEDURE DIVISION in non -decreasing sequence of that numeric component.  \nWhen you are look ing at or editing any large COBOL program that has been created with programming standards that \ninclude these two rules, it is always a simple thing to know whether a reference to a procedure is being made to code \nthat exists before or after your current l ocation in the program!  \nTechnically, GNU COBOL  does not require ANY procedure names be defined unless:  \n1. You are using the ALTER  statement (the use of which should be avoided at all costs)  \n2. You are using Format 1 of the PERFORM  Statement  \n3. You are using a GO TO  Statement  \n4. You are using a SORT or MERGE statement with either (or both) an INPUT PROCEDURE or OUTPUT \nPROCEDURE  \nSince it is difficult to write any non -trivial COBOL program that uses none of the above, lets assume you will be \nincluding at least one section  or paragraph in your GNU COBOL  programs.  \nI like to use PROCEDURE DIVISION paragraphs and sections as follows.  ", "start_char_idx": 1609, "end_char_idx": 3067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19bbd9f3-571f-4bb5-8eb2-8bd50e70be42": {"__data__": {"id_": "19bbd9f3-571f-4bb5-8eb2-8bd50e70be42", "embedding": null, "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54", "node_type": "4", "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "229e51401799d423cda635a449272db10fb35f1d280c69b50e55955e828ac0ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14566228-578c-41d3-a8bf-b0b6756d3070", "node_type": "1", "metadata": {}, "hash": "3032a954fff4caacea3a6de667d12059e5d4fb3cf82ea8f1d6ac4fcfe52c7081", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-5 1. The very first procedure defined in the PROCEDURE DIVISION of my programs, assuming no DECLARATIVES \nare defined, will be a SECTION named \u201c 000-Main\u201d.  The declaration of this procedure will immediately follow \nthe PROCEDURE DIVISION header (or END DECLARATIVES  if DECLARATIVES  are used).  \n2. Any procedures referenced by MERGE , PERFORM , or SORT  statements will be defined as their own sections.  \n3. Any procedu res referenced by GO TO  statements will be defined as paragraphs, and those paragraphs will be \ndefined in the same section as the  GO TO  statements that reference them.  In other words, GO TO \nstatements may not be used to transfer control to a point in a di fferent section.  This is NOT a GNU COBOL  \nrule \u2013 this is my own personal rule intended to improve the readability of my programs.  \n4. I always include a numeric prefix to all procedure names I define, and those numbers are assigned in non -\ndecreasing sequence o f their value.  Thus it is always possible, provided you know in what procedure the GO \nTO, MERGE, PERFORM or SORT statement you are looking at is located, to know whether you should look \nforward or backward in the program to find the procedure the statemen t is referencing.  \n5. I do not use THRU on any MERGE , PERFORM  or SORT  statement unless the programming standards of the \nshop in which I am working requires it..  My reasoning for this is that it is too easy to accidentally  introduce a \nnew procedure into the sc ope of a PERFORM.   \nSee Also\u2026  \nThe USE Statement and DECLARATIVES  6.1.4  \nThe ALTER  Statement  6.2.4  \nPERFORM  Format 1 - Procedural  6.2.30.1  \n The GO TO  Statement  6.2.20  \nThe MERGE  Statement  6.2.25  \nSORT  Format 1 \u2013 File-based SORT  6.2.40.1  \n \n9.6. COMPUTE Versus ADD, SUBTRACT, MULTIPLY  and DIVIDE  \nOver the years, there has been much debate over the effectiveness, appropriateness and arithmetic accuracy of using \nthe COMPUTE  statement rather than the four basic  arithmetic operation statements  (ADD , SUBTRACT , MULTIPLY , \nDIVIDE ). \nHere are the facts.  ", "start_char_idx": 0, "end_char_idx": 2155, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14566228-578c-41d3-a8bf-b0b6756d3070": {"__data__": {"id_": "14566228-578c-41d3-a8bf-b0b6756d3070", "embedding": null, "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54", "node_type": "4", "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "229e51401799d423cda635a449272db10fb35f1d280c69b50e55955e828ac0ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19bbd9f3-571f-4bb5-8eb2-8bd50e70be42", "node_type": "1", "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30433ba5e35516129d901189f6b9d4f777ba77273569b5f84e3ad84b0ef6d928", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cffef41-d13f-4c43-a427-c4f8a6017a80", "node_type": "1", "metadata": {}, "hash": "97ea129cb329204eb17f981d3667f55ef5387fa7b827bada119c9fd55d8f25fb", "class_name": "RelatedNodeInfo"}}, "text": "Draw your own conclusions as to which approach is more appropriate under which circumstances.  \n", "start_char_idx": 2155, "end_char_idx": 2251, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cffef41-d13f-4c43-a427-c4f8a6017a80": {"__data__": {"id_": "0cffef41-d13f-4c43-a427-c4f8a6017a80", "embedding": null, "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54", "node_type": "4", "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "229e51401799d423cda635a449272db10fb35f1d280c69b50e55955e828ac0ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14566228-578c-41d3-a8bf-b0b6756d3070", "node_type": "1", "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5752bbf4ea1baa145d97422a3c2ca98217144506e90d5c50c6b5eb180aca5973", "class_name": "RelatedNodeInfo"}}, "text": "1. The COMPUTE  statement supports exponentiation (via the \u201c**\u201d operator) \u2013 there is no equivalent basic \narithmetic statement.  Although you could simulat e integral exponentiation (raising a value to the third power, for \nexample) using MULTIPLY  statements,and you may use the SQRT  built -in intrinsic function to find a square root, \nthere\u2019s just no (easy) way to find the \u00bc root of a value without using COMPUTE . \n2. For non -trivial computations, COMPUTE  statements \u201cread\u201d better.  Take this, for example:  \nCOMPUTE R = (A + B * C) / D  \nAs compared to:  \nMULTIPLY B BY C GIVING TEMP \nADD A TO TEMP \nDIVIDE TEMP BY D GIVING R  \n3. For non -trivial computations, COMPUTE  statements may execute faster than the equivalent chain of basic \narithmetic statements.  For example, the  COMPUTE  statement  shown in # 2 above executes about 25% faster on \nthan d oes the MULTIPLY -ADD -DIVIDE  sequence.  \n4. For trivial computations, on the other hand, I prefer the inherent readability of a statement such as this:  \nADD 1 TO WSS -Input-Trans-QTY \nto this:  \nCOMPUTE WSS -Input-Trans-QTY = WSS -Input-Trans-QTY + 1 \nSee Also\u2026  \nThe ADD  Statement  6.2.2  \nThe COMPUTE  Statement  6.2.9  The MULTIPLY  Statement  6.2.27  \nThe SUBTRACT  Statement  6.2.44  \n ", "start_char_idx": 2251, "end_char_idx": 3510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10224088-99be-437b-b06f-98ee05e0f383": {"__data__": {"id_": "10224088-99be-437b-b06f-98ee05e0f383", "embedding": null, "metadata": {"page_label": "258", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da736100-9fdb-46be-a03c-2b8f1b826bed", "node_type": "4", "metadata": {"page_label": "258", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3cfecdb15500eec8345663ae1a31eb99ee1d218c22b3b62a544a6d3a83e3ac86", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  So, You\u2019re a New COBOL Programmer?  \n \n11FEB2012 Version   9-6 The DIVIDE  Statement  6.2.13  \n \n \n  ", "start_char_idx": 0, "end_char_idx": 135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6174c69e-57b7-404a-bebe-dd8150115a3d": {"__data__": {"id_": "6174c69e-57b7-404a-bebe-dd8150115a3d", "embedding": null, "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8023a183-d887-4091-9928-12adf4e08ab4", "node_type": "4", "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6cb9ad8209d97f34259d988c59fb3d80b6827c5382e710bfc6409622a0ce0614", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "322da2a6-9054-4cfc-ba04-9caba877e4fe", "node_type": "1", "metadata": {}, "hash": "6b4c7ce5d4f536d2e7eff0fa7a5bcb34cc3531118cfe657b47c94f2acc2a0253", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  FileStat -Msgs.cpy \u2013 File Status Values  Sample Programs  \n \n11FEB2012 Version  Page 10-1 10. Sample Program s \nThis chapter contains some sample GNU COBOL  programs , subroutines, functions and copybooks .  All code shown here is  included in release -appropriate form within the \u201c samples \u201d \ndirectory of GNU COBOL  distributions that I prepare.  They are also available upon request using the email address on the cover.  \nAll program listings were created by the GCic  GNU COBOL  Interactive Compiler  (itself a sample program listed in section 10.4 ). \n", "start_char_idx": 0, "end_char_idx": 592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "322da2a6-9054-4cfc-ba04-9caba877e4fe": {"__data__": {"id_": "322da2a6-9054-4cfc-ba04-9caba877e4fe", "embedding": null, "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8023a183-d887-4091-9928-12adf4e08ab4", "node_type": "4", "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6cb9ad8209d97f34259d988c59fb3d80b6827c5382e710bfc6409622a0ce0614", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6174c69e-57b7-404a-bebe-dd8150115a3d", "node_type": "1", "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "613cf602c438b444ba0f417648d58b184193c0d3e96ed90f24d6714d6d050789", "class_name": "RelatedNodeInfo"}}, "text": "10.1.  FileStat -Msgs.cpy \u2013 File Status Values  \nThe FileStat -Msgs.cpy  copybook contains an EVALUATE  statement to translate the two -digit file status codes that may be generated b y file I/O statements.  \nThe copybook assumes that the file status data item name is \u201c STATUS \u201d and the error message data item is named \u201c MSG \u201d.  By using the COPY  statement\u2019s REPLACING  clause, however, \nyou may use the data names you wish, as follows:  \nCOPY FileStat -Msgs \n    REPLACING STATUS BY file-status -data -item -name \n              MSG    BY error -message -data -item -name \nHere\u2019s the FileStat -Msgs.cpy copybook:  \n           EVALUATE STATUS  \n                WHEN 00 MOVE 'SUCCESS                  ' TO MSG    \n                WHEN 02 MOVE 'SUCCESS DUPLICATE        ' TO MSG  \n                WHEN 04 MOVE 'SUCCESS INCOMPLETE       ' TO MSG  \n                WHEN 05 MOVE 'SUCCESS OPTIONAL         ' TO MSG  \n                WHEN 07 MOVE 'SUCCESS NO UNIT          ' TO MSG  \n                WHEN 10 MOVE 'END OF FILE              ' TO MSG  \n                WHEN 14 MOVE 'OUT OF KEY RANGE         ' TO MSG  \n                WHEN 21 MOVE 'KEY INVALID              ' TO MSG  \n                WHEN 22 MOVE 'KEY EXISTS               ' TO MS G  \n                WHEN 23 MOVE 'KEY NOT EXISTS           ' TO MSG  \n                WHEN 30 MOVE 'PERMANENT ERROR          ' TO MSG  \n                WHEN 31 MOVE 'INCONSISTENT FILENAME    ' TO MSG  \n                WHEN 34 MOVE 'BOUNDARY VIOLATION       ' T O MSG  \n                WHEN 35 MOVE 'FILE NOT FOUND           ' TO MSG  \n                WHEN 37 MOVE 'PERMISSION DENIED        ' TO MSG  \n                WHEN 38 MOVE 'CLOSED WITH LOCK         ' TO MSG  \n                WHEN 39 MOVE 'CONFLICT ATTRIBUTE       ' TO MSG  \n                WHEN 41 MOVE 'ALREADY OPEN             ' TO MSG  \n                WHEN 42 MOVE 'NOT OPEN                 ' TO MSG  \n                WHEN 43 MOVE 'READ NOT DONE            ' TO M SG  \n                WHEN 44 MOVE 'RECORD OVERFLOW          ' TO MSG  \n                WHEN 46 MOVE 'READ ERROR               ' TO MSG  \n                WHEN 47 MOVE 'INPUT DENIED             ' TO MSG  \n                WHEN 48 MOVE 'OUTPUT DENIED            ' TO MSG  \n                WHEN 49 MOVE 'I/O DENIED               ' TO MSG  \n                WHEN 51 MOVE 'RECORD LOCKED            ' TO MSG  \n                WHEN 52 MOVE 'END -OF-PAGE              ' TO M SG  \n                WHEN 57 MOVE 'I/O LINAGE               ' TO MSG  \n                WHEN 61 MOVE 'FILE SHARING FAILURE     ' TO MSG  \n                WHEN 91 MOVE 'FILE NOT AVAILABLE       ' TO MSG     \n           END-EVALUATE.  ", "start_char_idx": 592, "end_char_idx": 3255, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f973fb9-6302-4bca-b5e0-aadcfa9fcf34": {"__data__": {"id_": "7f973fb9-6302-4bca-b5e0-aadcfa9fcf34", "embedding": null, "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1914955-a91a-44dc-9874-e2effb407150", "node_type": "4", "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0a8a895bdd2cb9bbbe41399d4e855014888396541d8ef0b84a3afd24483a298", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d0c4180-149e-4372-8178-353af562571d", "node_type": "1", "metadata": {}, "hash": "3479921d39f46ec6d0de710f4a5f872ea30f88502128b8b987f05391b2ff4643", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-2 10.2.  COBDUMP  \u2013 A Hex/ ASCII  Data Dump Subroutine  \nCOBDUMP is a useful little utility subroutine to produce a formatted hexadecimal and character dump of the data area passed t o it.   \nIf you follow the GNU COBOL  forums, you\u2019ve undoubtedly heard about the CBL_OC_DUMP subroutine that wa s the winning entry in a GNU COBOL  programming contest.  It\u2019s a great tool \nfor producing data dumps, and it\u2019s now included in the official GNU COBOL  distributions.  \n", "start_char_idx": 0, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d0c4180-149e-4372-8178-353af562571d": {"__data__": {"id_": "2d0c4180-149e-4372-8178-353af562571d", "embedding": null, "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1914955-a91a-44dc-9874-e2effb407150", "node_type": "4", "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f0a8a895bdd2cb9bbbe41399d4e855014888396541d8ef0b84a3afd24483a298", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f973fb9-6302-4bca-b5e0-aadcfa9fcf34", "node_type": "1", "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b98efcecbc13fbfdb713eb3c3a01907119c1b36db7fa4685583ec86b4d292699", "class_name": "RelatedNodeInfo"}}, "text": "For now though, I\u2019ll keep using my good ol\u2019 \u201cCOBDUMP\u201d routine.  It\u2019s been my travelling comp anion from COBOL job to COBOL job since 1971.  Here it is, all tuned up for GNU COBOL , with \nnew tires and a fresh coat of paint.  \n  ", "start_char_idx": 590, "end_char_idx": 818, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31a4d691-a2fe-4189-ae48-37e82ee78d39": {"__data__": {"id_": "31a4d691-a2fe-4189-ae48-37e82ee78d39", "embedding": null, "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6676dcc9-27e9-4f04-8e1b-9033648361d8", "node_type": "4", "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b0b9a50043a5a721a58ac8011a6bc2d8becb55f5c6521e590c06ca1fc342997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd1252d1-28a3-4741-b5fa-6b4a0e8ac2ff", "node_type": "1", "metadata": {}, "hash": "c43dc06ec6329e419f1f7a8cbe7b8dfcf76dd1cfc0883939641d56731fb0a1cb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-3 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                       E:/GNU-COBOL/sa mples/COBDUMP.cbl  \nLine   Statement                                                                                                                Page: 1 \n====== =============================================================================================== =================================  \n     1        >>SOURCE FORMAT IS FIXED  \n     2        IDENTIFICATION DIVISION.  \n     3        PROGRAM -ID.   COBDUMP.  \n     4       *>***************************************************************  \n     5       *> This is an O penCOBOL subroutine that will generate a        **  \n     6       *> formatted Hex/Char dump of a storage area.  To use this     **  \n     7       *> subroutine, simply CALL it as follows:                      **  \n     8       *>                                                             ** \n     9       *> CALL \"COBDUMP\" USING <data -item>                            **  \n    10       *>                    [ <length> ]                             **  \n    11       *>                                                             ** \n    12       *> If specified, the <length> argument specifies how many      **  \n    13       *> bytes of <data -item> are to be dumped.  If absent, all of   **  \n    14       *> <data -item> will be dumped (i.e. ", "start_char_idx": 0, "end_char_idx": 1664, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd1252d1-28a3-4741-b5fa-6b4a0e8ac2ff": {"__data__": {"id_": "bd1252d1-28a3-4741-b5fa-6b4a0e8ac2ff", "embedding": null, "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6676dcc9-27e9-4f04-8e1b-9033648361d8", "node_type": "4", "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b0b9a50043a5a721a58ac8011a6bc2d8becb55f5c6521e590c06ca1fc342997", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31a4d691-a2fe-4189-ae48-37e82ee78d39", "node_type": "1", "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "aa5481cb1b3ed244c19b4ee7fd11361ebcdd7b663e93cf1fdada5050a245e661", "class_name": "RelatedNodeInfo"}}, "text": "LENGTH(<data -item>) will   **  \n    15       *> be assumed for <length>).                                   **  \n    16       *>                                                             **  \n    17       *> >>> Note that the subroutine name MUST be specified in  <<< **  \n    18       *> >>> UPPER CASE                                           <<< **  \n    19       *>                                                             **  \n    20       *> The dump is generated to STDERR, so you may pipe it to a    **  \n    21       *> file when you execute your p rogram using \"2> file\".         **  \n    22       *>                                                             **  \n    23       *> AUTHOR:       GARY L. CUTLER                                **  \n    24       *>               CutlerGL@gmail.com                            **  \n    25       *>                                                             **  \n    26       *> NOTE:         The author has a sentimental attachment to    **  \n    27       *>               this subroutine - it's been around since 1971 **  \n    28       *>               and it's been converted to and run on 10 dif - ** \n    29       *>               ferent operating system/compiler environments **  \n    30       *>                                                             ** \n    31       *> DATE -WRITTEN: October 14, 1971                              **  \n    32       *>                                                             **  \n    33       *>****************************************** *********************  \n    34       *>  DATE  CHANGE DESCRIPTION                                   **  \n    35       *> ====== ==================================================== **  \n    36       *> GC1071 Initial coding - Univac Dept. of Defense COBOL '68   ** \n    37       *> GC0577 Converted to Univac ASCII COBOL (ACOB) - COBOL '74   **  \n    38       *> GC1182 Converted to Univac UTS4000 COBOL - COBOL '74 w/     **  \n    39       *>        SCREEN SECTION enhancements                          **  \n    40       *> GC0883 Converted to Honeywell/Bull COBOL - COBOL '74        **  \n    41       *> GC0983 Converted to IBM VS COBOL - COBOL '74                **  \n    42       *> GC0887 Converted to IBM VS COBOL II - COBOL '85             **  \n    43       *> GC1294 Converted to  Micro Focus COBOL V3.0 - COBOL '85 w/   **  \n    44       *>        extensions                                           **  \n    45       *> GC0703 Converted to Unisys Universal Compiling System (UCS) **  \n    46       *>        COBOL (UCOB) - COBOL '85                             ** \n    47       *> GC1204 Converted to Unisys Object COBOL (OCOB) - COBOL 2002 **  \n    48       *> GC0609 Converted to OpenCOBOL 1.1 - COBOL '85 w/ some COBOL **  \n    49       *>        2002 features                                        ** ", "start_char_idx": 1664, "end_char_idx": 4532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb237528-9881-42b4-9b9f-6b8d094f84a0": {"__data__": {"id_": "fb237528-9881-42b4-9b9f-6b8d094f84a0", "embedding": null, "metadata": {"page_label": "262", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddd75935-2c98-4714-a331-784795444528", "node_type": "4", "metadata": {"page_label": "262", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "301f72fb8113e8c7b8379381a259092c8c0f718d99ba185415b69cf627ab9a60", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-4     50       *> GC0410 Enhanced to make 2nd argument (buffer length)        **  \n    51       *>        optional                                             **  \n    52       *> GC0211 Ported to IBM Enterprise COBOL                       **  \n    53       *> GC0612 Updated for OpenCOBOL 2.0                            **  \n    54       *>***************************************************************  \n  ", "start_char_idx": 0, "end_char_idx": 535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df3d7b57-451e-4ca1-8d7d-08ce07c3ffef": {"__data__": {"id_": "df3d7b57-451e-4ca1-8d7d-08ce07c3ffef", "embedding": null, "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105", "node_type": "4", "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "847d48215a2b2086adf34d31dd82734ffc7c1fa9eb4b5c398b90813113d6748c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "579730e9-ccc0-47d9-a54c-ccfc8918f9f4", "node_type": "1", "metadata": {}, "hash": "a5e7a5408ec967a14c9d10739af4800ee3f73d907291ae5bb0e6ad12b00b8518", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-5 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary  L. Cutler, GPL              2013/11/21  \n                                                                                                       E:/GNU-COBOL/samples/COBDUMP.cbl  \nLine   Statement                                                                                                                Page: 2 \n====== ====================================================================================================================== ==========  \n    55        ENVIRONMENT DIVISION.  \n    56        CONFIGURATION SECTION.  \n    ", "start_char_idx": 0, "end_char_idx": 762, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "579730e9-ccc0-47d9-a54c-ccfc8918f9f4": {"__data__": {"id_": "579730e9-ccc0-47d9-a54c-ccfc8918f9f4", "embedding": null, "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105", "node_type": "4", "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "847d48215a2b2086adf34d31dd82734ffc7c1fa9eb4b5c398b90813113d6748c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df3d7b57-451e-4ca1-8d7d-08ce07c3ffef", "node_type": "1", "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3b5c5c60d1bda7d49b8c021189e4a8f52c1020c6c28969b64d7d93a12bc6009", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc39c9c2-2682-4b87-a5b5-3e6bedede610", "node_type": "1", "metadata": {}, "hash": "dd8f6e03096eeb7b8e7744a85addb4dd2467d36278c425f5712e05a2f46055dc", "class_name": "RelatedNodeInfo"}}, "text": "57        REPOSITORY.  \n    58            FUNCTION ALL INTRINSIC.  \n    59        DATA DIVISION.  \n    ", "start_char_idx": 762, "end_char_idx": 865, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc39c9c2-2682-4b87-a5b5-3e6bedede610": {"__data__": {"id_": "fc39c9c2-2682-4b87-a5b5-3e6bedede610", "embedding": null, "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105", "node_type": "4", "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "847d48215a2b2086adf34d31dd82734ffc7c1fa9eb4b5c398b90813113d6748c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "579730e9-ccc0-47d9-a54c-ccfc8918f9f4", "node_type": "1", "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f69cbb92182d297ce1170c789f3292dc469c6e0dfcae44ffdfb525bd10ee2eac", "class_name": "RelatedNodeInfo"}}, "text": "60        WORKING -STORAGE SECTION.  \n    61        01  WS -Addr-PTR                           USAGE POINTER.  \n    62        01  WS -Addr-NUM REDEFINES WS-Addr-PTR \n    63                                                  USAGE BINARY -LONG. \n    64 \n    65        01  WS -Addr-SUB                           USAGE BINARY -CHAR. \n    66 \n    67        01  WS -Addr-Value-NUM                     USAGE BINARY -LONG. \n    68 \n    69        01  WS -Buffer-Byte-CHR. \n    70            05 WS -Buffer-Byte-NUM                 USAGE BINARY -CHAR. \n    71 \n    72        01  WS -Buffer-Length-NUM                  USAGE BINARY -LONG. \n    73 \n    74        01  WS -Buffer-SUB                         PIC 9(4) COMP -5. \n    75 \n    76        01  WS -Hex-Digit-TXT VALUE '0123456789ABCDEF'.  \n    77            05 WS -Hex-Digit-CHR                   OCCURS 16 TIMES  \n    78                                                  PIC X(1).  \n    79 \n    80        01  WS -Nibble-SUB                         PIC 9(1) COMP -5. \n    81 \n    82        01  WS -Nibble-Left-SUB                    PIC 9(1) COMP -5. \n    83 \n    84        01  WS -Nibble-Right-SUB                   PIC 9(1) COMP -5. \n    85 \n    86        01   WS-Output-Detail-TXT. \n    87            05 WS -OD-Addr-TXT. \n    88               10 WS -OD-Addr-Hex-CHR              OCCURS 8 TIMES PIC X.  \n    89            05 FILLER                             PIC X(1).  \n    90            05 WS -OD-Relative -Byte-NUM            PIC Z(3)9.  \n    91            05 FILLER                             PIC X(1).  \n    92            05 WS -OD-Hex-TXT                      OCCURS 16 TIMES.  \n    93               10 WS -OD-Hex-1-CHR                 PIC X.  \n    94               10 WS -OD-Hex-2-CHR                 PIC X.  \n    95               10 FILLER                          PIC X.  \n    96            05 WS -OD-ASCII-Data-TXT. \n    97               10 WS -OD-ASCII-CHR                 OCCURS 16 TIMES  \n    98                                                  PIC X. \n    99 \n   100        01  WS -Output-SUB                         PIC 9(2) COMP -5. \n   101 \n   102        >>SOURCE FORMAT IS FREE  \n   103        01  WS -Output-Header-1-TXT. ", "start_char_idx": 865, "end_char_idx": 3052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5b1a543-a0e3-4a42-942a-553eadbfeaaa": {"__data__": {"id_": "b5b1a543-a0e3-4a42-942a-553eadbfeaaa", "embedding": null, "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aef600eb-1256-4c0e-94e6-c7f3be035e55", "node_type": "4", "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fc3f5517eab6dd78a2f4746bfbfaf5b7833185d2b34cc9b7f9f1ecd33571d5dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2669b64-b05a-4e6e-aa56-f67e2e3a19d2", "node_type": "1", "metadata": {}, "hash": "ea67e5d1761431c0c7b9bb44cc1aec755d594658bbcc23444c5fb24a88deee8a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-6    104            05 VALUE '< -Addr-> Byte < ----------------  Hexadecimal '' ---------------- > <---- Char ---->' PIC X(80).  \n   105 \n   106        01  WS -Output-Header-2-TXT. \n   ", "start_char_idx": 0, "end_char_idx": 311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2669b64-b05a-4e6e-aa56-f67e2e3a19d2": {"__data__": {"id_": "d2669b64-b05a-4e6e-aa56-f67e2e3a19d2", "embedding": null, "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aef600eb-1256-4c0e-94e6-c7f3be035e55", "node_type": "4", "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fc3f5517eab6dd78a2f4746bfbfaf5b7833185d2b34cc9b7f9f1ecd33571d5dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5b1a543-a0e3-4a42-942a-553eadbfeaaa", "node_type": "1", "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ca228066818a80e3930a68cb76f9c1f94759b3fbfcb28962284e06afca31c8bf", "class_name": "RelatedNodeInfo"}}, "text": "107            05 VALUE '======== ==== =============================================== ================' PIC X(80).  \n   108        >>SOURCE FORMAT IS FIXED  \n  ", "start_char_idx": 311, "end_char_idx": 472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d9f3e71-4984-4add-9aa7-76c5b818bef7": {"__data__": {"id_": "4d9f3e71-4984-4add-9aa7-76c5b818bef7", "embedding": null, "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d07d8a2-3d96-4bf9-be8a-a02cdf4c15ea", "node_type": "4", "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "384fe3a511d542e0630740c64b54bdb44c1c3ac4e5cb4238a0a79493b7a79bf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71ac52ac-31cb-414b-b073-d6095c994e2a", "node_type": "1", "metadata": {}, "hash": "dc4095fb9ce61d2f9c3d5c28608e520a5cf058901e92ec17dc9585feb0c2eebc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-7 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                       E:/GNU-COBOL/samp les/COBDUMP.cbl  \nLine   Statement                                                                                                                Page: 3 \n====== ================================================================================================= ===============================  \n   109 \n   110        LINKAGE SECTION.  \n   111        01  L -Buffer-TXT                          PIC X ANY LENGTH.  \n   ", "start_char_idx": 0, "end_char_idx": 802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71ac52ac-31cb-414b-b073-d6095c994e2a": {"__data__": {"id_": "71ac52ac-31cb-414b-b073-d6095c994e2a", "embedding": null, "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d07d8a2-3d96-4bf9-be8a-a02cdf4c15ea", "node_type": "4", "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "384fe3a511d542e0630740c64b54bdb44c1c3ac4e5cb4238a0a79493b7a79bf4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d9f3e71-4984-4add-9aa7-76c5b818bef7", "node_type": "1", "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2fbf401a182497b64307cfac52129a8a61eff07b36d1b96259fd698c50287575", "class_name": "RelatedNodeInfo"}}, "text": "112 \n   113        01  L -Buffer-Length-NUM                   USAGE BINARY -LONG. \n   114 \n   115        PROCEDURE  DIVISION USING L -Buffer-TXT, \n   116                                 OPTIONAL L -Buffer-Length-NUM. \n   117        000 -Main SECTION.  \n   118            IF NUMBER -OF-CALL-PARAMETERS = 1  \n   119                MOVE LENGTH(L -Buffer-TXT) TO WS -Buffer-Length-NUM \n   120            ELSE  \n   121                MOVE L -Buffer-Length-NUM  TO WS -Buffer-Length-NUM \n   122            END -IF \n   123            MOVE SPACES TO WS -Output-Detail-TXT \n   124            SET WS -Addr-PTR TO ADDRESS OF L -Buffer-TXT \n   125            PERFO RM 100-Generate -Address \n   126            MOVE 0 TO WS -Output-SUB \n   127            DISPLAY WS -Output-Header-1-TXT UPON SYSERR  \n   128            DISPLAY WS -Output-Header-2-TXT UPON SYSERR  \n   129            PERFORM VARYING WS -Buffer-SUB FROM 1 BY 1  \n   130                      UNTIL WS -Buffer-SUB > WS -Buffer-Length-NUM \n   131                ADD 1 TO WS -Output-SUB \n   132                IF WS -Output-SUB = 1 \n   133                    MOVE WS -Buffer-SUB TO WS -OD-Relative -Byte-NUM \n   134                END -IF \n   135                MOVE L -Buffer-TXT (WS-Buffer-SUB : 1)  \n   136                  TO WS -OD-ASCII-CHR (WS-Output-SUB) \n   137                     WS -Buffer-Byte-CHR \n   138                DIVIDE WS -Buffer-Byte-NUM BY 16  \n   139                    GIVING WS-Nibble-Left-SUB \n   140                    REMAINDER WS -Nibble-Right-SUB \n   141                ADD 1 TO WS -Nibble-Left-SUB \n   142                         WS -Nibble-Right-SUB \n   143                MOVE WS -Hex-Digit-CHR (WS-Nibble-Left-SUB) \n   144                  TO WS-OD-Hex-1-CHR  (WS -Output-SUB) \n   145                MOVE WS -Hex-Digit-CHR (WS-Nibble-Right-SUB) \n   146                  TO WS -OD-Hex-2-CHR  (WS -Output-SUB) \n   147                IF WS -Output-SUB = 16  \n   148                    CALL \"C$PRINTAB LE\" USING WS -OD-ASCII-Data-TXT \n   149                    DISPLAY WS -Output-Detail-TXT UPON SYSERR  \n   150                    MOVE SPACES TO WS -Output-Detail-TXT \n   151                    MOVE 0 TO WS -Output-SUB \n   152                    SET WS -Addr-PTR UP B Y 16 \n   153                    PERFORM 100 -Generate -Address \n   154                END -IF \n   155            END -PERFORM \n   156            IF WS -Output-SUB > 0 \n   157                CALL \"C$PRINTABLE\" USING WS -OD-ASCII-Data-TXT ", "start_char_idx": 802, "end_char_idx": 3287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29ab8f4e-01a4-494a-912e-bbc2bde22737": {"__data__": {"id_": "29ab8f4e-01a4-494a-912e-bbc2bde22737", "embedding": null, "metadata": {"page_label": "266", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b14c1699-57b2-4eb2-9d0c-7185b411ca83", "node_type": "4", "metadata": {"page_label": "266", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "35469c5ea35b41723798a888b4aa11bab7deae66001cd04a6ce31a5d6433c088", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-8    158                DISPLAY WS-Output-Detail-TXT UPON SYSERR  \n   159            END -IF \n   160            EXIT PROGRAM  \n   161            .  \n   162        100 -Generate -Address SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cc7f7d2-bf22-444f-8b68-687c28d02e12": {"__data__": {"id_": "3cc7f7d2-bf22-444f-8b68-687c28d02e12", "embedding": null, "metadata": {"page_label": "267", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b0c7f1e-6eab-4af2-a200-9e3ceafb7e0a", "node_type": "4", "metadata": {"page_label": "267", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bea31e179f6ec876e891e1dbe0550a07538a848b0ed676b2a4f0d2b6c7458155", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-9 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                       E:/GNU-COBOL/samp les/COBDUMP.cbl  \nLine   Statement                                                                                                                Page: 4 \n====== ================================================================================================= ===============================  \n   163            MOVE 8 TO WS -Addr-SUB \n   164            MOVE WS -Addr-NUM TO WS -Addr-Value-NUM \n   165            MOVE ALL '0' TO WS -OD-Addr-TXT \n   166            PERFORM WITH TEST BEFORE UNTIL WS -Addr-Value-NUM = 0 \n   167                DIVIDE WS -Addr-Value-NUM BY 16  \n   168                    GIVING WS -Addr-Value-NUM \n   169                    REMAINDER WS -Nibble-SUB \n   170                ADD 1 TO WS -Nibble-SUB \n   171                MOVE WS -Hex-Digit-CHR (WS-Nibble-SUB) \n   172                  TO WS -OD-Addr-Hex-CHR (WS-Addr-SUB) \n   173                SUBTRACT 1 FROM WS -Addr-SUB \n   174            END -PERFORM \n   175            .  \n  ", "start_char_idx": 0, "end_char_idx": 1346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d1926ed-857b-4c1c-ab5b-89a5ff328108": {"__data__": {"id_": "1d1926ed-857b-4c1c-ab5b-89a5ff328108", "embedding": null, "metadata": {"page_label": "268", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1eb475b-07b3-4926-8c49-ece7cc00555b", "node_type": "4", "metadata": {"page_label": "268", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bd600af5af8cad9e0c97cca4c09a680beaba6b6c56f4c0e0c4272b6c78b9ac9a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COB OL 2.0 Programmers Guide  COBDUMP  \u2013 A Hex/ASCII Data Dump Subroutine  Sample Programs  \n \n11FEB2012 Version  Page 10-10 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                       E:/GNU-COBOL/samples/COBDUMP.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                                Page: 5  \n=============== ================================ ====== =============== ===================================================== ==========  \nCOBDUMP         000 -Main                            117 PROCEDURE  \nCOBDUMP         100 -Generate -Address                162 PROCEDURE          125     153  \nCOBDUMP         L -Buffer-Length-NUM                 113 LINKAGE            116     121  \nCOBDUMP         L -Buffer-TXT                        111 LINKAGE            115     119     124     135  \nCOBDUMP         LENGTH                                  PROCEDURE          119  \nCOBDUMP         NUMBER -OF-CALL-PARAMETERS               PROCEDURE          118 \nCOBDUMP         WS -Addr-NUM                          62 WORKING -STORAGE    164  \nCOBDUMP         WS -Addr-PTR                          61 WORKING -STORAGE     62     124*    152*  \nCOBDUMP         WS -Addr-SUB                          65 WORKING -STORAGE    1 63*    172     173  \nCOBDUMP         WS -Addr-Value-NUM                    67 WORKING -STORAGE    164*    166     167     168*  \nCOBDUMP         WS -Buffer-Byte-CHR                   69 WORKING -STORAGE    137  \nCOBDUMP         WS -Buffer-Byte-NUM                   7 0 WORKING -STORAGE    138  \nCOBDUMP         WS -Buffer-Length-NUM                 72 WORKING -STORAGE    119*    121*    130  \nCOBDUMP         WS -Buffer-SUB                        74 WORKING -STORAGE    129*    130     133     135  \nCOBDUMP         WS -Hex-Digit-CHR                     77 WORKING -STORAGE    143     145     171  \nCOBDUMP         WS -Hex-Digit-TXT                     76 WORKING -STORAGE \nCOBDUMP         WS -Nibble-Left-SUB                   82 WORKING -STORAGE    139*    141*    143  \nCOBDUMP         WS -Nibble-Right-SUB                  84 WORKING -STORAGE    140*    142*    145  \nCOBDUMP         WS -Nibble-SUB                        80 WORKING -STORAGE    169*    170*    171  \nCOBDUMP         WS -OD-Addr-Hex-CHR                   88 WORKING -STORAGE    172*  \nCOBDUMP         WS-OD-Addr-TXT                       87 WORKING -STORAGE    165*  \nCOBDUMP         WS -OD-ASCII-CHR                      97 WORKING -STORAGE    136*  \nCOBDUMP         WS -OD-ASCII-Data-TXT                 96 WORKING -STORAGE    148*    157*  \nCOBDUMP         WS -OD-Hex-1-CHR                      93 WORKING -STORAGE    144*  \nCOBDUMP         WS -OD-Hex-2-CHR                      94 WORKING -STORAGE    146*  \nCOBDUMP         WS -OD-Hex-TXT                        92 WORKING -STORAGE \nCOBDUMP         WS -OD-Relative -Byte-NUM              90 WORKING -STORAGE    133*  \nCOBDUMP         WS -Output-Detail-TXT                 86 WORKING -STORAGE    123*    149     150*    158  \nCOBDUMP         WS -Output-Header-1-TXT              103 WORKING -STORAGE    127  \nCOBDUMP         WS -Output-Header-2-TXT              106 WORKING -STORAGE    128  \nCOBDUMP         WS -Output-SUB                       100 WORKING -STORAGE    126*    131*    132     136     144     146     147     151*  \n                                                                           156 \n ", "start_char_idx": 0, "end_char_idx": 3601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dea62079-e8b6-4895-af82-9306a64655e9": {"__data__": {"id_": "dea62079-e8b6-4895-af82-9306a64655e9", "embedding": null, "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66fcd770-d101-4d2e-b312-1aec2ee836de", "node_type": "4", "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2811595569abcb0e3e8ce53e551ee52e6794dd6a84e90e81a9b544497444921a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "433b3516-7a57-41d0-8490-51b4abe1b6e1", "node_type": "1", "metadata": {}, "hash": "60208c58ddc4122bcb50dd77914bdf2bd49e40a8dd59b5f58e6a27c3e4d7b715", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DAY -FROM -DATE  \u2013 A Function to Determine Day of Week From a Date  Sample Programs  \n \n11FEB2012 Version  Page 10-11 10.3.  DAY -FROM -DATE  \u2013 A Function to Determine Day of Week From a Date  \nDAY-FROM -DATE  is a user -defined function that accepts a single argument \u2013 either a 7 -digit Julian date in the form \u201cyyyyddd\u201d or an 8 -digit Gregorian date in the form \u201cyyyymmdd\u201d.  This \nargument may be supplied either as a PIC 9(n) USAGE DISPLAY data item ( n=7 or 8) or as a 7 - or 8-digit numeric literal.   \n", "start_char_idx": 0, "end_char_idx": 543, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "433b3516-7a57-41d0-8490-51b4abe1b6e1": {"__data__": {"id_": "433b3516-7a57-41d0-8490-51b4abe1b6e1", "embedding": null, "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66fcd770-d101-4d2e-b312-1aec2ee836de", "node_type": "4", "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2811595569abcb0e3e8ce53e551ee52e6794dd6a84e90e81a9b544497444921a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dea62079-e8b6-4895-af82-9306a64655e9", "node_type": "1", "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "504073aa3fb08d951f08c773a7337fb36260df4fdf46b625d5baf9bca6f8ebb9", "class_name": "RelatedNodeInfo"}}, "text": "The subroutine will determine if the supplied date is a valid date in the year range 0000 thru 9999 and what day of the week that date fell on.  \nThe value returned will be zero if the date argument was inva lid or an integer in the range 1 -7, representing Sunday thru Saturday.  \n  ", "start_char_idx": 543, "end_char_idx": 827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ca34d85-bf48-4abd-ad1e-751f1f723d71": {"__data__": {"id_": "3ca34d85-bf48-4abd-ad1e-751f1f723d71", "embedding": null, "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45f56240-ba48-4c7f-803b-5f9717abe94d", "node_type": "4", "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "030f2c2dd09d5cc3f6fd5c1086fc7cab5653e6af930c6004403d85bdfdef0cab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc6e0634-d25b-435b-93a9-f9d46eef567d", "node_type": "1", "metadata": {}, "hash": "efda2cab618adf2307d4029cd7968ccdd587ae825afeb0f696a53f5c548a8700", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DAY -FROM -DATE  \u2013 A Function to Determine Day of Week From a Date  Sample Programs  \n \n11FEB2012 Version  Page 10-12 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                 E:/GNU-COBOL/samples/ DAY-FROM-DATE.cbl  \nLine   Statement                                                                                                                Page: 1 \n====== =============================================================================================== =================================  \n     1        >>SOURCE FORMAT IS FIXED  \n     2        IDENTIFICATION DIVISION.  \n     3        FUNCTION -ID. DAY-FROM-DATE. \n     4       *>****************************************************************  \n     5       *> This G NU COBOL user -defined function converts a Gregorian or **  \n     6       *> Julian date into a numeric day of the week.                  **  \n     7       *>****************************************************************  \n     8       *> Arguments:                                                   ** \n     9       *>                                                              **  \n    10       *> Calendar -Date    A PIC 9 data item or numeric literal which  **  \n    11       *>                  will be treated as a calendar date as fol -  ** \n    12       *>                  lows:                                       **  \n    13       *>                                                              **  \n    14       *>                  7 -digit value: Interpreted as a Julia n date **  \n    15       *>                                 in the form yyyyddd          **  \n    16       *>                  8 -digit value: Interpreted as a Gregorian   **  \n    17       *>                                 date in the form yyyymmdd    **  \n    18       *>                                                              **  \n    19       *> The result returned will be one of the following:            **  \n    20       *>                                                              **  \n    21       *> 0:  Th e supplied date is invalid                             **  \n    22       *> 1:  The supplied date is a Sunday                            **  \n    23       *> 2:  The supplied date is a Monday                            **  \n    24       *> .                                                            **  \n    25       *> .                                                            ", "start_char_idx": 0, "end_char_idx": 2636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc6e0634-d25b-435b-93a9-f9d46eef567d": {"__data__": {"id_": "dc6e0634-d25b-435b-93a9-f9d46eef567d", "embedding": null, "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45f56240-ba48-4c7f-803b-5f9717abe94d", "node_type": "4", "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "030f2c2dd09d5cc3f6fd5c1086fc7cab5653e6af930c6004403d85bdfdef0cab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ca34d85-bf48-4abd-ad1e-751f1f723d71", "node_type": "1", "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "501b911fca7c3641e2272c405578e46da692a43a1aee7edfffe6eb9a7f986892", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1509f7ba-ef54-4202-959c-ad7459df5890", "node_type": "1", "metadata": {}, "hash": "36c45b44ce8e496bc02974b752f8e7c5bc7f3b01301352d5b9a0c35dbb37bd0f", "class_name": "RelatedNodeInfo"}}, "text": "**  \n    26       *> .                                                            **  \n    27       *> 7:  The supplied date is a Saturday                          **  \n    28       *>****************************************************************  \n    29        ENVIRONMENT DIVISION.  \n    30        CONFIGURATION SECTION.  \n    ", "start_char_idx": 2636, "end_char_idx": 2968, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1509f7ba-ef54-4202-959c-ad7459df5890": {"__data__": {"id_": "1509f7ba-ef54-4202-959c-ad7459df5890", "embedding": null, "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45f56240-ba48-4c7f-803b-5f9717abe94d", "node_type": "4", "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "030f2c2dd09d5cc3f6fd5c1086fc7cab5653e6af930c6004403d85bdfdef0cab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc6e0634-d25b-435b-93a9-f9d46eef567d", "node_type": "1", "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "db293708a9c80f3a6e60934c05e3b3eb16fb1a13e37309a96c2ab4d89da27bec", "class_name": "RelatedNodeInfo"}}, "text": "31        REPOSITORY.  \n    32            FUNCTION ALL INTRINSIC.  \n    33        DATA DIVISION.  \n    34        WORKING -STORAGE SECTION.  \n    35        01  WS -Input-Date-DT. \n    36            05 WS -ID-YYYY-NUM                     PIC 9(4).  \n    37            05 WS -ID-MM-NUM                       P IC 9(2).  \n    38            05 WS -ID-DD-NUM                       PIC 9(2).  \n    39        01  WS -Y-NUM                              BINARY -LONG. \n    40        01  WS -M-NUM                              BINARY -LONG. \n    41        01  WS -Temp-NUM                           BINARY-LONG. \n    42        LINKAGE SECTION.  \n    43        01  L -Input-Date-DT                       PIC 9 ANY LENGTH.  \n    44        01  L -Output-Day-NUM                      USAGE BINARY -LONG \n    45                                                  SIGNED. \n    46        PROCEDURE DIVISION USING L -Input-Date-DT \n    47                       RETURNING L -Output-Day-NUM. \n    48        000 -Main SECTION.  \n    49            CALL \"C$PARAMSIZE\" USING 1  \n    50            EVALUATE RETURN -CODE \n    51            WHEN 7 \n    52                IF TEST -DAY-YYYYDDD(L -Input-Date-DT) > 0 \n    53                    MOVE 0 TO L -Output-Day-NUM \n    54                    GOBACK  \n  ", "start_char_idx": 2968, "end_char_idx": 4245, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2bd6c62-6be6-44d4-9462-f05a1e62d4a0": {"__data__": {"id_": "e2bd6c62-6be6-44d4-9462-f05a1e62d4a0", "embedding": null, "metadata": {"page_label": "271", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19e693b9-e980-46f2-8b4a-b6236781cca0", "node_type": "4", "metadata": {"page_label": "271", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4672bbdf078db1540c6fff3d0d74ff256decbcd1d929eb23dba2be6a91e9539d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DAY -FROM -DATE  \u2013 A Function to Determine Day of Week From a Date  Sample Programs  \n \n11FEB2012 Version  Page 10-13 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                 E:/GNU-COBOL/samples/DA Y-FROM-DATE.cbl  \nLine   Statement                                                                                                                Page: 2 \n====== ================================================================================================= ===============================  \n    55                END -IF \n    56                MOVE DATE -OF-INTEGER(INTEGER -OF-DAY(L-Input-Date-DT)) \n    57                  TO WS -Input-Date-DT \n    58            WHEN 8  \n    59                IF TEST -DATE-YYYYMMDD(L -Input-Date-DT) > 0 \n    60                    MOVE 0 TO L -Output-Day-NUM \n    61                    GOBACK  \n    62                END -IF \n    63                MOVE L -Input-Date-DT TO WS -Input-Date-DT \n    64            WHEN OTHER  \n    65                MOVE 0 TO L -Output-Day-NUM \n    66                GOBACK  \n    67            END -EVALUATE  \n    68       *> IF january OR february  \n    69       *>     y = year - 1 \n    70       *>     m = month + 10  \n    71       *> ELSE  \n    72       *>     y = year  \n    73       *>     m = month - 2 \n    74       *> END -IF \n    75       *> For Gregorian calendar:  \n    76       *>     result = (day + y + y/4 - y/100 + y/400 + (31*m)/12) mod 7  \n    77       *> (All divisions are integer divisions, discarding any remainder)  \n    78            IF WS -ID-MM-NUM = 1 OR 2  \n    79                SUBTRACT 1 FROM WS -ID-YYYY-NUM GIVING WS -Y-NUM \n    80                ADD WS -ID-MM-NUM, 10 GIVING WS -M-NUM \n    81            ELSE  \n    82                MOVE WS -ID-YYYY-NUM TO WS -Y-NUM \n    83                SUBTRACT 2 FROM WS -ID-MM-NUM GIVING WS -M-NUM \n    84            END -IF \n    85            COMPUTE L -Output-Day-NUM = \n    86                WS -ID-DD-NUM \n    87              + WS -Y-NUM \n    88              + INTEGER(WS -Y-NUM/4) \n    89              - INTEGER(WS -Y-NUM/100)  \n    90              + INTEGER(WS -Y-NUM/400)  \n    91              + INTEGER((31*WS -M-NUM)/12)  \n    92            DIVIDE L -Output-Day-NUM BY 7  \n    93                GIVING WS -Temp-NUM \n    94                REMAINDER L -Output-Day-NUM \n    95            ADD 1 TO L -Output-Day-NUM \n    96            GOBACK  \n    97            .  \n    98 \n  ", "start_char_idx": 0, "end_char_idx": 2635, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61c70631-9805-46df-bb5d-220a5299a5fd": {"__data__": {"id_": "61c70631-9805-46df-bb5d-220a5299a5fd", "embedding": null, "metadata": {"page_label": "272", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed88d090-b902-4b15-8a71-079595926904", "node_type": "4", "metadata": {"page_label": "272", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7e790e9d5f93bc26b0ce003c848eef7c9b81e8922b81d6c2fca15241ab138008", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  DAY -FROM -DATE  \u2013 A Function to Determine Day of Week From a Date  Sample Programs  \n \n11FEB2012 Version  Page 10-14 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                 E:/GNU-COBOL/samples/DAY -FROM-DATE.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                                Page:  3 \n======== ======= ================================ ====== =============== ============================================================= == \nDAY-FROM-DATE   000 -Main                             48 PROCEDURE  \nDAY-FROM-DATE   DATE -OF-INTEGER                         PROCED URE           56  \nDAY-FROM-DATE   INTEGER                                 PROCEDURE           88      89      90      91  \nDAY-FROM-DATE   INTEGER -OF-DAY                          PROCEDURE           56  \nDAY-FROM-DATE   L -Input-Date-DT                      43 LINKAGE             46      52      56      59      63  \nDAY-FROM-DATE   L -Output-Day-NUM                     44 LINKAGE             47      53*     60*     65*     85*     92      94*     95*  \nDAY-FROM-DATE   RETURN -CODE                             PROCEDURE           50  \nDAY-FROM-DATE   TEST -DATE-YYYYMMDD                      PROCEDURE           59  \nDAY-FROM-DATE   TEST -DAY-YYYYDDD                        PROCEDURE           52  \nDAY-FROM-DATE   WS -ID-DD-NUM                         38 WORKING -STORAGE     86  \nDAY-FROM-DATE   WS -ID-MM-NUM                         37 WORKING -STORAGE     78      80      83  \nDAY-FROM-DATE   WS -ID-YYYY-NUM                       36 WORKING -STORAGE     79      82  \nDAY-FROM-DATE   WS -Input-Date-DT                     35 WORKING -STORAGE     57*     63*  \nDAY-FROM-DATE   WS -M-NUM                             40 WORKING -STORAGE     80*     83*     91  \nDAY-FROM-DATE   WS -Temp-NUM                          41 WORKING -STORAGE     93*  \nDAY-FROM-DATE   WS-Y-NUM                             39 WORKING -STORAGE     79*     82*     87      88      89      90  \n ", "start_char_idx": 0, "end_char_idx": 2216, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bf1f1f7-ce66-40b5-8f3b-aaaa776e4235": {"__data__": {"id_": "7bf1f1f7-ce66-40b5-8f3b-aaaa776e4235", "embedding": null, "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d412c94-af78-4309-950f-9e4a543757a3", "node_type": "4", "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3048824c2a545a5843af856cc8e46b4173d263287d15f9644387f580c0e68a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dde7482c-f3b5-4469-8d5f-7f625e72bca4", "node_type": "1", "metadata": {}, "hash": "0da74b4dd1f3986284fbf8a8dd4e687311346321b20ab9a3e6fee84431ca4f18", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-15 10.4.  GCic  \u2013 an Interactive GNU COBOL  Full -Screen Compiler Front -End  \nThis is MUCH more than a mere demonstration program \u2013 it\u2019s also a very practical utility!  The \u201c GCic \u201d (GNU COBOL  Interactive Compiler) is a TUI (Textual User Interf ace) program that may \nbe used as a full -screen interface to the \u201ccobc\u201d compiler.  In addition, GCic  can produce neat, concise and useful cross -reference listings of GNU COBOL  programs, showing not only where \nuser -defined names and built -in registers and in itinsic functions are referenced, but also where user -defined data items ARE MODIFIED by program code!  The program is well documented \n(IMHO) and you should find it fairly easy to follow.  The GCic .cbl program was written to work with a native Windows or W indows/MinGW build of GNU COBOL  as well as a \nWindows/Cygwin, UNIX or OS X build.  \nSource listings generated by GCic  will show the original source code of your programs, with all indentation and comments preserved.  ", "start_char_idx": 0, "end_char_idx": 1138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dde7482c-f3b5-4469-8d5f-7f625e72bca4": {"__data__": {"id_": "dde7482c-f3b5-4469-8d5f-7f625e72bca4", "embedding": null, "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d412c94-af78-4309-950f-9e4a543757a3", "node_type": "4", "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3048824c2a545a5843af856cc8e46b4173d263287d15f9644387f580c0e68a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bf1f1f7-ce66-40b5-8f3b-aaaa776e4235", "node_type": "1", "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ed3d616c49e9f5e63f29097ff3aeeee17288eaa9f2b809d50b3b2cdbfb63974c", "class_name": "RelatedNodeInfo"}}, "text": "Additionally, any COPYed c ode will be incl uded in the \nlisting immediately (in compressed form) following the COPY statement that triggered its inclusion into your program.  \nCross -reference listings will show all user -defined data items and procedures as well as intrinsic function and special regist er references.  In addition to showing the line numbers at which \nitems were defined and referenced, those references that MODIFY the contents of the data item will have an asterisk appended to them.  \n  ", "start_char_idx": 1138, "end_char_idx": 1648, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1547db17-ff94-466b-aefb-e13df80ae7f2": {"__data__": {"id_": "1547db17-ff94-466b-aefb-e13df80ae7f2", "embedding": null, "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca1b43f1-ba74-480b-9a2b-88a4b23e6cee", "node_type": "4", "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dee2d3c8686bb788f89a8f27a619ba6e393ae57ad1a9fb58bec762bc7a9b8ebe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14437b94-05ea-48db-9c10-d3c8499a443d", "node_type": "1", "metadata": {}, "hash": "4e8b95082890855abcb9709dbc4dffe78d53b3b7d932a530963d6d8f1a860764", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-16 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 1 \n====== ====================================================================================================================== ==========  \n     1       >>SOURCE FORMAT IS FIXED  \n     2       *> CONFIGURATION SETTINGS: Set these switches before compiling:  \n     3       *>  \n     4       *> LINEDRAW Set to:  \n     5       *>    0   To use spaces (no lines)  \n     6       *>    1   To use the line -drawing characterset (PC codepage 437)  \n     7       *>    2   To use conventional ASCII characters (+, -, |) \n     8       *>  \n     9       *>          OSX USERS - To use the linedrawing characterset,  \n    10       *>                      set your 'terminal' font to 'Lucida Console'  \n    11       *>  \n    12       *> OS       Set to one of the following:  \n    13       * >          'CYGWIN'   For a Windows/Cygwin version  \n    14       *>          'MINGW'    For a Windows/MinGW version  \n    15       *>          'OSX'      For a Macintosh OSX version  \n    16       *>          'UNIX'     For a Unix/Linux version  \n    17       *>          'WINDOWS'  For a Native Windows version  \n    18       *>  \n    19       *> SELCHAR  Set to the desired single character to be used as the red  \n    20       *>          'feature selected' character on the screen.  \n    21       *>          SUGGESTIONS: ' >', '*', '=', '+'  \n    22       *>  \n    23 GC0712 >>DEFINE CONSTANT LINEDRAW   AS 1  \n    24 GC0712 >>DEFINE CONSTANT OS         AS 'MINGW'  \n    25 GC0712 >>DEFINE CONSTANT SELCHAR    AS '>'  \n    26       *> --------------------------------------------------------------  \n    27       *> Now set these switches to establish initial (default) settings  \n    28       *> for the various on -screen options.  ", "start_char_idx": 0, "end_char_idx": 2283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14437b94-05ea-48db-9c10-d3c8499a443d": {"__data__": {"id_": "14437b94-05ea-48db-9c10-d3c8499a443d", "embedding": null, "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca1b43f1-ba74-480b-9a2b-88a4b23e6cee", "node_type": "4", "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dee2d3c8686bb788f89a8f27a619ba6e393ae57ad1a9fb58bec762bc7a9b8ebe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1547db17-ff94-466b-aefb-e13df80ae7f2", "node_type": "1", "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8e8a652070e10f4166e36bb84d92acb67689005ceabc2e82de8796278639ace3", "class_name": "RelatedNodeInfo"}}, "text": "Set them to a value of  \n    29       *> 0 if th ey are to be 'OFF' and 1 if they are to be 'ON'  \n    30       *>  \n    31 GC0712 >>DEFINE CONSTANT F1  AS 0 *> Assume WITH DEBUGGING MODE  \n    32 GC0712 >>DEFINE CONSTANT F2  AS 0 *> Procedure+Statement Trace  \n    33 GC0712 >>DEFINE CONSTANT F3  AS 0 *> Make A Library (DLL)  \n    34 GC0712 >>DEFINE CONSTANT F4  AS 0 *> Execute If Compilation OK  \n    35 GC0712 >>DEFINE CONSTANT F5  AS 0 *> Generate Listings  \n    36 GC0712 >>DEFINE CONSTANT F6  AS 1 *> \"FUNCTION\" Is Optional  \n    37 GC0712 >>DEFINE CONSTANT F7  AS 1 *>  Enable All Warnings  \n    38 GC0712 >>DEFINE CONSTANT F8  AS 0 *> Source Is Free -Format \n    39 GC0712 >>DEFINE CONSTANT F9  AS 1 *> No COMP/BINARY Truncation  \n    40 GC0712 >>DEFINE CONSTANT F12 AS 4 *> Default config file (1 -7): \n    41       *>                             1 = BS2000  \n    42       *>                             2 = COBOL85  \n    43       *>                             3 = COBOL2002  \n    44       *>                             4 = DEFAULT  \n    45       *>                             5 = IBM  \n    46       *>                             6 = MF (i.e. Microfocus)  \n    47       *>                             7 = MVS  \n    48       *> --------------------------------------------------------------  \n    49       *> END CONFIGURATION SETTINGS  \n  ", "start_char_idx": 2283, "end_char_idx": 3637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5d922c8-557c-4872-bdcf-9475a7f9b90e": {"__data__": {"id_": "d5d922c8-557c-4872-bdcf-9475a7f9b90e", "embedding": null, "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff30aa8c-bf0d-45ad-be65-00ff1fb7e94c", "node_type": "4", "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "092f5ef8427fa45dec8675b86c8aaa16d9983a84a3130cf568c5f35958da9296", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24c50c0c-f0b3-430b-8a30-0023ff0c28ce", "node_type": "1", "metadata": {}, "hash": "97529302b10df4000f805066a786de9ac298ca6679d25dd16d33fff1f07966ee", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-17 GNU COBOL V2.0 11F EB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 2 \n====== =================================================================================================================== =============  \n    50       /  \n    51        IDENTIFICATION DIVISION.  \n    52        PROGRAM -ID. ", "start_char_idx": 0, "end_char_idx": 788, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24c50c0c-f0b3-430b-8a30-0023ff0c28ce": {"__data__": {"id_": "24c50c0c-f0b3-430b-8a30-0023ff0c28ce", "embedding": null, "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff30aa8c-bf0d-45ad-be65-00ff1fb7e94c", "node_type": "4", "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "092f5ef8427fa45dec8675b86c8aaa16d9983a84a3130cf568c5f35958da9296", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5d922c8-557c-4872-bdcf-9475a7f9b90e", "node_type": "1", "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b47ac4810621faab15f560ce50686112e609a6fa86ca7069584f34d6b3858294", "class_name": "RelatedNodeInfo"}}, "text": "GCic.  \n    53       *>***************************************************************  \n    54       *>     >NOTE<   >NOTE<   >NOTE<   >NOTE<   >NOTE<   >NOTE<     **  \n    55       *>                                                             **  \n    56       *> If this program is compiled with ' -fdebugging -line', you    **  \n    57       *> wil l need to pipe SYSERR to a text file when executing GCic **  \n    58       *> (by adding the text '2> filename' to the end of the GCic    **  \n    59       *> command).  You may also need to press the ENTER key when    **  \n    60       *> GCic is finished.                                           ** \n    61       *>***************************************************************  \n    62       *> This program provides a Textual User Interface (TUI) to the **  \n    63       *> process of compiling and (optionally) exe cuting a GNU COBOL **  \n    64       *> program.                                                    **  \n    65       *>                                                             **  \n    66       *> This programs execution syntax is as follows:               ** \n    67       *>                                                             **  \n    68       *> GCic <program -path-and-filename> [ <switch>... ]            **  \n    69       *>                                                             **  \n    70       *> Once executed, a display screen will be presented showing   **  \n    71       *> the compilation options that will be used.  The user will   **  \n    72       *> have the opportunity to change options, specify new ones    **  \n    73       *> and specify any pro gram execution arguments to be used if   **  \n    74       *> you select the 'Execute' option.  When you press the Enter  **  \n    75       *> key the program will be compiled.                           **  \n    76       *>                                                             ** \n    77       *> The SCREEN SECTION contains an image of the screen.         **  \n    78       *>                                                             **  \n    79       *> The '010 -Parse-Args' section in the PROCEDURE DIVISION has  **  \n    80       *> documentation on switches and their function.               **  \n    81       *>***************************************************************  \n    82       *>                                                             ** \n    83       *> AUTHOR:       GARY L. CUTLER                                **  \n    84       *>               CutlerGL@gmail.com                            **  \n    85       *>               Copyrigh t (C) 2009 -2013, Gary L. Cutler, GPL  **  \n    86       *>                                                             **  \n    87       *> DATE -WRITTEN: June 14, 2009                                 **  \n    88       *>                                                             ** \n    89       *>***************************************************************  \n    90       *>  DATE  CHANGE DESCRIPTION                                   **  \n    91       *> ====== ==================================================== ** \n    92       *> GC0609 Don't display compiler messages file if compilation  **  \n    93       *>        Is successful.  Also don't display messages if the   **  \n    94       *>        output file is busy (just put a message on the       **  \n    95       *>        screen, leave the OC screen up & let the user fix    **  \n    96       *>        the problem & resubmit.                              **  \n    97       *> GC0709 When 'EXECUTE' is selected, a 'FILE BUSY' error will **  \n    98       *>        still cause the (old) executable to be launched.     **  \n    99       *>        Also, the 'EXTRA SWITCHES' field is being ignored.   **  \n   100       *>        Changed the title bar to lowlighted reverse video &  **  \n   101       *>        the message area to highlighted  reverse-video.       **  \n   102       *> GC0809 Add a SPACE in front of command -line args when       **  \n   103       *>        executing users program.  Add a SPACE after the      **  \n  ", "start_char_idx": 788, "end_char_idx": 4935, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a33172a-75a7-4ed4-ba88-d504c8cd31bd": {"__data__": {"id_": "1a33172a-75a7-4ed4-ba88-d504c8cd31bd", "embedding": null, "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3da8bd87-095b-40eb-9cab-787d62d9727a", "node_type": "4", "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc57cff6e5c06a07e441e7ee7f5381197a6a3b75784479ba3c51dd286c70b97a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1e9fe0e-7869-48ac-be25-4cecdfc866a4", "node_type": "1", "metadata": {}, "hash": "51f39b170ba5a468c8d82ae25f0aadbbf5dd37a9f320710068d0258019e96844", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-18 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyri ght (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 3 \n====== ====================================================================================================================== ==========  \n   104       *>        -ftraceall switch when building cobc command.        **  \n   105       *> GC0909 Convert to work on Cygwin/Linux as well as MinGW     **  \n   106       *> GC0310 Virtualized the key codes for S -F1 thru S -F7 as they **  \n   107       *>        differ depending upon whether PDCurses or NCurses is **  \n   108       *>        being used.                                          **  \n   109       *> GC0410 Introduced the cross -reference and source listing    **  \n   110       *>        features.  Also  fixed a bug in @EXTRA switch proces - ** \n   111       *>        sing where garbage will result if more than the      **  \n   112       *>        @EXTRA switch is specified.                          **  \n   113       *> GC1010 Corrected several problems reporte d by Vince Coen:   **  \n   114       *>        1) Listing/Xref wouldn't work if ' -I' additional     **  \n   115       *>           cobc switch specified.                            **  \n   116       *>        2) Programs coded with lowercase reserved words did  ** \n   117       *>           not get parsed properly when generating listing   **  \n   118       *>           and/or xref reports.                              **  \n   119       *>        3) Reliance on a TEMP environment variable caused    **  \n   120       *>           non-recoverable errors when generating listing    **  \n   121       *>           and/or xref reports in a session that lacks a     **  \n   122       *>           TEMP variable.                                    **  \n   123       *>        As a result of this change, GCic no longer runs a    **  \n   124       *>        second 'cobc' when generating listing and/or xref    **  \n   125       *>        reports.  A ' -save-temps' (without '=dir') specified **  \n   126       *>        in the @EXTRA options field wil l be ignored.  A      **  \n   127       *>        ' -save-temps=dir' specified in the @EXTRA options    **  \n   128       *>        field will negate both the @XREF and @SOURCE opts,   **  \n   129       *>        if specified.                                        ** \n   130       *> GC0711 Tailored for 29APR2011 version of GNU COBOL 2.0      **  \n   131       *> GC0712 Replaced all switches with configuration settings;   **  \n   132       *>        Tailored for 11FEB2012 version of GNU COBOL 2.0;     **  \n   133       *>        Reformatted screen layout to fit a 24x80 screen      **  \n   134       *>        rather than a 25x81 screen and to accommodate shell  **  \n   135       *>        environments having only F1 -F12 (like 'terminal' in  **  \n   136       *>        OSX); Fully tested under OSX (required a few altera - ** \n   137       *>        tions); Expanded both extra -options and runtime -     ** \n   138       *>        arguments areas to TWO lines (152 chars total) each; **  \n   139       *>        Added support f or MF/IBM/BS2000 listing -control      **  \n   140       *>        directives EJECT,SKIP1,SKIP2,SKIP3 (any of these in  **  \n   141       *>        copybooks will be ignored)                           **  \n   142       *> GC0313 Expand the source code record from  80 chars to 256   **  \n   143       *>        to facilitate looking for \"LINKAGE SECTION\" in a     **  \n   144       *>        free -format file.                                    **  \n   145       *> GC1113 Edited to support the change of \"OpenCOBOL\" to \"GNU  ** \n   146       *>        COBOL\"                                               **  \n   147       *>***************************************************************  \n   148        ENVIRONMENT DIVISION.  \n   149        CONFIGURATION SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 4359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1e9fe0e-7869-48ac-be25-4cecdfc866a4": {"__data__": {"id_": "a1e9fe0e-7869-48ac-be25-4cecdfc866a4", "embedding": null, "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3da8bd87-095b-40eb-9cab-787d62d9727a", "node_type": "4", "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc57cff6e5c06a07e441e7ee7f5381197a6a3b75784479ba3c51dd286c70b97a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a33172a-75a7-4ed4-ba88-d504c8cd31bd", "node_type": "1", "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d4a903d1db251b524c2101198587dcaf59aa81a1880fed369438085c12cb51f7", "class_name": "RelatedNodeInfo"}}, "text": "150        REPOSITO RY. \n   151            FUNCTION ALL INTRINSIC.  \n   152        INPUT -OUTPUT SECTION.  \n   153        FILE -CONTROL.  \n   154 GC1010     SELECT F -Cobc-Output-FILE   ASSIGN TO WS -Listing-Filename -TXT \n   155                                        ORGANIZATION IS LINE  SEQUENTIAL.  \n   156 \n   157            SELECT F -Source-Code-FILE   ASSIGN TO WS -File-Name-TXT \n  ", "start_char_idx": 4359, "end_char_idx": 4750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0330e3a-a513-4f02-b1f5-a3682cd88527": {"__data__": {"id_": "f0330e3a-a513-4f02-b1f5-a3682cd88527", "embedding": null, "metadata": {"page_label": "277", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f7b5f54-10c9-43da-85c5-b381475c6e12", "node_type": "4", "metadata": {"page_label": "277", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "07ffa88f79518d78cadf071c6d47c0251d9786275b48619fb45a05eeea791d78", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-19 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 4 \n====== ====================================================================================================================== ==========  \n   158                                        ORGANIZATION IS LINE SEQUENTIAL  \n   159                                        FILE STATUS IS WS -FSM-Status-CD. \n  ", "start_char_idx": 0, "end_char_idx": 865, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6d1a5bb-d19e-4fa8-a5cd-e75ba43c2379": {"__data__": {"id_": "b6d1a5bb-d19e-4fa8-a5cd-e75ba43c2379", "embedding": null, "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac", "node_type": "4", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "072eccfb95b01ee0dcd9eb2e7663f58e31a47447bd67f472ca14f50682d56029", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef89ef00-8e12-4398-a11f-6770714ab10d", "node_type": "1", "metadata": {}, "hash": "bcf64941fd5fbc59422a87f23cfb3a987eaa5d236714f2e0179ddbfc14d96248", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-20 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 5 \n====== ========================================================== ======================================================================  \n   160       /  \n   161        DATA DIVISION.  \n   162        FILE SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 783, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef89ef00-8e12-4398-a11f-6770714ab10d": {"__data__": {"id_": "ef89ef00-8e12-4398-a11f-6770714ab10d", "embedding": null, "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac", "node_type": "4", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "072eccfb95b01ee0dcd9eb2e7663f58e31a47447bd67f472ca14f50682d56029", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6d1a5bb-d19e-4fa8-a5cd-e75ba43c2379", "node_type": "1", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "791a97ac7c4f86c39688ffe1b90e35c420b69afb32c05085dedf6ae9c20ca730", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7661f79-a75b-425c-8068-9c320ad13887", "node_type": "1", "metadata": {}, "hash": "7f20ced9dd5b1eb4d9247e95888d2278fd392d135e33a25ed38c599da5b4010f", "class_name": "RelatedNodeInfo"}}, "text": "163        FD  F -Cobc-Output-FILE. \n   164        01  F -Cobc-Output-REC                     PIC X(256).  \n   165 \n   166        FD  F -Source-Code-FILE. \n   167 GC0313 01  F -Source-Code-REC                     PIC X(256).  \n   168 \n   169        WORKING -STORAGE SECTION.  \n   ", "start_char_idx": 783, "end_char_idx": 1063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7661f79-a75b-425c-8068-9c320ad13887": {"__data__": {"id_": "f7661f79-a75b-425c-8068-9c320ad13887", "embedding": null, "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac", "node_type": "4", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "072eccfb95b01ee0dcd9eb2e7663f58e31a47447bd67f472ca14f50682d56029", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef89ef00-8e12-4398-a11f-6770714ab10d", "node_type": "1", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8098786133fe23ef2cf006f74d7682ce67956bacf6276d771d5c5da7485480eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6e3deb0-5012-48aa-9a92-6c262f366b31", "node_type": "1", "metadata": {}, "hash": "3fb662136068508046f1c6169b6052ab4cdd6075db02eec8c3be59c114d35077", "class_name": "RelatedNodeInfo"}}, "text": "170        COPY screenio.  \n        78 COB-COLOR-BLACK VALUE 0.  \n        ", "start_char_idx": 1063, "end_char_idx": 1137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6e3deb0-5012-48aa-9a92-6c262f366b31": {"__data__": {"id_": "f6e3deb0-5012-48aa-9a92-6c262f366b31", "embedding": null, "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac", "node_type": "4", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "072eccfb95b01ee0dcd9eb2e7663f58e31a47447bd67f472ca14f50682d56029", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7661f79-a75b-425c-8068-9c320ad13887", "node_type": "1", "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "020b6e6a06f7f02943bc37c3966ce0139c615bec32c8f3a1c3eff658afa8c865", "class_name": "RelatedNodeInfo"}}, "text": "78 COB-COLOR-BLUE VALUE 1.  \n        78 COB-COLOR-GREEN VALUE 2.  \n        78 COB-COLOR-CYAN VALUE 3.  \n        78 COB-COLOR-RED VALUE 4.  \n        78 COB-COLOR-MAGENTA VALUE 5.  \n        78 COB-COLOR-YELLOW VALUE 6.  \n        78 COB-COLOR-WHITE VALUE 7.  \n        78 COB-SCR-OK VALUE 0.  \n        78 COB-SCR-F1 VALUE 1001.  \n        78 COB-SCR-F2 VALUE 1002.  \n        78 COB-SCR-F3 VALUE 1003.  \n        78 COB-SCR-F4 VALUE 1004.  \n        78 COB-SCR-F5 VALUE 1005.  \n        78 COB-SCR-F6 VALUE 1006.  \n        78 COB-SCR-F7 VALUE 1007.  \n        78 COB-SCR-F8 VALUE 1008.  \n        78 COB-SCR-F9 VALUE 1009.  \n        78 COB-SCR-F10 VALUE 1010.  \n        78 COB-SCR-F11 VALUE 1011.  \n        78 COB-SCR-F12 VALUE 1012.  \n        78 COB-SCR-F13 VALUE 1013.  \n        78 COB-SCR-F14 VALUE 1014.  \n        78 COB-SCR-F15 VALUE 10 15. \n        78 COB-SCR-F16 VALUE 1016.  \n        78 COB-SCR-F17 VALUE 1017.  \n        78 COB-SCR-F18 VALUE 1018.  \n        78 COB-SCR-F19 VALUE 1019.  \n        78 COB-SCR-F20 VALUE 1020.  \n        78 COB-SCR-F21 VALUE 1021.  \n        78 COB-SCR-F22 VALUE 1022.  \n        78 COB-SCR-F23 VALUE 1023.  \n        78 COB-SCR-F24 VALUE 1024.  \n        78 COB-SCR-F25 VALUE 1025.  \n        78 COB-SCR-F26 VALUE 1026.  \n        78 COB-SCR-F27 VALUE 1027.  \n        78 COB-SCR-F28 VALUE 1028.  \n        78 COB-SCR-F29 VALUE 1029.  \n        78 COB-SCR-F30 VALUE 1030.  \n        78 COB-SCR-F31 VALUE 1031.  \n        78 COB-SCR-F32 VALUE 1032.  \n        78 COB-SCR-F33 VALUE 1033.  \n        78 COB-SCR-F34 VALUE 1034.  \n  ", "start_char_idx": 1137, "end_char_idx": 2678, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0e3a3f3-6f52-480a-8e64-372a9235563c": {"__data__": {"id_": "c0e3a3f3-6f52-480a-8e64-372a9235563c", "embedding": null, "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70d2dda2-1ccb-41c7-a814-5a655f290524", "node_type": "4", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b31aa64df4c6c2662ca5547dbad5ef445d238b07fca09a1f09e0cda30916ce75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd169996-e25f-48d6-9850-2a17af0378ef", "node_type": "1", "metadata": {}, "hash": "5b82b2b76dd1ae21305e34c7a850dddcabe8f15c3ae22771a489b16d69b3e3e5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-21 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 6 \n====== ====================================================================================================================== ==========  \n        78 COB-SCR-F35 VALUE 1035.  \n        78 COB-SCR-F36 VALUE 1036.  \n        ", "start_char_idx": 0, "end_char_idx": 784, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd169996-e25f-48d6-9850-2a17af0378ef": {"__data__": {"id_": "dd169996-e25f-48d6-9850-2a17af0378ef", "embedding": null, "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70d2dda2-1ccb-41c7-a814-5a655f290524", "node_type": "4", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b31aa64df4c6c2662ca5547dbad5ef445d238b07fca09a1f09e0cda30916ce75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0e3a3f3-6f52-480a-8e64-372a9235563c", "node_type": "1", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d39e8f83cc861eae50f1af70b71b626b4741ac43be5b665bc14747967c62c116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bafc4d1-8d51-45e2-8369-75686477093c", "node_type": "1", "metadata": {}, "hash": "17ead5ff7d58506e257f2ebd1f8411c59742ab523a4d65b528426c4eb0a766f9", "class_name": "RelatedNodeInfo"}}, "text": "78 COB-SCR-F37 VALUE 1037.  \n        78 COB-SCR-F38 VALUE 1038.  \n        78 COB-SCR-F39 VALUE 1039.  \n        78 COB-SCR-F40 VALUE 1040.  \n        78 COB-SCR-F41 VALUE 1041.  \n        78 COB-SCR-F42 VALUE 1042.  \n        78 COB-SCR-F43 VALUE 1043.  \n        78 COB-SCR-F44 VALUE 1044.  \n        78 COB-SCR-F45 VALUE 1045.  \n        78 COB-SCR-F46 VALUE 1046.  \n        78 COB-SCR-F47 VALUE 1047.  \n        78 COB-SCR-F48 VALUE 1048.  \n        78 COB-SCR-F49 VALUE 1049.  \n        78 COB-SCR-F50 VALUE 1050.  \n        78 COB-SCR-F51 VALUE 1051.  \n        78 COB-SCR-F52 VALUE 1052.  \n        78 COB-SCR-F53 VALUE 1053.  \n        78 COB-SCR-F54 VALUE 1054.  \n        78 COB-SCR-F55 VALUE 1055.  \n        78 COB-SCR-F56 VALUE 1056.  \n        78 COB-SCR-F57 VALUE 1057.  \n        78 COB-SCR-F58 VALUE 1058.  \n        78 COB-SCR-F59 VALUE 1059.  \n        78 COB-SCR-F60 VALUE 1060.  \n        78 COB-SCR-F61 VALUE 1061.  \n        78 COB-SCR-F62 VALUE 1062.  \n        78 COB-SCR-F63 VALUE 1063.  \n        78 COB-SCR-F64 VALUE 1064.  \n        78 COB-SCR-PAGE_UP VALUE 2001.  \n        78 COB-SCR-PAGE_DOWN VALUE 2002.  \n        78 COB-SCR-KEY-UP VALUE 2003.  \n        78 COB-SCR-KEY-DOWN VALUE 2004.  \n        78 COB-SCR-ESC VALUE 2005.  \n        78 COB-SCR-PRINT VALUE 2006.  \n        78 COB-SCR-NO-FIELD VALUE 800 0. \n        78 COB-SCR-TIME-OUT VALUE 8001.  \n        78 COB-SCR-FATAL VALUE 9000.  \n        78 COB-SCR-MAX-FIELD VALUE 9001.  \n   171 \n   172 GC0712 01  WS -Compilation -Switches -TXT. \n   ", "start_char_idx": 784, "end_char_idx": 2282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bafc4d1-8d51-45e2-8369-75686477093c": {"__data__": {"id_": "9bafc4d1-8d51-45e2-8369-75686477093c", "embedding": null, "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70d2dda2-1ccb-41c7-a814-5a655f290524", "node_type": "4", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b31aa64df4c6c2662ca5547dbad5ef445d238b07fca09a1f09e0cda30916ce75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd169996-e25f-48d6-9850-2a17af0378ef", "node_type": "1", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b5a6fe229e231fa68de0de76ac8acd602710a2417c0111780f6fc7ed547b0d29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "670fec93-413d-45ed-aadf-775fc95f3529", "node_type": "1", "metadata": {}, "hash": "b99e4558656aa5cd3955ae6418cff6fc8b4e7c6ec09a7c2ee6ce809da1546186", "class_name": "RelatedNodeInfo"}}, "text": "173 GC0712     05 WS -CS-Args-TXT VALUE SPACES.  \n   174 GC0712        10 WS -CS-Arg-H1-TXT                PIC X(76).  \n   175 GC0712        10 WS -CS-Arg-H2-TXT                PIC X(76).  \n   176 GC0712     05 WS -CS-Filenames -TXT. \n   177 GC0712        10 VALUE 'BS2000'                  PIC X(9).  \n   178 GC0712        10 VALUE 'COBOL85'                 PIC X(9).  \n   179 GC0712        10 VALUE 'COBOL2002'               PIC X(9).  \n   180 GC0712        10 VALUE 'DEFAULT'                 PIC X(9).  \n   181 GC0712        10 VALUE 'IBM'                     PIC X(9).  \n   182 GC0712        10 VALUE 'MF'                      PIC X(9).  \n   ", "start_char_idx": 2282, "end_char_idx": 2928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "670fec93-413d-45ed-aadf-775fc95f3529": {"__data__": {"id_": "670fec93-413d-45ed-aadf-775fc95f3529", "embedding": null, "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70d2dda2-1ccb-41c7-a814-5a655f290524", "node_type": "4", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b31aa64df4c6c2662ca5547dbad5ef445d238b07fca09a1f09e0cda30916ce75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bafc4d1-8d51-45e2-8369-75686477093c", "node_type": "1", "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4850cf319e76ce38e10cb8f03e535c7814b60d755f83d27c751ddd0de336eb72", "class_name": "RelatedNodeInfo"}}, "text": "183 GC0712        10 VALUE 'MVS'                     PIC X(9).  \n   184 GC0712     05 WS -CS-Filenames -Table-TXT REDEFINES WS -CS-Filenames -TXT. \n  ", "start_char_idx": 2928, "end_char_idx": 3078, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9cd08118-40fb-47ec-baa4-f48dfe1790c3": {"__data__": {"id_": "9cd08118-40fb-47ec-baa4-f48dfe1790c3", "embedding": null, "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6", "node_type": "4", "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f71f09b389f6a3e03ddea7e8c02c8a5eaca8a78d150565b1f6e4564956ee498", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2426ae24-c8e6-4589-b960-615120e67502", "node_type": "1", "metadata": {}, "hash": "eee7b9d87164cb13e249a2d2966f9cefc8c46beead9c0b69edd8d3ee05052b56", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-22 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 7 \n====== ====================================================================================================================== ==========  \n   185 GC071 2        10 WS -CS-Filename -TXT              OCCURS 7 TIMES  \n   186 GC0712                                           PIC X(9).  \n   187 GC0712 >>IF F12 < 1  \n   188 GC0712     05 WS -CS-Config-NUM     VALUE 4       PIC 9(1).  \n   ", "start_char_idx": 0, "end_char_idx": 947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2426ae24-c8e6-4589-b960-615120e67502": {"__data__": {"id_": "2426ae24-c8e6-4589-b960-615120e67502", "embedding": null, "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6", "node_type": "4", "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f71f09b389f6a3e03ddea7e8c02c8a5eaca8a78d150565b1f6e4564956ee498", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cd08118-40fb-47ec-baa4-f48dfe1790c3", "node_type": "1", "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fa7a2a085a5d1c80d463a469483786a20a03566fe905f94486a25b5f67eea928", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85229042-adc3-47f2-9663-b782a15163e8", "node_type": "1", "metadata": {}, "hash": "02881169cc483248db209e49423588540498f401aaa200b7e2bb7652cb29ff02", "class_name": "RelatedNodeInfo"}}, "text": "189 GC0712 >>ELIF F12 > 7  \n   190 GC0712     05 WS -CS-Config-NUM     VALUE 4       PIC 9(1).  \n   191 GC0712 >>ELSE  \n   192 GC0712     05 WS -CS-Config-NUM     VALUE F12     PIC 9(1).  \n   193 GC0712 >>END -IF \n   194 GC0712     05 WS -CS-Extra-TXT VALUE SPACES.  \n   195 GC0712        10 WS -CS-Extra-H1-TXT              PIC X(76).  \n   196 GC0712        10 WS -CS-Extra-H2-TXT              PIC X(76).  \n   197 GC0712     05 WS -CS-Switch-Defaults -TXT. \n   198 GC0712        10 VALUE F1                        PIC 9(1). *> WS -CS-DEBUG-CHR \n   199 GC0712        10 VAL UE F4                        PIC 9(1). *> WS -CS-EXECUTE-CHR \n   200 GC0712        10 VALUE F8                        PIC 9(1). *> WS -CS-FREE-CHR \n   201 GC0712        10 VALUE F3                        PIC 9(1). *> WS -CS-LIBRARY-CHR \n   202 GC0712        10 V ALUE F5                        PIC 9(1). *> WS -CS-LISTING-CHR \n   203 GC0712        10 VALUE F6                        PIC 9(1). *> WS -CS-NOFUNC-CHR \n   204 GC0712        10 VALUE F9                        PIC 9(1). *> WS -CS-NOTRUNC-CHR \n   205 GC0712        10 VALUE F2                        PIC 9(1). *> WS -CS-TRACEALL -CHR \n   206 GC0712        10 VALUE F7                        PIC 9(1). *> WS -CS-WARNALL-CHR \n   207 GC0712     05 WS -CS-All-Switches -TXT REDEFINES  \n   208 GC0712                               WS-CS-Switch-Defaults -TXT. \n   209 GC0712        10 WS -CS-DEBUG-CHR                 PIC X(1).  \n   ", "start_char_idx": 947, "end_char_idx": 2408, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85229042-adc3-47f2-9663-b782a15163e8": {"__data__": {"id_": "85229042-adc3-47f2-9663-b782a15163e8", "embedding": null, "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6", "node_type": "4", "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f71f09b389f6a3e03ddea7e8c02c8a5eaca8a78d150565b1f6e4564956ee498", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2426ae24-c8e6-4589-b960-615120e67502", "node_type": "1", "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4dacbe9eba26a463f50ba7b52d8730d20e79bd5621d719aa00a20dd674dc9651", "class_name": "RelatedNodeInfo"}}, "text": "210 GC0712        10 WS -CS-EXECUTE-CHR               PIC X(1).  \n   211 GC0712        10 WS -CS-FREE-CHR                  PIC X(1).  \n   212 GC0712        10 WS-CS-LIBRARY-CHR               PIC X(1).  \n   213 GC0712        10 WS -CS-LISTING-CHR               PIC X(1).  \n   214 GC0712        10 WS -CS-NOFUNC-CHR                PIC X(1).  \n   215 GC0712        10 WS -CS-NOTRUNC-CHR               PIC X(1).  \n   216 GC0712        10 WS -CS-TRACEALL -CHR              PIC X(1).  \n   217 GC0712        10 WS -CS-WARNALL-CHR               PIC X(1).  \n   218 \n   219 GC0909 01  WS -Cmd-TXT                            PIC X(512).  \n   220 \n   221 GC0712 01  WS -Cmd-Args-TXT                       PIC X(256).  \n   222 \n   223 GC0712 01  WS -Cmd-End-Quote-CHR                  PIC X(1).  \n   224 \n   225 GC0712 01  WS -Cmd-SUB                            USAGE BINARY -LONG. \n   226 \n   227        01  WS -Cobc-Cmd-TXT                       PIC X(256).  \n   228 \n   229        01  WS -Config-Fn-TXT                      PIC X(12).  \n   230 \n   231 GC1113 01  WS -Delete-Fn-TXT                      PIC X(256).  \n   232 \n   233        01  WS -File-Name-TXT. \n   234            05 WS -FN-CHR                          OCCURS 256 TIMES  \n   235                                                  PIC X(1).  \n   236 \n   237        01  WS -File-Status-Message-TXT. \n   238            05 VALUE 'Status Code: '              PIC X(13 ). \n  ", "start_char_idx": 2408, "end_char_idx": 3831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8526ba8b-bde8-47b0-bdde-d0e4c5264749": {"__data__": {"id_": "8526ba8b-bde8-47b0-bdde-d0e4c5264749", "embedding": null, "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a95293f-9291-46e1-8732-47aeba53d843", "node_type": "4", "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8e675d042776617aa2eb01480261cf4081222c06459a00d4f81d6b5a062483b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "908e5fae-a19e-4ac4-9a3e-bd4742afb021", "node_type": "1", "metadata": {}, "hash": "890002332105f4191b4f5eeae1b2b38f0e43ff67b47662b517a1cdd4945f5c59", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-23 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 8 \n====== ============================================================================================ ====================================  \n   239            05 WS -FSM-Status-CD                   PIC 9(2).  \n   240            05 VALUE ', Meaning: '                PIC X(11).  \n   ", "start_char_idx": 0, "end_char_idx": 843, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "908e5fae-a19e-4ac4-9a3e-bd4742afb021": {"__data__": {"id_": "908e5fae-a19e-4ac4-9a3e-bd4742afb021", "embedding": null, "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a95293f-9291-46e1-8732-47aeba53d843", "node_type": "4", "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8e675d042776617aa2eb01480261cf4081222c06459a00d4f81d6b5a062483b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8526ba8b-bde8-47b0-bdde-d0e4c5264749", "node_type": "1", "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "317c4fb74c24e2d6fdfec500bba200107b56a8b07aad8d2a0ff25081275f75cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32671358-8069-43a8-ab8c-c3de2293b785", "node_type": "1", "metadata": {}, "hash": "8b6d454d24e0b2fc3dea47d1024fda1188f5487444ff235b4d4471d54001dcbd", "class_name": "RelatedNodeInfo"}}, "text": "241            05 WS -FSM-Msg-TXT                     PIC X(25).  \n   242 \n   243 GC090 9 01  WS -Horizontal -Line-TXT                PIC X(80).  \n   244 GC0909  \n   245        01  WS -I-SUB                              USAGE BINARY -LONG. \n   246 \n   247        01  WS -J-SUB                              USAGE BINARY -LONG. \n   248 \n   249 GC0712 01  WS -Listing-Filename -TXT               PIC X(256).  \n   250 \n   251        01  WS -OC-Compile-DT                      PIC XXXX/XX/XXBXX/XX.  \n   252 \n   253 GC0712 >>IF OS = 'CYGWIN'  \n   254 GC0712 01  WS -OS-Dir-CHR         VALUE '/'       PIC X(1).  \n   255 GC0712 78  WS -OS-Exe-Ext-CONST   VALUE '.exe'.  \n   ", "start_char_idx": 843, "end_char_idx": 1511, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32671358-8069-43a8-ab8c-c3de2293b785": {"__data__": {"id_": "32671358-8069-43a8-ab8c-c3de2293b785", "embedding": null, "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a95293f-9291-46e1-8732-47aeba53d843", "node_type": "4", "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8e675d042776617aa2eb01480261cf4081222c06459a00d4f81d6b5a062483b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "908e5fae-a19e-4ac4-9a3e-bd4742afb021", "node_type": "1", "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccbf66131393c6a3c30feacaa9f7a751f322e770a82d40e8a82b16768c16c96f", "class_name": "RelatedNodeInfo"}}, "text": "256 GC0712 78  WS -OS-Lib-Ext-CONST   VALUE '.dll'.  \n   257 GC0712 78  WS -OS-Lib-Type-CONST  VALUE 'DLL)'.  \n   258 GC0712 01  WS -OS-Type-CD         VALUE 2         PIC 9(1).  \n   259 GC0712 >>ELIF OS = 'MINGW'  \n   260 GC0712 01  WS -OS-Dir-CHR         VALUE ' \\'       PIC X(1).  \n   261 GC0712 78  WS -OS-Exe-Ext-CONST   VALUE '.exe'.  \n   262 GC0712 78  WS -OS-Lib-Ext-CONST   VALUE '.dll'.  \n   263 GC0712 78  WS -OS-Lib-Type-CONST  VALUE 'DLL)'.  \n   264 GC0712 01  WS -OS-Type-CD         VALUE 5         PIC 9(1).  \n   265 GC0712 >>ELIF OS = 'OSX'  \n   266 GC0712 01  WS -OS-Dir-CHR         VALUE '/'       PIC X(1).  \n   267 GC0712 78  WS -OS-Exe-Ext-CONST   VALUE ' '.  \n   268 GC0712 78  WS -OS-Lib-Ext-CONST   VALUE '.dylib'.  \n   269 GC0712  78  WS-OS-Lib-Type-CONST  VALUE 'DYLIB)'.  \n   270 GC0712 01  WS -OS-Type-CD         VALUE 4         PIC 9(1).  \n   271 GC0712 >>ELIF OS = 'UNIX'  \n   272 GC0712 01  WS -OS-Dir-CHR         VALUE '/'       PIC X(1).  \n   273 GC0712 78  WS -OS-Exe-Ext-CONST   VALUE ' '. \n   274 GC0712 78  WS -OS-Lib-Ext-CONST   VALUE '.so'.  \n   275 GC0712 78  WS -OS-Lib-Type-CONST  VALUE 'SO)'.  \n   276 GC0712 01  WS -OS-Type-CD         VALUE 3         PIC 9(1).  \n   277 GC0712 >>ELIF OS = 'WINDOWS'  \n   278 GC0712 01  WS -OS-Dir-CHR         VALUE  '\\'       PIC X(1).  \n   279 GC0712 78  WS -OS-Exe-Ext-CONST   VALUE '.exe'.  \n   280 GC0712 78  WS -OS-Lib-Ext-CONST   VALUE '.dll'.  \n   281 GC0712 78  WS -OS-Lib-Type-CONST  VALUE 'DLL)'.  \n   282 GC0712 01  WS -OS-Type-CD         VALUE 1         PIC 9(1).  \n   283 GC0712 >>END -IF \n   284 GC0909     88 WS -OS-Windows-BOOL VALUE 1, 5.  \n   285 GC0909     88 WS -OS-Cygwin-BOOL  VALUE 2.  \n   286 GC0712     88 WS -OS-UNIX-BOOL    VALUE 3, 4.  \n   287 GC0712     88 WS -OS-OSX-BOOL     VALUE 4.  \n   288 \n   289        01  WS -OS-Type-FILLER-TXT. \n   290            05 VALUE 'Windows'                    PIC X(14).  \n   291            05 VALUE 'Windows/Cygwin'             PIC X(14).  \n   292            05 VALUE 'UNIX/Linux'                 PIC X(14).  \n  ", "start_char_idx": 1511, "end_char_idx": 3566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aec33b9a-3a93-42b6-ae8d-04abe65193e9": {"__data__": {"id_": "aec33b9a-3a93-42b6-ae8d-04abe65193e9", "embedding": null, "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e", "node_type": "4", "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c3387c1990af3b1223954b438985453694354cd70adc60a905e5f131784eb5ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79fd9ab1-63dc-4ae8-bb61-0540f122f771", "node_type": "1", "metadata": {}, "hash": "45ced03970e5620f9c33b89fb7a60e60626bd344d6c0bbaa757a2222c874565a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-24 GNU COBOL V2 .0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic. cbl \nLine   Statement                                                                                                                Page: 9 \n====== ============================================================================================================= ===================  \n   293            05 VALUE 'OSX'                        PIC X(14).  \n   ", "start_char_idx": 0, "end_char_idx": 775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79fd9ab1-63dc-4ae8-bb61-0540f122f771": {"__data__": {"id_": "79fd9ab1-63dc-4ae8-bb61-0540f122f771", "embedding": null, "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e", "node_type": "4", "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c3387c1990af3b1223954b438985453694354cd70adc60a905e5f131784eb5ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aec33b9a-3a93-42b6-ae8d-04abe65193e9", "node_type": "1", "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "59366860b43c04bb97b5e9d6e4d182395925ab2affc281aa86df2e68c5508d5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddffdabd-53ac-4601-a971-33ebab990483", "node_type": "1", "metadata": {}, "hash": "ed071e432e398e7e2144aadb09c22167edef954de1d5f6f5e5aeb4cdbcdd49c4", "class_name": "RelatedNodeInfo"}}, "text": "294            05 VALUE 'Windows/MinGW'              PIC X(14).  \n   295        01  WS -OS-Types-TXT REDEFINES WS -OS-Type-FILLER-TXT. \n   296            05 WS -OS-Type-TXT                     OCCURS 5 TIMES  \n   297                                                  PIC X(14).  \n   298 \n   299        01  WS -Output-Msg-TXT                     PIC X(80).  \n   300 \n   301        01  WS -Path-Delimiter -CHR                 PIC X(1).  \n   302 \n   303        01  WS -Prog-Extension -TXT                 PIC X(256).  \n   304 \n   305        01  WS -Prog-Folder-TXT                    PIC X(256).  \n   306 \n   307 GC0712 01  WS -Prog-File-Name-TXT. \n   308 GC0712     05 WS -PFN-CHR                         OCCURS 2 56 TIMES  \n   309 GC0712                                           PIC X(1).  \n   310 \n   311 GC0712 01  WS -Pgm-Nm-TXT                         PIC X(31).  \n   312 \n   313        01  WS -Runtime-Switches -TXT. \n   314            05 WS -RS-Compile-OK-CHR               PIC X(1).  \n   315               88 WS -RS-Compile-OK-BOOL           VALUE 'Y'.  \n   316 GC0909        88 WS -RS-Compile-OK-Warn-BOOL      VALUE 'W'.  \n   317               88 WS -RS-Compile-Failed-BOOL       VALUE 'N'.  \n   318 GC0609     05 WS -RS-Complete -CHR                 PIC X(1).  \n   319 GC0609        88 WS -RS-Complete -BOOL             VALUE 'Y'.  \n   320 GC0609        88 WS -RS-Not-Complete -BOOL         VALUE 'N'.  \n   321 GC0712     05 WS -RS-Quote-CHR                    PIC X(1).  \n   322 GC0712        88 WS -RS-Double-Quote-Used-BOOL    VALUE 'Y' FALSE 'N'.  \n   323 GC0809     05 WS -RS-IDENT-DIV-CHR                PIC X(1).  \n   324 GC0809        88 WS -RS-1st-Prog-Complete -BOOL    VALUE 'Y'.  \n   325 GC0809        88 W S-RS-More-To-1st-Prog-BOOL     VALUE 'N'.  \n   326            05 WS -RS-No-Switch-Chgs-CHR           PIC X(1).  \n   327               88 WS -RS-No-Switch-Changes-BOOL    VALUE 'Y'.  \n   328               88 WS -RS-Switch-Changes-BOOL       VALUE 'N'.  \n   329 GC0709     05 WS-RS-Output-File-Busy-CHR         PIC X(1).  \n   330 GC0709        88 WS -RS-Output-File-Busy-BOOL     VALUE 'Y'.  \n   331 GC0709        88 WS -RS-Output-File-Avail-BOOL    VALUE 'N'.  \n   332 GC0809     05 WS -RS-Source-Record-Type-CHR       PIC X(1).  \n   333 GC0809        88 WS -RS-Source-Rec-Linkage-BOOL   VALUE 'L'.  \n   334 GC0809        88 WS -RS-Source-Rec-Ident-BOOL     VALUE 'I'.  \n   335 GC0712        88 WS -RS-Source-Rec-Ignored-BOOL   VALUE ' '.  \n   336            05 WS -RS-Switch-Error-CHR             PIC  X(1). \n   337               88 WS -RS-Switch-Is-Bad-BOOL        VALUE 'Y'.  \n   ", "start_char_idx": 775, "end_char_idx": 3385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddffdabd-53ac-4601-a971-33ebab990483": {"__data__": {"id_": "ddffdabd-53ac-4601-a971-33ebab990483", "embedding": null, "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e", "node_type": "4", "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c3387c1990af3b1223954b438985453694354cd70adc60a905e5f131784eb5ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79fd9ab1-63dc-4ae8-bb61-0540f122f771", "node_type": "1", "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a1b026f497d9774e4f2830efb681495baa7a309d90a533549be3269e2761edd", "class_name": "RelatedNodeInfo"}}, "text": "338               88 WS -RS-Switch-Is-Good-BOOL       VALUE 'N'.  \n   339 \n   340        01  WS -Tally-QTY                          USAGE BINARY -LONG. \n  ", "start_char_idx": 3385, "end_char_idx": 3540, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddf1800b-4af1-4616-8466-4604f55e78cb": {"__data__": {"id_": "ddf1800b-4af1-4616-8466-4604f55e78cb", "embedding": null, "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bb30396-1883-4bd8-aa7d-5983f7ee110c", "node_type": "4", "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f25b0ec025f90495971bdbc6d3e84eb39334887a774095b71d2765c2a5689e03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1dd02701-0fcc-4081-973f-4864cbdc76b8", "node_type": "1", "metadata": {}, "hash": "3c9b89fb6fb52f6c1cb4f6d8621b0c65e7458247603f85dc824ceb33d8f223ff", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-25 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 10  \n====== ================================================================================================= ===============================  \n   341       /  \n   342        SCREEN SECTION.  \n   343       *>  \n   344       *> Here is the layout of the GCic screen.  \n   345       *>  \n   346       *> The sample screen below shows how the screen would look if the LINEDRAW  \n   347       *> configuration setting is set to a value of 2  \n   348       *>  \n   349       *> The following sample screen layout shows how the screen looks with line -drawing \n   350       *> characters disabled.  \n   351       *>  \n   352       *>         1         2         3         4         5         6         7         8  \n   353       *>12345678901234567890123456789012345678901234567890123456789012345678901234567890  \n   354       *>===================================================================================  \n   355 GC0712*> GCic (2011/07/11 08:52) - GNU COBOL V2.0 11FEB2012 Interactive Compilation      01  \n   356 GC0712*>+ ------------------------------------------------------------------------------ + 02 \n   357 GC0712*>| Folder:   E: \\GNU COBOL \\Samples                                               | 03 \n   358 GC0712*>| Filename: GCic.cbl                                                           | 04  \n   359 GC0712*>+ ------------------------------------------------------------------------------ + 05 \n   360 GC0712*> Set/Clr Switches Via F1 -F9; Set Config Via F12; ENTER Key Compiles; ESC Quits   06  \n   361 GC0712*>+ ----------------------------------------------------------------- +------------ + 07 \n   362 GC0712*>| F1  Assume WITH DEBUGGING MODE  F6  \"FUNCTION\" Is Optional      | Current    | 08  \n   363 GC0712*>| F2  Procedure+Statement Trace   F7  Enable All Warnings         | Config:    | 09  \n   364 GC0712*>| F3  Make A Library (DLL)        F8  Sourc e Is Free -Format       | @@@@@@@@@@ | 10  \n   365 GC0712*>| F4  Execute If Compilation OK   F9  No COMP/BINARY Truncation   |            | 11  \n   366 GC0712*>| F5 >Produce Full Listing                                        |            | 12  \n   367 GC0712*>+ ----------------------------------------------------------------- +------------ + 13 \n   368 GC0712*> Extra \"cobc\" Switches, If Any (\" -save-temps=xxx\" Prevents Listings):            14  \n   369 GC0712*>+ ----------------------------------------------------------- ------------------- + 15 \n   370 GC0712*>| ____________________________________________________________________________ | 16  \n   371 GC0712*>| ____________________________________________________________________________ | 17  \n   372 GC0712*>+ ------------------ ------------------------------------------------------------ + 18 \n   373 GC0712*> Program Execution Arguments, If Any:                                            19  \n   374 GC0712*>+ ---------------------------------------------------------------------------- --+ 20 \n   375 GC0712*>| ____________________________________________________________________________ | 21  \n   376 GC0712*>| ____________________________________________________________________________ | 22  \n   377 GC0712*>+ ----------------------------------- ------------------------------------------- + 23 \n   378 GC0712*> GCic Copyright (C) 2009 - 2013, Gary L. Cutler, GPL                             24  \n   379       *>===================================================================================  \n   380       *>12345678901234567890123456789012345678901234567890123456789012345678901234567890  \n   381       *>         1         2         3         4         5         6         7         8  \n   382       *>  \n   383       *> If this program is run on Windows, it must  run with codepage 437 activated to  \n   384       *> display the line -drawing characters.  With a native Windows build or a  \n   385       *> Windows/MinGW build, one could use the command 'chcp 437' to set that codepage  \n   386       *> for display within a W indows console window (that should be the default, though).  \n   ", "start_char_idx": 0, "end_char_idx": 4613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1dd02701-0fcc-4081-973f-4864cbdc76b8": {"__data__": {"id_": "1dd02701-0fcc-4081-973f-4864cbdc76b8", "embedding": null, "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bb30396-1883-4bd8-aa7d-5983f7ee110c", "node_type": "4", "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f25b0ec025f90495971bdbc6d3e84eb39334887a774095b71d2765c2a5689e03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddf1800b-4af1-4616-8466-4604f55e78cb", "node_type": "1", "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4177d92cfde396aa9e9e6253fb633de4b6bf613c3e626e77211336a5b89b1f47", "class_name": "RelatedNodeInfo"}}, "text": "387       *> With a Windows/Cygwin build, set the environment variable CYGWIN to a value of  \n   388       *> 'codepage:oem' (this cannot be done from within the program though - you will  \n   389       *> have to use the 'Computer/Advanced System Settings/Environment Variables' (Vista or  \n   390       *> Windows 7) function to define the variable.  XP Users: use 'My Computer/Properties/  \n   391       *> Advanced/Environment Variables'.  \n   392       *>  \n   393       *> OSX users may use line drawing characters in this and any GNU COBOL program simply  \n   394       *> by setting their 'terminal' application's font to \"Lucida Console\".  \n  ", "start_char_idx": 4613, "end_char_idx": 5265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf9d7f42-ad4c-4fc5-be9e-16d6e2fc7ce9": {"__data__": {"id_": "cf9d7f42-ad4c-4fc5-be9e-16d6e2fc7ce9", "embedding": null, "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773", "node_type": "4", "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6933118ffe4b24bd40daf183e23606bb97e83cc32ece9cba21fc8a77aa72762d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a47826f-f54b-4327-bb55-f7e41abce13d", "node_type": "1", "metadata": {}, "hash": "c1e62cfe86c66f455463565545fe5d8cfa952fe1ffb17a5480ef4b61fb190abe", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-26 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Wind ows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 11  \n====== ====================================================================================================================== ==========  \n   395       *>  \n   396        >>IF LINEDRAW IS EQUAL TO 0  \n   397        78 LD -UL-Corner                 VALUE ' '.  \n   398        78 LD -LL-Corner                 VALUE ' '.  \n   ", "start_char_idx": 0, "end_char_idx": 889, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a47826f-f54b-4327-bb55-f7e41abce13d": {"__data__": {"id_": "8a47826f-f54b-4327-bb55-f7e41abce13d", "embedding": null, "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773", "node_type": "4", "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6933118ffe4b24bd40daf183e23606bb97e83cc32ece9cba21fc8a77aa72762d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf9d7f42-ad4c-4fc5-be9e-16d6e2fc7ce9", "node_type": "1", "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d5a92182ad04fc67dff00ae78c5a650c6659a5437420ad4c62f0d5e6e655785f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53e2ff56-c20c-41e3-826e-4edea0691c82", "node_type": "1", "metadata": {}, "hash": "1cacad8168e4d4cfdd1e46e3021a851e011ca563e7787a5811e416e82ac91fae", "class_name": "RelatedNodeInfo"}}, "text": "399        78 LD -UR-Corner                 VALUE ' '.  \n   400        78 LD -LR-Corner                 VALU E ' '. \n   401        78 LD -Upper-T                   VALUE ' '.  \n   402        78 LD -Lower-T                   VALUE ' '.  \n   403        78 LD -Horiz-Line                VALUE ' '.  \n   404        78 LD -Vert-Line                 VALUE ' '.  \n   405        >>ELIF LINEDRAW IS EQUAL TO 1  \n   406        78 LD -UL-Corner                 VALUE X'DA'.  \n   407        78 LD -LL-Corner                 VALUE X'C0'.  \n   408        78 LD -UR-Corner                 VALUE X'BF'.  \n   409        78 LD -LR-Corner                 VALUE X'D9 '. \n   410        78 LD -Upper-T                   VALUE X'C2'.  \n   411        78 LD -Lower-T                   VALUE X'C1'.  \n   412        78 LD -Horiz-Line                VALUE X'C4'.  \n   413        78 LD -Vert-Line                 VALUE X'B3'.  \n   414        >>E LSE \n   415        78 LD -UL-Corner                 VALUE '+'.  \n   416        78 LD -LL-Corner                 VALUE '+'.  \n   417        78 LD -UR-Corner                 VALUE '+'.  \n   418        78 LD -LR-Corner                 VALUE '+'.  \n   419        78 LD -Upper-T                   VALUE '+'.  \n   420        78 LD -Lower-T                   VALUE '+'.  \n   421        78 LD -Horiz-Line                VALUE ' -'. \n   422        78 LD -Vert-Line                 VALUE '|'.  \n   423        >>END -IF \n   424 \n   425        01 S -Blank-SCR LINE 1 COLUMN 1 BLANK SCREEN.  \n   426 \n   427        01 S -Switches -SCR BACKGROUND -COLOR COB -COLOR-BLACK \n   428                          FOREGROUND -COLOR COB -COLOR-WHITE AUTO.  \n   429       *>  \n   430       *> GENERAL SCREEN FRAME WORK \n   431       *>  \n   432           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   433              FOREGROUND -COLOR COB -COLOR-GREEN HIGHLIGHT.  \n   434 GC0712       05 LINE 02 COL 01           VALUE LD -UL-Corner. \n   ", "start_char_idx": 889, "end_char_idx": 2815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53e2ff56-c20c-41e3-826e-4edea0691c82": {"__data__": {"id_": "53e2ff56-c20c-41e3-826e-4edea0691c82", "embedding": null, "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773", "node_type": "4", "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6933118ffe4b24bd40daf183e23606bb97e83cc32ece9cba21fc8a77aa72762d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a47826f-f54b-4327-bb55-f7e41abce13d", "node_type": "1", "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "afb35f19e4b4c42c71da25e535143500784bf11906d0cc328cc6fa88ccd382a7", "class_name": "RelatedNodeInfo"}}, "text": "435 GC0712       05         COL 02 PIC X(78) FR OM  WS-Horizontal -Line-TXT. \n   436              05         COL 80           VALUE LD -UR-Corner. \n   437 \n   438 GC0712       05 LINE 03 COL 01           VALUE LD -Vert-Line. \n   439              05         COL 80           VALUE LD -Vert-Line. \n   440 \n   441 GC0712       05 LINE 04 COL 01           VALUE LD -Vert-Line. \n   442              05         COL 80           VALUE LD -Vert-Line. \n   443 \n   444 GC0712       05 LINE 05 COL 01           VALUE LD -LL-Corner. \n   445 GC0712       05         COL 02 PIC X(78) FROM  WS -Horizontal -Line-TXT. \n   446              05         COL 80           VALUE LD -LR-Corner. \n   447 \n   448 GC0712       05 LINE 07 COL 01           VALUE LD -UL-Corner. \n  ", "start_char_idx": 2815, "end_char_idx": 3568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecb46220-f151-42c9-bf35-a6738495d33a": {"__data__": {"id_": "ecb46220-f151-42c9-bf35-a6738495d33a", "embedding": null, "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f667cf8e-f1c7-4060-9876-db38884a10a2", "node_type": "4", "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "99994aca2333d324fec119494be115c62c15dda1fd900b427295f74ffeb4b881", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9840397b-a353-4968-b138-567ee44b661a", "node_type": "1", "metadata": {}, "hash": "1390b7852b03cd64c0db66ab5abd40ce465fbe3d1bc139ae5db5c30a3f33749d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-27 GNU COBOL V2.0 11FEB2012 Source L isting - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 12  \n====== ====================================================================================================================== ==========  \n   449 GC0712       05         COL 02 PIC X(65) FROM  WS -Horizontal -Line-TXT. \n   450 GC0712       05         COL 67           VALUE LD -Upper-T. \n   ", "start_char_idx": 0, "end_char_idx": 856, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9840397b-a353-4968-b138-567ee44b661a": {"__data__": {"id_": "9840397b-a353-4968-b138-567ee44b661a", "embedding": null, "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f667cf8e-f1c7-4060-9876-db38884a10a2", "node_type": "4", "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "99994aca2333d324fec119494be115c62c15dda1fd900b427295f74ffeb4b881", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecb46220-f151-42c9-bf35-a6738495d33a", "node_type": "1", "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "69e535316204f3edd523025f4347e6322b4b2776478d5f19a6c707dfe0c52046", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "527e5a00-e5b0-4fa7-ac3c-067dc8399dc7", "node_type": "1", "metadata": {}, "hash": "c904b299a379f5021f60a01f9cc708d44436169220b8bd62efa15779d929d8be", "class_name": "RelatedNodeInfo"}}, "text": "451 GC0712       05         COL 68 PIC X(12) FROM  WS -Horizontal -Line-TXT. \n   452              05         COL 80           VALUE LD -UR-Corner. \n   453 \n   454 GC0712       05 LINE 08 COL 01           VALUE LD -Vert-Line. \n   455 GC0712       05         COL 67           VALUE LD -Vert-Line. \n   456              05         COL 80           VALUE LD -Vert-Line. \n   457 \n   458 GC0712       05 LINE 09 COL 01           VALUE LD -Vert-Line. \n   459 GC0712       05         COL 67           VALUE LD -Vert-Line. \n   460              05         COL 80           VALUE LD -Vert-Line. \n   461 \n   462 GC0712       05 LINE 10 COL 01           VA LUE LD-Vert-Line. \n   463 GC0712       05         COL 67           VALUE LD -Vert-Line. \n   464              05         COL 80           VALUE LD -Vert-Line. \n   465 \n   466 GC0712       05 LINE 11 COL 01           VALUE LD -Vert-Line. \n   467 GC0712       05         COL 67           VALUE LD -Vert-Line. \n   468              05         COL 80           VALUE LD -Vert-Line. \n   469 \n   470 GC0712       05 LINE 12 COL 01           VALUE LD -Vert-Line. \n   471 GC0712       05         COL 67           VALUE LD -Vert-Line. \n   472              05         COL 80           VALUE LD -Vert-Line. \n   473 \n   474 GC0712       05 LINE 13 COL 01           VALUE LD -LL-Corner. \n   475 GC0712       05         COL 02 PIC X(65) FROM  WS -Horizontal -Line-TXT. \n   476 GC0712       05         COL 67           VALUE LD -Lower-T. \n   477 GC0712       05         COL 68 PIC X(12) FROM  WS -Horizontal -Line-TXT. \n   478              05         COL 80           VALUE LD -LR-Corner. \n   479 \n   480 GC0712       05 LINE 15 COL 01           VALUE LD -UL-Corner. \n   481 GC0712       05         COL 02 PIC X(78) FROM  WS -Horizontal -Line-TXT. \n   482              05         COL 80           VALUE LD -UR-Corner. \n   483 \n   484 GC0712       05 LINE 16 COL 01           VALUE LD -Vert-Line. \n   485              05         COL 80           VALUE LD -Vert-Line. \n   486 \n   487 GC0712       05 LINE 17 COL 01           VALUE LD -Vert-Line. \n   488              05         COL 80           VALUE LD -Vert-Line. \n   489 \n   490 GC0712       05 LINE 18 COL 01           VALUE LD -LL-Corner. \n   491 GC0712       05         COL 02 PIC X(78) FROM  WS -Horizontal -Line-TXT. \n   492              05         COL 80           VALUE LD -LR-Corner. \n   493 \n   494 GC0712       05 LINE 20 COL 01           VALUE LD -UL-Corner. \n   495 GC0712       05         COL 02 PIC X( 78) FROM  WS -Horizontal -Line-TXT. \n   496              05         COL 80           VALUE LD -UR-Corner. \n   ", "start_char_idx": 856, "end_char_idx": 3459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "527e5a00-e5b0-4fa7-ac3c-067dc8399dc7": {"__data__": {"id_": "527e5a00-e5b0-4fa7-ac3c-067dc8399dc7", "embedding": null, "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f667cf8e-f1c7-4060-9876-db38884a10a2", "node_type": "4", "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "99994aca2333d324fec119494be115c62c15dda1fd900b427295f74ffeb4b881", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9840397b-a353-4968-b138-567ee44b661a", "node_type": "1", "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "900aa492b229b19fb2c85d06f99168603b7fdceb3315358aab952dd2c7404e2f", "class_name": "RelatedNodeInfo"}}, "text": "497 \n   498 GC0712       05 LINE 21 COL 01           VALUE LD -Vert-Line. \n   499              05         COL 80           VALUE LD -Vert-Line. \n   500 \n   501 GC0712       05 LINE 22 COL 01           VALUE LD -Vert-Line. \n   502              05         COL 80           VALUE LD -Vert-Line. \n  ", "start_char_idx": 3459, "end_char_idx": 3754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6072db05-4d9d-422e-9c44-87a10d218200": {"__data__": {"id_": "6072db05-4d9d-422e-9c44-87a10d218200", "embedding": null, "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010", "node_type": "4", "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ef2daeb8564355b52154be8c83f70cd71279a57f25e16c0b9941a8413e8f4641", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d031b1a5-b654-486f-b994-7ac1f6d5cb97", "node_type": "1", "metadata": {}, "hash": "885b255d4a1d71f7ca8edd28f07af21e67c1d3aebdc97dced9c25a996a388889", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-28 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 13  \n====== ====================================================================================================================== ==========  \n   503 \n   504 GC0712       05 LINE 23 COL 01           VALUE LD -LL-Corner. \n   505 GC07 12       05         COL 02 PIC X(78) FROM  WS -Horizontal -Line-TXT. \n   ", "start_char_idx": 0, "end_char_idx": 866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d031b1a5-b654-486f-b994-7ac1f6d5cb97": {"__data__": {"id_": "d031b1a5-b654-486f-b994-7ac1f6d5cb97", "embedding": null, "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010", "node_type": "4", "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ef2daeb8564355b52154be8c83f70cd71279a57f25e16c0b9941a8413e8f4641", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6072db05-4d9d-422e-9c44-87a10d218200", "node_type": "1", "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ccb9820b09649fa3e22c4115c58db9d58c4e54a622675564b5fa9534d8f8a4e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2fc892d-0236-49cf-a8cd-49a78ce3dfa7", "node_type": "1", "metadata": {}, "hash": "f5b3301826cfe2fb5154b04d428413a510c1bdc6b3a9061d7b078a6d4bfb6704", "class_name": "RelatedNodeInfo"}}, "text": "506              05         COL 80           VALUE LD -LR-Corner. \n   507       *>  \n   508       *> TOP AND BOTTOM LINES  \n   509       *>  \n   510 GC0712    03 BACKGROUND -COLOR COB -COLOR-BLUE \n   511              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   512 GC0410       05 LINE 01 COL 01 VALUE ' GCic ('.  \n   513 GC0410       05         COL 08 PIC X(16) FROM WS -OC-Compile-DT. \n   514 GC0711       05         COL 24 VALUE ') GNU COBOL 2.0 11FEB 2012 ' &  \n   515 GC0410                               'Interactive Compilation        '.  \n   516 GC0712    03 BACKGROUND -COLOR COB -COLOR-RED BLINK  \n   517 GC0712       FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   518 GC0712       05 LINE 24 COL 01 PIC X(80)  FROM WS-Output-Msg-TXT. \n   519       *>  \n   520       *> LABELS  \n   521       *>  \n   522           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   523              FOREGROUND -COLOR COB -COLOR-CYAN  HIGHLIGHT.  \n   524 GC0712       05 LINE 06 COL 02 VALUE 'Set/Clr Switches Via F1 -F9; ' & \n   525 GC0712                               'Set Config Via F12; Enter Key ' &  \n   526 GC0712                               'Compiles; Esc Quits'.  \n   527 GC0712       05 LINE 14 CO L 02 VALUE 'Extra \"cobc\" Switches, If Any ' &  \n   528 GC0712                               '(\" -save-temps=xxx\" Prevents ' &  \n   529 GC0712                               'Listings):'.  \n   530 GC0712       05 LINE 19 COL 02 VALUE 'Program Execution Arguments, '  & \n   531 GC0712                               'If Any:'.  \n   532 GC0712    03 BACKGROUND -COLOR COB -COLOR-BLACK \n   533 GC0712       FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   534 GC0712       05 LINE 06 COL 23 VALUE 'F1'.  \n   535 GC0712       05         COL 26 VALUE 'F9'.  \n   536 GC0712       05         COL 45 VALUE 'F12'.  \n   537 GC0712       05         COL 50 VALUE 'ENTER'.  \n   538 GC0712       05         COL 70 VALUE 'ESC'.  \n   539       *>  \n   540       *> TOP SECTION BACKGROUND  \n   541       *>  \n   542           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   543              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   544 GC0712       05 LINE 03 COL 62 VALUE 'Enter'.  \n   545 GC0712       05 LINE 04 COL 62 VALUE 'Esc'.  \n   546 \n   547           03 BACKGROUND -COLOR CO B-COLOR-BLACK \n   548              FOREGROUND -COLOR COB -COLOR-GREEN HIGHLIGHT.  \n   549 GC0712       05 LINE 04 COL 03 VALUE 'Folder:   '.  \n   ", "start_char_idx": 866, "end_char_idx": 3289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2fc892d-0236-49cf-a8cd-49a78ce3dfa7": {"__data__": {"id_": "d2fc892d-0236-49cf-a8cd-49a78ce3dfa7", "embedding": null, "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010", "node_type": "4", "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ef2daeb8564355b52154be8c83f70cd71279a57f25e16c0b9941a8413e8f4641", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d031b1a5-b654-486f-b994-7ac1f6d5cb97", "node_type": "1", "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2561642f27cba7c9515e136b5ff89751cd202b5f142d355e6b9dc1c69f5dae17", "class_name": "RelatedNodeInfo"}}, "text": "550 GC0712       05 LINE 03 COL 03 VALUE 'Filename: '.  \n   551 \n   552 GC0712       05 LINE 03 COL 67 VALUE ': Compile   '.  \n   553 GC0712       05 LINE 04 COL 65 VALUE ':   Quit      '.  \n   554       *>  \n   555       *> TOP SECTION PROGRAM INFO  \n   556       *>  \n  ", "start_char_idx": 3289, "end_char_idx": 3561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6668f0db-4fed-41e5-b0a9-023633b4ec91": {"__data__": {"id_": "6668f0db-4fed-41e5-b0a9-023633b4ec91", "embedding": null, "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e", "node_type": "4", "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a6f53c484f1afbbe08c87e7ee8c280f4e743cce99fdcacc9a0e316071cdfe355", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a", "node_type": "1", "metadata": {}, "hash": "0a3506ee6d96fa57f0a120ce8ba41ec02de8cb5a5912d9c4e17929ed0e438d84", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-29 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/ MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 14  \n====== ====================================================================================================================== ==========  \n   557           03 BACKGRO UND-COLOR COB -COLOR-BLACK \n   558              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   559 GC0712       05 LINE 03 COL 13 PIC X(66) FROM WS -Prog-File-Name-TXT. \n   ", "start_char_idx": 0, "end_char_idx": 909, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a": {"__data__": {"id_": "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a", "embedding": null, "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e", "node_type": "4", "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a6f53c484f1afbbe08c87e7ee8c280f4e743cce99fdcacc9a0e316071cdfe355", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6668f0db-4fed-41e5-b0a9-023633b4ec91", "node_type": "1", "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8dfd7abe65b87daedf52fe49b0fd0b2743447c8351882eb30cdca46627a00f70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3b019ff-da87-4a2f-b07f-964d8a2dca17", "node_type": "1", "metadata": {}, "hash": "d1f9188efa8fff3ac6fd8446be58fc8ed3870ba4c3d0566b78d774e11632dfe2", "class_name": "RelatedNodeInfo"}}, "text": "560 GC0712       05 LINE 04 COL 13 PIC X(66) FROM WS -Prog-Folder-TXT. \n   561       *>  \n   562       *> MIDDLE LEFT SECTION F -KEYS \n   563       *>  \n   564           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   565              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   566 GC0712       05 LINE 08 COL 03 VALUE 'F1'.  \n   567 GC0712       05 LINE 09 COL 03 VALUE 'F2'.  \n   568 GC0712       05 LINE 10 COL 03 VALUE 'F3'.  \n   569 GC0712       05 LINE 11 COL 03 VALUE 'F4'.  \n   570 GC0712       05 LINE 12 COL 03 VALUE 'F5'.  \n   571 \n   572 GC0712       05 LINE 08 COL 35 VALUE 'F6'.  \n   573 GC0712       05 LINE 09  COL 35 VALUE 'F7'.  \n   574 GC0712       05 LINE 10 COL 35 VALUE 'F8'.  \n   575 GC0712       05 LINE 11 COL 35 VALUE 'F9'.  \n   576       *>  \n   577       *> MIDDLE LEFT SECTION SWITCHES  \n   578       *>  \n   579           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   580              FOREGROUND -COLOR COB -COLOR-RED   HIGHLIGHT.  \n   581 GC0712       05 LINE 08 COL 06 PIC X(1) FROM WS -CS-DEBUG-CHR. \n   ", "start_char_idx": 909, "end_char_idx": 1944, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3b019ff-da87-4a2f-b07f-964d8a2dca17": {"__data__": {"id_": "e3b019ff-da87-4a2f-b07f-964d8a2dca17", "embedding": null, "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e", "node_type": "4", "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a6f53c484f1afbbe08c87e7ee8c280f4e743cce99fdcacc9a0e316071cdfe355", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a", "node_type": "1", "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8342d640b558f87112d3910a377b9fa7773fe19a78f6e8ad3c02492e388d2827", "class_name": "RelatedNodeInfo"}}, "text": "582 GC0712       05 LINE 09 COL 06 PIC X(1) FROM WS -CS-TRACEALL -CHR. \n   583 GC0712       05 LINE 10 COL 06 PIC X(1) FROM  WS-CS-LIBRARY-CHR. \n   584 GC0712       05 LINE 11 COL 06 PIC X(1) FROM WS -CS-EXECUTE-CHR. \n   585 GC0712       05 LINE 12 COL 06 PIC X(1) FROM WS -CS-LISTING-CHR. \n   586 \n   587 GC0712       05 LINE 08 COL 38 PIC X(1) FROM WS -CS-NOFUNC-CHR. \n   588 GC0712       05 LINE 09 COL 38 PIC X(1) FROM WS -CS-WARNALL-CHR. \n   589 GC0712       05 LINE 10 COL 38 PIC X(1) FROM WS -CS-FREE-CHR. \n   590 GC0712       05 LINE 11 COL 38 PIC X(1) FROM WS -CS-NOTRUNC-CHR. \n   591       *>  \n   592       *> MIDDLE LEFT SECTION BACKGROUND  \n   593       *>  \n   594           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   595              FOREGROUND -COLOR COB -COLOR-GREEN HIGHLIGHT.  \n   596 GC0712       05 LINE 08 COL 07 VALUE 'Assume WITH DEBUGGING MODE'.  \n   597 GC0712       05 LINE 09 COL 07 VALUE 'Proc edure+Statement Trace '.  \n   598 GC0712       05 LINE 10 COL 07 VALUE 'Make a Library ('.  \n   599 GC0712       05         COL 23 VALUE WS -OS-Lib-Type-CONST. \n   600 GC0712       05 LINE 11 COL 07 VALUE 'Execute If Compilation OK '.  \n   601 GC0712       05 LINE  12 COL 07 VALUE 'Produce Full Listing      '.  \n   602 \n   603 GC0712       05 LINE 08 COL 39 VALUE '\"FUNCTION\" Is Optional    '.  \n   604 GC0712       05 LINE 09 COL 39 VALUE 'Enable All Warnings       '.  \n   605 GC0712       05 LINE 10 COL 39 VALUE 'Source Is Free -Format     '.  \n   606 GC0712       05 LINE 11 COL 39 VALUE 'No COMP/BINARY Truncation '.  \n   607       *>  \n   608       *> MIDDLE RIGHT SECTION Text  \n   609       *>  \n   610           03 BACKGROUND -COLOR COB-COLOR-BLACK \n  ", "start_char_idx": 1944, "end_char_idx": 3630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "313052c9-fdbf-43d9-be89-aac53a1e9b7a": {"__data__": {"id_": "313052c9-fdbf-43d9-be89-aac53a1e9b7a", "embedding": null, "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bde7b5fe-6256-4250-9748-fb59a4d2b59b", "node_type": "4", "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1aef900e623f54fb7d2d4403dbcaf16957a2f54855efbec72af4d9dc79e5cf71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "809c657b-a1fa-4055-868c-670bb87ac70c", "node_type": "1", "metadata": {}, "hash": "f31232e924481dceaa3c734e192283d9cc29efd4e6cb9bb2c259c3a3e6bddced", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-30 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 15  \n====== ============================================================================ ====================================================  \n   611              FOREGROUND -COLOR COB -COLOR-GREEN HIGHLIGHT.  \n   612 GC0712       05 LINE 08 COL 69 VALUE 'Current'.  \n   ", "start_char_idx": 0, "end_char_idx": 831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "809c657b-a1fa-4055-868c-670bb87ac70c": {"__data__": {"id_": "809c657b-a1fa-4055-868c-670bb87ac70c", "embedding": null, "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bde7b5fe-6256-4250-9748-fb59a4d2b59b", "node_type": "4", "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1aef900e623f54fb7d2d4403dbcaf16957a2f54855efbec72af4d9dc79e5cf71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "313052c9-fdbf-43d9-be89-aac53a1e9b7a", "node_type": "1", "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "90b9864f591d6686eb1d5b237ce06c9ef2c3b02b325c8072021c92d828ee48d7", "class_name": "RelatedNodeInfo"}}, "text": "613 GC0712       05 LINE 09 COL 69 VALUE 'Config:'.  \n   614       *>  \n   615       *> MIDDLE RIGHT SECTION CONFIG FILE  \n   616       *>  \n   617           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   618              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   619 GC0712       05 LINE 10 COL 69 PIC X(10)  \n   620 GC0712          FROM WS -CS-Filename-TXT (WS-CS-Config-NUM). \n   621       *>  \n   622       *> FREE -FORM OPTIONS FIELDS  \n   623       *>  \n   624           03 BACKGROUND -COLOR COB -COLOR-BLACK \n   625              FOREGROUND -COLOR COB -COLOR-WHITE HIGHLIGHT.  \n   626 GC0712       05 LINE 16 COL 03 PIC X(76) USING WS -CS-Extra-H1-TXT. \n   627 GC0712       05 LINE 17 COL 03 PIC X(76) USING WS -CS-Extra-H2-TXT. \n   628 GC0712       05 LINE 21 COL 03 PIC X(76) USING WS -CS-Arg-H1-TXT. \n   629 GC0712       05 LINE 22 COL 03 PIC X(76) USING WS -CS-Arg-H2-TXT. \n  ", "start_char_idx": 831, "end_char_idx": 1721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ccb2e24-774e-48ca-90db-211ebed1b933": {"__data__": {"id_": "7ccb2e24-774e-48ca-90db-211ebed1b933", "embedding": null, "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7118a60-6ed8-4961-b211-dd32ae93e8d3", "node_type": "4", "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc9c5fe6924e184d0ff0a4c67f176fb3badc4748712c0558ebe4cb77a67aa29f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "077347fb-658f-4788-b8cb-bb598760b89c", "node_type": "1", "metadata": {}, "hash": "d57c53673b1298a66ecee5e6c5ed69a0c3f0275d510c9b06092f6634e17f5b47", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-31 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 16  \n====== ================================================================================================= ===============================  \n   630       /  \n   631        PROCEDURE DIVISION.  \n   632       *>***************************************************************  \n   633       *> Legend to procedure names:                                  **  \n   634       *>                                                             ** \n   635       *> 00x -xxx   All MAIN driver procedures                        **  \n   636       *> 0xx -xxx   All GLOBAL UTILITY procedures                     **  \n   637       *> 1xx -xxx   All INITIA LIZATION procedures                     **  \n   638       *> 2xx -xxx   All CORE PROCESSING procedures                    **  \n   639       *> 9xx -xxx   All TERMINATION procedures                        **  \n   640       *>**************************************** ***********************  \n   641        DECLARATIVES.  \n   ", "start_char_idx": 0, "end_char_idx": 1524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "077347fb-658f-4788-b8cb-bb598760b89c": {"__data__": {"id_": "077347fb-658f-4788-b8cb-bb598760b89c", "embedding": null, "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7118a60-6ed8-4961-b211-dd32ae93e8d3", "node_type": "4", "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cc9c5fe6924e184d0ff0a4c67f176fb3badc4748712c0558ebe4cb77a67aa29f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ccb2e24-774e-48ca-90db-211ebed1b933", "node_type": "1", "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ecd5350fa27802ed1655a9c1714aa3bfdcf1b2661d9ed91e56921135614afac3", "class_name": "RelatedNodeInfo"}}, "text": "642        000 -File-Error SECTION.  \n   643            USE AFTER STANDARD ERROR PROCEDURE ON F -Source-Code-FILE. \n   644            COPY FileStat -Msgs \n   645                REPLACING STATUS BY WS -FSM-Status-CD \n   646                          MSG    BY WS -FSM-Msg-TXT. \n        EVALUATE WS -FSM-Status-CD \n        WHEN 00 MOVE 'SUCCESS                  ' TO WS -FSM-Msg-TXT \n        WHEN 02 MOVE 'SUCCESS DUPLICATE        ' TO WS -FSM-Msg-TXT \n        WHEN 04 MOVE 'SU CCESS INCOMPLETE       ' TO WS -FSM-Msg-TXT \n        WHEN 05 MOVE 'SUCCESS OPTIONAL         ' TO WS -FSM-Msg-TXT \n        WHEN 07 MOVE 'SUCCESS NO UNIT          ' TO WS -FSM-Msg-TXT \n        WHEN 10 MOVE 'END OF FILE              ' TO WS -FSM-Msg-TXT \n        WHEN 14 MOVE 'OUT OF KEY RANGE         ' TO WS -FSM-Msg-TXT \n        WHEN 21 MOVE 'KEY INVALID              ' TO WS -FSM-Msg-TXT \n        WHEN 22 MOVE 'KEY EXISTS               ' TO WS -FSM-Msg-TXT \n        WHEN 23 MOVE 'KEY NOT EXISTS           ' TO WS -FSM-Msg-TXT \n        WHEN 30 MOVE 'PERMANENT ERROR          ' TO WS -FSM-Msg-TXT \n        WHEN 31 MOVE 'INCONSISTENT FILENAME    ' TO WS -FSM-Msg-TXT \n        WHEN 34 MOVE 'BOUNDARY VIOLATION       ' TO WS -FSM-Msg-TXT \n        WHEN 35 MOVE 'FILE NOT FOUND           ' TO WS-FSM-Msg-TXT \n        WHEN 37 MOVE 'PERMISSION DENIED        ' TO WS -FSM-Msg-TXT \n        WHEN 38 MOVE 'CLOSED WITH LOCK         ' TO WS -FSM-Msg-TXT \n        WHEN 39 MOVE 'CONFLICT ATTRIBUTE       ' TO WS -FSM-Msg-TXT \n        WHEN 41 MOVE 'ALREADY O PEN             ' TO WS -FSM-Msg-TXT \n        WHEN 42 MOVE 'NOT OPEN                 ' TO WS -FSM-Msg-TXT \n        WHEN 43 MOVE 'READ NOT DONE            ' TO WS -FSM-Msg-TXT \n        WHEN 44 MOVE 'RECORD OVERFLOW          ' TO WS -FSM-Msg-TXT \n        WHEN 46 MOV E 'READ ERROR               ' TO WS -FSM-Msg-TXT \n        WHEN 47 MOVE 'INPUT DENIED             ' TO WS -FSM-Msg-TXT \n        WHEN 48 MOVE 'OUTPUT DENIED            ' TO WS -FSM-Msg-TXT \n        WHEN 49 MOVE 'I/O DENIED               ' TO WS -FSM-Msg-TXT \n        WHEN 51 MOVE 'RECORD LOCKED            ' TO WS -FSM-Msg-TXT \n        WHEN 52 MOVE 'END -OF-PAGE              ' TO WS -FSM-Msg-TXT \n        WHEN 57 MOVE 'I/O LINAGE               ' TO WS -FSM-Msg-TXT \n        WHEN 61 MOVE 'FILE SHARING FAILURE     ' TO WS -FSM-Msg-TXT \n        WHEN 91 MOVE 'FILE NOT AVAILABLE       ' TO WS -FSM-Msg-TXT \n        END-EVALUATE.  \n   647            MOVE SPACES TO WS -Output-Msg-TXT \n   648            IF WS -FSM-Status-CD = 35 \n   649                DISPLAY  \n   650                    'File not found: \"'  \n   651                    TRIM(WS -File-Name-TXT,TRAILING)  \n  ", "start_char_idx": 1524, "end_char_idx": 4174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70155e9e-c4b8-463a-9a88-9e6571558f17": {"__data__": {"id_": "70155e9e-c4b8-463a-9a88-9e6571558f17", "embedding": null, "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65108a05-dafa-492f-bbb6-bbb355922faf", "node_type": "4", "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8e9bc4324641779941b167ba48d42865d70d6978c26e40fcf4b3127286b2931", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0364b81c-d2bd-4169-bfb7-a2e43242d236", "node_type": "1", "metadata": {}, "hash": "83749496aafaac5c15d5a2515ba2113d99042de0242b862484a53c699b02020f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-32 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 17 \n====== ====================================================================================================================== ==========  \n   652                    '\"'  \n   653            ELSE  \n   654                DISPLAY  \n   655                    'Error ac cessing file: \"'  \n   656                    TRIM(WS -File-Name-TXT,TRAILING)  \n   657                    '\"'  \n   658            END -IF \n   659            GOBACK  \n   660            .  \n   661        END DECLARATIVES.  \n   ", "start_char_idx": 0, "end_char_idx": 1052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0364b81c-d2bd-4169-bfb7-a2e43242d236": {"__data__": {"id_": "0364b81c-d2bd-4169-bfb7-a2e43242d236", "embedding": null, "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65108a05-dafa-492f-bbb6-bbb355922faf", "node_type": "4", "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e8e9bc4324641779941b167ba48d42865d70d6978c26e40fcf4b3127286b2931", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70155e9e-c4b8-463a-9a88-9e6571558f17", "node_type": "1", "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "29e8bf45fdcdf8490671fb7a29eb5c8a7cb330c523ea0263cd979db956700e57", "class_name": "RelatedNodeInfo"}}, "text": "662 \n   663        000 -Main SECTION.  \n   664            PERFORM 100 -Initialization  \n   665 GC0609     SET WS -RS-Not-Complete -BOOL TO TRUE  \n   666 GC0609     PERFORM UNTIL WS -RS-Complete -BOOL \n   667 GC0609         PERFORM 200 -Let-User-Set-Switches  \n   668 GC0609         PERFORM 210 -Run-Compiler  \n   669 GC041 0         IF (WS -RS-Compile-OK-BOOL OR WS -RS-Compile-OK-Warn-BOOL) \n   670 GC0712         AND (WS -CS-LISTING-CHR > SPACE)  \n   671 GC0712             DISPLAY S -Blank-SCR \n   672 GC0410             PERFORM 220 -Make-Listing \n   673 GC0410         END -IF \n   674 GC0709         IF  (WS -CS-EXECUTE-CHR NOT = SPACES)  \n   675 GC0709         AND (WS -RS-Output-File-Avail-BOOL) \n   676 GC0609             PERFORM 230 -Run-Program \n   677 GC0609         END -IF \n   678 GC0712         PERFORM 250 -Autoload -Listing \n   679 GC0609     END -PERFORM \n   680            PERFORM 900 -Terminate  \n   681       * -- Control will NOT return  \n   682            .  \n   683       * -- Control will NOT return  \n  ", "start_char_idx": 1052, "end_char_idx": 2079, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41d8c304-9d95-4088-8836-1137066833cf": {"__data__": {"id_": "41d8c304-9d95-4088-8836-1137066833cf", "embedding": null, "metadata": {"page_label": "291", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68939d01-9e64-4799-af4a-228ef42c0cd4", "node_type": "4", "metadata": {"page_label": "291", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1daeaff0652323717e742c3b6b23de58b33556afb5a2ef2f2feccdc414085ed1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-33 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 18  \n====== ====================================================================================================================== ==========  \n   684       /  \n   685       *>**************************** ***********************************  \n   686       *> Perform all program -wide initialization operations          **  \n   687       *>***************************************************************  \n   688        100 -Initialization SECTION.  \n   689       *>***** **********************************************************  \n   690       *> Make sure full screen -handling is in effect                 **  \n   691       *>***************************************************************  \n   692            SET ENVIRONMENT 'COB_ SCREEN_EXCEPTIONS' TO 'Y'  \n   693            SET ENVIRONMENT 'COB_SCREEN_ESC'        TO 'Y'  \n   694       *>***************************************************************  \n   695       *> Get GCic Compilation Date/Time                              **  \n   696       *>***************************************************************  \n   697            MOVE WHEN -COMPILED (1:12) TO WS -OC-Compile-DT \n   698            INSPECT WS -OC-Compile-DT \n   699                REPLACING ALL '/' BY ':'  \n   700                A FTER INITIAL SPACE  \n   701       *>***************************************************************  \n   702       *> Convert WS -CS-All-Switches -TXT to Needed Alphanumeric Values            **  \n   703       *>**************************************************** ***********  \n   704            INSPECT WS -CS-All-Switches -TXT \n   705                REPLACING ALL '0' BY SPACE  \n   706                          ALL '1' BY SELCHAR  \n   707       *>***************************************************************  \n   708       *> Process filename (the only command -line argument)           **  \n   709       *>***************************************************************  \n   710 GC0712     ACCEPT WS -Cmd-Args-TXT FROM COMMAND -LINE \n   711 GC0712     MOVE 1 TO WS -Cmd-SUB \n   712 GC0712     IF WS-Cmd-Args-TXT(WS-Cmd-SUB:1) = '\"' OR \"'\"  \n   713 GC0712         MOVE WS -Cmd-Args-TXT(WS-Cmd-SUB:1) \n   714 GC0712           TO WS -Cmd-End-Quote-CHR \n   715 GC0712         ADD 1 TO WS -Cmd-SUB \n   716 GC0712         UNSTRING WS -Cmd-Args-TXT \n   717 GC0712             DELIMITED BY WS -Cmd-End-Quote-CHR \n   718 GC0712             INTO WS -File-Name-TXT \n   719 GC0712             WITH POINTER WS -Cmd-SUB \n   720 GC0712     ELSE  \n   721 GC0712         UNSTRING WS -Cmd-Args-TXT \n   722 GC0712             DELIMITED BY ALL  SPACES \n   723 GC0712             INTO WS -File-Name-TXT \n   724 GC0712             WITH POINTER WS -Cmd-SUB \n   725 GC0712     END -IF \n   726            IF WS -File-Name-TXT = SPACES  \n   727 GC0712         DISPLAY 'No program filename was specified'  \n   728                PERFORM 900 -Terminate  \n   729       * ------ Control will NOT return  \n   730            END -IF \n   731       *>***************************************************************  \n   732       *> Determine if 'Make A Library' feature should b e forced 'ON' **  \n   733       *>***************************************************************  \n   734            PERFORM 240 -Find-LINKAGE-SECTION \n   735       *>***************************************************************  \n   736       *> Split 'WS -File-Name-TXT' into 'WS -Prog-Folder-TXT' and      **  \n   737       *> 'WS -Prog-File-Name-TXT'                                     **  \n  ", "start_char_idx": 0, "end_char_idx": 4072, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7ecb880-bbde-4d52-b082-be47d9c0c932": {"__data__": {"id_": "f7ecb880-bbde-4d52-b082-be47d9c0c932", "embedding": null, "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8546289a-22cb-4456-978d-ade35ec2c7f7", "node_type": "4", "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "de9e45e88a4b56259e2657dbf3900ddf6f0472e04b184ff3e6a9babec21317c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1b5908d-69c5-4715-af02-034076d4fa59", "node_type": "1", "metadata": {}, "hash": "1c9304269aa7c395ee236b5611a5509df844061167da6a581e274ac0e5eabaf9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-34 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2 013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 19  \n====== ====================================================================================================================== ==========  \n   738       *>***************************************************************  \n   739 GC0909     IF WS-OS-Cygwin-BOOL AND WS -File-Name-TXT (2:1) = ':'  \n   740 GC0712         MOVE ' \\' TO WS-OS-Dir-CHR \n   741 GC0909     END -IF \n   742 GC0712     MOVE LENGTH(WS -File-Name-TXT) TO WS -I-SUB \n   743 GC0712     PERFORM UNTIL WS -I-SUB = 0 \n   744 GC0712     OR WS-FN-CHR (WS-I-SUB) = WS -OS-Dir-CHR \n   745                SUBTRACT 1 FROM WS -I-SUB \n   746            END -PERFORM \n   747            IF WS -I-SUB = 0 \n   748                MOVE SPACES    TO WS -Prog-Folder-TXT \n   749                MOVE WS -File-Name-TXT TO WS -Prog-File-Name-TXT \n   750            ELSE  \n   751                MOVE '*' TO WS -FN-CHR (WS-I-SUB) \n   752                UNSTRING WS -File-Name-TXT DELIMITED BY '*'  \n   753                    INTO WS -Prog-Folder-TXT \n   754                         WS -Prog-File-Name-TXT \n   755 GC0712         MOVE WS -OS-Dir-CHR TO WS -FN-CHR (WS-I-SUB) \n   756            END -IF \n   757            IF WS -Prog-Folder-TXT = SPACES  \n   758                ACCEPT WS -Prog-Folder-TXT FROM ENVIR ONMENT 'CD'  \n   759 GC0909     ELSE  \n   760 GC0909         CALL 'CBL_CHANGE_DIR'  \n   761 GC0909             USING TRIM(WS -Prog-Folder-TXT,TRAILING)  \n   762            END -IF \n   763 GC0909     IF WS -OS-Cygwin-BOOL AND WS -File-Name-TXT (2:1) = ':'  \n   764 GC0712         MOVE '/' TO WS -OS-Dir-CHR \n   765 GC0909     END -IF \n   766       *>***************************************************************  \n   767       *> Split 'WS -Prog-File-Name-TXT' into 'WS -Pgm-Nm-TXT' &        **  \n   768       *> 'WS -Prog-Extension -TXT'                                     ** \n   769       *>***************************************************************  \n   770 GC0712     MOVE LENGTH(WS -Prog-File-Name-TXT) TO WS -I-SUB \n   771 GC0712     PERFORM UNTIL WS -I-SUB = 0 \n   772 GC0712     OR WS -PFN-CHR (WS-I-SUB) = '.'  \n   773 GC0712         SUBTRACT 1 FROM WS -I-SUB \n   774 GC0712     END -PERFORM \n   775 GC0712     IF WS -I-SUB = 0 \n   776 GC0712         MOVE WS -Prog-File-Name-TXT TO WS -Pgm-Nm-TXT \n   777 GC0712         MOVE SPACES         TO WS -Prog-Extension-TXT \n   778 GC0712     ELSE  \n   779 GC0712         MOVE '*' TO WS -PFN-CHR (WS-I-SUB) \n   780 GC0712         UNSTRING WS -Prog-File-Name-TXT DELIMITED BY '*'  \n   781 GC0712             INTO WS -Pgm-Nm-TXT \n   782 GC0712                  WS -Prog-Extension -TXT \n   783 GC0712         MOVE '.' ", "start_char_idx": 0, "end_char_idx": 3194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1b5908d-69c5-4715-af02-034076d4fa59": {"__data__": {"id_": "c1b5908d-69c5-4715-af02-034076d4fa59", "embedding": null, "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8546289a-22cb-4456-978d-ade35ec2c7f7", "node_type": "4", "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "de9e45e88a4b56259e2657dbf3900ddf6f0472e04b184ff3e6a9babec21317c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7ecb880-bbde-4d52-b082-be47d9c0c932", "node_type": "1", "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6ee2f26c5febd5dd88362d5cb3adbffc16334c58124a6caa0725cfd51a78da0", "class_name": "RelatedNodeInfo"}}, "text": "TO WS -PFN-CHR (WS-I-SUB) \n   784 GC0712     END -IF \n   785       *>***************************************************************  \n   786       *> Build initial Line 24 Messa ge                               **  \n   787       *>***************************************************************  \n   788 GC0909     MOVE ALL LD -Horiz-Line TO WS -Horizontal -Line-TXT. \n   789 GC0410     MOVE CONCATENATE(' GCic for '  \n   790 GC0410                      TRIM(WS-OS-Type-TXT(WS-OS-Type-CD),Trailing)  \n   791 GC0712                      ' Copyright (C) 2009 - 2013, Gary L. '  \n  ", "start_char_idx": 3194, "end_char_idx": 3774, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f139cac1-ee59-4f5f-96ea-3449cfb71c35": {"__data__": {"id_": "f139cac1-ee59-4f5f-96ea-3449cfb71c35", "embedding": null, "metadata": {"page_label": "293", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4ef13f8-6316-4d8d-ad33-b85f67b88a73", "node_type": "4", "metadata": {"page_label": "293", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1d79948046c592c364085f0c112dad769ea769a75cda8d692d370a2b6190ef01", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-35 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 20  \n====== ====================================================================================================================== ==========  \n   792 GC0410                      'Cutler, GPL')  \n   793 GC0410       TO WS -Output-Msg-TXT. \n   794 GC0909     .  \n  ", "start_char_idx": 0, "end_char_idx": 823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bab92b7f-d609-4675-9e37-f727b7f7a223": {"__data__": {"id_": "bab92b7f-d609-4675-9e37-f727b7f7a223", "embedding": null, "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98c2f212-2e85-4a2a-ba5e-7f2865a4c2d6", "node_type": "4", "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9e47fd63703f6c8f1bc6abaf921d93bcfc30c26554e7c2740beec5492781c08", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3933f77-9c67-4c35-9715-2b3ef2819d0d", "node_type": "1", "metadata": {}, "hash": "c8ea47f0369c05ca7930e2de4d05504d35acc5f283784c331e9ae13ae5d172dd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-36 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 21  \n====== ============================================================================ ====================================================  \n   795       /  \n   796       *>***************************************************************  \n   797       *> Show the user the current switch settings and allow them to **  \n   798       *> be changed.                                                 **  \n   799       *>***************************************************************  \n   800        200 -Let-User-Set-Switches SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 1099, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3933f77-9c67-4c35-9715-2b3ef2819d0d": {"__data__": {"id_": "a3933f77-9c67-4c35-9715-2b3ef2819d0d", "embedding": null, "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98c2f212-2e85-4a2a-ba5e-7f2865a4c2d6", "node_type": "4", "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a9e47fd63703f6c8f1bc6abaf921d93bcfc30c26554e7c2740beec5492781c08", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bab92b7f-d609-4675-9e37-f727b7f7a223", "node_type": "1", "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "964ca44153f2155cafb136caa3fae1e9200ce2b5d9c00b1992b9114721c60f31", "class_name": "RelatedNodeInfo"}}, "text": "801            SET WS -RS-Switch-Changes-BOOL TO TRUE \n   802            PERFORM UNTIL WS -RS-No-Switch-Changes-BOOL \n   803                ACCEPT S -Switches -SCR \n   804                IF COB -CRT-STATUS > 0  \n   805                    EVALUATE COB -CRT-STATUS \n   806                        WHEN COB -SCR-F1 \n   807                            IF WS -CS-DEBUG-CHR = SPACE  \n   808 GC0712                         MOVE SELCHAR TO WS -CS-DEBUG-CHR \n   809                            ELSE  \n   810                                MOVE ' ' TO WS -CS-DEBUG-CHR \n   811                            END-IF \n   812 GC0712                 WHEN COB -SCR-F2 \n   813 GC0712                     IF  WS -CS-TRACEALL -CHR = SPACE  \n   814 GC0712                         MOVE SELCHAR TO WS -CS-TRACEALL -CHR \n   815 GC0712                     ELSE  \n   816 GC0712                         MOVE ' ' TO WS -CS-TRACEALL -CHR \n   817 GC0712                     END -IF \n   818                        WHEN COB -SCR-F3 \n   819 GC0712                     IF WS -CS-LIBRARY-CHR = SPACE  \n   820 GC0712                         MOVE SELCHAR TO  WS-CS-LIBRARY-CHR \n   821                            ELSE  \n   822 GC0712                         MOVE ' ' TO WS -CS-LIBRARY-CHR \n   823                            END -IF \n   824                        WHEN COB -SCR-F4 \n   825                            IF  WS -CS-EXECUTE-CHR = SPACE  \n   826 GC0712                         MOVE SELCHAR TO WS -CS-EXECUTE-CHR \n   827                            ELSE  \n   828                                MOVE ' ' TO WS -CS-EXECUTE-CHR \n   829                            END -IF \n   830 GC0712                 WHEN COB -SCR-F5 \n   831 GC0712                     IF WS -CS-LISTING-CHR = SPACE  \n   832 GC0712                         MOVE SELCHAR TO WS -CS-LISTING-CHR \n   833 GC0712                     ELSE  \n   834 GC0712                         MOVE ' ' TO WS -CS-LISTING-CHR \n   835 GC0712                     END -IF \n   836 GC0712                 WHEN COB -SCR-F6 \n   837 GC0712                     IF WS -CS-NOFUNC-CHR = SPACE  \n   838 GC0712                         MOVE SELCHAR TO WS -CS-NOFUNC-CHR \n   839 GC0712                     ELSE  \n   840 GC0712                         MOVE ' ' TO WS -CS-NOFUNC-CHR \n   841 GC0712                     END -IF \n   842 GC0712                 WHEN COB -SCR-F7 \n   843 GC0712                     IF WS -CS-WARNALL-CHR = SPACE  \n   844 GC0712                         MOVE SELCHAR TO WS -CS-WARNALL-CHR \n   845 GC0712                     ELSE  \n   846 GC0712                         MOVE ' ' TO WS -CS-WARNALL-CHR \n   847 GC0712                     END -IF \n   848 GC0712                 WHEN COB -SCR-F8 \n  ", "start_char_idx": 1099, "end_char_idx": 3805, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bef9d154-3336-4583-a64a-3d2766ff3691": {"__data__": {"id_": "bef9d154-3336-4583-a64a-3d2766ff3691", "embedding": null, "metadata": {"page_label": "295", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "618e8839-629c-44a6-aa4d-320a6d08ae71", "node_type": "4", "metadata": {"page_label": "295", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1e9a7dfba6d6fe9b0d1bdb31c5efd7be486de8facafca4a72f6ca3752107899e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-37 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 22  \n====== ========================================================================================= =======================================  \n   849 GC0712                     IF WS -CS-FREE-CHR = SPACE  \n   850 GC0712                         MOVE SELCHAR TO WS -CS-FREE-CHR \n   851 GC0712                     ELSE  \n   852 GC0712                         MOVE ' ' TO WS -CS-FREE-CHR \n   853 GC0712                     END -IF \n   854 GC0712                 WHEN COB -SCR-F9 \n   855 GC0712                     IF  WS -CS-NOTRUNC-CHR = SPACE  \n   856 GC0712                         MO VE SELCHAR TO WS -CS-NOTRUNC-CHR \n   857 GC0712                     ELSE  \n   858 GC0712                         MOVE ' ' TO WS -CS-NOTRUNC-CHR \n   859 GC0712                     END -IF \n   860                        WHEN COB -SCR-ESC \n   861                            PERFORM 900 -Terminate  \n   862       * ------------------  Control will NOT return  \n   863 GC0712                 WHEN COB -SCR-F12 \n   864 GC0712                     ADD 1 TO WS -CS-Config-NUM \n   865 GC0712                     IF WS -CS-Config-NUM > 7 \n   866 GC0712                         MOVE 1 TO WS -CS-Config-NUM \n   867 GC0712                     END -IF \n   868                        WHEN OTHER  \n   869                            MOVE 'An unsupported key was pressed'  \n   870                              TO WS -Output-Msg-TXT \n   871                    END -EVALUATE  \n   872                ELSE  \n   873                    SET WS -RS-No-Switch-Changes-BOOL TO TRUE  \n   874                END -IF \n   875            END -PERFORM \n   876            .  \n  ", "start_char_idx": 0, "end_char_idx": 2186, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6da33626-2f46-468b-8c32-b0901c5dd36d": {"__data__": {"id_": "6da33626-2f46-468b-8c32-b0901c5dd36d", "embedding": null, "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff702a23-c773-4af9-aa85-9d32e2641de0", "node_type": "4", "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab17110953ddea206e48ecddd8cec3778c6776c92b5afac3c23d1eab13638bae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a065238b-f945-4e8a-a7d6-d3894fce4433", "node_type": "1", "metadata": {}, "hash": "29b98305e3ec960673f5aac51efbbe533965b9c2c343ce554f6b856267f3fe44", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-38 GNU COBOL V2.0 11FEB2012 Sou rce Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 23  \n====== ================================================================================================================= ===============  \n   877       /  \n   878       *>***************************************************************  \n   879       *> Run the compiler using the switch settings we've prepared.  **  \n   880       *>**************************************************** ***********  \n   881        210 -Run-Compiler SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 1011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a065238b-f945-4e8a-a7d6-d3894fce4433": {"__data__": {"id_": "a065238b-f945-4e8a-a7d6-d3894fce4433", "embedding": null, "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff702a23-c773-4af9-aa85-9d32e2641de0", "node_type": "4", "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab17110953ddea206e48ecddd8cec3778c6776c92b5afac3c23d1eab13638bae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6da33626-2f46-468b-8c32-b0901c5dd36d", "node_type": "1", "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "84f8047c873d8306500af9778d5c7bb2450859b9b17e3e30f810a95b6d14cbfe", "class_name": "RelatedNodeInfo"}}, "text": "882            MOVE SPACES TO WS -Cmd-TXT \n   883                           WS -Cobc-Cmd-TXT \n   884                           WS -Output-Msg-TXT \n   885            DISPLAY S -Switches -SCR \n   886            M OVE 1 TO WS -I-SUB \n   887 GC0712     MOVE LOWER -CASE(WS-CS-Filename -TXT (WS-CS-Config-NUM)) \n   888 GC0712       TO WS -Config-Fn-TXT \n   889       *>***************************************************************  \n   890       *> Build the 'cobc' command                                    ** \n   891       *>***************************************************************  \n   892 GC0909     MOVE SPACES TO WS -Cobc-Cmd-TXT \n   893 GC0909     STRING 'cobc -v -std=' \n   894 GC0909         TRIM(WS -Config-Fn-TXT,TRAILING)  \n   895 GC0909         ' '  \n   896 GC0909         INTO WS -Cobc-Cmd-TXT \n   897 GC0909         WITH POINTER WS -I-SUB \n   898            IF WS -CS-LIBRARY-CHR NOT = ' '  \n   899                STRING ' -m ' \n   900                    DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   901                    WITH POINTER WS -I-SUB \n   902            ELSE  \n   903                STRING ' -x ' \n   904                    DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   905                    WITH POINTER WS -I-SUB \n   906            END -IF \n   907            IF WS -CS-DEBUG-CHR NOT = ' '  \n   908                STRING ' -fdebugging -line ' \n   909                    DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   910                    WITH POINTER WS -I-SUB \n   911            END -IF \n   912            IF WS -CS-NOTRUNC-CHR NOT = ' '  \n   913                STRING ' -fnotrunc '  \n   914                    DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   915                    WITH POINTER WS -I-SUB \n   916            END -IF \n   917            IF WS -CS-TRACEALL -CHR NOT = ' '  \n   918 GC0809         STRING ' -ftraceall '  \n   919                    DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   920                    WITH POINTER WS -I-SUB \n   921            END -IF \n   922 GC0712     IF WS -CS-NOFUNC-CHR NOT = ' '  \n   923 GC0712         STRING ' -fintrinsic=all '  \n   924 GC0712             DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   925 GC0712             WITH POINTER WS -I-SUB \n   926 GC0712     END -IF \n   927 GC0712     IF WS -CS-WARNALL-CHR NOT = ' '  \n   928 GC0712         STRING ' -Wall ' \n   929 GC0712             DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   930 GC0712             WITH POINTER WS -I-SUB \n  ", "start_char_idx": 1011, "end_char_idx": 3450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d13658c4-63e5-49cc-a707-488a8e0eb1c5": {"__data__": {"id_": "d13658c4-63e5-49cc-a707-488a8e0eb1c5", "embedding": null, "metadata": {"page_label": "297", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46a7ac91-7a0d-46c3-b13a-fd529634e344", "node_type": "4", "metadata": {"page_label": "297", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0622e3fcde166310a4828daaea98d1ea5ec08d0b169e0639f8ed6ca1bae0e095", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-39 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 24  \n====== ====================================================================================================================== ==========  \n   931 GC0712     END -IF \n   932 GC0712     IF WS -CS-FREE-CHR NOT = ' '  \n   933 GC0712         STRING ' -free ' \n   934 GC0712             DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   935 GC0712             WITH POINTER WS -I-SUB \n   936 GC0712     ELSE  \n   937 GC0712         STRING ' -fixed ' \n   938 GC0712             DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   939 GC0712             WITH POINTER WS -I-SUB \n   940 GC0712     END -IF \n   941 \n   942 GC0712     MOVE 0 TO WS -Tally-QTY \n   943 GC0712     INSPECT WS -CS-Extra-TXT \n   944 GC0712         TALLYING WS -Tally-QTY FOR ALL ' -save-temps' \n   945 GC0712     IF WS -CS-LISTING-CHR > SPA CE \n   946 GC0712     AND WS -Tally-QTY > 0 \n   947 GC0712         MOVE SPACE TO WS -CS-LISTING-CHR *> Can't generate listing if -save-temps used  \n   948 GC0712     END -IF \n   949 GC0712     IF WS -CS-LISTING-CHR > SPACE  \n   950 GC1010         STRING ' -save-temps ' \n   951 GC1010             DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   952 GC1010             WITH POINTER WS -I-SUB \n   953 GC1010     END -IF \n   954 \n   955 GC0709     IF WS -CS-Extra-TXT > SPACES  \n   956 GC0709         STRING ' '  \n   957 GC0709                TRIM(WS -CS-Extra-TXT,TRAILING)  \n   958 GC0709                ' '  \n   959 GC0709                DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   960 GC0709                WITH POINTER WS -I-SUB \n   961 GC0709     END -IF \n   962 GC0909     STRI NG TRIM(WS -Prog-File-Name-TXT,TRAILING)  \n   963 GC0909         DELIMITED SIZE INTO WS -Cobc-Cmd-TXT \n   964 GC0909         WITH POINTER WS -I-SUB \n   965       *>***************************************************************  \n   966       *> Prepare the compila tion listing file                        **  \n   967       *>***************************************************************  \n   968 GC1113     MOVE CONCATENATE(TRIM(WS -Pgm-Nm-TXT,Trailing),'.gclst')  \n   969 GC0712       TO WS -Listing-Filename -TXT \n   970 GC071 2     CALL 'CBL_DELETE_FILE' USING WS -Listing-Filename -TXT \n   971       *>***************************************************************  \n   972       *> Now execute the 'cobc' command                              **  \n   973       *>************************ ***************************************  \n   974 GC0410     MOVE ' Compiling...' TO WS -Output-Msg-TXT \n   975 GC0410     DISPLAY S -Switches -SCR \n   976 GC0609     SET WS -RS-Output-File-Avail-BOOL TO TRUE  \n   977            MOVE SPACES TO WS -Cmd-TXT \n   978            STRING TRIM(WS -Cobc-Cmd-TXT,TRAILING)  \n   979 GC0712            ' >' WS -Listing-Filename -TXT \n   980 GC0712            ' 2>&1'  \n   981                   DELIMITED SIZE  \n   982                   INTO WS -Cmd-TXT \n   983 DEBUG D    DISPLAY WS -Cmd-TXT UPON SY SERR \n   984            CALL 'SYSTEM' USING TRIM(WS -Cmd-TXT,TRAILING)  \n  ", "start_char_idx": 0, "end_char_idx": 3532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb25cf23-4874-4b20-aca0-274edb31e358": {"__data__": {"id_": "fb25cf23-4874-4b20-aca0-274edb31e358", "embedding": null, "metadata": {"page_label": "298", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082b069f-4f88-49bc-9aed-5e7a723505d3", "node_type": "4", "metadata": {"page_label": "298", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a6f4a52d24954315035943c98fad0589703e07c94d23408ec52847cc5e730816", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-40 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 25  \n====== ====================================================================================================================== ==========  \n   985 GC0712     OPEN EXTEND F -Cobc-Output-FILE \n   986 GC0712     WRITE F -Cobc-Output-REC FROM SPACES  \n   987 GC0712     IF RETURN -CODE = 0  \n   988 GC0712         SET WS -RS-Compile-OK-BOOL TO TRUE  \n   989 GC0712         MOVE ' Compilation Was Successful' TO WS -Output-Msg-TXT \n   990 GC0712         MOVE CONCATENATE('GNU COBOL',WS -Output-Msg-TXT) \n   991 GC0712           TO F-Cobc-Output-REC \n   992 GC0712         WRITE F -Cobc-Output-REC \n   993 GC0712         SET WS -RS-Complete -BOOL TO TRUE  \n   994 GC0712     ELSE  \n   995 GC0712         SET WS -RS-Compile-Failed-BOOL TO TRUE  \n   996 GC0712         MOVE CONCATENATE(' Com pilation Failed - See ', \n   997 GC0712                     TRIM(WS -Listing-Filename -TXT,Trailing))  \n   998 GC0712           TO WS -Output-Msg-TXT \n   999 GC0712         MOVE 'GNU COBOL Compilation HAS FAILED - See Above'  \n  1000 GC0712           TO F -Cobc-Output-REC \n  1001 GC0712         WRITE F -Cobc-Output-REC \n  1002 GC0712     END -IF \n  1003 GC0712     CLOSE F -Cobc-Output-FILE \n  1004 GC0712     DISPLAY S -Switches -SCR \n  1005 GC0712     CALL 'C$SLEEP' USING 2  \n  1006 GC0712     MOVE SPACES TO WS -Output-Msg-TXT \n  1007            IF WS -RS-Compile-Failed-BOOL \n  1008 GC0712         PERFORM 250 -Autoload -Listing \n  1009                PERFORM 900 -Terminate  \n  1010       *> ----- Control will not return  \n  1011            END -IF \n  1012            .  \n  ", "start_char_idx": 0, "end_char_idx": 2130, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2483c03e-db60-4860-a3f6-eab291acfe65": {"__data__": {"id_": "2483c03e-db60-4860-a3f6-eab291acfe65", "embedding": null, "metadata": {"page_label": "299", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b5f1d7d-9c5e-4902-8d96-74e800e9bcf5", "node_type": "4", "metadata": {"page_label": "299", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4c1324b41b5e732affe5b10736aa02168c62d00eef1518edfa9a64e973bac1e1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-41 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 26  \n====== ================================================================================================= ===============================  \n  1013       /  \n  1014       *>***************************************************************  \n  1015       *> Generate a source + xref listing using 'LISTING' subroutine **  \n  1016       *>************************************ ***************************  \n  1017 GC0410 220 -Make-Listing SECTION.  \n  1018 GC0410     MOVE ' Generating listing...' TO WS -Output-Msg-TXT \n  1019 GC0410     DISPLAY S -Switches -SCR \n  1020 GC0410     MOVE 0 TO RETURN -CODE \n  1021       *>*********************** ****************************************  \n  1022       *> Create the listing                                          **  \n  1023       *>***************************************************************  \n  1024 GC0410     MOVE SPACES TO WS -Output-Msg-TXT \n  1025 GC0410     CALL 'LISTING' USING WS -Listing-Filename -TXT \n  1026 GC0712                          WS -File-Name-TXT \n  1027 GC0712                          WS -OS-Type-CD \n  1028 GC0410     ON EXCEPTION  \n  1029 GC0410         MOVE ' LISTING module is not availabl e' \n  1030 GC0410           TO WS -Output-Msg-TXT \n  1031 GC0410         MOVE 1 TO RETURN -CODE \n  1032 GC0410     END -CALL \n  1033 GC0410     IF RETURN -CODE = 0  \n  1034 GC0712         MOVE ' Source+Xref listing generated '  \n  1035 GC0712           TO WS -Output-Msg-TXT \n  1036 GC0410     END -IF \n  1037 GC0712     DISPLAY S -Switches -SCR \n  1038 GC0712     CALL 'C$SLEEP' USING 2  \n  1039 GC0712     PERFORM 250 -Autoload -Listing \n  1040 GC0410     .  \n  ", "start_char_idx": 0, "end_char_idx": 2197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "549f2983-992f-49c6-a5a7-ec9e641bdbc5": {"__data__": {"id_": "549f2983-992f-49c6-a5a7-ec9e641bdbc5", "embedding": null, "metadata": {"page_label": "300", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c489a46-39c8-427f-a590-69735b422f3b", "node_type": "4", "metadata": {"page_label": "300", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bd0baba4dc0a37bb95a4e4f1649212877b02b9fb31c4ba7631d420d69eb047b6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-42 GNU COBOL V2.0 11FEB2012 Source Lis ting - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 27  \n====== ====================================================================================================================== ==========  \n  1041       /  \n  1042       *>***************************************************************  \n  1043       *> Run the compiled program                                    **  \n  1044       *>***************************************************************  \n  1045        230-Run-Program SECTION.  \n  1046 GC0909     MOVE SPACES TO WS -Cmd-TXT \n  1047 GC0909     MOVE 1 TO WS -I-SUB \n  1048       *>***************************************************************  \n  1049       *> If necessary, start with 'cobcrun' command                  ** \n  1050       *>***************************************************************  \n  1051 GC0712     IF WS -CS-LIBRARY-CHR NOT = ' '  \n  1052                STRING 'cobcrun ' DELIMITED SIZE  \n  1053                       INTO WS -Cmd-TXT \n  1054                       WITH POINTER WS -I-SUB \n  1055            END -IF \n  1056       *>***************************************************************  \n  1057       *> Add any necessary path prefix                               **  \n  1058       *>***************************************************************  \n  1059 GC0712     SET WS -RS-Double-Quote-Used-BOOL TO FALSE  \n  1060            IF WS -Prog-Folder-TXT NOT = SPACES  \n  1061 GC0909         IF WS -OS-Cygwin-BOOL AND WS -Prog-Folder-TXT (2:1) = ':'  \n  1062 GC0909             STRING '/cygdrive/'  \n  1063 GC0909                 INTO WS -Cmd-TXT \n  1064 GC0909                 WITH POINTER WS -I-SUB \n  1065 GC0909             STRING LOWER -CASE(WS-Prog-Folder-TXT (1:1))  \n  1066 GC0909                 INTO WS-Cmd-TXT \n  1067 GC0909                 WITH POINTER WS -I-SUB \n  1068 GC0909             PERFORM  \n  1069 GC0909                 VARYING WS -J-SUB FROM 3 BY 1  \n  1070 GC0909                 UNTIL WS -J-SUB > LENGTH(TRIM(WS -Prog-Folder-TXT)) \n  1071 GC0909                  IF WS-Prog-Folder-TXT (WS-J-SUB:1) = ' \\' \n  1072 GC0909                     STRING '/'  \n  1073 GC0909                         INTO WS -Cmd-TXT \n  1074 GC0909                         WITH POINTER WS -I-SUB \n  1075 GC0909                 ELSE  \n  1076 GC0909                     STRING WS -Prog-Folder-TXT (WS-J-SUB:1) \n  1077 GC0909                         INTO WS -Cmd-TXT \n  1078 GC0909                         WITH POINTER WS -I-SUB \n  1079 GC0909                 END -IF \n  1080 GC0909             END -PERFORM \n  1081 GC0909         ELSE  \n  1082 GC0410             STRING '\"' TRIM(WS -Prog-Folder-TXT,TRAILING)  \n  1083 GC0909                 INTO WS -Cmd-TXT \n  1084 GC0909                 WITH POINTER WS -I-SUB \n  1085 GC0712             SET WS -RS-Double-Quote-Used-BOOL TO TRUE \n  1086 GC0909         END -IF \n  1087 GC0712         STRING WS -OS-Dir-CHR \n  1088 GC0909             INTO WS -Cmd-TXT \n  1089 GC0909             WITH POINTER WS -I-SUB \n  1090 GC0909     ELSE  \n  1091 GC0909         IF WS -OS-Cygwin-BOOL OR WS -OS-UNIX-BOOL \n  1092 GC0909             STRING './'  \n  1093 GC0909                 INTO WS -Cmd-TXT \n  1094 GC0909                 WITH POINTER WS -I-SUB \n  ", "start_char_idx": 0, "end_char_idx": 3743, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8f2533b-709d-44ee-bd5c-88672607fa43": {"__data__": {"id_": "e8f2533b-709d-44ee-bd5c-88672607fa43", "embedding": null, "metadata": {"page_label": "301", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1c014fde-f8c6-415e-afb0-bacd8e98976c", "node_type": "4", "metadata": {"page_label": "301", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "889ce6306ef583eb91c46c307829c2b5ac4c3afe654c0f94e407acd777648dc7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-43 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 28  \n====== ====================================================================================================================== ==========  \n  1095 GC0909         END -IF \n  1096            END -IF \n  1097       *>***************** **********************************************  \n  1098       *> Insert program filename                                     **  \n  1099       *>***************************************************************  \n  1100 GC0909     STRING TRIM(WS -Pgm-Nm-TXT,TRAILIN G) \n  1101 GC0909         INTO WS -Cmd-TXT \n  1102 GC0909         WITH POINTER WS -I-SUB \n  1103       *>***************************************************************  \n  1104       *> Insert proper extension                                     **  \n  1105       *>***************************************************************  \n  1106 GC0712     IF WS -CS-LIBRARY-CHR = ' '  \n  1107 GC0712         IF WS -OS-Exe-Ext-CONST > ' '  \n  1108 GC0712             STRING WS -OS-Exe-Ext-CONST DELIMITED SPACE  \n  1109 GC0712                 INTO WS-Cmd-TXT \n  1110 GC0712                 WITH POINTER WS -I-SUB \n  1111 GC0712         END -IF \n  1112 GC0712     ELSE  \n  1113 GC0712         IF WS -OS-Lib-Ext-CONST > ' '  \n  1114 GC0712             STRING WS -OS-Lib-Ext-CONST DELIMITED SPACE  \n  1115 GC0712                 INTO WS -Cmd-TXT \n  1116 GC0712                 WITH POINTER WS -I-SUB \n  1117 GC0712         END -IF \n  1118 GC0712     END -IF \n  1119 GC0712     IF WS -RS-Double-Quote-Used-BOOL \n  1120 GC0712         STRING '\"' DELIMITED SIZE  \n  1121 GC0712             INTO WS -Cmd-TXT \n  1122 GC0712             WITH POINTER WS -I-SUB \n  1123 GC0712     END -IF \n  1124            IF WS -CS-Args-TXT NOT = SPACES  \n  1125 GC0809         STRING ' ' TRIM(WS -CS-Args-TXT,TRAILING)  \n  1126                    INTO WS -Cmd-TXT \n  1127                    WITH POINTER WS -I-SUB \n  1128            END -IF \n  1129            IF WS -OS-Windows-BOOL \n  1130 GC0712         STRING '&&pause'  \n  1131                    INTO WS -Cmd-TXT \n  1132                    WITH POINTER WS -I-SUB \n  1133            ELSE \n  1134 GC0712         STRING ';echo \"Press ENTER to close...\";read'  \n  1135                    INTO WS -Cmd-TXT \n  1136                    WITH POINTER WS -I-SUB \n  1137            END -IF \n  1138 DEBUG D    DISPLAY WS -Cmd-TXT UPON SYSERR  \n  1139       *>***************************************************************  \n  1140       *> Run the program                                             **  \n  1141       *>***************************************************************  \n  1142 GC0909     D ISPLAY S -Blank-SCR \n  1143            CALL 'SYSTEM' USING TRIM(WS -Cmd-TXT,TRAILING)  \n  1144 GC0712     MOVE SPACES TO WS -Output-Msg-TXT \n  1145            PERFORM 900 -Terminate  \n  1146       * -- Control will NOT return  \n  1147            .  \n  ", "start_char_idx": 0, "end_char_idx": 3429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "705b1dc8-36ac-4cf1-b342-5e3a52e7c746": {"__data__": {"id_": "705b1dc8-36ac-4cf1-b342-5e3a52e7c746", "embedding": null, "metadata": {"page_label": "302", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f52d607a-95fd-4d07-91ad-c3e423b06282", "node_type": "4", "metadata": {"page_label": "302", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6d88231cf973ee6c4d67a27ebae1b8bb070d5a3a99b78f81d15d8c4916a31eda", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-44 GNU COBOL V2.0 11F EB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 29  \n====== =================================================================================================================== =============  \n  1148       /  \n  1149       *>***************************************************************  \n  1150       *> Determine if the program being compiled is a MAIN program   **  \n  1151       *>****************************************************** *********  \n  1152        240 -Find-LINKAGE-SECTION SECTION.  \n  1153            OPEN INPUT F -Source-Code-FILE \n  1154 GC0712     MOVE ' ' TO WS -CS-LIBRARY-CHR \n  1155            SET WS -RS-More-To-1st-Prog-BOOL   TO TRUE  \n  1156            PERFORM UNTIL WS -RS-1st-Prog-Complete -BOOL \n  1157                READ F -Source-Code-FILE AT END  \n  1158                    CLOSE F -Source-Code-FILE \n  1159                    EXIT SECTION  \n  1160                END -READ \n  1161 GC0712         CALL 'CHECKSRC'  \n  1162 GC0712             USING BY CONTENT   F -Source-Code-REC \n  1163 GC0712                   BY REFERENCE WS -RS-Source-Record-Type-CHR \n  1164                IF WS -RS-Source-Rec-Ident-BOOL \n  1165                    SET WS -RS-1st-Prog-Complete -BOOL TO TRUE  \n  1166                END -IF \n  1167            END -PERFORM \n  1168 GC0712     SET WS -RS-Source-Rec-Ignored-BOOL TO TRUE  \n  1169            PERFORM UNTIL WS -RS-Source-Rec-Linkage-BOOL \n  1170                       OR WS -RS-Source-Rec-Ident-BOOL \n  1171                READ F-Source-Code-FILE AT END  \n  1172                    CLOSE F -Source-Code-FILE \n  1173                    EXIT SECTION  \n  1174                END -READ \n  1175 GC0712         CALL 'CHECKSRC'  \n  1176 GC0712             USING BY CONTENT   F -Source-Code-REC \n  1177 GC0712                   BY REFERENCE WS -RS-Source-Record-Type-CHR \n  1178            END -PERFORM \n  1179            CLOSE F -Source-Code-FILE \n  1180            IF WS -RS-Source-Rec-Linkage-BOOL \n  1181 GC0712         MOVE SELCHAR TO WS -CS-LIBRARY-CHR \n  1182            END -IF \n  1183            .  \n  ", "start_char_idx": 0, "end_char_idx": 2587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2a44b57-974a-45b5-941d-5903838b7436": {"__data__": {"id_": "c2a44b57-974a-45b5-941d-5903838b7436", "embedding": null, "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37b7e384-57e2-4e31-97cc-a05e39068a57", "node_type": "4", "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "995eda5f2fe6d73cb59ba76cb06dc4ec1568a9d599f989452a40174092747f2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b21f27e0-bed9-4893-9967-7381d0a100b4", "node_type": "1", "metadata": {}, "hash": "4a61f079eb9275d95d7dc8824e7c64555184066f91ebe2f0271008c9712e6b49", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-45 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 30  \n====== ================================================ ================================================================================  \n  1184       /  \n  1185 GC0712*>***************************************************************  \n  1186 GC0712*> Attempt to open the listing file as a command.  This will - ** \n  1187 GC1113*> if the user has associated filetype/extension 'gclst' with  **  \n  1188 GC0712*> an application - invoke the appropriate application to      **  \n  1189 GC0712*> allow the user to view the listing.                         ", "start_char_idx": 0, "end_char_idx": 1119, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b21f27e0-bed9-4893-9967-7381d0a100b4": {"__data__": {"id_": "b21f27e0-bed9-4893-9967-7381d0a100b4", "embedding": null, "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37b7e384-57e2-4e31-97cc-a05e39068a57", "node_type": "4", "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "995eda5f2fe6d73cb59ba76cb06dc4ec1568a9d599f989452a40174092747f2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2a44b57-974a-45b5-941d-5903838b7436", "node_type": "1", "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bc1caf29fb380d925c454cf670a4e4e94397ab078763cef5744aa6186ed6db2e", "class_name": "RelatedNodeInfo"}}, "text": "**  \n  1190 GC0712*>**** ***********************************************************'  \n  1191 GC0712 250 -Autoload -Listing SECTION.  \n  1192 GC0712     EVALUATE TRUE  \n  1193 GC0712         WHEN WS -OS-Windows-BOOL OR WS -OS-Cygwin-BOOL \n  1194 GC0712             MOVE SPACES TO WS -Cmd-TXT \n  1195 GC0712             STRING  \n  1196 GC0712                 'cmd /c '  \n  1197 GC0712                 TRIM(WS -Listing-Filename -TXT,TRAILING)  \n  1198 GC0712                 DELIMITED SIZE INTO WS -Cmd-TXT \n  1199 GC0712             CALL 'SYSTEM' USING TRIM(WS -Cmd-TXT,TRAILING)  \n  1200 GC0712         WHEN WS -OS-OSX-BOOL \n  1201 GC0712             MOVE SPACES TO WS -Cmd-TXT \n  1202 GC0712             STRING  \n  1203 GC0712                 'open -t ' \n  1204 GC0712                 TRIM(WS -Listing-Filename -TXT,TRAILING)  \n  1205 GC0712                 DELIMITED SIZE INTO WS -Cmd-TXT \n  1206 GC0712             CALL 'SYSTEM' USING TRIM(WS -Cmd-TXT,TRAILING)  \n  1207 GC0712     END -EVALUATE  \n  1208 GC0712*>   ************************************************************  \n  1209 GC0712 *>   ** Since we had to do our own ' -save-temps' when we       **  \n  1210 GC0712*>   ** compiled (in order to generate the cross -reference     **  \n  1211 GC0712*>   ** listing) we now need to clean up after ourselves.      **  \n  1212 GC0712*>   ************** **********************************************  \n  1213 GC1112     DISPLAY S -Blank-SCR \n  1214 GC0712     IF WS -OS-Windows-BOOL \n  1215 GC0712         MOVE CONCATENATE('del ',TRIM(WS -Pgm-Nm-TXT,TRAILING))  \n  1216 GC0712           TO WS -Cmd-TXT \n  1217 GC0712     ELSE  \n  1218 GC0712         MOVE CONCATENATE('rm ',TRIM(WS -Pgm-Nm-TXT,TRAILING))  \n  1219 GC0712           TO WS -Cmd-TXT \n  1220 GC0712     END -IF \n  1221 GC0712     CALL 'SYSTEM'  \n  1222 GC0712         USING CONCATENATE(TRIM(WS -Cmd-TXT,TRAILIN G),'.c')  \n  1223 GC0712     CALL 'SYSTEM'  \n  1224 GC0712         USING CONCATENATE(TRIM(WS -Cmd-TXT,TRAILING),'.c.h')  \n  1225 GC0712     CALL 'SYSTEM'  \n  1226 GC0712         USING CONCATENATE(TRIM(WS -Cmd-TXT,TRAILING),'.c.l*.h')  \n  1227 GC0712     CALL 'SYSTEM'  \n  1228 GC0712         USING CONCATENATE(TRIM(WS -Cmd-TXT,TRAILING),'.i')  \n  1229 GC0712     CALL 'SYSTEM'  \n  1230 GC0712         USING CONCATENATE(TRIM(WS -Cmd-TXT,TRAILING),'.o')  \n  1231 \n  1232 GC0712     .  \n  ", "start_char_idx": 1119, "end_char_idx": 3486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b869a26-8455-4991-bd4b-fad054b7a673": {"__data__": {"id_": "0b869a26-8455-4991-bd4b-fad054b7a673", "embedding": null, "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "25b0b13c-8c8c-4b8d-9a4f-e566c3afd7b5", "node_type": "4", "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a67807e8ee4bb8e729a91604466ac41239676b5be5551aba13fe846318b1f54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8acba6a6-ce5f-44c9-a0dd-e0ca58e7daa1", "node_type": "1", "metadata": {}, "hash": "c5eb3bdca3bde1dd83e3786a3a7af1bedfd8957fb1438e22f45157eeff32ba6e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-46 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 31  \n====== ====================================================================================================================== ==========  \n  1233       /  \n  1234       *>***************************************************************  \n  1235       *> Display a message and halt the program                      **  \n  1236       *>***************************************************************  \n  1237        900 -Terminate SECTION.  \n  1238 GC0909     IF WS -Output-Msg-TXT > SPACES  \n  1239 GC0909         DISPLAY S -Switches -SCR \n  1240 GC0909         CALL 'C$SLEEP' USING 2  \n  1241 GC0909     END -IF \n  1242            DISPLAY S -Blank-SCR \n  1243            STOP RUN  \n  1244            .  \n  ", "start_char_idx": 0, "end_char_idx": 1269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8acba6a6-ce5f-44c9-a0dd-e0ca58e7daa1": {"__data__": {"id_": "8acba6a6-ce5f-44c9-a0dd-e0ca58e7daa1", "embedding": null, "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "25b0b13c-8c8c-4b8d-9a4f-e566c3afd7b5", "node_type": "4", "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a67807e8ee4bb8e729a91604466ac41239676b5be5551aba13fe846318b1f54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b869a26-8455-4991-bd4b-fad054b7a673", "node_type": "1", "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "87e96e1bc5a76a01c4f8b549fe18a3fa8e25137117a7b215989f2e9a8cc7a9b1", "class_name": "RelatedNodeInfo"}}, "text": "1245 \n  1246        END PROGRAM GCic.  \n  ", "start_char_idx": 1269, "end_char_idx": 1311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9b04b26-0b5f-4954-93a0-4a7a4f5d95b9": {"__data__": {"id_": "f9b04b26-0b5f-4954-93a0-4a7a4f5d95b9", "embedding": null, "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef", "node_type": "4", "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cddacd5e0e996d85e19753776b2a8eb809493c08260c5c807e39adc5c6d1b901", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "850a41ac-491d-4773-843f-dc0db49d6a09", "node_type": "1", "metadata": {}, "hash": "c951c744d3ad459f6fa8d00c5c1084a8c8088df72e792189bbe1300e68636c1a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-47 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 32  \n====== ==================================== ============================================================================================  \n  1247       /  \n  1248        IDENTIFICATION DIVISION.  \n  1249        PROGRAM -ID.  ", "start_char_idx": 0, "end_char_idx": 789, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "850a41ac-491d-4773-843f-dc0db49d6a09": {"__data__": {"id_": "850a41ac-491d-4773-843f-dc0db49d6a09", "embedding": null, "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef", "node_type": "4", "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cddacd5e0e996d85e19753776b2a8eb809493c08260c5c807e39adc5c6d1b901", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9b04b26-0b5f-4954-93a0-4a7a4f5d95b9", "node_type": "1", "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2066b3f3f332443815245637121d3717ac3e5b1e5a02d84d63dfcd5e660453be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62783a11-ea60-414f-9061-bc1ad5a2b51f", "node_type": "1", "metadata": {}, "hash": "a8fa62a4c2c91d748d3d1452a836e8cd728a13bbe2b6eeafbb61cc979fb807b7", "class_name": "RelatedNodeInfo"}}, "text": "CHECKSRC.  \n  1250       *>********************************************************* ****** \n  1251       *> This subprogram will scan a line of source code it is given **  \n  1252       *> looking for 'LINKAGE SECTION' or 'IDENTIFICATION DIVISION'. **  \n  1253       *>                                                             **  \n  1254       *>  ****NOTE****   ****NOTE****    ****NOTE****   ****NOTE***  **  \n  1255       *>                                                             **  \n  1256       *> These two strings must be found IN THEIR ENTIRETY within    **  \n  1257       *> the 1st 80 colu mns of program source records, and cannot    **  \n  1258       *> follow either a '*>' sequence OR a '*' in col 7.            **  \n  1259       *>***************************************************************  \n  1260       *>  DATE  CHANGE DESCRIPTION                                   ** \n  1261       *> ====== ==================================================== **  \n  1262       *> GC0809 Initial coding.                                      **  \n  1263       *>****************************************************** *********  \n  1264        ENVIRONMENT DIVISION.  \n  1265        CONFIGURATION SECTION.  \n  1266        REPOSITORY.  \n  1267            FUNCTION ALL INTRINSIC.  \n  1268        DATA DIVISION.  \n  1269        WORKING -STORAGE SECTION.  \n  1270        01  WS -Compressed -Src-TXT. \n  1271            05 WS -CS-CHR                          OCCURS 80 TIMES  \n  1272                                                  PIC X(1).  \n  1273 \n  1274        01  WS -Runtime-Switches -TXT. \n  1275            05 WS -RS-Found-SPACE-CHR              PIC X(1).  \n  1276               88 WS -RS-Skipping -SPACE-BOOL     VALUE 'Y'.  \n  1277               88 WS -RS-Not-Skipping -SPACE-BOOL VALUE 'N'.  \n  1278 \n  1279        01  WS -I-SUB                              USAGE BINARY -CHAR. \n  1280 \n  1281        01  WS -J-SUB                              USAGE BINARY -CHAR. \n  1282        LINKAGE SECTION.  \n  ", "start_char_idx": 789, "end_char_idx": 2813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62783a11-ea60-414f-9061-bc1ad5a2b51f": {"__data__": {"id_": "62783a11-ea60-414f-9061-bc1ad5a2b51f", "embedding": null, "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef", "node_type": "4", "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cddacd5e0e996d85e19753776b2a8eb809493c08260c5c807e39adc5c6d1b901", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "850a41ac-491d-4773-843f-dc0db49d6a09", "node_type": "1", "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c15763bc78dd9ad9f1c7ee1de9418adadc41747b01c0aed4949e837a988250c7", "class_name": "RelatedNodeInfo"}}, "text": "1283        01  L -Argument -1-TXT. \n  1284            02 L -A1-CHR                           OCCURS 80 TIMES  \n  1285                                                  PIC X(1).  \n  1286 \n  1287        01  L -Argument -2-CHR                      PIC X(1).  \n  1288            88 L -A2-LINKAGE-SECTION-BOOL VALUE 'L'.  \n  1289            88 L -A2-IDENT-DIVISION -BOOL  VALUE 'I'.  \n  1290            88 L -A2-Nothing-Special-BOOL VALUE ' '.  \n  ", "start_char_idx": 2813, "end_char_idx": 3257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d50be52a-d3f2-4d94-9d4a-7717623feea4": {"__data__": {"id_": "d50be52a-d3f2-4d94-9d4a-7717623feea4", "embedding": null, "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6ececde-910a-448a-a576-108b6e563a83", "node_type": "4", "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4a2de8762e4a93ff8ba55576d89ca5c3e8eac5cd7d67f6dfa8a3d1f1cad8256f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37b028ff-5f0f-47a6-8d0c-b7bbbb16bea6", "node_type": "1", "metadata": {}, "hash": "da970eb4b5c458a8a97ec8ba542b9ce1c892d193f59ab40c0d487c489b4369fc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-48 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 33  \n====== ====================================================================================================================== ==========  \n  1291       /  \n  1292 GC0712 PROCEDURE DIVISION USING BY VALUE     L -Argument -1-TXT \n  1293 GC0712                          BY REFERENCE L -Argument -2-CHR. \n  1294        000 -Main SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 902, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37b028ff-5f0f-47a6-8d0c-b7bbbb16bea6": {"__data__": {"id_": "37b028ff-5f0f-47a6-8d0c-b7bbbb16bea6", "embedding": null, "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6ececde-910a-448a-a576-108b6e563a83", "node_type": "4", "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4a2de8762e4a93ff8ba55576d89ca5c3e8eac5cd7d67f6dfa8a3d1f1cad8256f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d50be52a-d3f2-4d94-9d4a-7717623feea4", "node_type": "1", "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0363e147fccf98e75b73409f2fce9aa130a1d6fe838aef14a965e8fd4c204c53", "class_name": "RelatedNodeInfo"}}, "text": "1295            SET L -A2-Nothing-Special-BOOL TO TRUE  \n  1296            IF L -A1-CHR (7) = '*'  \n  1297                GOBACK  \n  1298            END -IF \n  1299            .  \n  1300       *>  \n  1301       *> Compress multiple consecutive spaces  \n  1302       *>  \n  1303            SET WS -RS-Not-Skipping -SPACE-BOOL TO TRUE  \n  1304            MOVE 0 TO WS -J-SUB \n  1305            MOVE SPACES TO WS -Compressed -Src-TXT \n  1306            PERFO RM VARYING WS -I-SUB FROM 1 BY 1  \n  1307                      UNTIL WS -I-SUB > 80  \n  1308                IF L -A1-CHR (WS-I-SUB) = SPACE  \n  1309                    IF WS -RS-Not-Skipping -SPACE-BOOL \n  1310                        ADD 1 TO WS -J-SUB \n  1311                        MOVE UPPER -CASE(L-A1-CHR (WS-I-SUB)) \n  1312                          TO WS -CS-CHR (WS-J-SUB) \n  1313                        SET WS -RS-Skipping -SPACE-BOOL TO TRUE  \n  1314                    END -IF \n  1315                ELSE  \n  1316                    SET WS-RS-Not-Skipping -SPACE-BOOL TO TRUE  \n  1317                    ADD 1 TO WS -J-SUB \n  1318                    MOVE L -A1-CHR (WS-I-SUB) TO WS -CS-CHR (WS-J-SUB) \n  1319                END -IF \n  1320            END -PERFORM \n  1321       *>  \n  1322       *> Scan the compressed source line  \n  1323       *>  \n  1324            PERFORM VARYING WS -I-SUB FROM 1 BY 1  \n  1325                      UNTIL WS -I-SUB > 66  \n  1326                EVALUATE TRUE  \n  1327                    WHEN WS -CS-CHR (WS-I-SUB) = '*' \n  1328                        IF WS -Compressed -Src-TXT (WS-I-SUB : 2) = '*>'  \n  1329                            GOBACK  \n  1330                        END -IF \n  1331                    WHEN (WS -CS-CHR (WS-I-SUB) = 'L') AND (WS -I-SUB < 66)  \n  1332                        IF WS-Compressed -Src-TXT (WS-I-SUB : 15)  \n  1333                           = 'LINKAGE SECTION'  \n  1334                            SET L -A2-LINKAGE-SECTION-BOOL TO TRUE  \n  1335                            GOBACK  \n  1336                        END -IF \n  1337                    WHEN (WS -CS-CHR (WS-I-SUB) = 'I') AND (WS -I-SUB < 58)  \n  1338                        IF WS -Compressed -Src-TXT (WS-I-SUB : 23)  \n  1339                           = 'IDENTIFICATION DIVISION'  \n  1340                            SET L -A2-IDENT-DIVISION -BOOL TO TRUE  \n  1341                            GOBACK  \n  1342                        END -IF \n  1343                END -EVALUATE  \n  1344            END -PERFORM \n  ", "start_char_idx": 902, "end_char_idx": 3410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06bb4562-bb06-409c-bd39-935c351b481d": {"__data__": {"id_": "06bb4562-bb06-409c-bd39-935c351b481d", "embedding": null, "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7", "node_type": "4", "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6d9494a2f1f5dd2e4bc30e5b8afe41f566bb0312c17cd1272577c7f5f8755a16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79e99097-97c6-4883-a99a-837de733d052", "node_type": "1", "metadata": {}, "hash": "78bad294c93a363441d6cc051c44a3e1fb315ee6eebcdbb4322b5c1828199943", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-49 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 34  \n====== ================================================================================================= ===============================  \n  1345       *>  \n  1346       *> If we get to here, we never found anything!  \n  1347       *>  \n  1348 +           GOBACK  \n  1349            .  \n  ", "start_char_idx": 0, "end_char_idx": 853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79e99097-97c6-4883-a99a-837de733d052": {"__data__": {"id_": "79e99097-97c6-4883-a99a-837de733d052", "embedding": null, "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7", "node_type": "4", "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6d9494a2f1f5dd2e4bc30e5b8afe41f566bb0312c17cd1272577c7f5f8755a16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06bb4562-bb06-409c-bd39-935c351b481d", "node_type": "1", "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4167465622a93f2a11234547959e8f891b6a96f68be5d6321c8937c006e2d741", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cb14f03-5239-4c00-af66-b685e094db4f", "node_type": "1", "metadata": {}, "hash": "38b6b01b3b3b03d23aef4939be0d73ac4199dfeffe82799e8093d45775f1b80c", "class_name": "RelatedNodeInfo"}}, "text": "1350        END PROGRAM CHECKSRC.  \n  1351 \n  1352        IDENTIFICATION DIVISION.  \n  1353        PROGRAM -ID.  LISTING.  \n  1354       *>***************************************************************  \n  1355       *> This subprogram generates a cross -reference listing of an   **  \n  1356       *> GNU COBOL program.                                          ** \n  1357       *>***************************************************************  \n  1358       *>                                                             **  \n  1359       *> AUTHOR:       GARY L. CUTLER                                **  \n  1360       *>               CutlerGL@gmail.com                            **  \n  1361       *>               Copyright (C) 2010, Gary L. Cutler, GPL       **  \n  1362       *>                                                             **  \n  1363       *> DATE -WRITTEN: April 1, 2010                                 **  \n  1364       *>                                                             **  \n  1365       *>***************************************************************  \n  1366       *>  DATE  CHANGE DESCRIPTION                                   ** \n  1367       *> ====== ==================================================== **  \n  1368       *> GC0410 Initial coding                                       **  \n  1369       *> GC0711 Updates to accommodate the 12MAR2010 ver sion of OC   **  \n  1370       *> GC0710 Handle duplicate data names (i.e. 'CORRESPONDING' or **  \n  1371       *>        qualified items) better; ignore 'END PROGRAM' recs   **  \n  1372       *>        so program name doesn't appear in listing.           **  \n  1373       *> GC0313 Fix problem where the first procedure name defined   **  \n  1374       *>        in the PROCEDURE DIVISION lacks a \"Defined\" line     **  \n  1375       *>        number.                                              **  \n  1376       *>**** ***********************************************************  \n  1377        ENVIRONMENT DIVISION.  \n  ", "start_char_idx": 853, "end_char_idx": 2882, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1cb14f03-5239-4c00-af66-b685e094db4f": {"__data__": {"id_": "1cb14f03-5239-4c00-af66-b685e094db4f", "embedding": null, "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7", "node_type": "4", "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6d9494a2f1f5dd2e4bc30e5b8afe41f566bb0312c17cd1272577c7f5f8755a16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79e99097-97c6-4883-a99a-837de733d052", "node_type": "1", "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3e412f9cf3f458f1deedfc33bbcf73f8124351716dc76d041846955ad1f53f13", "class_name": "RelatedNodeInfo"}}, "text": "1378        CONFIGURATION SECTION.  \n  1379        REPOSITORY.  \n  1380            FUNCTION ALL INTRINSIC.  \n  1381        INPUT -OUTPUT SECTION.  \n  1382        FILE -CONTROL.  \n  1383            SELECT F -Expanded -Src-FILE  ASSIGN TO WS -Expanded -Src-Fn-TXT \n  1384                                        ORGANIZATION IS LINE SEQUENTIAL.  \n  1385 GC0712     SELECT F -Listing-FILE       ASSIGN TO L -Listing-Fn-TXT \n  1386                                        ORGANIZATION IS LINE SEQUENTIAL.  \n  1387            SELECT F -Original -Src-FILE  ASSIGN TO L -Src-Fn-TXT \n  1388                                        ORGANIZATION IS LINE SEQUENTIAL.  \n  1389            SELECT F -Sort-Work-FILE     ASSIGN TO DISK.  \n  1390        DATA DIVISION.  \n  1391        FILE SECTION.  \n  1392        FD  F -Expanded -Src-FILE. \n  1393        01  F -Expanded -Src-REC. \n  1394            05 F -ES-1-CHR                         PIC X.  \n  1395            05 F -ES-2-256-TXT-256                 PIC X(256).  \n  1396 GC0712 01  F -Expanded -Src2-REC. \n  1397 GC0712     05 F -ES-1-7-TXT                       PIC X(7).  \n  1398 GC0712     05 F -ES-8-256-TXT                     PIC X(249).  \n  ", "start_char_idx": 2882, "end_char_idx": 4067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aba78512-b47a-41b9-8362-2488056959d7": {"__data__": {"id_": "aba78512-b47a-41b9-8362-2488056959d7", "embedding": null, "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475", "node_type": "4", "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "68ef90aeeea6518bd7b83fa8ffc2a1137fe108d41c3e011ab144039ef3f6a913", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15993fae-0909-4cde-8f2f-acd9162afffa", "node_type": "1", "metadata": {}, "hash": "a6a26577759e96040772621885a33ceb92f3c457da98adde107758fb7862f1cd", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-50 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 35  \n====== ================================================================================================= ===============================  \n  1399 \n  1400 GC0712 FD  F -Listing-FILE. \n  1401 GC0712 01  F -Listing-REC                         PIC X(135).  \n  ", "start_char_idx": 0, "end_char_idx": 820, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15993fae-0909-4cde-8f2f-acd9162afffa": {"__data__": {"id_": "15993fae-0909-4cde-8f2f-acd9162afffa", "embedding": null, "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475", "node_type": "4", "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "68ef90aeeea6518bd7b83fa8ffc2a1137fe108d41c3e011ab144039ef3f6a913", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aba78512-b47a-41b9-8362-2488056959d7", "node_type": "1", "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4650372ebf299a7508d831ede862665ceec30ac39218e3c61520dd9be63bdca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aacc8a2f-2ca8-4e7b-8c99-012c2af56e4d", "node_type": "1", "metadata": {}, "hash": "152e44774e1c2ab5192e38ac67e7b385fb0f7906f06d30307ba0d3ad7f35ff03", "class_name": "RelatedNodeInfo"}}, "text": "1402 \n  1403        FD  F -Original -Src-FILE. \n  1404        01  F -Original -Src-REC. \n  1405 GC0410     05 F -OS-1-128-TXT. \n  1406 GC0410        10 FILLER                          PIC X(6).  \n  1407 GC0410        10 F -OS-7-CHR                      PIC X(1).  \n  1408 GC0712        10 F -OS-8-72-TXT                   PIC X(65).  \n  1409 GC0712        10 FILLER                          PIC X(56).  \n  1410            05 F -OS-129-256-TXT                   PIC X(128).  \n  1411 \n  1412        SD  F -Sort-Work-FILE. \n  1413        01  F -Sort-Work-REC. \n  1414            05 F -SW-Prog-ID-TXT                   PIC X(15).  \n  1415            05 F -SW-Token-Uc-TXT                  PIC X(32).  \n  1416            05 F -SW-Token-TXT                     PIC X(32).  \n  1417            05 F -SW-Section-TXT                   PIC X(15).  \n  1418            05 F -SW-Def-Line-NUM                  PIC 9(6).  \n  1419            05 F-SW-Reference -TXT. \n  1420               10 F -SW-Ref-Line-NUM               PIC 9(6).  \n  1421               10 F -SW-Ref-Flag-CHR               PIC X(1).  \n  1422 \n  1423        WORKING -STORAGE SECTION.  \n  1424        78  WS -Lines-Per-Rec-CONST                VALUE 8.  \n  1425 \n  1426        01  WS -Curr-CHR                           PIC X(1).  \n  1427            88 WS -Curr-Char-Is-Punct-BOOL         VALUE '=', '(', ')',  \n  1428                                                        '*', '/', '&',  \n  1429                                                        ';', ',', '<',  \n  1430                                                        '>', ':'.  \n  1431            88 WS -Curr-Char-Is-Quote-BOOL         VALUE \"'\", '\"'.  \n  1432            88 WS -Curr-Char-Is-X-BOOL             VALUE 'x', 'X'.  \n  1433            88 WS -Curr-Char-Is-Z-BOOL             VALUE 'z', 'Z'.  \n  1434 \n  1435        01  WS -Curr-Division -TXT                  PIC X(1).  \n  1436 GC1010     88 WS -CD-In-IDENT-DIV-BOOL            VALUE 'i', 'I', '?'.  \n  1437 GC1010     88 WS -CD-In-ENV-DIV-BOOL              VALUE 'e', 'E'.  \n  1438 GC1010     88 WS -CD-In-DATA-DIV-BOOL             VALUE 'd', 'D'.  \n  1439 GC1010     88 WS -CD-In-PROC-DIV-BOOL             VALUE 'p', 'P'.  \n  1440 \n  1441        01  WS -Curr-Line-NUM                      PIC 9(6).  \n  ", "start_char_idx": 820, "end_char_idx": 3102, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aacc8a2f-2ca8-4e7b-8c99-012c2af56e4d": {"__data__": {"id_": "aacc8a2f-2ca8-4e7b-8c99-012c2af56e4d", "embedding": null, "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475", "node_type": "4", "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "68ef90aeeea6518bd7b83fa8ffc2a1137fe108d41c3e011ab144039ef3f6a913", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15993fae-0909-4cde-8f2f-acd9162afffa", "node_type": "1", "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1166d5c4ed4e1f41a10fbdfd110a074595067a6d80140f0cea775430aaaaaf77", "class_name": "RelatedNodeInfo"}}, "text": "1442 \n  1443        01  WS -Curr-Prog-ID-TXT. \n  1444            05 FILLER                             PIC X(12).  \n  1445            05 WS -CPI-13-15-TXT                   PIC X(3).  \n  1446 GC0712     05 WS -CPI-16-CHR                      PIC X(1).  \n  1447 \n  1448        01  WS -Curr-Section-TXT. \n  1449            05 WS -CS-1-CHR                        PIC X(1).  \n  1450            05 WS -CS-2-14-TXT. \n  1451               10 FILLER                          PIC X(10).  \n  1452               10 WS -CS-11-14-TXT                 PIC X(3).  \n  ", "start_char_idx": 3102, "end_char_idx": 3653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc88ebe8-c84d-4b31-982d-6f9a965a2d17": {"__data__": {"id_": "dc88ebe8-c84d-4b31-982d-6f9a965a2d17", "embedding": null, "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "040f6da8-e162-4b79-9088-dcc53e09cf22", "node_type": "4", "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "04893cbde2423f2a45f104b9f3673c3014be00862989f3068e98b409777e89d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6", "node_type": "1", "metadata": {}, "hash": "ce5eb240d2e5ace3ef153ee166d4ebf87331e6c8541bc5c42ecaa9c573b5cdca", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-51 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 36  \n====== ====================================================================================================================== ==========  \n  1453            05 WS -CS-15-CHR                       PIC X(1).  \n  1454 \n  1455        01  WS -Curr-Verb-TXT                      PIC X(12).  \n  ", "start_char_idx": 0, "end_char_idx": 852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6": {"__data__": {"id_": "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6", "embedding": null, "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "040f6da8-e162-4b79-9088-dcc53e09cf22", "node_type": "4", "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "04893cbde2423f2a45f104b9f3673c3014be00862989f3068e98b409777e89d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc88ebe8-c84d-4b31-982d-6f9a965a2d17", "node_type": "1", "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cf22afa0d3e8ec0948a433ed99064894e2db4350242fa840e75f2b5878e5914a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0836e195-60f1-4787-a830-cba0129553f0", "node_type": "1", "metadata": {}, "hash": "9afcfe13b688d3bd768f5e49941147d20af5b971fd513122d0d4a52cbaa8de09", "class_name": "RelatedNodeInfo"}}, "text": "1456 \n  1457        01  WS -Delim-TXT                          PIC X(2).  \n  1458 \n  1459        01  WS -Dummy-TXT                          PIC X(1).  \n  1460 \n  1461        01  WS -Expanded -Src-Fn-TXT                PIC X(256).  \n  1462 \n  1463        01  WS -Filename -TXT                       PIC X(256).  \n  1464 \n  1465        01  WS -Group-Indicators -TXT. \n  1466            05 WS -GI-Prog-ID-TXT                  PIC X(15).  \n  1467            05 WS -GI-Token-TXT                    PIC X(3 2). \n  1468 \n  1469        01  WS -Held-Reference -TXT                 PIC X(100).  \n  1470 \n  1471        01  WS -I-SUB                              USAGE BINARY -LONG. \n  1472 \n  1473        01  WS -J-SUB                              USAGE BINARY -LONG. \n  1474 \n  1475        01  WS-Lines-Left-NUM                     USAGE BINARY -LONG. \n  1476 \n  1477        01  WS -Lines-Per-Page-NUM                 USAGE BINARY -LONG. \n  1478 \n  1479        01  WS -Lines-Per-Page-Env-TXT             PIC X(256).  \n  1480 \n  1481 GC1010 01  WS -Main-Module-Name-TXT               PIC X(256).  \n  1482 \n  1483        01  WS -Next-CHR                           PIC X(1).  \n  1484            88 WS -Next-Char-Is-Quote-BOOL         VALUE '\"', \"'\".  \n  1485 \n  1486        01  WS -OS-Type-FILLER-TXT. \n  ", "start_char_idx": 852, "end_char_idx": 2144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0836e195-60f1-4787-a830-cba0129553f0": {"__data__": {"id_": "0836e195-60f1-4787-a830-cba0129553f0", "embedding": null, "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "040f6da8-e162-4b79-9088-dcc53e09cf22", "node_type": "4", "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "04893cbde2423f2a45f104b9f3673c3014be00862989f3068e98b409777e89d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6", "node_type": "1", "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a571df3340be70958846281d4e95aa64be134c8d7c9331e3013ec8c4cf78fe7", "class_name": "RelatedNodeInfo"}}, "text": "1487            05 VALUE 'Windows'                    PIC X(14).  \n  1488            05 VALUE 'Windows/Cygwin'             PIC X(14).  \n  1489            05 VALUE 'UNIX/Linux'                 PIC X(14).  \n  1490            05 VALUE 'OSX'                        PIC X(14).  \n  1491            05 VALUE 'Windows/MinGW'              PIC X(14).  \n  1492        01  WS -OS-Types-TXT REDEFINES WS -OS-Type-FILLER-TXT. \n  1493            05 WS -OS-Type-TXT                     PIC X(14)  \n  1494                                           OCCURS 5 TIMES .  \n  1495 \n  1496 GC0712 01  WS -Page-NUM                           USAGE BINARY -LONG. \n  1497 \n  1498 GC0712 01  WS -Page-No-TXT. \n  1499 GC0712     05 WS -PN-Literal-TXT                  PIC X(6).  \n  1500 GC0712     05 WS -PN-Page-NUM                     PIC Z(3)9.  \n  1501 \n  1502        01  WS -Program-Path-TXT                   PIC X(256).  \n  1503 \n  1504        01  WS -Reserved -Words-TXT. \n  1505            05 VALUE '                                 ' PIC X(33).  \n  1506            05 VALUE 'IABS                             ' PIC X(33).  \n  ", "start_char_idx": 2144, "end_char_idx": 3248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1911fcb0-86d8-45cd-8e1f-743fd8e29dac": {"__data__": {"id_": "1911fcb0-86d8-45cd-8e1f-743fd8e29dac", "embedding": null, "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "523b424c-a557-4d8c-b915-605f882474bf", "node_type": "4", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88ac3fb3885891f0e16452dfb1ac8d13e6034b2097e8fc6955e0b272b0615594", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7070bebd-8fe0-4fe6-98e2-7bc5272e3307", "node_type": "1", "metadata": {}, "hash": "5bb7ee42ecc64e349abd7811250e5d8f90e64b915ca821d4f6229baab32f845c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-52 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 37  \n====== ===================== ===========================================================================================================  \n  1507            05 VALUE 'VACCEPT                          ' PIC X(33).  \n  1508            05 VALUE ' ACCESS                          ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7070bebd-8fe0-4fe6-98e2-7bc5272e3307": {"__data__": {"id_": "7070bebd-8fe0-4fe6-98e2-7bc5272e3307", "embedding": null, "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "523b424c-a557-4d8c-b915-605f882474bf", "node_type": "4", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88ac3fb3885891f0e16452dfb1ac8d13e6034b2097e8fc6955e0b272b0615594", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1911fcb0-86d8-45cd-8e1f-743fd8e29dac", "node_type": "1", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "45e9c56f3e74cef6d98ddedf00d356a9c6ba6b5509161319268badb444e8530d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57be5665-06ff-429d-8394-ac01dfe81e40", "node_type": "1", "metadata": {}, "hash": "2b46519c1707ea814fc42fec20967341f45a3a8d4ad5c62ca36b1a3dacbf520f", "class_name": "RelatedNodeInfo"}}, "text": "1509            05 VALUE 'IACOS                            ' PIC X(33).  \n  1510            05 VALUE ' ACTIVE -CLASS                    ' PIC X(33).      UNIMPLEMENTED  \n  1511            05 VALUE 'VADD                             ' PIC X(33).  \n  1512            05 VALUE ' ADDRESS                         ' PIC X(33).  \n  ", "start_char_idx": 857, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57be5665-06ff-429d-8394-ac01dfe81e40": {"__data__": {"id_": "57be5665-06ff-429d-8394-ac01dfe81e40", "embedding": null, "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "523b424c-a557-4d8c-b915-605f882474bf", "node_type": "4", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88ac3fb3885891f0e16452dfb1ac8d13e6034b2097e8fc6955e0b272b0615594", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7070bebd-8fe0-4fe6-98e2-7bc5272e3307", "node_type": "1", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3a3be09075139f80db519fcc85acdaceacef62a00bec89eabe98e55f3892af3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1da7b85-11a2-4f63-b4c0-cf47289787da", "node_type": "1", "metadata": {}, "hash": "8900f0d855f42652b8f0a679c8f28d323f8d8284daf7367b305d9b7c528d9212", "class_name": "RelatedNodeInfo"}}, "text": "1513            05 VALUE ' ADVANCING                       ' PIC X(33).  \n  1514            05 VALUE 'KAFTER                           ' PIC X(33).  \n  1515            05 VALUE ' ALIGNED                         ' PIC X(33).      UNIMPLEMENTED  \n  1516            05 VALUE ' ALL                             ' PIC X(33).  \n  1517            05 VALUE 'VALLOCATE                        ' PIC X(33).  \n  1518            05 VALUE ' ALPHABET                        ' P IC X(33).  \n  1519            05 VALUE ' ALPHABETIC                      ' PIC X(33).  \n  1520            05 VALUE ' ALPHABETIC -LOWER                ' PIC X(33).  \n  1521            05 VALUE ' ALPHABETIC -UPPER                ' PIC X(33).  \n  1522            05 VAL UE ' ALPHANUMERIC                    ' PIC X(33).  \n  1523            05 VALUE ' ALPHANUMERIC -EDITED             ' PIC X(33).  \n  1524            05 VALUE ' ALSO                            ' PIC X(33).  \n  1525            05 VALUE 'VALTER                           ' PIC X(33).  \n  1526            05 VALUE ' ALTERNATE                       ' PIC X(33).  \n  1527            05 VALUE ' AND                             ' PIC X(33).  \n  1528            05 VALUE 'IANNUITY                         ' PIC X(33).  \n  1529            05 VALUE ' ANY                             ' PIC X(33).  \n  1530            05 VALUE ' ANYCASE                         ' PIC X(33).      UNIMPLEMENTED  \n  1531            05 VALUE ' ARE                             ' PIC X(33).  \n  1532            05 VALUE ' AREA                            ' PIC X(33).  \n  1533            05 VALUE ' AREAS                           ' PIC X(33).  \n  1534            05 VALUE ' ARGUMENT -NUMBER                 ' PIC X(33).  \n  1535            05 VALUE ' ARGUMENT -VALUE                  ' PIC X(33).  \n  1536            05 VALUE ' ARITHMETIC                      ' PIC X(33).      UNIMPLEMENTED  \n  1537            05 VALUE ' AS                              ' PIC X(33).  \n  1538            05 VALUE ' ASCENDING                       ' P IC X(33).  \n  1539            05 VALUE ' ASCII                           ' PIC X(33).  \n  1540            05 VALUE 'IASIN                            ' PIC X(33).  \n  1541            05 VALUE ' ASSIGN                          ' PIC X(33).  \n  1542            05 VAL UE ' AT                              ' PIC X(33).  \n  1543            05 VALUE 'IATAN                            ' PIC X(33).  \n  1544 GC0711     05 VALUE ' ATTRIBUTE                       ' PIC X(33).  \n  1545            05 VALUE ' AUTHOR                          ' PIC X(33).      OBSOLETE  \n  1546            05 VALUE ' AUTO                            ' PIC X(33).  \n  1547            05 VALUE ' AUTO -SKIP                       ' PIC X(33).  \n  1548            05 VALUE ' AUTOMATIC                       ' PIC X(33).  \n  1549            05 VALUE ' AUTOTERMINATE                   ' PIC X(33).  \n  1550            05 VALUE ' AWAY -FROM-ZERO                  ' PIC X(33).  \n  1551            05 VALUE ' B -AND                           ' PIC X(33).      UNIMPLEMENTED  \n  1552            0 5 VALUE ' B -NOT                           ' PIC X(33).      UNIMPLEMENTED  \n  1553            05 VALUE ' B -OR                            ' PIC X(33).      UNIMPLEMENTED  \n  1554            05 VALUE ' B -XOR                           ' PIC X(33).      UNIMPLEMEN TED \n  1555            05 VALUE ' BACKGROUND -COLOR                ' PIC X(33).  \n  ", "start_char_idx": 1181, "end_char_idx": 4613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1da7b85-11a2-4f63-b4c0-cf47289787da": {"__data__": {"id_": "e1da7b85-11a2-4f63-b4c0-cf47289787da", "embedding": null, "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "523b424c-a557-4d8c-b915-605f882474bf", "node_type": "4", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88ac3fb3885891f0e16452dfb1ac8d13e6034b2097e8fc6955e0b272b0615594", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57be5665-06ff-429d-8394-ac01dfe81e40", "node_type": "1", "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ed77e6cb2a8986149a6126c4624cf57019ad96da87e837e46167fe005fd3f275", "class_name": "RelatedNodeInfo"}}, "text": "1556            05 VALUE ' BACKGROUND -COLOUR               ' PIC X(33).  \n  1557            05 VALUE ' BASED                           ' PIC X(33).  \n  1558            05 VALUE ' BEEP                            ' PIC X(33).  \n  1559            05 VALUE ' BEFORE                          ' PIC X(33).  \n  1560            05 VALUE ' BELL                            ' PIC X(33).  \n  ", "start_char_idx": 4613, "end_char_idx": 4994, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba9fa39c-3176-4b9f-9495-96cbf1007f75": {"__data__": {"id_": "ba9fa39c-3176-4b9f-9495-96cbf1007f75", "embedding": null, "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7", "node_type": "4", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a011630bfb56c5807491b5afd91bef73d380fd48f1bf2cf25e185cad3800505d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a4ab598-ea36-4036-99d6-844aca8686e1", "node_type": "1", "metadata": {}, "hash": "620d3bf18abd1467117fe3200f0ff70cdb138ad7b1c7dbfcd5781e30d1a7c641", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-53 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                                Page: 38  \n====== ====================================================================================================================== ==========  \n  1561            05 VALUE ' BINARY                          ' PIC X(33).  \n  1562            05 VALUE ' BINARY -C-LONG                   ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a4ab598-ea36-4036-99d6-844aca8686e1": {"__data__": {"id_": "4a4ab598-ea36-4036-99d6-844aca8686e1", "embedding": null, "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7", "node_type": "4", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a011630bfb56c5807491b5afd91bef73d380fd48f1bf2cf25e185cad3800505d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba9fa39c-3176-4b9f-9495-96cbf1007f75", "node_type": "1", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4e129cfd9709511e44574eb94d422048ae17f43a426514597256f2eae25180a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4181f138-d340-4f45-b866-d200b95e3e67", "node_type": "1", "metadata": {}, "hash": "3252a0ed26cc334cb9fa704f4e4526287c51c9c94a410c943e08ce7d43407d18", "class_name": "RelatedNodeInfo"}}, "text": "1563            05 VALUE ' BINARY -CHAR                     ' PIC X(33).  \n  1564            05 VALUE ' BINAR Y-DOUBLE                   ' PIC X(33).  \n  1565            05 VALUE ' BINARY -INT                      ' PIC X(33).  \n  1566            05 VALUE ' BINARY -LONG                     ' PIC X(33).  \n  1567            05 VALUE ' BINARY -LONG-LONG                ' PIC X (33). \n  1568            05 VALUE ' BINARY -SHORT                    ' PIC X(33).  \n  1569            05 VALUE ' BIT                             ' PIC X(33).      UNIMPLEMENTED  \n  1570            05 VALUE ' BLANK                           ' PIC X(33).  \n  1571            05 VALUE ' BLINK                           ' PIC X(33).  \n  1572            05 VALUE ' BLOCK                           ' PIC X(33).  \n  1573            05 VALUE ' BOOLEAN                         ' PIC X(33).      UNIMPLEMENTED  \n  1574            05 VAL UE 'IBOOLEAN -OF-INTEGER              ' PIC X(33).      UNIMPLEMENTED  \n  1575            05 VALUE ' BOTTOM                          ' PIC X(33).  \n  1576            05 VALUE 'YBY                              ' PIC X(33).  \n  1577            05 VALUE 'IBYTE -LENGTH                     ' PIC X(33).  \n  1578            05 VALUE 'MC01                             ' PIC X(33).  \n  1579            05 VALUE 'MC02                             ' PIC X(33).  \n  1580            05 VALUE 'MC03                             ' PIC X(33).  \n  1581            05 VALUE 'MC04                             ' PIC X(33).  \n  1582            05 VALUE 'MC05                             ' PIC X(33).  \n  1583            05 VALUE 'MC06                             ' PIC X(33).  \n  1584            05 VALUE 'MC07                             ' PIC X(33).  \n  1585            05 VALUE 'MC08                             ' PIC X(33).  \n  1586            05 VALUE 'MC09                             ' PIC X(33).  \n  1587            05 VALUE 'MC10                             ' PIC X(33).  \n  1588            05 VALUE 'MC11                             ' PIC X(33).  \n  1589            05 VALUE 'MC12                             ' PIC X(33).  \n  1590            05 VALUE 'VCALL                            ' PIC X (33). \n  1591            05 VALUE 'MCALL -CONVENTION                 ' PIC X(33).  \n  1592            05 VALUE 'VCANCEL                          ' PIC X(33).  \n  1593            05 VALUE ' CAPACITY                        ' PIC X(33).      UNIMPLEMENTED  \n  1594            05 VALUE ' CD                              ' PIC X(33).      OBSOLETE  \n  1595            05 VALUE ' CENTER                          ' PIC X(33).      UNIMPLEMENTED  \n  1596            05 VALUE ' CF                              ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 3562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4181f138-d340-4f45-b866-d200b95e3e67": {"__data__": {"id_": "4181f138-d340-4f45-b866-d200b95e3e67", "embedding": null, "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7", "node_type": "4", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a011630bfb56c5807491b5afd91bef73d380fd48f1bf2cf25e185cad3800505d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a4ab598-ea36-4036-99d6-844aca8686e1", "node_type": "1", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2812727f6b676c48ba2169529aff51f1e70529e6ce689a051131883685210050", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "672c6587-298b-41ea-bc48-4249aa34d0dd", "node_type": "1", "metadata": {}, "hash": "39f63bf8b41ec42c4296a31256f8bc3decf30b6ad02a69ada784452ec2e7ec3e", "class_name": "RelatedNodeInfo"}}, "text": "1597            05 VALUE ' CH                              ' PIC X(33).  \n  1598            05 VALUE ' CHAIN                           ' PIC X(33).      UNIMPLEMENTED  \n  1599            05 VALUE ' CHAINING                        ' PIC X(33).  \n  1600            05 VALU E 'ICHAR                            ' PIC X(33).  \n  ", "start_char_idx": 3562, "end_char_idx": 3886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "672c6587-298b-41ea-bc48-4249aa34d0dd": {"__data__": {"id_": "672c6587-298b-41ea-bc48-4249aa34d0dd", "embedding": null, "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7", "node_type": "4", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a011630bfb56c5807491b5afd91bef73d380fd48f1bf2cf25e185cad3800505d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4181f138-d340-4f45-b866-d200b95e3e67", "node_type": "1", "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3d4693e3b8a1c39ec0746f5d49daed4b705f5e490679edd04bb5dc994d2ff5a2", "class_name": "RelatedNodeInfo"}}, "text": "1601            05 VALUE 'ICHAR -NATIONAL                   ' PIC X(33).      UNIMPLEMENTED  \n  1602            05 VALUE ' CHARACTER                       ' PIC X(33).  \n  1603            05 VALUE ' CHARACTERS                      ' PIC X(33).  \n  1604            05 VALUE ' CLASS                           ' PIC X(33).  \n  1605            05 VALUE ' CLASS -ID                        ' PIC X(33).      UNIMPLEMENTED  \n  1606 GC0711     05 VALUE ' CLASSIFICATION                  ' PIC X(33).  \n  1607            05 VALUE 'VCLOSE                           ' PIC X(33).  \n  1608            05 VALUE 'ICOB -CRT-STATUS                  ' PIC X(33).  \n  1609            05 VALUE ' CODE                            ' PIC X(33).  \n  1610            05 VALUE ' CODE -SET                        ' PIC X(33).  \n  1611            05 VALUE ' COL                             ' PIC X(33).  \n  1612            05 VALUE ' COLLATING                       ' PIC X(33).  \n  1613            05 VALUE ' COLS                            ' PIC X(33).  \n  1614            05 VALUE ' COLUMN                          ' PIC X(33).  \n  ", "start_char_idx": 3886, "end_char_idx": 4992, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fcc6e78-e4ba-4fe5-99f8-617d18bb02cc": {"__data__": {"id_": "5fcc6e78-e4ba-4fe5-99f8-617d18bb02cc", "embedding": null, "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce", "node_type": "4", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "29a04d6c158741d54dd9493c66460c8c879dd3d7337b313864ec137c5207f3b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11", "node_type": "1", "metadata": {}, "hash": "a1b92a35a1cfaf3109a5f1e399d93a09bf6f6b2de600536277b35a915bc4c31e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-54 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler , GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 39  \n====== ====================================================================================================================== ==========  \n  1615            05 VALUE ' COLUMNS                         ' PIC X(33).  \n  1616            05 VALUE 'ICOMBINED -DATETIME               ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11": {"__data__": {"id_": "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11", "embedding": null, "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce", "node_type": "4", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "29a04d6c158741d54dd9493c66460c8c879dd3d7337b313864ec137c5207f3b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fcc6e78-e4ba-4fe5-99f8-617d18bb02cc", "node_type": "1", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7f73310d687b7a0cd90c64056e3a1437442085355700c679d2f5326cabf455fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a54780c-b2b6-4d62-b54e-d3f0a62db851", "node_type": "1", "metadata": {}, "hash": "4bc4982aa8ee75b6ea16a5834972ef6cd95cd193e6d5c5bb526cf59383a7e882", "class_name": "RelatedNodeInfo"}}, "text": "1617            05 VALUE ' COMMA                           ' PIC X(33).  \n  1618            05 VALUE ' COMMAND -LINE                    ' PIC X(33).  \n  1619            05 VALUE 'VCOMMI T                          ' PIC X(33).  \n  1620            05 VALUE ' COMMON                          ' PIC X(33).  \n  1621            05 VALUE ' COMMUNICATION                   ' PIC X(33).      OBSOLETE  \n  1622            05 VALUE ' COMP                            ' PIC X(33).  \n  1623            05 VALUE ' COMP -1                          ' PIC X(33).  \n  1624            05 VALUE ' COMP -2                          ' PIC X(33).  \n  1625            05 VALUE ' COMP -3                          ' PIC X(33).  \n  1626            05 VALUE ' COMP -4                          ' PIC X(33).  \n  1627            05 VALUE ' COMP -5                          ' PIC X(33).  \n  1628            05 VALUE ' COMP -6                          ' PIC X(33).  \n  1629            05 VALUE ' COMP -X                          ' PIC X(33).  \n  1630            05 VALUE ' COMPUTATIONAL                   ' PIC X(33).  \n  1631            05 VALUE ' COMPUTATIONAL -1                 ' PIC X(33).  \n  1632            05 VALUE ' COMPUTATIONAL -2                 ' PIC X(33).  \n  1633            05 VALUE ' COMPUTATIONAL -3                 ' PIC X(33).  \n  1634            05 VALUE ' COMPUTATIONAL -4                 ' PIC X(33).  \n  1635            05 VALUE ' COMPUTATIONAL -5                 ' PIC X(33).  \n  1636            05 VALUE ' COMPUTATIONAL -X                 ' PIC X(33).  \n  1637            05 VALUE 'VCOMPUTE                         ' PIC X(33).  \n  1638            05 VALUE 'ICONCATENATE                     ' PIC X(33).  \n  1639 GC0712     05 VALUE ' CONDI TION                       ' PIC X(33).  \n  1640            05 VALUE 'KCONFIGURATION                   ' PIC X(33).  \n  1641            05 VALUE 'MCONSOLE                         ' PIC X(33).  \n  1642            05 VALUE ' CONSTANT                        ' PIC X (33). \n  1643            05 VALUE ' CONTAINS                        ' PIC X(33).  \n  1644 GC0712     05 VALUE 'ACONTENT                         ' PIC X(33).  \n  1645            05 VALUE 'VCONTINUE                        ' PIC X(33).  \n  1646            05 VALUE '  CONTROL                         ' PIC X(33).  \n  1647            05 VALUE ' CONTROLS                        ' PIC X(33).  \n  1648 GC0711     05 VALUE ' CONVERSION                      ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 3322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a54780c-b2b6-4d62-b54e-d3f0a62db851": {"__data__": {"id_": "0a54780c-b2b6-4d62-b54e-d3f0a62db851", "embedding": null, "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce", "node_type": "4", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "29a04d6c158741d54dd9493c66460c8c879dd3d7337b313864ec137c5207f3b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11", "node_type": "1", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "da74bb3d809da5fee53a7ab6826f2cddc0d7c8e8dc80836b737df53ef0c10b9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f4292ec-9ef3-4730-9d57-9b23cf5ebc24", "node_type": "1", "metadata": {}, "hash": "bbb2ac636abf54ef03c003d47eef5c881ac05214a39a863cdf1d435bb645bd1d", "class_name": "RelatedNodeInfo"}}, "text": "1649            05 VALUE 'KCONVERTING                      '  PIC X(33).  \n  1650            05 VALUE ' COPY                            ' PIC X(33).  \n  1651            05 VALUE ' CORR                            ' PIC X(33).  \n  1652            05 VALUE ' CORRESPONDING                   ' PIC X(33).  \n  1653            05 V ALUE 'ICOS                             ' PIC X(33).  \n  1654            05 VALUE 'KCOUNT                           ' PIC X(33).  \n  1655            05 VALUE ' CRT                             ' PIC X(33).  \n  1656            05 VALUE ' CRT -UNDER                       ' PIC X(33).  \n  1657            05 VALUE 'MCSP                             ' PIC X(33).  \n  1658            05 VALUE ' CURRENCY                        ' PIC X(33).  \n  1659 GC0711     05 VALUE 'ICURRENCY -SYMBOL                 ' PIC X(33).  \n  1660            05 VALUE 'ICURRENT -DATE                    ' PIC X(33).  \n  1661            05 VALUE ' CURSOR                          ' PIC X(33).  \n  1662            05 VALUE ' CYCLE                           ' PIC X(33).  \n  1663            05 VALUE 'KDATA                            ' PIC X(33).  \n  ", "start_char_idx": 3322, "end_char_idx": 4467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f4292ec-9ef3-4730-9d57-9b23cf5ebc24": {"__data__": {"id_": "0f4292ec-9ef3-4730-9d57-9b23cf5ebc24", "embedding": null, "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce", "node_type": "4", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "29a04d6c158741d54dd9493c66460c8c879dd3d7337b313864ec137c5207f3b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a54780c-b2b6-4d62-b54e-d3f0a62db851", "node_type": "1", "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7e36ea4bfc54dbd2387077f23963af4370b907256017624f740520c378a6ad90", "class_name": "RelatedNodeInfo"}}, "text": "1664            05 VALUE ' DATA -POINTER                    ' PIC X(33).      UNIMPLEMENTED  \n  1665            05 VALUE ' DATE                            ' PIC X(33).  \n  1666            05 VALUE ' DATE -COMPILED                   ' PIC X(33).      OBSOLETE  \n  1667            05 VALUE ' DATE -MODIFIED                   ' PIC X(33).      OBSOLETE  \n  1668            05 VALUE 'IDATE -OF-INTEGER                 ' PIC X(33).  \n  ", "start_char_idx": 4467, "end_char_idx": 4898, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e98a10b-cb2a-42b3-8d31-b4c472ff0590": {"__data__": {"id_": "7e98a10b-cb2a-42b3-8d31-b4c472ff0590", "embedding": null, "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "564633f6-2b2b-4c6b-979e-353c2674de49", "node_type": "4", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b2ee96823a7b98c3e4ed3622690d39fadbf21ce1701560e2146dd3e0a846085", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baf0b178-86b1-42d1-bdf7-22a139904ade", "node_type": "1", "metadata": {}, "hash": "ea2831a274d2666e4abfaa85bebdeab351a439906a197b5de29933495c58426b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-55 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/sampl es/GCic.cbl  \nLine   Statement                                                                                                               Page: 40  \n====== ===================================================================================================== ===========================  \n  1669            05 VALUE 'IDATE -TO-YYYYMMDD                ' PIC X(33).  \n  1670            05 VALUE ' DATE -WRITTEN                    ' PIC X(33).      ", "start_char_idx": 0, "end_char_idx": 861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baf0b178-86b1-42d1-bdf7-22a139904ade": {"__data__": {"id_": "baf0b178-86b1-42d1-bdf7-22a139904ade", "embedding": null, "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "564633f6-2b2b-4c6b-979e-353c2674de49", "node_type": "4", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b2ee96823a7b98c3e4ed3622690d39fadbf21ce1701560e2146dd3e0a846085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e98a10b-cb2a-42b3-8d31-b4c472ff0590", "node_type": "1", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "04b25e5573b3193da9f27ded2509a48027dd7131e1f2f0b0932968a03f57003e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e632426-ff4e-4cec-99ba-6240eed52bde", "node_type": "1", "metadata": {}, "hash": "7c0599125e6ba413f9e9101c87b25e434c07c2b8df64ff548f5ebdda449b545f", "class_name": "RelatedNodeInfo"}}, "text": "OBSOLETE  \n  1671            05 VALUE ' DAY                             ' PIC  X(33). \n  1672            05 VALUE 'IDAY -OF-INTEGER                  ' PIC X(33).  \n  1673            05 VALUE ' DAY -OF-WEEK                     ' PIC X(33).  \n  1674            05 VALUE 'IDAY -TO-YYYYDDD                  ' PIC X(33).  \n  1675            05 VALUE  ' DE                              ' PIC X(33).  \n  1676 GC0712     05 VALUE 'IDEBUG -CONTENTS                  ' PIC X(33).  \n  1677 GC0712     05 VALUE 'IDEBUG -ITEM                      ' PIC X(33).  \n  1678 GC0712     05 VALUE 'IDEBUG -LINE                      ' PIC X(33).  \n  1679 GC0712     05 VALUE 'IDEBUG -NAME                      ' PIC X(33).  \n  1680 GC0712     05 VALUE 'IDEBUG -SUB-1                     ' PIC X(33).  \n  1681 GC0712     05 VALUE 'IDEBUG -SUB-2                     ' PIC X(33).  \n  1682 GC0712     05  VALUE 'IDEBUG -SUB-3                     ' PIC X(33).  \n  1683            05 VALUE ' DEBUGGING                       ' PIC X(33).  \n  1684            05 VALUE ' DECIMAL -POINT                   ' PIC X(33).  \n  1685            05 VALUE ' DECLARATIVES                    ' PIC X(33).  \n  1686            05 VALUE ' DEFAULT                         ' PIC X(33).  \n  1687            05 VALUE 'VDELETE                          ' PIC X(33).  \n  1688            05 VALUE ' DELIMITED                       ' PIC X(33).  \n  1689            05 VALUE 'KDELIMITER                       ' PIC X(33).  \n  1690            05 VALUE ' DEPENDING                       ' PIC X(33).  \n  1691            05 VALUE ' DESCENDING                      ' PIC X(33).  \n  1692            05 VALUE ' DESTI NATION                     ' PIC X(33).      UNIMPLEMENTED  \n  1693            05 VALUE ' DETAIL                          ' PIC X(33).  \n  ", "start_char_idx": 861, "end_char_idx": 2655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e632426-ff4e-4cec-99ba-6240eed52bde": {"__data__": {"id_": "5e632426-ff4e-4cec-99ba-6240eed52bde", "embedding": null, "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "564633f6-2b2b-4c6b-979e-353c2674de49", "node_type": "4", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b2ee96823a7b98c3e4ed3622690d39fadbf21ce1701560e2146dd3e0a846085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baf0b178-86b1-42d1-bdf7-22a139904ade", "node_type": "1", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e73f7187686723306d08de208f5f1f60e1a86d2d94d7678773c43d3f75e87183", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5950ca1-5d03-4f48-b111-d75a891f1ecb", "node_type": "1", "metadata": {}, "hash": "7eb2d11192b895c63b074ed8041c7464f25d52b610b56436a21fcdef520674a5", "class_name": "RelatedNodeInfo"}}, "text": "1694 GC0711     05 VALUE ' DISC                            ' PIC X(33).  \n  1695            05 VALUE ' DISK                            ' PIC X(33).  \n  1696            05 VALUE 'VDISPLAY                         ' PIC X(33).  \n  1697            05 VALUE 'IDISPLAY -OF                      ' PIC X(33).      UNIMPLEMENTED  \n  1698            05 VALUE 'VDIVIDE                          ' P IC X(33).  \n  1699            05 VALUE 'KDIVISION                        ' PIC X(33).  \n  1700            05 VALUE 'KDOWN                            ' PIC X(33).  \n  1701            05 VALUE ' DUPLICATES                      ' PIC X(33).  \n  1702            05 VAL UE ' DYNAMIC                         ' PIC X(33).  \n  1703            05 VALUE 'IE                               ' PIC X(33).  \n  1704            05 VALUE ' EBCDIC                          ' PIC X(33).  \n  1705 GC0712     05 VALUE ' EC                              ' PIC X(33).  \n  1706            05 VALUE ' EGI                             ' PIC X(33).      OBSOLETE  \n  1707            05 VALUE 'VELSE                            ' PIC X(33).  \n  1708            05 VALUE ' EMI                             ' PIC X(33).      OBSOLETE  \n  1709            05 VALUE ' EMPTY -CHECK                     ' PIC X(33).  \n  1710            05 VALUE 'VENABLE                          ' PIC X(33).      OBSOLETE  \n  1711 GC0710     05 VALUE 'KEND                             ' PIC X(33).  \n  1712            05 VALUE ' END -ACCEPT                      ' PIC X(33).  \n  ", "start_char_idx": 2655, "end_char_idx": 4165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5950ca1-5d03-4f48-b111-d75a891f1ecb": {"__data__": {"id_": "f5950ca1-5d03-4f48-b111-d75a891f1ecb", "embedding": null, "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "564633f6-2b2b-4c6b-979e-353c2674de49", "node_type": "4", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3b2ee96823a7b98c3e4ed3622690d39fadbf21ce1701560e2146dd3e0a846085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e632426-ff4e-4cec-99ba-6240eed52bde", "node_type": "1", "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d6233575f816537c2a56f2ac8434321d0ae53b11928b2c8fc45e757d1fa30bb8", "class_name": "RelatedNodeInfo"}}, "text": "1713            05 VALUE ' END -ADD                         ' PIC X(33).  \n  1714            05 VALUE ' END -CALL                        ' PIC X(33).  \n  1715            05 VALUE ' END -CHAIN                       ' PIC X(33).      UNIMPLEMENTED  \n  1716            05 VALUE ' END -COMPUTE                     ' PIC X(33).  \n  1717            05 VALUE ' END -DELETE                      ' PIC X(33).  \n  1718            05 VALUE ' END -DISPLAY                     ' PIC X(33).  \n  1719            05 VALUE ' END -DIVIDE                      ' PIC X(33).  \n  1720            05 VALUE ' END -EVALUATE                    ' PIC X(33).  \n  1721            05 VALUE ' END -IF                          ' PIC X(33).  \n  1722            05 VALUE ' END -MULTIPLY                    ' PIC X(33).  \n  ", "start_char_idx": 4165, "end_char_idx": 4954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5301235-217a-41b3-8356-9d91f9da00db": {"__data__": {"id_": "b5301235-217a-41b3-8356-9d91f9da00db", "embedding": null, "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "855b058d-1941-4905-a8e7-aa8498b380d8", "node_type": "4", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcf567d2b3b61ab0bb75e65c6d187d192ff5a09145467613e1f98718bb4ca530", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fe929ca-2720-41b7-b3f1-97f8b040fec1", "node_type": "1", "metadata": {}, "hash": "4b242b9d88924cd244172fef1ac2d6e1689b66adf9ee4c4ea7aca09c400894c6", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-56 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 41  \n====== ====================================================================================================================== ==========  \n  1723            05 VALUE ' END -OF-PAGE                     ' PIC X(33).  \n  1724            05 VALUE ' END -PERFORM                     ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fe929ca-2720-41b7-b3f1-97f8b040fec1": {"__data__": {"id_": "7fe929ca-2720-41b7-b3f1-97f8b040fec1", "embedding": null, "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "855b058d-1941-4905-a8e7-aa8498b380d8", "node_type": "4", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcf567d2b3b61ab0bb75e65c6d187d192ff5a09145467613e1f98718bb4ca530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5301235-217a-41b3-8356-9d91f9da00db", "node_type": "1", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3f5598d031ee147758934f40c0b3b2c00f2e08eb975f45eee2c3b8c7f1699d66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ec3e0ad-a912-434c-8177-6e85e76402b4", "node_type": "1", "metadata": {}, "hash": "4d5c50965d881ec5f1df77b6fd7d660ee564c887957e22bdb7fca025b8050579", "class_name": "RelatedNodeInfo"}}, "text": "1725            05 VALUE ' END -READ                        ' PIC X(33).  \n  1726            05 VALUE ' END -RECEIVE                     ' PIC X(33).      OBSOLETE  \n  1727            05 VALUE ' END -RETURN                      ' PIC X(33).  \n  1728            05 VALUE ' END -REWRITE                     ' PIC X(33).  \n  1729            05 VALUE ' END -SEARCH                      ' PIC X(33).  \n  1730            05 VALUE ' END -START                       ' PIC X(33).  \n  1731            05 VALUE ' END -STRING                      ' PIC X(33).  \n  1732            05 VALUE ' END -SUBTRACT                    ' PIC X(33).  \n  1733            05 VALUE ' END -UNSTRING                    ' PIC X(33).  \n  1734            05 VALUE ' END -WRITE                       ' PIC X(33).  \n  1735            05 VALUE 'VENTRY                           ' PIC X(33).  \n  1736            05 VALUE ' ENTRY -CONVENTION                ' PIC X(33).      UNIMPLEMENTED  \n  1737            05 VALUE 'KENVIRONMENT                     ' PIC X(33).  \n  1738            05 VALUE ' ENVIRONMENT -NAME                ' PIC X(33).  \n  1739            05 VALUE ' ENVIRONMENT -VALUE               ' PIC X(33).  \n  1740            05 VALUE ' EO                              ' PIC X(33).      UNIMPLEMENTED  \n  1741            05 VALUE ' EOL                             ' PIC X(33).  \n  1742            05 VALUE ' EOP                             ' PIC X(33).  \n  1743            05 VALUE ' EOS                             ' PIC X(33).  \n  1744            05 VALUE ' EQUAL                            ' PIC X(33).  \n  1745            05 VALUE 'KEQUALS                          ' PIC X(33).  \n  1746            05 VALUE ' ERASE                           ' PIC X(33).  \n  1747            05 VALUE ' ERROR                           ' PIC X (33). \n  1748            05 VALUE ' ESCAPE                          ' PIC X(33).  \n  1749            05 VALUE ' ESI                             ' PIC X(33).      OBSOLETE  \n  1750            05 VALUE 'VEVALUATE                        ' PIC X(33).  \n  1751            05 VALUE ' EXCEPTION                       ' PIC X(33).  \n  1752            05 VALUE 'IEXCEPTION -FILE                  ' PIC X(33).  \n  1753            05 VALUE 'IEXCEPTION -FILE-N                ' PIC X(33).      UNIMPLEMENTED  \n  1754            05 VALUE 'I EXCEPTION -LOCATION              ' PIC X(33).  \n  1755            05 VALUE 'IEXCEPTION -LOCATION -N            ' PIC X(33).      UNIMPLEMENTED  \n  1756            05 VALUE ' EXCEPTION -OBJECT                ' PIC X(33).      UNIMPLEMENTED  \n  1757            05 VALU E 'IEXCEPTION -STATEMENT             ' PIC X(33).  \n  1758            05 VALUE 'IEXCEPTION -STATUS                ' PIC X(33).  \n  1759            05 VALUE ' EXCLUSIVE                       ' PIC X(33).  \n  1760            05 VALUE 'VEXIT                            ' PIC X(33).  \n  1761            05 VALUE 'IEXP                             ' PIC X(33).  \n  1762            05 VALUE 'IEXP10                           ' PIC X(33).  \n  1763            05 VALUE ' EXPANDS                         ' PIC X(33).      UNIMPLEMENTED  \n  1764            05 VALUE ' EXTEND                          ' PIC X(33).  \n  1765            05 VALUE ' EXTERNAL                        ' PIC X(33).  \n  1766            05 VALUE 'IFACTORIAL                       ' PIC X(33).  \n  1767            05 VALUE ' FACTO RY                         ' PIC X(33).      UNIMPLEMENTED  \n  1768            05 VALUE ' FALSE                           ' PIC X(33).  \n  1769            05 VALUE 'KFD                              ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 4465, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ec3e0ad-a912-434c-8177-6e85e76402b4": {"__data__": {"id_": "8ec3e0ad-a912-434c-8177-6e85e76402b4", "embedding": null, "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "855b058d-1941-4905-a8e7-aa8498b380d8", "node_type": "4", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcf567d2b3b61ab0bb75e65c6d187d192ff5a09145467613e1f98718bb4ca530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fe929ca-2720-41b7-b3f1-97f8b040fec1", "node_type": "1", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0a6cab34d635c963e51758eb9d2ad042d69b37c203dcdc08dc9bb3122670096b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56141d5f-946b-4857-a9ae-41e697bcfb51", "node_type": "1", "metadata": {}, "hash": "a893c82423bee9d00aebf881f28a4ca3bc5ed9addbb52e722906eb8469096c80", "class_name": "RelatedNodeInfo"}}, "text": "1770            05 VALUE 'KFILE                            ' PIC X(33).  \n  1771            05 VALUE ' FILE -CONTROL                    ' PIC X(33).  \n  1772            05 VALUE ' FILE -ID                         ' PIC X(33).  \n  1773 GC1113     05 VALUE ' FILLE R                          ' PIC X(33).  \n  1774            05 VALUE ' FINAL                           ' PIC X(33).  \n  ", "start_char_idx": 4465, "end_char_idx": 4848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56141d5f-946b-4857-a9ae-41e697bcfb51": {"__data__": {"id_": "56141d5f-946b-4857-a9ae-41e697bcfb51", "embedding": null, "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "855b058d-1941-4905-a8e7-aa8498b380d8", "node_type": "4", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bcf567d2b3b61ab0bb75e65c6d187d192ff5a09145467613e1f98718bb4ca530", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ec3e0ad-a912-434c-8177-6e85e76402b4", "node_type": "1", "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17093a184646b81584d84a6af3c7d3ec28e8f07dfaa356f23a9c7da3ddf762bd", "class_name": "RelatedNodeInfo"}}, "text": "1775            05 VALUE ' FIRST                           ' PIC X(33).  \n  1776 GC0712     05 VALUE ' FLOAT -BINARY-128                ' PIC X (33).      UNIMPLEMENTED  \n  ", "start_char_idx": 4848, "end_char_idx": 5021, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82f268b1-da76-4828-b1c1-8fd4b935f1ee": {"__data__": {"id_": "82f268b1-da76-4828-b1c1-8fd4b935f1ee", "embedding": null, "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf", "node_type": "4", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "930099a200823b1e832cbf174687b5f1200b0f5619a0a475bd1234a0dc8e7f79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d7c0f1c-2232-4a52-bd62-c8c13c06e326", "node_type": "1", "metadata": {}, "hash": "5a4670d245c8f785f3052048d567b0b043b548ea78460ffd9f85050ab38e39c7", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-57 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 42  \n====== ====================================================================== ==========================================================  \n  1777 GC0712     05 VALUE ' FLOAT -BINARY-32                 ' PIC X(33).      UNIMPLEMENTED  \n  1778 GC0712     05 VALUE ' FLOAT -BINARY-64                 ' PIC X(33).      ", "start_char_idx": 0, "end_char_idx": 879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d7c0f1c-2232-4a52-bd62-c8c13c06e326": {"__data__": {"id_": "9d7c0f1c-2232-4a52-bd62-c8c13c06e326", "embedding": null, "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf", "node_type": "4", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "930099a200823b1e832cbf174687b5f1200b0f5619a0a475bd1234a0dc8e7f79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82f268b1-da76-4828-b1c1-8fd4b935f1ee", "node_type": "1", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e5e4d9212e7cc4c0c1d3507120394ca66e9a4c8b133741d9ca9778a3348a5f0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9c23c32-deb0-436e-b4dd-36d2733ec24b", "node_type": "1", "metadata": {}, "hash": "dfb1f6e22b98aeba4bc77cf68aa5363f966ec597cf45decbb3fb5b7e15f1c384", "class_name": "RelatedNodeInfo"}}, "text": "UNIMPLEMENTED  \n  1779            05 VALUE ' FLOAT -DECIMAL-16                ' PIC X(33).  \n  1780            05 VALUE ' FLOAT -DECIMAL-34                ' PIC X(33).  \n  1781            05 VALUE ' FLOAT -EXTENDED                  ' PIC X(33).      UNIMPLEMENTED  \n  1782 GC0712     05 VALUE  ' FLOAT-INFINITY                  ' PIC X(33).      UNIMPLEMENTED  \n  1783            05 VALUE ' FLOAT -LONG                      ' PIC X(33).  \n  1784 GC0712     05 VALUE ' FLOAT -NOT-A-NUMBER              ' PIC X(33).      UNIMPLEMENTED  \n  1785            05 V ALUE ' FLOAT -SHORT                     ' PIC X(33).  \n  1786            05 VALUE ' FOOTING                         ' PIC X(33).  \n  ", "start_char_idx": 879, "end_char_idx": 1570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9c23c32-deb0-436e-b4dd-36d2733ec24b": {"__data__": {"id_": "c9c23c32-deb0-436e-b4dd-36d2733ec24b", "embedding": null, "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf", "node_type": "4", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "930099a200823b1e832cbf174687b5f1200b0f5619a0a475bd1234a0dc8e7f79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d7c0f1c-2232-4a52-bd62-c8c13c06e326", "node_type": "1", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4ba0d9a377ad1e9a9ec81a1a1cb6007dfcbe0afc587b53b08af7d74124795c28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb64d5fd-d2fc-4ff0-8898-7e551df9383c", "node_type": "1", "metadata": {}, "hash": "8a0d3f03b3c4e6c412994643db751faa155cdb1607b578327854893a05c377a1", "class_name": "RelatedNodeInfo"}}, "text": "1787            05 VALUE ' FOR                             ' PIC X(33).  \n  1788            05 VALUE ' FOREGROUND -COLOR                ' PIC X(33).  \n  1789            05 VALUE ' FOREGROUND -COLOUR               ' PIC X(33).  \n  1790 GC0711     05 VALUE ' FOREVER                         ' PIC X(33).  \n  1791            05 VALUE ' FORMAT                          ' PIC X(33).      UNIMPLEMENT ED \n  1792 GC0711     05 VALUE 'IFORMATTED -CURRENT-DATE          ' PIC X(33).      UNIMPLEMENTED  \n  1793 GC0711     05 VALUE 'IFORMATTED -DATE                  ' PIC X(33).      UNIMPLEMENTED  \n  1794 GC0711     05 VALUE 'IFORMATTED -DATETIME              ' PIC X(33).      UNIMPLEMENTED  \n  1795 GC0711     05 VALUE 'IFORMATTED -TIME                  ' PIC X(33).      UNIMPLEMENTED  \n  1796            05 VALUE 'MFORMFEED                        ' PIC X(3 3). \n  1797            05 VALUE 'IFRACTION -PART                   ' PIC X(33).  \n  1798            05 VALUE 'VFREE                            ' PIC X(33).  \n  1799            05 VALUE ' FROM                            ' PIC X(33).  \n  1800            05 VALUE ' F ULL                            ' PIC X(33).  \n  1801            05 VALUE ' FUNCTION                        ' PIC X(33).  \n  1802 GC0712     05 VALUE 'KFUNCTION -ID                     ' PIC X(33).  \n  1803            05 VALUE ' FUNCTION -POINTER                ' P IC X(33).      UNIMPLEMENTED  \n  1804            05 VALUE 'VGENERATE                        ' PIC X(33).  \n  1805            05 VALUE ' GET                             ' PIC X(33).      UNIMPLEMENTED  \n  1806            05 VALUE 'KGIVING                          ' PIC X(33).  \n  1807            05 VALUE ' GLOBAL                          ' PIC X(33).  \n  1808            05 VALUE 'VGO                              ' PIC X(33).  \n  1809            05 VALUE 'VGOBACK                          ' PIC X(33).  \n  1810            05  VALUE ' GREATER                         ' PIC X(33).  \n  1811            05 VALUE ' GROUP                           ' PIC X(33).  \n  1812            05 VALUE ' GROUP -USAGE                     ' PIC X(33).      UNIMPLEMENTED  \n  1813            05 VALUE ' HEADIN G                         ' PIC X(33).  \n  1814            05 VALUE ' HIGH -VALUE                      ' PIC X(33).  \n  1815            05 VALUE ' HIGH -VALUES                     ' PIC X(33).  \n  1816 GC0711     05 VALUE 'IHIGHEST -ALGEBRAIC               ' PIC X( 33). \n  1817            05 VALUE ' HIGHLIGHT                       ' PIC X(33).  \n  ", "start_char_idx": 1570, "end_char_idx": 4095, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb64d5fd-d2fc-4ff0-8898-7e551df9383c": {"__data__": {"id_": "cb64d5fd-d2fc-4ff0-8898-7e551df9383c", "embedding": null, "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf", "node_type": "4", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "930099a200823b1e832cbf174687b5f1200b0f5619a0a475bd1234a0dc8e7f79", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9c23c32-deb0-436e-b4dd-36d2733ec24b", "node_type": "1", "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "98d3dee0ac8b2cb57b208fbfd0d9a2d271a8415b79aad043deaabc1c429cca26", "class_name": "RelatedNodeInfo"}}, "text": "1818            05 VALUE ' I -O                             ' PIC X(33).  \n  1819            05 VALUE ' I -O-CONTROL                     ' PIC X(33).  \n  1820            05 VALUE 'K ID                              ' PIC X(33).  \n  1821            05 VALUE 'KIDENTIFICATION                  ' PIC X(33).  \n  1822            05 VALUE 'VIF                              ' PIC X(33).  \n  1823            05 VALUE ' IGNORE                          ' PIC X(33).  \n  1824            05 VALUE ' IGNORING                        ' PIC X(33).  \n  1825            05 VALUE ' IMPLEMENTS                      ' PIC X(33).      UNIMPLEMENTED  \n  1826            05 VALUE ' IN                              ' PIC X(33).  \n  1827            05 VALUE ' INDEX                           ' PIC X(33).  \n  1828            05 VALUE 'KINDEXED                         ' PIC X(33).  \n  1829            05 VALUE ' INDICATE                        ' PIC X(33).  \n  1830            05 VALUE ' INDIRECT                        ' PIC X(33).      UNIMPLEMENTED  \n  ", "start_char_idx": 4095, "end_char_idx": 5124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c8e2dfc-5b06-41cd-acff-5ea27e92f81f": {"__data__": {"id_": "4c8e2dfc-5b06-41cd-acff-5ea27e92f81f", "embedding": null, "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a", "node_type": "4", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d635b8bbf02391af05f6058e2b76017ca653da8eee98977fdbab82a3e503a0db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "560d5e23-6de0-4fa6-9504-e0986030994e", "node_type": "1", "metadata": {}, "hash": "592e9c91bbd70cc13e9727d9c4e8240f7d9531e291f748f8fa7e3cb2d55a858c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-58 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 43  \n====== ====================================================================================================================== ==========  \n  1831            05 VALUE ' INHERITS                        ' PIC X(33).      UNIMPLEMENTED  \n  1832            05 VALUE ' INITIAL                         ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "560d5e23-6de0-4fa6-9504-e0986030994e": {"__data__": {"id_": "560d5e23-6de0-4fa6-9504-e0986030994e", "embedding": null, "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a", "node_type": "4", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d635b8bbf02391af05f6058e2b76017ca653da8eee98977fdbab82a3e503a0db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c8e2dfc-5b06-41cd-acff-5ea27e92f81f", "node_type": "1", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2b026fa4fad93e26adba66be5e98c61075c01dd15eb2bc87bb52efd662856694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df12bce3-6ece-4140-9594-78f6539cd4e1", "node_type": "1", "metadata": {}, "hash": "9c1303b43ee41d5c1b3fdde07fb688cf6520c3581961651d80f3d9278bb9ed3f", "class_name": "RelatedNodeInfo"}}, "text": "1833            05 VALUE 'VINITIALISE                      ' PIC X(33).  \n  1834            05 VALUE ' INITIALISED                     ' PIC X(33).  \n  1835            05 VALUE 'VINITIALIZE                      ' PIC X(33).  \n  1836            05 VALUE ' INITIALIZED                     ' PIC X(33).  \n  1837            05 VALUE 'VINITIATE                        ' PIC X(33).  \n  1838            05 VALUE ' INPUT                           ' PIC X(33).  \n  1839            05 VALUE 'KINPUT -OUTPUT                    ' PIC X(33).  \n  1840            05 VALUE 'VINSPECT                         ' PIC X(33).  \n  1841            05 VALUE ' INSTALLATION                    ' PIC X(33).      OBSOLETE  \n  1842            05 VALU E 'IINTEGER                         ' PIC X(33).  \n  ", "start_char_idx": 876, "end_char_idx": 1652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df12bce3-6ece-4140-9594-78f6539cd4e1": {"__data__": {"id_": "df12bce3-6ece-4140-9594-78f6539cd4e1", "embedding": null, "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a", "node_type": "4", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d635b8bbf02391af05f6058e2b76017ca653da8eee98977fdbab82a3e503a0db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "560d5e23-6de0-4fa6-9504-e0986030994e", "node_type": "1", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31b8349d3eb09b27a0621eb58d68ecd0c8396495d69c79bfda895ffd8d466614", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce051b6b-1203-4f8a-840e-6ca60fdd1c5a", "node_type": "1", "metadata": {}, "hash": "2ae4b78bb16c34aed5ab5c530e56104258a33204888fe124dc9e702bb0ff8a07", "class_name": "RelatedNodeInfo"}}, "text": "1843            05 VALUE 'IINTEGER -OF-BOOLEAN              ' PIC X(33).      UNIMPLEMENTED  \n  1844            05 VALUE 'IINTEGER -OF-DATE                 ' PIC X(33).  \n  1845            05 VALUE 'IINTEGER -OF-DAY                  ' PIC X(33).  \n  1846 GC0711     05 VALUE 'IINTEGER -OF-FORMATTED -DATE       ' PIC X(33).      UNIMPLEMENTED  \n  1847            05 VALUE 'IINTEGER -PART                    ' PIC X(33).  \n  1848            05 VALUE ' INTERFACE                       ' PIC X(33).      UNIMPLEMENTED  \n  1849            05 VALUE ' INTERFACE -ID                    ' PIC X(33).      UNIMPLEMENTED  \n  1850            05 VALUE ' INTERMEDIATE                    ' PIC X(3 3).      UNIMPLEMENTED  \n  1851            05 VALUE 'KINTO                            ' PIC X(33).  \n  1852            05 VALUE ' INTRINSIC                       ' PIC X(33).  \n  1853            05 VALUE ' INVALID                         ' PIC X(33).  \n  1854            05 VALUE ' INVOKE                          ' PIC X(33).      UNIMPLEMENTED  \n  1855            05 VALUE ' IS                              ' PIC X(33).  \n  1856            05 VALUE ' JUST                            ' PIC X(33).  \n  1857            05 VALUE  ' JUSTIFIED                       ' PIC X(33).  \n  1858            05 VALUE ' KEPT                            ' PIC X(33).  \n  1859            05 VALUE ' KEY                             ' PIC X(33).  \n  1860            05 VALUE ' KEYBOARD                        ' PIC X(33).  \n  1861            05 VALUE ' LABEL                           ' PIC X(33).  \n  1862            05 VALUE ' LAST                            ' PIC X(33).  \n  1863            05 VALUE ' LC_ALL                          ' PIC X(33).      UNIMPLEMENTED  \n  1864            05 VALUE ' LC_COLLATE                      ' PIC X(33).      UNIMPLEMENTED  \n  1865            05 VALUE ' LC_CTYPE                        ' PIC X(33).      UNIMPLEMENTED  \n  1866            05 VALUE ' LC_MESSAGES                     ' PIC X(33 ).      UNIMPLEMENTED  \n  1867            05 VALUE ' LC_MONETARY                     ' PIC X(33).      UNIMPLEMENTED  \n  1868            05 VALUE ' LC_NUMERIC                      ' PIC X(33).      UNIMPLEMENTED  \n  1869            05 VALUE ' LC_TIME                         ' PIC X(33).      UNIMPLEMENTED  \n  1870            05 VALUE ' LEADING                         ' PIC X(33).  \n  1871            05 VALUE ' LEFT                            ' PIC X(33).  \n  1872            05 VALUE ' LEFT -JUSTIFY                    ' PIC X(33).      UNIMPLEMENTED  \n  1873            05 VALUE ' LEFTLINE                        ' PIC X(33).  \n  1874 GC0712     05 VALUE ' LENGTH                          ' PIC X(33).  \n  ", "start_char_idx": 1652, "end_char_idx": 4361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce051b6b-1203-4f8a-840e-6ca60fdd1c5a": {"__data__": {"id_": "ce051b6b-1203-4f8a-840e-6ca60fdd1c5a", "embedding": null, "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a", "node_type": "4", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d635b8bbf02391af05f6058e2b76017ca653da8eee98977fdbab82a3e503a0db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df12bce3-6ece-4140-9594-78f6539cd4e1", "node_type": "1", "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "17d0b6bcd8855f58e1bd06c2c582e3b970ba27f054d0fa224e611c9491d85aa8", "class_name": "RelatedNodeInfo"}}, "text": "1875 GC0711     05 VALUE 'ILENGTH -AN                       ' PIC X(33).  \n  1876            05 VALUE ' LENGTH -CHECK                    ' PIC X(33).  \n  1877            05 VALUE ' LESS                            ' PIC X(33).  \n  1878            05 VALUE ' LIMIT                           ' PIC X(33).  \n  1879            05 VALUE ' LIMIT S                          ' PIC X(33).  \n  1880            05 VALUE ' LINAGE                          ' PIC X(33).  \n  1881            05 VALUE 'ILINAGE -COUNTER                  ' PIC X(33).  \n  1882            05 VALUE ' LINE                            ' PIC X (33). \n  1883            05 VALUE ' LINE -COUNTER                    ' PIC X(33).  \n  1884            05 VALUE ' LINES                           ' PIC X(33).  \n  ", "start_char_idx": 4361, "end_char_idx": 5126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "346c52ec-826c-4db7-90bd-5d7fddd4dcfa": {"__data__": {"id_": "346c52ec-826c-4db7-90bd-5d7fddd4dcfa", "embedding": null, "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf", "node_type": "4", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cd0575f7dcb7c1ac813cdc8e410619e55f8533d15ae29e4a1ffa72f26a75aeb3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18534955-03bf-40ab-8d72-c6a1f1251ee7", "node_type": "1", "metadata": {}, "hash": "af63b53fec6d28ad107d8031394e8201dba466ce273d835214f081e2d051bd45", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-59 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 44  \n====== ====================================================================================================================== ==========  \n  1885            05 VALUE 'KLINKAGE                         ' PIC X (33). \n  1886            05 VALUE 'KLOCAL -STORAGE                   ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18534955-03bf-40ab-8d72-c6a1f1251ee7": {"__data__": {"id_": "18534955-03bf-40ab-8d72-c6a1f1251ee7", "embedding": null, "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf", "node_type": "4", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cd0575f7dcb7c1ac813cdc8e410619e55f8533d15ae29e4a1ffa72f26a75aeb3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "346c52ec-826c-4db7-90bd-5d7fddd4dcfa", "node_type": "1", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1cf536f683cffa1bd862e10cb8894e1dad2232124a5126dbedb0d16b1d4ff5be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0714ac06-d4c9-4b00-82f8-57621bbcdacc", "node_type": "1", "metadata": {}, "hash": "9f7e09f80cb6badde45b5b980098aeb768fb234202e8e1b7974aa2e3bbeaacb8", "class_name": "RelatedNodeInfo"}}, "text": "1887            05 VALUE ' LOCALE                          ' PIC X(33).  \n  1888 GC0711     05 VALUE 'ILOCALE -COMPARE                  ' PIC X(33).  \n  1889            05 VALUE ' ILOCALE-DATE                     ' PIC X(33).  \n  1890            05 VALUE 'ILOCALE -TIME                     ' PIC X(33).  \n  1891            05 VALUE 'ILOCALE -TIME-FROM-SECONDS        ' PIC X(33).  \n  1892            05 VALUE ' LOCK                            '  PIC X(33).  \n  1893            05 VALUE 'ILOG                             ' PIC X(33).  \n  1894            05 VALUE 'ILOG10                           ' PIC X(33).  \n  1895            05 VALUE ' LOW -VALUE                       ' PIC X(33).  \n  1896            05 V ALUE ' LOW -VALUES                      ' PIC X(33).  \n  1897            05 VALUE ' LOWER                           ' PIC X(33).  \n  1898            05 VALUE 'ILOWER -CASE                      ' PIC X(33).  \n  1899 GC0711     05 VALUE 'ILOWEST -ALGEBRAIC                ' PIC X(33).  \n  1900            05 VALUE ' LOWLIGHT                        ' PIC X(33).  \n  1901            05 VALUE ' MANUAL                          ' PIC X(33).  \n  1902            05 VALUE 'IMAX                             ' PIC X(33).  \n  1903            05 VALUE 'IMEAN                            ' PIC X(33).  \n  1904            05 VALUE 'IMEDIAN                          ' PIC X(33).  \n  1905            05 VALUE ' MEMORY                          ' PIC X(33).  \n  1906            05 VALUE 'VMERGE                            ' PIC X(33).  \n  1907            05 VALUE ' MESSAGE                         ' PIC X(33).      OBSOLETE  \n  1908            05 VALUE ' METHOD                          ' PIC X(33).      UNIMPLEMENTED  \n  1909            05 VALUE ' METHOD -ID                       ' PIC X(33).      UNIMPLEMENTED  \n  1910            05 VALUE 'IMIDRANGE                        ' PIC X(33).  \n  1911            05 VALUE 'IMIN                             ' PIC X(33).  \n  1912            05 VALUE ' MINUS                           ' PIC X(33).  \n  1913            05 VALUE 'IMOD                             ' PIC X(33).  \n  1914            05 VALUE ' MODE                            ' PIC X(33).  \n  1915            05 VALUE 'IMODULE -CALLER-ID                ' PIC X(33).  \n  1916            05 VALUE 'IMODULE -DATE                     ' PIC X(33).  \n  1917            05 VALUE 'IMODULE -FORMATTED -DATE           ' PIC X(33).  \n  1918            05 VALUE 'IMODULE -ID                       ' PIC X(33).  \n  1919            05 VALUE 'IMODULE -PATH                     ' PIC X(33).  \n  1920            05 VALUE 'IMODULE -SOURCE                   ' PIC X(33).  \n  1921            05 VALUE 'IMODULE -TIME                     ' PIC X(33).  \n  1922 GC0711     05 VALUE 'IMONETARY -DECIMAL-POINT          ' PIC X(33).  \n  1923 GC0711     05 VALUE 'IMONETARY -THOUSANDS -SEPARATOR    ' PIC X(33).  \n  1924            05 VALUE 'VMOVE                            ' PIC X(33).  \n  ", "start_char_idx": 858, "end_char_idx": 3821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0714ac06-d4c9-4b00-82f8-57621bbcdacc": {"__data__": {"id_": "0714ac06-d4c9-4b00-82f8-57621bbcdacc", "embedding": null, "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf", "node_type": "4", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cd0575f7dcb7c1ac813cdc8e410619e55f8533d15ae29e4a1ffa72f26a75aeb3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18534955-03bf-40ab-8d72-c6a1f1251ee7", "node_type": "1", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bee08160d88a73ccdfd449ca846b237244ac852235c9cba557e350cf07f3942d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b7fe5a5-059d-49b3-acf9-62f9bf0fb437", "node_type": "1", "metadata": {}, "hash": "b0ddbce53269c14733d512bbfb35bbc35e665d2b1c0f3b576bcf695f05ece53d", "class_name": "RelatedNodeInfo"}}, "text": "1925            05 VALUE ' MULTIPLE                        ' PIC X(33).  \n  1926            05 VALUE 'VMULTIPLY                        ' PIC X(33).  \n  1927 GC0711     05 VALUE ' NAME                            ' PIC X(33).  \n  1928            05 VALUE ' NATIONAL                        ' PIC X(33).  \n  1929            05 VALUE ' NATIONAL -EDITED                 ' PIC X(33).  \n  1930            05 VALUE 'INATIONAL -OF                     ' PIC X(33).      UNIMPLEMENTED  \n  1931            05 VALUE ' NATIVE                          ' PIC X(33).  \n  1932            05 VALUE ' NEAREST -AWAY-FROM-ZERO          ' PIC X(33).  \n  ", "start_char_idx": 3821, "end_char_idx": 4451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b7fe5a5-059d-49b3-acf9-62f9bf0fb437": {"__data__": {"id_": "4b7fe5a5-059d-49b3-acf9-62f9bf0fb437", "embedding": null, "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf", "node_type": "4", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cd0575f7dcb7c1ac813cdc8e410619e55f8533d15ae29e4a1ffa72f26a75aeb3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0714ac06-d4c9-4b00-82f8-57621bbcdacc", "node_type": "1", "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e57612b7dce898b7d1febb335cb065b6b7403baf0a23648630987b23461e0e42", "class_name": "RelatedNodeInfo"}}, "text": "1933            05 VALUE ' NEAREST -EVEN                    ' PIC X(33).  \n  1934            05 VALUE ' NEAREST -TOWARD-ZERO             ' PIC X(33).  \n  1935            05 VALUE ' NEGATIVE                        ' PIC X(33).  \n  1936            05 VALUE ' NESTED                          ' PIC X(33).      UNIMPLEMENTED  \n  1937            05 VALUE 'VNEXT                            ' PIC X(33).  \n  1938            05 VALUE ' NO                              ' P IC X(33).  \n  ", "start_char_idx": 4451, "end_char_idx": 4929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1081ff39-016a-4517-a222-572d0f6e2262": {"__data__": {"id_": "1081ff39-016a-4517-a222-572d0f6e2262", "embedding": null, "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7", "node_type": "4", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfc3de4f4ac82cf0c5603043d8b71fc6863de8437e0e7333a712740ac639ee8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a57b08-5113-4084-893e-9424d0995730", "node_type": "1", "metadata": {}, "hash": "2842ff8588ab2f9d3ab2a1e99afb42b0860e10f030e0521b0c66b0de001e19e2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-60 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 45  \n====== ===================================================================================== ===========================================  \n  1939            05 VALUE ' NO -ECHO                         ' PIC X(33).  \n  1940            05 VALUE ' NONE                            ' PIC X(33).      ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a57b08-5113-4084-893e-9424d0995730": {"__data__": {"id_": "04a57b08-5113-4084-893e-9424d0995730", "embedding": null, "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7", "node_type": "4", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfc3de4f4ac82cf0c5603043d8b71fc6863de8437e0e7333a712740ac639ee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1081ff39-016a-4517-a222-572d0f6e2262", "node_type": "1", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "57e3456b1b88c1f5498c48d46124b5af6e16d07c1c513507ead6a09356179e0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75df3b7c-0020-4873-8acf-4e7173cc4374", "node_type": "1", "metadata": {}, "hash": "8eb6c59d89f8682dbb6660570aba67c0e180560c135fb9f5edf4c446d5d16a97", "class_name": "RelatedNodeInfo"}}, "text": "UNIMPLEMENTED  \n  1941            05 VALUE ' NORMAL                          ' PIC X(33).  \n  1942            05 VALUE ' NOT                             ' PIC X(33).  \n  1943            05 VALUE ' NULL                            ' PIC X(33).  \n  1944            05 VALUE ' NULLS                           ' PIC X(33).  \n  1945            05 VALUE ' NUMBER                          ' PIC X(33).  \n  1946            05 VALUE 'INUMBER -OF-CALL-PARAMETERS       ' PIC X(33).  \n  1947            05 VALUE ' NUMBERS                         ' PIC X(33).  \n  1948            05 VALUE ' NUMERIC                         ' PIC X(33).  \n  1949 GC0711     05 VALUE 'INUMERIC -DECIMAL-POINT           ' PIC X(33).  \n  1950            05 VALUE ' NUMERIC -EDITED                  ' PIC X(33).  \n  1951 GC0711     05 VALUE 'INUMERIC -THOUSANDS -SEPARATOR     ' PIC X(33).  \n  1952            05 VALUE 'INUMVAL                          ' PIC X(33).  \n  1953            05 VALUE 'INUMVAL -C                        ' PIC X(33).  \n  1954 GC0711     05 VALUE 'INUMVAL -F                        ' PIC X(33).  \n  1955            05 VALUE ' OBJECT                          ' PIC X(33).      UNIMPLEMENTED  \n  1956            05 VALUE ' OBJECT -COMPUTER                 ' PIC X(33).  \n  1957            05 VALUE ' OBJECT -REFERENCE                ' PIC X(33).      UNIMPLEMEN TED \n  1958            05 VALUE ' OCCURS                          ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 2292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75df3b7c-0020-4873-8acf-4e7173cc4374": {"__data__": {"id_": "75df3b7c-0020-4873-8acf-4e7173cc4374", "embedding": null, "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7", "node_type": "4", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfc3de4f4ac82cf0c5603043d8b71fc6863de8437e0e7333a712740ac639ee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a57b08-5113-4084-893e-9424d0995730", "node_type": "1", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ee72aaddb2efb87ad5a67dc26d61363470e3755a43dec5cc74e822f3e3ced48e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59186958-6921-440b-a239-1f94865dbbec", "node_type": "1", "metadata": {}, "hash": "77812c5389a3d326f38062d0574c8be00a680c6e066836808e60607fb142aabf", "class_name": "RelatedNodeInfo"}}, "text": "1959            05 VALUE ' OF                              ' PIC X(33).  \n  ", "start_char_idx": 2292, "end_char_idx": 2368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59186958-6921-440b-a239-1f94865dbbec": {"__data__": {"id_": "59186958-6921-440b-a239-1f94865dbbec", "embedding": null, "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7", "node_type": "4", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfc3de4f4ac82cf0c5603043d8b71fc6863de8437e0e7333a712740ac639ee8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75df3b7c-0020-4873-8acf-4e7173cc4374", "node_type": "1", "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "38f659a62cd651c20d219c768ca53518f7fb599c56220eb52066002f6d04977c", "class_name": "RelatedNodeInfo"}}, "text": "1960            05 VALUE ' OFF                             ' PIC X(33).  \n  1961            05 VALUE ' O MITTED                         ' PIC X(33).  \n  1962            05 VALUE ' ON                              ' PIC X(33).  \n  1963            05 VALUE ' ONLY                            ' PIC X(33).  \n  1964            05 VALUE 'VOPEN                            ' P IC X(33).  \n  1965            05 VALUE ' OPTIONAL                        ' PIC X(33).  \n  1966            05 VALUE ' OPTIONS                         ' PIC X(33).      UNIMPLEMENTED  \n  1967            05 VALUE ' OR                              ' PIC X(33).  \n  1968            05 VALUE 'IORD                             ' PIC X(33).  \n  1969            05 VALUE 'IORD -MAX                         ' PIC X(33).  \n  1970            05 VALUE 'IORD -MIN                         ' PIC X(33).  \n  1971            05 VALUE ' ORDER                           ' PIC X(33).  \n  1972            05 VALUE ' ORGANISATION                    ' PIC X(33).  \n  1973            05 VALUE ' ORGANIZATION                    ' PIC X(33).  \n  1974            05 VALUE ' OTHER                           ' PIC X(33).  \n  1975            05 VALUE ' OUTPUT                          ' PIC X(33).  \n  1976            05 VALUE ' OVERFLOW                        ' PIC X(33).  \n  1977            05 VALUE ' OVERLINE                        ' PIC X(33).  \n  1978            05 VALUE ' OVER RIDE                        ' PIC X(33).  \n  1979            05 VALUE ' PACKED -DECIMAL                  ' PIC X(33).  \n  1980            05 VALUE ' PADDING                         ' PIC X(33).  \n  1981            05 VALUE ' PAGE                            ' PIC X(33). \n  1982            05 VALUE ' PAGE -COUNTER                    ' PIC X(33).  \n  1983            05 VALUE ' PARAGRAPH                       ' PIC X(33).  \n  1984            05 VALUE 'VPERFORM                         ' PIC X(33).  \n  1985            05 VALUE ' PF                              ' PIC X(33).  \n  1986            05 VALUE ' PH                              ' PIC X(33).  \n  1987            05 VALUE 'IPI                              ' PIC X(33).  \n  1988            05 VALUE 'KPIC                             ' PIC X(33).  \n  1989            05 VALUE 'KPICTURE                         ' PIC X(33).  \n  1990            05 VALUE ' PLUS                            ' PIC X(33).  \n  1991            05 VALUE 'KPOINTER                         ' PIC X (33). \n  1992            05 VALUE ' POSITION                        ' PIC X(33).  \n  ", "start_char_idx": 2368, "end_char_idx": 4901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c324da2-6f8a-4cd7-8ba0-2c3bb0ff71f7": {"__data__": {"id_": "4c324da2-6f8a-4cd7-8ba0-2c3bb0ff71f7", "embedding": null, "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d", "node_type": "4", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4c2766a3aa590c601075912ef5885870b6f0253771115d6e19a31182872993b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54af2640-d152-437c-b647-f840c2a7a494", "node_type": "1", "metadata": {}, "hash": "f70c1e6bbc82e9722d7581cffaae1f2c80f6162bee6e9a1bb4938772b50dc42d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-61 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 46  \n====== =============== =================================================================================================================  \n  1993            05 VALUE ' POSITIVE                        ' PIC X(33).  \n  1994            05 VALUE ' PREFIXED                        ' PIC X (33).      ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54af2640-d152-437c-b647-f840c2a7a494": {"__data__": {"id_": "54af2640-d152-437c-b647-f840c2a7a494", "embedding": null, "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d", "node_type": "4", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4c2766a3aa590c601075912ef5885870b6f0253771115d6e19a31182872993b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c324da2-6f8a-4cd7-8ba0-2c3bb0ff71f7", "node_type": "1", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1ab9e5d9a641cf04ffbe303c3cd9070e496cac36ec68082f0f0b0e5141bdc5d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92", "node_type": "1", "metadata": {}, "hash": "ed80e9e45a07042de3db1b83ee712eb118ce93666a57ecb45fe4a2a0252ab8b0", "class_name": "RelatedNodeInfo"}}, "text": "UNIMPLEMENTED  \n  1995            05 VALUE ' PRESENT                         ' PIC X(33).  \n  1996            05 VALUE 'IPRESENT -VALUE                   ' PIC X(33).  \n  1997            05 VALUE ' PREVIOUS                        ' PIC X(33).  \n  1998            05 VALUE 'MPRINTER                         ' PIC X(33).  \n  1999            05 VALUE ' PRINTING                        ' PIC X(33).  \n  2000            05 VALUE 'KPROCEDURE                       ' PIC X(33).  \n  2001            05 VALUE ' PROCEDURE -POINTER               ' PIC X(33).  \n  2002            05 VALUE ' PROCEDURES                      ' PIC X(33).  \n  2003            05 VALUE ' PROCEED                         ' PIC X(33).  \n  2004            05 VALUE ' PROGRAM                         ' PIC X(33).  \n  2005            05 VALUE 'KPROGRAM -ID                      ' PIC X(33).  \n  2006            05 VALUE ' PROGRAM -POINTER                 ' PIC X(33).  \n  2007            05 VALUE ' PROHIBITED                      ' PIC X(33).  \n  2008            05 VALUE ' PROMPT                          ' PIC X(33).  \n  2009            05 VALUE ' PROPERTY                        ' PIC X(33).      UNIMPLEMENTED  \n  2010            05 VALUE ' PROTOTYPE                       ' PIC X(33).      UNIMPLEMEN TED \n  2011            05 VALUE ' PURGE                           ' PIC X(33).      OBSOLETE  \n  2012            05 VALUE ' QUEUE                           ' PIC X(33).      ", "start_char_idx": 859, "end_char_idx": 2302, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92": {"__data__": {"id_": "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92", "embedding": null, "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d", "node_type": "4", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4c2766a3aa590c601075912ef5885870b6f0253771115d6e19a31182872993b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54af2640-d152-437c-b647-f840c2a7a494", "node_type": "1", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "60998973867f3963e59d68c0d632771719d8a19f868978390973b73ed88e7b76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31c7bbdb-f3ec-44e3-b595-4bc945b919dd", "node_type": "1", "metadata": {}, "hash": "9f2ad35f5ca230fa84b21f031838053be9079bd3de494c08391c010ed8c8cd42", "class_name": "RelatedNodeInfo"}}, "text": "OBSOLETE  \n  2013            05 VALUE ' QUOTE                           ' PIC X(33).  \n  2014            05 VALUE ' QUOTES                          ' PIC X(33).  \n  2015            05 VALUE ' RAISE                           ' PIC X(33).      UNIMPLEMENTED  \n  2016            05 VALUE ' RAISING                         ' PIC X(33).      UNIMPLEMENTE D \n  2017            05 VALUE 'IRANDOM                          ' PIC X(33).  \n  2018            05 VALUE 'IRANGE                           ' PIC X(33).  \n  ", "start_char_idx": 2302, "end_char_idx": 2809, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31c7bbdb-f3ec-44e3-b595-4bc945b919dd": {"__data__": {"id_": "31c7bbdb-f3ec-44e3-b595-4bc945b919dd", "embedding": null, "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d", "node_type": "4", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a4c2766a3aa590c601075912ef5885870b6f0253771115d6e19a31182872993b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92", "node_type": "1", "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3bda8d2e572c04cadfcc37cf190984db8fe72a6fc6ce7ab9accb05bef9eed747", "class_name": "RelatedNodeInfo"}}, "text": "2019            05 VALUE ' RD                              ' PIC X(33).  \n  2020            05 VALUE 'VREA D                            ' PIC X(33).  \n  2021            05 VALUE 'VREADY                           ' PIC X(33).  \n  2022            05 VALUE 'VRECEIVE                         ' PIC X(33).      OBSOLETE  \n  2023            05 VALUE ' RECORD                          ' PIC X(33).  \n  2024            05 VALUE ' RECORDING                       ' PIC X(33).  \n  2025            05 VALUE ' RECORDS                         ' PIC X(33).  \n  2026            05 VALUE ' RECURSIVE                       ' PIC X(33).  \n  2027            05 VALUE 'KREDEFINES                       ' PIC X(33).  \n  2028            05 VALUE ' REEL                            ' PIC X(33).  \n  2029 GC0712     05 VALUE 'AREFERENCE                       ' PIC X(33).  \n  2030            05 VALUE ' REFERENCES                      ' PIC X(33).  \n  2031            05 VALUE ' RELATION                        ' PIC X(33).      UNIMPLEMENTED  \n  2032            05 VALUE ' RELATIVE                        ' PIC X(33).  \n  2033            05 VALUE 'VRELEASE                         ' PIC X(33).  \n  2034            05 VALUE 'IREM                             ' PIC X(33).  \n  2035            05 VALUE ' REMAINDER                       ' PIC X(33).  \n  2036            05 VALUE ' REMARKS                         ' PIC X(33).      OBSOLETE  \n  2037            05 VALUE ' REMOVAL                         ' PIC X(33).  \n  2038            05 VALUE 'KRENAMES                         ' PIC X(33).  \n  2039            05 VALUE ' REPLACE                         ' PIC X(33).  \n  2040            05 VALUE 'KREPLA CING                       ' PIC X(33).  \n  2041            05 VALUE 'KREPORT                          ' PIC X(33).  \n  2042            05 VALUE ' REPORTING                       ' PIC X(33).  \n  2043            05 VALUE ' REPORTS                         ' PIC X (33). \n  2044            05 VALUE ' REPOSITORY                      ' PIC X(33).  \n  2045            05 VALUE ' REQUIRED                        ' PIC X(33).  \n  2046            05 VALUE ' RESERVE                         ' PIC X(33).  \n  ", "start_char_idx": 2809, "end_char_idx": 4986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d323752e-eae7-4e91-ad48-44bf45b96a3d": {"__data__": {"id_": "d323752e-eae7-4e91-ad48-44bf45b96a3d", "embedding": null, "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19b7d1f7-86e2-49be-94f9-5420213f210c", "node_type": "4", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bc85f05b9e5f1d0967e6384adaa0039fc95b8902890bd9448a0f830eac20c140", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "674e107d-e6fd-468d-ab8a-941168208699", "node_type": "1", "metadata": {}, "hash": "e077e87dd78014ec62b690b952d335afc4eb9ce9365f9871231f3c16f8f468f3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-62 GNU COBOL V2.0 11FEB2012 S ource Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Sta tement                                                                                                               Page: 47  \n====== ====================================================================================================================== ========== \n  2047            05 VALUE 'VRESET                           ' PIC X(33).  \n  2048            05 VALUE ' RESUME                          ' PIC X(33).      ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "674e107d-e6fd-468d-ab8a-941168208699": {"__data__": {"id_": "674e107d-e6fd-468d-ab8a-941168208699", "embedding": null, "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19b7d1f7-86e2-49be-94f9-5420213f210c", "node_type": "4", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bc85f05b9e5f1d0967e6384adaa0039fc95b8902890bd9448a0f830eac20c140", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d323752e-eae7-4e91-ad48-44bf45b96a3d", "node_type": "1", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6a07685433608576c181edf297dc6e6ed3f4ee43ad5eded4f5663314d9c7b5d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "191940cb-9aad-4d15-a995-3ad3c4bf35dc", "node_type": "1", "metadata": {}, "hash": "709ee0844354fe5abb793adf4c2904e0d2d0cb20afe1771a88eb26cc46620d73", "class_name": "RelatedNodeInfo"}}, "text": "UNIMPLEMENTED  \n  2049            05 VALUE ' RETRY                           ' PIC X(33).      UNIM PLEMENTED  \n  2050            05 VALUE 'VRETURN                          ' PIC X(33).  \n  2051            05 VALUE 'IRETURN -CODE                     ' PIC X(33).  \n  2052            05 VALUE 'KRETURNING                       ' PIC X(33).  \n  2053            05 VAL UE 'IREVERSE                         ' PIC X(33).  \n  2054            05 VALUE ' REVERSE -VIDEO                   ' PIC X(33).  \n  2055            05 VALUE ' REVERSED                        ' PIC X(33).  \n  2056            05 VALUE ' REWIND                          ' PIC X(33).  \n  2057            05 VALUE 'VREWRITE                         ' PIC X(33).  \n  2058            05 VALUE ' RF                              ' PIC X(33).  \n  2059            05 VALUE ' RH                              ' PIC X(33).  \n  2060            05 VALUE ' RIGHT                           ' PIC X(33).  \n  2061            05 VALUE ' RIGHT -JUSTIFY                   ' PIC X(33).      UNIMPLEMENTED  \n  2062            05 VALUE 'VROLLBACK                        ' PIC X(33).  \n  2063            05 VALUE ' ROUNDED                         ' PIC X(33).  \n  2064            05 VALUE ' ROUNDING                        ' PIC X(33).      UNIMPLEMENTED  \n  2065            05 VALUE ' RUN                             ' PIC X(33).  \n  2066            05 VALUE ' S AME                            ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 2308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "191940cb-9aad-4d15-a995-3ad3c4bf35dc": {"__data__": {"id_": "191940cb-9aad-4d15-a995-3ad3c4bf35dc", "embedding": null, "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19b7d1f7-86e2-49be-94f9-5420213f210c", "node_type": "4", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bc85f05b9e5f1d0967e6384adaa0039fc95b8902890bd9448a0f830eac20c140", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "674e107d-e6fd-468d-ab8a-941168208699", "node_type": "1", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b86945e021d9c5943a2c9b6896fc75fd4c2e5d7aac317655c0b5b0d51da97ed7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1667837-84cb-4cc3-9a6c-eec2fb7f15a9", "node_type": "1", "metadata": {}, "hash": "ecabd7a90f49540ca1899a792e4b02723e49f536ddb8b5357e4d92a59b23bbe5", "class_name": "RelatedNodeInfo"}}, "text": "2067            05 VALUE 'KSCREEN                          ' PIC X(33).  \n  2068            05 VALUE ' SCROLL                          ' PIC X(33).  \n  2069            05 VALUE 'KSD                              ' P IC X(33).  \n  2070            05 VALUE 'VSEARCH                          ' PIC X(33).  \n  2071            05 VALUE ' SECONDS                         ' PIC X(33).      UNIMPLEMENTED  \n  2072            05 VALUE 'ISECONDS -FROM-FORMATTED -TIME     ' PIC X(33).  \n  2073            05 VALUE 'ISECONDS -PAST-MIDNIGHT           ' PIC X(33).  \n  2074            05 VALUE 'KSECTION                         ' PIC X(33).  \n  2075            05 VALUE ' SECURE                          ' PIC X(33).  \n  2076            05 VALUE ' SECURITY                        ' PIC X(33).      OBSOLETE  \n  2077            05 VALUE ' SEGMENT                         ' PIC X(33).      OBSOLETE  \n  2078            05 VALUE ' SEGMENT -LIMIT                   ' PIC X(33).  \n  2079            05 VALUE ' SELECT                          ' PIC X(33).  \n  ", "start_char_idx": 2308, "end_char_idx": 3348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1667837-84cb-4cc3-9a6c-eec2fb7f15a9": {"__data__": {"id_": "c1667837-84cb-4cc3-9a6c-eec2fb7f15a9", "embedding": null, "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19b7d1f7-86e2-49be-94f9-5420213f210c", "node_type": "4", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bc85f05b9e5f1d0967e6384adaa0039fc95b8902890bd9448a0f830eac20c140", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "191940cb-9aad-4d15-a995-3ad3c4bf35dc", "node_type": "1", "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ff139032b27f10ff4e95dafc7ca5305e574708848715abfd876987437cd8e988", "class_name": "RelatedNodeInfo"}}, "text": "2080            05 VALUE ' SELF                            ' PIC X(33).      UNIMPLEMENTED  \n  2081            05 VALUE 'VSEND                            ' PIC X(33).      OBSOLETE  \n  2082            05 VALUE ' SENTENCE                        ' PIC X(33).  \n  2083            05 VALUE ' SEPARATE                        ' PIC X(33).  \n  2084            05 VALUE ' SEQUENCE                        ' PIC X(33).  \n  2085            05 VALUE ' SEQUENTIAL                      ' PIC X(33).  \n  2086            05 VALUE 'VSET                             ' PIC X(33).  \n  2087            05 VALUE ' SHARING                         ' PIC X(33).  \n  2088            05 VALUE 'ISIGN                            ' PIC X(33).  \n  2089            05 VALUE ' SIGN                            ' PIC X(33).  \n  2090            05 VALUE ' SIGNED                          ' PIC X(33).  \n  2091            05 VALUE ' SIGNED -INT                      ' PIC X(33).  \n  2092            05 VALUE ' SIGNE D-LONG                     ' PIC X(33).  \n  2093            05 VALUE ' SIGNED -SHORT                    ' PIC X(33).  \n  2094            05 VALUE 'ISIN                             ' PIC X(33).  \n  2095            05 VALUE ' SIZE                            ' PIC X (33). \n  2096            05 VALUE 'VSORT                            ' PIC X(33).  \n  2097            05 VALUE ' SORT -MERGE                      ' PIC X(33).  \n  2098            05 VALUE 'ISORT -RETURN                     ' PIC X(33).  \n  2099            05 VALUE '  SOURCE                          ' PIC X(33).  \n  2100            05 VALUE ' SOURCE -COMPUTER                 ' PIC X(33).  \n  ", "start_char_idx": 3348, "end_char_idx": 4984, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81d65d6d-fc11-426d-81ba-723749fea8b6": {"__data__": {"id_": "81d65d6d-fc11-426d-81ba-723749fea8b6", "embedding": null, "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8d91be3-1982-4936-a357-bd0e568bb2de", "node_type": "4", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3c35bc940d68b7bc5286611ea7cbec8e09a87c0c6291bbe443f4cb3c0c7a5b3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f3147b3-25c5-471e-b2f7-ff4b7304ee14", "node_type": "1", "metadata": {}, "hash": "ded12a4b7af1687d388efcca26ea69ac0038902af5b3c620889bc49d974c1243", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-63 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/2 1 \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 48  \n====== ====================================================================================================================== ==========  \n  2101            05 VALUE ' SOURCES                         ' PIC X(33).      UNIMPLEMENTED  \n  2102            05 VALUE ' SPACE                           ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f3147b3-25c5-471e-b2f7-ff4b7304ee14": {"__data__": {"id_": "3f3147b3-25c5-471e-b2f7-ff4b7304ee14", "embedding": null, "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8d91be3-1982-4936-a357-bd0e568bb2de", "node_type": "4", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3c35bc940d68b7bc5286611ea7cbec8e09a87c0c6291bbe443f4cb3c0c7a5b3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81d65d6d-fc11-426d-81ba-723749fea8b6", "node_type": "1", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5ddde93bdecb2b53620ecbac1fbc1fe99bced8f5bbbcb64195678083b22686ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4", "node_type": "1", "metadata": {}, "hash": "575104397a056ff09d219135e2f2d279a5cc8215e401edc5e55ba2b0c85a7c4c", "class_name": "RelatedNodeInfo"}}, "text": "2103            05 VALUE ' SPACE -FILL                      ' PIC X(33).      UNIMPLEMENTED  \n  2104            05 VALUE ' SPACES                          ' PIC X(33).  \n  2105            05 VAL UE ' SPECIAL -NAMES                   ' PIC X(33).  \n  2106            05 VALUE 'ISQRT                            ' PIC X(33).  \n  2107            05 VALUE ' STANDARD                        ' PIC X(33).  \n  2108            05 VALUE ' STANDARD -1                      ' PIC X(33).  \n  2109            05 VALUE ' STANDARD -2                      ' PIC X(33).  \n  2110            05 VALUE ' STANDARD -BINARY                 ' PIC X(33).      UNIMPLEMENTED  \n  2111            05 VALUE 'ISTANDARD -COMPARE                ' PIC X(33).       UNIMPLEMENTED  \n  2112            05 VALUE ' STANDARD -DECIMAL                ' PIC X(33).      UNIMPLEMENTED  \n  2113            05 VALUE 'ISTANDARD -DEVIATION              ' PIC X(33).  \n  2114            05 VALUE 'VSTART                           ' PIC X(33).  \n  2115            05 VALUE ' STATEMENT                       ' PIC X(33).      UNIMPLEMENTED  \n  2116            05 VALUE ' STATIC                          ' PIC X(33).  \n  2117            05 VALUE ' STATUS                          ' PIC X(33).  \n  ", "start_char_idx": 876, "end_char_idx": 2121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4": {"__data__": {"id_": "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4", "embedding": null, "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8d91be3-1982-4936-a357-bd0e568bb2de", "node_type": "4", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3c35bc940d68b7bc5286611ea7cbec8e09a87c0c6291bbe443f4cb3c0c7a5b3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f3147b3-25c5-471e-b2f7-ff4b7304ee14", "node_type": "1", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "787625c10abc03edbcbac498f722858cb193ca8e7a3eca3005145dd24f1467ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "045470f1-e054-4c03-a4be-e368180a5f80", "node_type": "1", "metadata": {}, "hash": "f222db88649779180ccb7586bc7bdcb83c9e19ef7db5eb77f4c577cf2329da6c", "class_name": "RelatedNodeInfo"}}, "text": "2118            05 VALUE ' STDCALL                         ' PIC X(33).  \n  2119            05 VALUE 'MSTDERR                          ' PIC X(33).  \n  2120            05 VALUE 'MSTDIN                           ' PIC X(33).  \n  2121            05 VALUE 'MSTDOUT                          ' PIC X(33).  \n  2122            05 VALUE ' STEP                            ' PIC X(33).  \n  2123            05 VALUE 'VSTOP                            ' PIC X(33).  \n  2124            05 VALUE 'ISTORED -CHAR-LENGTH              ' PIC X(33).  \n  2125            05 VALUE 'VSTRING                          ' PIC X(33).  \n  2126            05 VALUE ' STRONG                          ' PIC X(33).      UNIMPLEMENTED  \n  2127            05 VAL UE ' SUB -QUEUE-1                     ' PIC X(33).      OBSOLETE  \n  2128            05 VALUE ' SUB -QUEUE-2                     ' PIC X(33).      OBSOLETE  \n  2129            05 VALUE ' SUB -QUEUE-3                     ' PIC X(33).      OBSOLETE  \n  2130            05 VALUE 'ISUBSTITUTE                      ' PIC X(33).  \n  2131            05 VALUE 'ISUBSTITUTE -CASE                 ' PIC X(33).  \n  2132            05 VALUE 'VSUBTRACT                        ' PIC X(33).  \n  2133            05 VALUE 'ISUM                             ' PIC X(33).  \n  2134            05 VALUE ' SUM                             ' PIC X(33).  \n  2135            05 VALUE ' SUPER                           ' PIC X(33).      UNIMPLEMENTED  \n  2136            05 VALUE 'VSUPPRESS                        ' PI C X(33).  \n  2137            05 VALUE 'MSW0                             ' PIC X(33).  \n  ", "start_char_idx": 2121, "end_char_idx": 3728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "045470f1-e054-4c03-a4be-e368180a5f80": {"__data__": {"id_": "045470f1-e054-4c03-a4be-e368180a5f80", "embedding": null, "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a8d91be3-1982-4936-a357-bd0e568bb2de", "node_type": "4", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3c35bc940d68b7bc5286611ea7cbec8e09a87c0c6291bbe443f4cb3c0c7a5b3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4", "node_type": "1", "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fbb99c146b6a2f17822e5f989d8f38d1c51163a9564156c7404fa04dcf788343", "class_name": "RelatedNodeInfo"}}, "text": "2138            05 VALUE 'MSW1                             ' PIC X(33).  \n  2139            05 VALUE 'MSW10                            ' PIC X(33).  \n  2140            05 VALU E 'MSW11                            ' PIC X(33).  \n  2141            05 VALUE 'MSW12                            ' PIC X(33).  \n  2142            05 VALUE 'MSW13                            ' PIC X(33).  \n  2143            05 VALUE 'MSW14                            ' PIC X(33).  \n  2144            05 VALUE 'MSW15                            ' PIC X(33).  \n  2145            05 VALUE 'MSW2                             ' PIC X(33).  \n  2146            05 VALUE 'MSW3                             ' PIC X(33).  \n  2147            05 VALUE 'MSW4                             ' PIC X(33).  \n  2148            05 VALUE 'MSW5                             ' PIC X(33).  \n  2149            05 VALUE 'MSW6                             ' PIC X (33). \n  2150            05 VALUE 'MSW7                             ' PIC X(33).  \n  2151            05 VALUE 'MSW8                             ' PIC X(33).  \n  2152            05 VALUE 'MSW9                             ' PIC X(33).  \n  2153            05 VALUE ' MSWITCH-0                        ' PIC X(33).  \n  2154            05 VALUE 'MSWITCH -1                        ' PIC X(33).  \n  ", "start_char_idx": 3728, "end_char_idx": 5023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "058c6872-bfe0-4651-b81f-90495a136769": {"__data__": {"id_": "058c6872-bfe0-4651-b81f-90495a136769", "embedding": null, "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95717486-af1a-4b93-a92f-606eff5a9eca", "node_type": "4", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "814efc30e8a29ca20c97eb5aa2d6d5193c4807065ac32a0e4fb0087d2240b4d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3", "node_type": "1", "metadata": {}, "hash": "808b53aba9a392576afa5b381959e9515ad89b419491829064546a2f12fb9a84", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-64 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/2 1 \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 49  \n====== ====================================================================================================================== ==========  \n  2155            05 VALUE 'MSWITCH -10                       ' PIC X(33).  \n  2156            05 VALUE ' MSWITCH-11                       ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3": {"__data__": {"id_": "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3", "embedding": null, "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95717486-af1a-4b93-a92f-606eff5a9eca", "node_type": "4", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "814efc30e8a29ca20c97eb5aa2d6d5193c4807065ac32a0e4fb0087d2240b4d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "058c6872-bfe0-4651-b81f-90495a136769", "node_type": "1", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8f09d42d09d746225a7e85ffabdc9c4e8dbc1c17813be9ccd7916259effd55c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6e4904c-0fab-42f7-afa1-4b1858ba0975", "node_type": "1", "metadata": {}, "hash": "2803954616112bc1601e937b67b12f3e56db42d0686ee4fbdebf3eefa9a43838", "class_name": "RelatedNodeInfo"}}, "text": "2157            05 VALUE 'MSWITCH -12                       ' PIC X(33).  \n  2158            05 VALUE 'MSWITCH -13                       ' PIC X(33).  \n  2159            05 VALUE 'MSWITCH -14                       '  PIC X(33).  \n  2160            05 VALUE 'MSWITCH -15                       ' PIC X(33).  \n  2161            05 VALUE 'MSWITCH -2                        ' PIC X(33).  \n  2162            05 VALUE 'MSWITCH -3                        ' PIC X(33).  \n  2163            05 V ALUE 'MSWITCH -4                        ' PIC X(33).  \n  2164            05 VALUE 'MSWITCH -5                        ' PIC X(33).  \n  2165            05 VALUE 'MSWITCH -6                        ' PIC X(33).  \n  2166            05 VALUE 'MSWITCH -7                        ' PIC X(33).  \n  2167            05 VALUE 'MSWITCH -8                        ' PIC X(33).  \n  2168            05 VALUE 'MSWITCH -9                        ' PIC X(33).  \n  2169            05 VALUE ' SYMBO L                          ' PIC X(33).      UNIMPLEMENTED  \n  2170            05 VALUE ' SYMBOLIC                        ' PIC X(33).  \n  2171            05 VALUE ' SYNC                            ' PIC X(33).  \n  2172            05 VALUE ' SYNCHRONISED                    ' PIC X(33).  \n  2173            05 VALUE ' SYNCHRONIZED                    ' PIC X(33).  \n  2174            05 VALUE 'MSYSERR                          ' PIC X(33).  \n  2175            05 VALUE 'MSYSIN                           ' PIC X(33).  \n  2176            05 VALUE 'MSYSIPT                          ' PIC X(33).  \n  2177            05 VALUE 'MSYSLIST                         ' PIC X(33).  \n  2178            05 VALUE 'MSYSLST                          ' PIC X(33).  \n  2179            05 VALUE 'MSYSOUT                          ' PIC X(33).  \n  2180            05 VALUE ' SYSTEM -DEFAULT                  ' PIC X(33).  \n  2181            05 VALUE ' TABLE                           ' PIC X(33).      UNIMPLEMENTED  \n  2182            05 VALUE 'KTALLYING                        ' PIC X(33).  \n  2183            05 VALUE 'ITAN                             ' PIC X(33).  \n  ", "start_char_idx": 859, "end_char_idx": 2965, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6e4904c-0fab-42f7-afa1-4b1858ba0975": {"__data__": {"id_": "d6e4904c-0fab-42f7-afa1-4b1858ba0975", "embedding": null, "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95717486-af1a-4b93-a92f-606eff5a9eca", "node_type": "4", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "814efc30e8a29ca20c97eb5aa2d6d5193c4807065ac32a0e4fb0087d2240b4d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3", "node_type": "1", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "481e4b201d4e3d5d4473ce4375922f3a5fa054ace9794d6619104cecacae9484", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36ac6ad2-7f20-4d18-991e-52ad04e8ccae", "node_type": "1", "metadata": {}, "hash": "1f41a838efda424b9669fa8790ac4770bbc4263eea857d79625e6435b06cf919", "class_name": "RelatedNodeInfo"}}, "text": "2184            05 VALUE ' TAPE                            ' PIC X(33).  \n  2185            05 VALUE ' TERMINAL                        ' PIC X(33).      OBSOLETE  \n  2186            05 VALUE 'VTERMINATE                       ' PIC X(33).  \n  2187            05 VALUE ' TEST                            ' PIC X(33).  \n  ", "start_char_idx": 2965, "end_char_idx": 3283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36ac6ad2-7f20-4d18-991e-52ad04e8ccae": {"__data__": {"id_": "36ac6ad2-7f20-4d18-991e-52ad04e8ccae", "embedding": null, "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95717486-af1a-4b93-a92f-606eff5a9eca", "node_type": "4", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "814efc30e8a29ca20c97eb5aa2d6d5193c4807065ac32a0e4fb0087d2240b4d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6e4904c-0fab-42f7-afa1-4b1858ba0975", "node_type": "1", "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "89b37b7bf4b8c4350303e37d6652f6801a3e7fab4f3202ff1744c8bc3a803629", "class_name": "RelatedNodeInfo"}}, "text": "2188            05 VALUE 'ITEST -DATE-YYYYMMDD              ' PIC X(33).  \n  2189            05 VALUE 'ITEST -DAY-YYYYDDD                ' PIC X(33).  \n  2190 GC0711     05 VALUE 'ITEST -FORMATTED -DATETIME         ' PIC X(33).      UNIMPLEMENTED  \n  2191 GC0711     05 VALUE 'ITEST -NUMVAL                     ' PIC X(33).  \n  2192 GC0711     05 VALUE 'ITEST -NUMVAL-C                   ' PIC X(33).  \n  2193 GC0711     05 VALUE 'ITEST -NUMVAL-F                   ' PIC X(33).  \n  2194            05 VALUE ' TEXT                            ' PIC X(33).      OBSOLETE  \n  2195            05 VALUE ' THAN                            ' PIC X(33).  \n  2196            05 VALUE ' THEN                            ' PIC X(33).  \n  2197            05 VALUE ' THROUGH                         ' PIC X(33).  \n  2198            05 VALUE ' THRU                            ' PIC X(33).  \n  2199            05 VALUE ' TIME                            ' PIC X(33).  \n  2200 GC0711     05 VALUE ' TIME -OUT                        ' PIC X(33).  \n  2201 GC0711     05 VALUE ' TIMEOUT                         ' PIC X (33). \n  2202            05 VALUE ' TIMES                           ' PIC X(33).  \n  2203            05 VALUE 'KTO                              ' PIC X(33).  \n  2204            05 VALUE ' TOP                             ' PIC X(33).  \n  2205            05 VALUE '  TOWARD-GREATER                  ' PIC X(33).  \n  2206            05 VALUE ' TOWARD -LESSER                   ' PIC X(33).  \n  2207            05 VALUE ' TRAILING                        ' PIC X(33).  \n  2208            05 VALUE ' TRAILING -SIGN                   '  PIC X(33).      UNIMPLEMENTED  \n  ", "start_char_idx": 3283, "end_char_idx": 4943, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1c0acc5-17ac-46ca-bcd2-4b0201425281": {"__data__": {"id_": "e1c0acc5-17ac-46ca-bcd2-4b0201425281", "embedding": null, "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3a448ad-95b2-404c-ad53-476c33814281", "node_type": "4", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "acd0f65d433519831eb180c144bbe8f1d23eaa0fecf6b36762c73351e6d6ec9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89", "node_type": "1", "metadata": {}, "hash": "d515c5ef8ef0c12ebb49c255449dbbb70cafbeac4927ddf2477bab54471c3e10", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-65 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 50  \n====== ================================================================ ================================================================  \n  2209            05 VALUE 'VTRANSFORM                       ' PIC X(33).  \n  2210            05 VALUE 'ITRIM                            ' PIC X(33).  \n  ", "start_char_idx": 0, "end_char_idx": 857, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89": {"__data__": {"id_": "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89", "embedding": null, "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3a448ad-95b2-404c-ad53-476c33814281", "node_type": "4", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "acd0f65d433519831eb180c144bbe8f1d23eaa0fecf6b36762c73351e6d6ec9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1c0acc5-17ac-46ca-bcd2-4b0201425281", "node_type": "1", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7be2cc3467b50614cd2fe117856661e2f1ef7d48ee2ee4595fc5a256f36062a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7170e89c-1731-41da-b40e-8da602874f69", "node_type": "1", "metadata": {}, "hash": "09b8092cd584b0e74a93ded1f22effcd8b916597fccd22ffa893ae53aae7066c", "class_name": "RelatedNodeInfo"}}, "text": "2211            05 VALUE ' TRUE                            ' PIC X(33).  \n  2212            05 VALUE ' TRUNCATION                      ' PIC X(33).  \n  2213            05 VALUE ' TYPE                            ' PIC X(33).  \n  2214            05 VALUE ' TYPEDEF                         ' PIC X(33).      UNIMPLEMENTED  \n  2215            05 VALUE ' UCS -4                           ' PIC X(33).      UNIMPLEMENTED  \n  2216            05 VALUE ' UNDERLINE                       ' PIC X(33).  \n  2217            05 VALUE ' UNIT                            ' PIC X(33).  \n  ", "start_char_idx": 857, "end_char_idx": 1428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7170e89c-1731-41da-b40e-8da602874f69": {"__data__": {"id_": "7170e89c-1731-41da-b40e-8da602874f69", "embedding": null, "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3a448ad-95b2-404c-ad53-476c33814281", "node_type": "4", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "acd0f65d433519831eb180c144bbe8f1d23eaa0fecf6b36762c73351e6d6ec9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89", "node_type": "1", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1e027eafe000b0430babba60e59c36435e1053bb55e340362604ba15a8875999", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "222e66de-c741-4784-b36c-9b1492306d0e", "node_type": "1", "metadata": {}, "hash": "05400cb7ee66883e57a4b8f123417bac1286289874a0c66d700b2bda3bcde4df", "class_name": "RelatedNodeInfo"}}, "text": "2218            05 VALUE ' UNIVERSAL                       ' PIC X(33).      UNIMPLEMENTED  \n  2219            05 VALUE 'VUNLOCK                          ' PIC X(33).  \n  2220            05 VALUE ' UNSIGNED                        ' PIC X(33).  \n  ", "start_char_idx": 1428, "end_char_idx": 1675, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "222e66de-c741-4784-b36c-9b1492306d0e": {"__data__": {"id_": "222e66de-c741-4784-b36c-9b1492306d0e", "embedding": null, "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3a448ad-95b2-404c-ad53-476c33814281", "node_type": "4", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "acd0f65d433519831eb180c144bbe8f1d23eaa0fecf6b36762c73351e6d6ec9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7170e89c-1731-41da-b40e-8da602874f69", "node_type": "1", "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "281ea2dd5754556d27df7f6e02e14e7731b6b3c37295dc89b9692c0a60162fd0", "class_name": "RelatedNodeInfo"}}, "text": "2221            05 VALUE ' UNSIGNED -INT                    ' PIC X(33).  \n  2222            05 VALUE ' UNSIGNED -LONG                   ' PIC X(33).  \n  2223            05 VALUE ' UNSIGNED -SHORT                  ' PIC X(33).  \n  2224            05 VALUE 'VUNSTR ING                        ' PIC X(33).  \n  2225            05 VALUE ' UNTIL                           ' PIC X(33).  \n  2226            05 VALUE 'KUP                              ' PIC X(33).  \n  2227            05 VALUE ' UPDATE                          ' PIC X (33). \n  2228            05 VALUE ' UPON                            ' PIC X(33).  \n  2229            05 VALUE ' UPPER                           ' PIC X(33).  \n  2230            05 VALUE 'IUPPER -CASE                      ' PIC X(33).  \n  2231            05 VALUE '  USAGE                           ' PIC X(33).  \n  2232            05 VALUE 'VUSE                             ' PIC X(33).  \n  2233 GC0711     05 VALUE ' USER                            ' PIC X(33).  \n  2234            05 VALUE ' USER -DEFAULT                    '  PIC X(33).  \n  2235            05 VALUE 'KUSING                           ' PIC X(33).  \n  2236            05 VALUE ' UTF -16                          ' PIC X(33).      UNIMPLEMENTED  \n  2237            05 VALUE ' UTF -8                           ' PIC X(33).      UNIMPLEMENTED  \n  2238            05 VALUE ' VAL -STATUS                      ' PIC X(33).      UNIMPLEMENTED  \n  2239            05 VALUE ' VALID                           ' PIC X(33).      UNIMPLEMENTED  \n  2240            05 VALUE ' VALIDATE                        ' PIC X(33).      UNIMPLEMENTED  \n  2241            05 VALUE ' VALIDATE -STATUS                 ' PIC X(33).      UNIMPLEMENTED  \n  2242 GC0712     05 VALUE 'AVALUE                           ' PIC X(33).  \n  2243            05 VALUE ' VALUES                          ' PIC X(33).  \n  2244            05 VALUE 'IVARIANCE                        ' PIC X(33).  \n  2245            05 VALUE 'KVARYING                         ' PIC X(33).  \n  2246            05 VALUE ' VDISABLE                        ' PIC X(33).      UNIMP LEMENTED  \n  2247            05 VALUE ' WAIT                            ' PIC X(33).  \n  2248            05 VALUE 'VWHEN                            ' PIC X(33).  \n  2249            05 VALUE 'IWHEN -COMPILED                   ' PIC X(33).  \n  2250            05 VALUE ' WITH                            ' PIC X(33).  \n  2251            05 VALUE ' WORDS                           ' PIC X(33).  \n  2252            05 VALUE 'KWORKING -STORAGE                 ' PIC X(33).  \n  2253            05 VALUE 'VWRITE                            ' PIC X(33).  \n  2254            05 VALUE 'IYEAR -TO-YYYY                    ' PIC X(33).  \n  2255            05 VALUE ' YYYYDDD                         ' PIC X(33).  \n  2256            05 VALUE ' YYYYMMDD                        ' PIC X (33). \n  2257            05 VALUE ' ZERO                            ' PIC X(33).  \n  2258            05 VALUE ' ZERO -FILL                       ' PIC X(33).      UNIMPLEMENTED  \n  2259            05 VALUE ' ZEROES                          ' PIC X(33).  \n  2260            05 VALUE ' ZEROS                           ' PIC X(33).  \n  2261        01  WS -Reserved -Word-Table-TXT REDEFINES WS -Reserved -Words-TXT. \n  2262 GC1113     05 WS -Reserved -Word-TXT        OCCURS 756 TIMES  \n  ", "start_char_idx": 1675, "end_char_idx": 5038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a51c2ded-fcc0-4cac-bc41-df1255f9de0a": {"__data__": {"id_": "a51c2ded-fcc0-4cac-bc41-df1255f9de0a", "embedding": null, "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87185294-bfef-40dc-b947-6d84e1d29e71", "node_type": "4", "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b1d2f6d5dc2395ffedd72488a71466ac76a633ba5c85937575af607744dadd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b6ea739-7573-4f1d-a762-deb76892020c", "node_type": "1", "metadata": {}, "hash": "3d41b70aef12dfe0ce2ea23c9120a8ca93c814064ea958d2115e58e45e920f86", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-66 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 51  \n====== ====================================================================================================================== ==========  \n  2263                                                  ASCENDING KEY  \n  2264                                                      WS -RW-Word-TXT \n  2265                                                  INDEXED WS -RW-IDX. \n  2266               10 WS -RW-Type-CD                   PIC X(1).  \n  ", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b6ea739-7573-4f1d-a762-deb76892020c": {"__data__": {"id_": "0b6ea739-7573-4f1d-a762-deb76892020c", "embedding": null, "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87185294-bfef-40dc-b947-6d84e1d29e71", "node_type": "4", "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b1d2f6d5dc2395ffedd72488a71466ac76a633ba5c85937575af607744dadd9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a51c2ded-fcc0-4cac-bc41-df1255f9de0a", "node_type": "1", "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f492844c44e03e76068f8501f0c75ed934e7b42f238d6fb45f63d2b187492d8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfe17e86-1e41-4a36-9478-22903f8364ab", "node_type": "1", "metadata": {}, "hash": "a53fb3e15af5dc7508751ba2ef0c7f5728958f11e3ab67b2a75e529d69a012d5", "class_name": "RelatedNodeInfo"}}, "text": "2267               10 WS -RW-Word-TXT                  PIC X(32).  \n  2268 \n  2269        01  WS -Runtime-Switches.  \n  2270 GC0710     05 WS -RS-Duplicate -CHR                PIC X(1).  \n  2271            05 WS -RS-In-Which-Pgm-CHR             PIC X(1).  \n  2272               88 WS -RS-In-Main-Module-BOOL       VALUE 'M'.  \n  2273               88 WS -RS-In-Copybook -BOOL          VALUE 'C'.  \n  2274            05 WS -RS-Last-Token-Ended-Sent-CHR    PIC X(1).  \n  2275            05 WS -RS-Processing -PICTURE-CHR       PIC X(1).  \n  2276            05 WS -RS-Token-Ended-Sentence -CHR     PIC X(1).  \n  2277 GC0710     05 WS -RS-Verb-Has-Been-Found-CHR      PIC X(1).  \n  2278 \n  2279        01  WS -Saved-Section-TXT                  PIC X(15).  \n  ", "start_char_idx": 1000, "end_char_idx": 1756, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cfe17e86-1e41-4a36-9478-22903f8364ab": {"__data__": {"id_": "cfe17e86-1e41-4a36-9478-22903f8364ab", "embedding": null, "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87185294-bfef-40dc-b947-6d84e1d29e71", "node_type": "4", "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7b1d2f6d5dc2395ffedd72488a71466ac76a633ba5c85937575af607744dadd9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b6ea739-7573-4f1d-a762-deb76892020c", "node_type": "1", "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "68c205ae02869ea8642216fb2248c8a5da6ca4947908b257ced17ee34a2b0ade", "class_name": "RelatedNodeInfo"}}, "text": "2280 \n  2281        01  WS -Src-Detail-Line-TXT. \n  2282            05 WS -SDL-Line-NUM                    PIC ZZZZZ9.  \n  2283            05 FILLER                             PIC X(1).  \n  2284            05 WS -SDL-Statement -TXT               PIC X(128).  \n  2285 \n  2286        01  WS -Src-Header-1-TXT. \n  2287 GC0712     05 WS -SH1-Title-TXT                   PIC X(125).  \n  2288            05 WS -SH1-DT                          PIC 9999/99/99.  \n  2289 \n  2290        01  WS -Src-Header-2-TXT                   PIC X(135).  \n  2291 \n  2292 GC0712 01  WS -Src-Header-3-TXT. \n  2293 GC0712     05 VALUE 'Line   Statement'           PIC X(125).  \n  2294 GC0712     05 WS -SH3-Page-No-TXT                 PIC X(10).  \n  2295 \n  2296 GC0712 01  WS -Src-Header-4-TXT. \n  2297 GC0712     05 VALUE '======'                     PIC X(7).  \n  2298 GC0712     05 VALUE ALL '='                      PIC X(128).  \n  2299 \n  2300        01  WS -Src-Line-NUM                       PIC 9(6).  \n  2301 \n  2302        01  WS -Src-SUB                            USAGE BINARY -LONG. \n  2303 \n  2304 GC0712 01  WS -Argument -Type-CD                   PIC X(1).  \n  2305 GC0712     88 WS -Argument -Is-Updatable -BOOL      VALUE 'U' FALSE ' '.  \n  2306 \n  2307        01  WS -Tally-QTY                          USAGE BINARY -LONG. \n  2308 \n  2309        01  WS -Temp-10-Chars-TXT                  PIC X(10).  \n  2310 \n  2311        01  WS -Temp-32-Chars-1-TXT                PIC X(32).  \n  2312 \n  2313 GC0711 01  WS -Temp-32-Chars-2-TXT                PIC X(32).  \n  2314 \n  2315 GC0711 01  WS -Temp-32-Chars-3-TXT                PIC X(32).  \n  2316 \n  ", "start_char_idx": 1756, "end_char_idx": 3398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d070c60c-9a08-4e2f-aa0d-1639d771a6b6": {"__data__": {"id_": "d070c60c-9a08-4e2f-aa0d-1639d771a6b6", "embedding": null, "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d922510e-c2fb-46f8-b821-4311fbac943b", "node_type": "4", "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a392b204471aa11910f5909475bb31e6f0056293551384ae362dbbd68ae1ce9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80834199-94e7-4418-b9b3-cd90f6690103", "node_type": "1", "metadata": {}, "hash": "d6aaad402ac0fc1fa670f9ecea083a824306dc06945c6cb2d6df9883480b389a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-67 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 52  \n====== ========================================================================================================================== ====== \n  2317 GC0712 01  WS -Temp-65-Chars-TXT                  PIC X(65).  \n  2318 \n  2319        01  WS -Temp-256-Chars-TXT                 PIC X(256).  \n  ", "start_char_idx": 0, "end_char_idx": 853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80834199-94e7-4418-b9b3-cd90f6690103": {"__data__": {"id_": "80834199-94e7-4418-b9b3-cd90f6690103", "embedding": null, "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d922510e-c2fb-46f8-b821-4311fbac943b", "node_type": "4", "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a392b204471aa11910f5909475bb31e6f0056293551384ae362dbbd68ae1ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d070c60c-9a08-4e2f-aa0d-1639d771a6b6", "node_type": "1", "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7a86d687e82526790f3c2bf8c05fde9ec4627c3a9c8f44191463bb02ee4d271b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b196c72b-a419-457a-a8be-c0e264d55261", "node_type": "1", "metadata": {}, "hash": "d261c95448066a330ee5b5212700c272ba77651cde6852c115ff31b06a89ee75", "class_name": "RelatedNodeInfo"}}, "text": "2320 \n  2321        01  WS -Today-DT                           PIC 9(8).  \n  2322 \n  2323        01  WS -Token-Curr-TXT                     PIC X(32).  \n  2324 \n  2325        01  WS -Token-Curr-Uc-TXT                  PIC X(32).  \n  2326 \n  2327        01  WS -Token-Prev-TXT                     PIC X(32).  \n  2328 \n  2329        01  WS -Token-Search-TXT                   PIC X(32).  \n  2330 \n  2331        01  WS -Token-Type-CD                      PIC X(1).  \n  2332 GC0712     88 WS -TT-Token-Is-Argtype-BOOL        VALUE 'A'.  \n  2333            88 WS -TT-Token-Is-EOF-BOOL            VALUE HIGH -VALUES. \n  2334            88 WS -TT-Token-Is-Identifier -BOOL     VALUE 'I'.  \n  2335 GC0712     88 WS -TT-Token-Is-Keyword-BOOL        VALUE 'K', 'V', 'A'.  \n  2336            88 WS-TT-Token-Is-Lit-Alpha-BOOL      VALUE 'L'.  \n  2337            88 WS -TT-Token-Is-Lit-Number-BOOL     VALUE 'N'.  \n  2338            88 WS -TT-Token-Is-Verb-BOOL           VALUE 'V'.  \n  2339 GC0710     88 WS -TT-Token-Is-Reserved -Wd-BOOL    VALUE ' '.  \n  2340 \n  2341        01  WS -Usernames -QTY                      USAGE BINARY -LONG. \n  ", "start_char_idx": 853, "end_char_idx": 1985, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b196c72b-a419-457a-a8be-c0e264d55261": {"__data__": {"id_": "b196c72b-a419-457a-a8be-c0e264d55261", "embedding": null, "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d922510e-c2fb-46f8-b821-4311fbac943b", "node_type": "4", "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a392b204471aa11910f5909475bb31e6f0056293551384ae362dbbd68ae1ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80834199-94e7-4418-b9b3-cd90f6690103", "node_type": "1", "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0fca1b7977ea82e9fea0a21fa556f6f93ac8d28ded55d499008ac8c4188c8cb1", "class_name": "RelatedNodeInfo"}}, "text": "2342 \n  2343        01  WS -Xref-Detail-Line-TXT. \n  2344            05 WS -XDL-Prog-ID-TXT                 PIC X(15).  \n  2345            05 FILLER                             P IC X(1).  \n  2346            05 WS -XDL-Token-TXT                   PIC X(32).  \n  2347            05 FILLER                             PIC X(1).  \n  2348            05 WS -XDL-Def-Line-NUM                PIC ZZZZZ9.  \n  2349            05 FILLER                             PIC X(1).  \n  2350            05 WS -XDL-Section-TXT                 PIC X(15).  \n  2351            05 FILLER                             PIC X(1).  \n  2352            05 WS -XDL-Reference -TXT        OCCURS WS -Lines-Per-Rec-CONST. \n  2353               10 WS -XDL-Ref-Line-NUM             PIC ZZZZZ9.  \n  2354               10 WS -XDL-Ref-Flag-CHR             PIC X(1).  \n  2355               10 FILLER                          PIC X(1).  \n  2356 \n  2357        01  WS -Xref-Header-1-TXT. \n  2358 GC0712     05 WS -XH1-Title-TXT                   PIC X(125).  \n  2359            05 WS -XH1-DT                          PIC 9999/99/99.  \n  2360 \n  2361        01  WS -Xref-Header-2-TXT                  PIC X(135).  \n  2362 \n  2363 GC0712 01  WS -Xref-Header-3-TXT. \n  2364 GC0712     05 VALUE 'PROGRAM -ID'                 PIC X(16).  \n  2365 GC0712     05 VALUE 'Identifier/Register/'       PIC X(20).  \n  2366 GC0712     05 VALUE 'Function'                   PIC X(13).  \n  2367 GC0712     05 VALUE 'Defn'                       PI C X(7). \n  2368 GC0712     05 VALUE 'Where Defined'              PIC X(16).  \n  2369 GC0712     05 VALUE 'References (* = Updated)'   PIC X(53).  \n  2370 GC0712     05 WS -XH3-Page-No-TXT                 PIC X(10).  \n  ", "start_char_idx": 1985, "end_char_idx": 3693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fed7c31-6eb9-4f3b-b104-8f8dc13944b1": {"__data__": {"id_": "0fed7c31-6eb9-4f3b-b104-8f8dc13944b1", "embedding": null, "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3fa810e3-4123-44c6-8ac9-44ad80ecf15f", "node_type": "4", "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c6e6212ea3122f1428b3bf08ce0a2645ef0f720ef2062a4c8a56ecfc042325b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c347f4c-629f-4a1a-90d8-5f44153635d4", "node_type": "1", "metadata": {}, "hash": "872596a9dc7ca3a1757b9f0d3c3ac945cf7b31b2320c4e6631c9da17b66f1344", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-68 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 53  \n====== ====================================================================================================================== ==========  \n  2371 \n  2372 GC0712 01  WS -Xref-Header-4-TXT. \n  2373 GC0712     05 VALUE ALL '='                      PIC X(15).  \n  ", "start_char_idx": 0, "end_char_idx": 824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c347f4c-629f-4a1a-90d8-5f44153635d4": {"__data__": {"id_": "1c347f4c-629f-4a1a-90d8-5f44153635d4", "embedding": null, "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3fa810e3-4123-44c6-8ac9-44ad80ecf15f", "node_type": "4", "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c6e6212ea3122f1428b3bf08ce0a2645ef0f720ef2062a4c8a56ecfc042325b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fed7c31-6eb9-4f3b-b104-8f8dc13944b1", "node_type": "1", "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6f3b227001ea47c5f05ed60f083ebe9b1376a858b28476765b38b85a47f2b94d", "class_name": "RelatedNodeInfo"}}, "text": "2374 GC0712     05 VALUE SPACE                        PIC X(1).  \n  2375 GC0712     05 VALUE ALL '='                      PIC X(32).  \n  2376 GC0712     05 V ALUE SPACE                        PIC X(1).  \n  2377 GC0712     05 VALUE ALL '='                      PIC X(6).  \n  2378 GC0712     05 VALUE SPACE                        PIC X(1).  \n  2379 GC0712     05 VALUE ALL '='                      PIC X(15).  \n  2380 GC0712     05 VALUE SPACE                        PIC X(1).  \n  2381 GC0712     05 VALUE ALL '='                      PIC X(63).  \n  2382 \n  2383        LINKAGE SECTION.  \n  2384 GC0712 01  L -Listing-Fn-TXT                      PIC X(256).  \n  2385 \n  2386        01  L-Src-Fn-TXT                          PIC X(256).  \n  2387 \n  2388 GC0712 01  L -OS-Type-CD                          PIC 9(1).  \n  ", "start_char_idx": 824, "end_char_idx": 1639, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92edf8ec-81e5-42f8-912d-7ceb7a799a5c": {"__data__": {"id_": "92edf8ec-81e5-42f8-912d-7ceb7a799a5c", "embedding": null, "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "822a7d88-2c9c-4559-ac21-22e929caa41d", "node_type": "4", "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab35631131f48a1a8dc85a4bacb13dc062286d72ddd16fbad39e2028e6312f63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a94c88c4-63ac-429a-87c9-c48af0448fe8", "node_type": "1", "metadata": {}, "hash": "c9515cb1d4d67dcc6422f383ee49bc475c71ad9c415ea1e527dffd33b912a665", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-69 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 54  \n====== ====================================================================================================================== ==========  \n  2389       /  \n  2390 GC0712 PROCEDURE DIVISION USING L -Listing-Fn-TXT \n  2391 GC0712                          L-Src-Fn-TXT \n  2392 GC0712                          L -OS-Type-CD. \n  2393        000 -Main SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a94c88c4-63ac-429a-87c9-c48af0448fe8": {"__data__": {"id_": "a94c88c4-63ac-429a-87c9-c48af0448fe8", "embedding": null, "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "822a7d88-2c9c-4559-ac21-22e929caa41d", "node_type": "4", "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ab35631131f48a1a8dc85a4bacb13dc062286d72ddd16fbad39e2028e6312f63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92edf8ec-81e5-42f8-912d-7ceb7a799a5c", "node_type": "1", "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "26a17007c40dab16ef934ac2af48ae210bdf7ac31025687de07a6e14470fe55f", "class_name": "RelatedNodeInfo"}}, "text": "2394            PERFORM 100 -Initialization  \n  2395 GC0712     OPEN OUTPUT F -Listing-FILE \n  2396 GC0712     PERFORM 500 -Produce-Source-Listing \n  2397 GC0712     SORT F -Sort-Work-FILE \n  2398 GC0712         ASCENDING KEY    F -SW-Prog-ID-TXT \n  2399 GC0712                          F -SW-Token-Uc-TXT \n  2400 GC0712                          F -SW-Ref-Line-NUM \n  2401 GC0712         INPUT PROCEDURE  300 -Tokenize -Source \n  2402 GC0712         OUTPUT PROCEDURE 400 -Produce-Xref-Listing \n  2403 GC0712     CLOSE F -Listing-FILE \n  2404            GOBACK  \n  2405            .  \n  ", "start_char_idx": 923, "end_char_idx": 1509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62a0847f-ba67-4372-ba2a-6b46cadb6c4a": {"__data__": {"id_": "62a0847f-ba67-4372-ba2a-6b46cadb6c4a", "embedding": null, "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86e1f3dc-e670-4dd4-8ce3-8d56c3f6a351", "node_type": "4", "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d3db91f7e837c708cec0f89b803c6a73f883c1bac7c0d346d3308adc9505e6e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94823d06-774a-4801-b8ec-5444910596d2", "node_type": "1", "metadata": {}, "hash": "67147eb81224a521e0d9ccecef21f5e7df13bfa1b5e121372fe53c1e965128de", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-70 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 55  \n====== ====================================================================================================================== ==========  \n  2406       /  \n  2407       *>***************************************************************  \n  2408       *> Perform all program -wide initialization operations          **  \n  2409       *>***************************************************************  \n  2410        100 -Initialization SECTION.  \n  2411 GC0712     MOVE 0 TO WS -Page-NUM \n  2412 GC0712     STRING 'GNU COBOL V2.0 11FEB2012 Source Listing - GCic for '  \n  2413 GC0712                            DELIMITED SIZE  \n  2414 GC0712            WS -OS-Type-TXT(L-OS-Type-CD) DELI MITED SPACE  \n  2415 GC0712            ' Copyright (C) 2009 - 2013, Gary L. Cutler, GPL'  \n  2416 GC0712                            DELIMITED SIZE  \n  2417 GC0712         INTO WS -SH1-Title-TXT \n  2418 GC0712     STRING 'GNU COBOL V2.0 11FEB2012 Cross -Reference Li sting -' & \n  2419 GC0712            ' GCic for '    DELIMITED SIZE  \n  2420 GC0712            WS -OS-Type-TXT(L-OS-Type-CD) DELIMITED SPACE  \n  2421 GC0712            ' Copyright (C) 2009 - 2013, Gary L. Cutler, GPL'  \n  2422 GC0712                            DEL IMITED SIZE  \n  2423 GC0712         INTO WS -XH1-Title-TXT \n  2424            MOVE TRIM(L -Src-Fn-TXT,Leading) TO L -Src-Fn-TXT \n  2425 GC1010     PERFORM VARYING WS -I-SUB FROM LENGTH(L -Src-Fn-TXT) BY -1 *> Locate last directory delimiter character so that the fil  \n       ename can be extracted  \n  2426 GC1010               UNTIL L -Src-Fn-TXT(WS-I-SUB:1) = '/' OR ' \\' \n  2427 GC1010                     OR WS-I-SUB = 0 \n  2428 GC1010     END -PERFORM \n  2429 GC1010     IF WS -I-SUB = 0 \n  2430 GC1010         MOVE UPPER -CASE(L-Src-Fn-TXT) TO WS -Main-Module-Name-TXT *> No directory delimiter, whole thing is filename  \n  2431 GC1010     ELSE  \n  2432 GC1010         ADD 1 TO WS -I-SUB \n  2433 GC1010         MOVE UPPER -CASE(L-Src-Fn-TXT(WS-I-SUB:)) \n  2434 GC1010           TO WS -Main-Module-Name-TXT *> Extract filename  \n  2435 GC1010     END -IF \n  2436            ACCEPT WS -Lines-Per-Page-Env-TXT \n  2437                FROM ENVIRONMENT 'OCXREF_LINES'  \n  2438            INSPECT L -Src-Fn-TXT REPLACING ALL ' \\' BY '/'  \n  2439            MOVE L -Src-Fn-TXT TO WS -Program-Path-TXT \n  2440            MOVE WS -Program-Path-TXT TO WS -Src-Header-2-TXT \n  2441            CALL 'C$ JUSTIFY' USING WS -Src-Header-2-TXT, 'Right'  \n  2442            MOVE WS -Src-Header-2-TXT TO WS -Xref-Header-2-TXT \n  2443            MOVE LENGTH(TRIM(L -Src-Fn-TXT,Trailing)) TO WS -I-SUB \n  2444            MOVE 0 TO WS -J-SUB \n  2445            PERFORM UNTIL L -Src-Fn-TXT(WS-I-SUB:1) = '/'  \n  2446                       OR WS -I-SUB = 0 \n  2447                SUBTRACT 1 FROM WS -I-SUB \n  2448                ADD      1 TO   WS -J-SUB \n  2449            END -PERFORM \n  2450            UNSTRING L -Src-Fn-TXT((WS-I-SUB + 1):WS -J-SUB) \n  2451                DELIMITED BY '.'  \n  ", "start_char_idx": 0, "end_char_idx": 3562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94823d06-774a-4801-b8ec-5444910596d2": {"__data__": {"id_": "94823d06-774a-4801-b8ec-5444910596d2", "embedding": null, "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86e1f3dc-e670-4dd4-8ce3-8d56c3f6a351", "node_type": "4", "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d3db91f7e837c708cec0f89b803c6a73f883c1bac7c0d346d3308adc9505e6e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62a0847f-ba67-4372-ba2a-6b46cadb6c4a", "node_type": "1", "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4d1886b40e29612495bee5ca370299d49d50534df9c9f6e405fe85bfbe88df35", "class_name": "RelatedNodeInfo"}}, "text": "2452                INTO WS -Filename -TXT \n  2453                     WS -Dummy-TXT \n  2454 GC1010     STRING  \n  2455 GC1010            TRIM(WS -Filename -TXT,Trailing)  \n  2456 GC1010            '.i'  \n  2457 GC1010            DELIMITED SIZE  \n  2458 GC1010            INTO WS -Expanded -Src-Fn-TXT \n  ", "start_char_idx": 3562, "end_char_idx": 3867, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e3ef1b9-169c-4cc2-9269-63ba52d4f6cd": {"__data__": {"id_": "1e3ef1b9-169c-4cc2-9269-63ba52d4f6cd", "embedding": null, "metadata": {"page_label": "329", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "703a5d70-d6b7-49d0-b837-1c8defd313c8", "node_type": "4", "metadata": {"page_label": "329", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "753620e07a9b246373da5a474a495d01580be786eab264243a097357045f8c99", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-71 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 56  \n====== == ============================================================================================================================= = \n  2459 GC1010     CALL 'CBL_CHECK_FILE_EXIST' USING WS -Expanded -Src-Fn-TXT \n  2460 GC1010                                       WS -Temp-256-Chars-TXT \n  2461 GC1010     IF RETURN -CODE NOT = 0  \n  2462 GC1010         GOBACK  \n  2463 GC1010     END -IF \n  2464            IF WS -Lines-Per-Page-Env-TXT NOT = SPACES  \n  2465                MOVE NUMVAL(WS -Lines-Per-Page-Env-TXT) \n  2466                  TO WS-Lines-Per-Page-NUM \n  2467            ELSE  \n  2468                MOVE 58  \n  2469                  TO WS -Lines-Per-Page-NUM \n  2470            END -IF \n  2471            ACCEPT WS -Today-DT FROM DATE YYYYMMDD  \n  2472            MOVE WS -Today-DT TO WS -XH1-DT \n  2473                                WS -SH1-DT \n  2474            MOVE '????????????...' TO WS -Curr-Prog-ID-TXT \n  2475            MOVE SPACES            TO WS -Curr-Verb-TXT \n  2476                                      WS -Held-Reference -TXT \n  2477            .  \n  ", "start_char_idx": 0, "end_char_idx": 1652, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff3a3cec-a426-4c1b-98d7-38a112e8c5a8": {"__data__": {"id_": "ff3a3cec-a426-4c1b-98d7-38a112e8c5a8", "embedding": null, "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd1c3ca8-4e9c-4919-b408-c9939b84580e", "node_type": "4", "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "83292ba825427edc78d2f83544946d0e5a1cbc4a3358260232f9f1c5c97c7dc4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "569d9074-484e-49f6-8c10-12d6e70cb69d", "node_type": "1", "metadata": {}, "hash": "ffc3de9d701356fa27662cc303db45570201674f43501664be792d98a9d8262c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-72 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 57  \n====== =========================================================================== =====================================================  \n  2478       /  \n  2479        300 -Tokenize -Source SECTION.  \n  2480            OPEN INPUT F -Expanded -Src-FILE \n  2481            MOVE SPACES TO F -Expanded -Src-REC \n  2482            MOVE 256 TO WS -Src-SUB \n  2483            MOVE 0 TO WS -Usernames -QTY \n  2484                      WS -Curr-Line-NUM \n  2485            MOVE '?' ", "start_char_idx": 0, "end_char_idx": 1039, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "569d9074-484e-49f6-8c10-12d6e70cb69d": {"__data__": {"id_": "569d9074-484e-49f6-8c10-12d6e70cb69d", "embedding": null, "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd1c3ca8-4e9c-4919-b408-c9939b84580e", "node_type": "4", "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "83292ba825427edc78d2f83544946d0e5a1cbc4a3358260232f9f1c5c97c7dc4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff3a3cec-a426-4c1b-98d7-38a112e8c5a8", "node_type": "1", "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36ab3e72067b9e2c88d3de17f152864ccabd8d60c4ed975393ce6d05f126cc15", "class_name": "RelatedNodeInfo"}}, "text": "TO WS -Curr-Division -TXT \n  2486 GC0710     MOVE 'N' TO WS -RS-Verb-Has-Been-Found-CHR \n  2487            PERFORM FOREVER  \n  2488                P ERFORM 310 -Get-Token \n  2489                IF WS -TT-Token-Is-EOF-BOOL \n  2490                    EXIT PERFORM  \n  2491                END -IF \n  2492                MOVE UPPER -CASE(WS-Token-Curr-TXT) \n  2493                  TO WS -Token-Curr-Uc-TXT \n  2494 GC1010          IF WS-TT-Token-Is-Keyword-BOOL \n  2495 GC1010         OR WS -TT-Token-Is-Reserved -Wd-BOOL \n  2496 GC1010             MOVE WS -Token-Curr-Uc-TXT TO WS -Token-Curr-TXT \n  2497 GC1010         END -IF \n  2498                IF WS -TT-Token-Is-Verb-BOOL \n  2499                    MOVE WS-Token-Curr-Uc-TXT TO WS -Curr-Verb-TXT \n  2500                                                 WS -Token-Prev-TXT \n  2501                    IF WS -Held-Reference -TXT NOT = SPACES  \n  2502                        MOVE WS -Held-Reference -TXT TO F -Sort-Work-REC \n  2503                        MOVE SPACES         TO WS -Held-Reference -TXT \n  2504                        RELEASE F -Sort-Work-REC \n  2505                    END -IF \n  2506                END-IF \n  2507                EVALUATE TRUE  \n  2508                WHEN WS -CD-In-IDENT-DIV-BOOL \n  2509                    PERFORM 320 -IDENTIFICATION -DIVISION  \n  2510                WHEN WS -CD-In-ENV-DIV-BOOL \n  2511                    PERFORM 330 -ENVIRONME NT-DIVISION  \n  2512                WHEN WS -CD-In-DATA-DIV-BOOL \n  2513                    PERFORM 340 -DATA-DIVISION  \n  2514                WHEN WS -CD-In-PROC-DIV-BOOL \n  2515                    PERFORM 350 -PROCEDURE -DIVISION  \n  2516                END -EVALUATE  \n  2517                IF WS -TT-Token-Is-Keyword-BOOL \n  2518                    MOVE WS -Token-Curr-Uc-TXT TO WS -Token-Prev-TXT \n  2519                END -IF \n  2520                IF WS -RS-Token-Ended-Sentence -CHR = 'Y'  \n  2521                AND WS -Curr-Division-TXT NOT = 'I'  \n  2522                    MOVE SPACES TO WS -Token-Prev-TXT \n  2523                                   WS -Curr-Verb-TXT \n  2524                END -IF \n  2525 \n  2526            END -PERFORM \n  2527            CLOSE F -Expanded -Src-FILE \n  2528            . \n  ", "start_char_idx": 1039, "end_char_idx": 3292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "492b7e6f-1a3a-4ff4-99bf-e8b56c81db4a": {"__data__": {"id_": "492b7e6f-1a3a-4ff4-99bf-e8b56c81db4a", "embedding": null, "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef780403-4c43-40eb-927c-99e01a0e3090", "node_type": "4", "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a494c3cd63a8ea99f5de16a184f79c3a9cf45843256e56ae5e4e0a0f2833f3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2bca3d1-a8a9-457a-87c1-d145f037266a", "node_type": "1", "metadata": {}, "hash": "299526c4e5551ed627fc996016c14e19be994c891d8e37e00f5f051843a27766", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-73 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 58  \n====== ====================================================================================================================== ==========  \n  2529       /  \n  2530        310 -Get-Token SECTION.  \n  2531       *> -- Position to 1st non -blank characte r \n  2532            MOVE WS -RS-Token-Ended-Sentence -CHR \n  2533              TO WS -RS-Last-Token-Ended-Sent-CHR \n  2534            MOVE 'N' TO WS -RS-Token-Ended-Sentence -CHR \n  2535            PERFORM UNTIL F -Expanded -Src-REC(WS-Src-SUB : 1) NOT = SPACE  \n  2536                IF WS -Src-SUB > 255  \n  2537                    READ F -Expanded -Src-FILE AT END  \n  2538                        IF WS -Held-Reference -TXT NOT = SPACES  \n  2539                            MOVE WS -Held-Reference -TXT TO F -Sort-Work-REC \n  2540                            MOVE SPACES         TO WS -Held-Reference -TXT \n  2541                            RELEASE F -Sort-Work-REC \n  2542                        END -IF \n  2543                        SET WS -TT-Token-Is-EOF-BOOL TO TRUE  \n  2544                        MOVE 0 TO WS -Curr-Line-NUM \n  2545                        EXIT SECTION  \n  2546                    END -READ \n  2547 GC0712             IF F -ES-1-7-TXT NOT = '#DEFLIT'  \n  2548 GC0712                 IF F -ES-1-CHR = '#'  \n  2549 GC0712                     PERFORM 311-Control-Record \n  2550 GC0712                 ELSE  \n  2551 GC0712                     PERFORM 312 -Expanded -Src-Record \n  2552 GC0712                 END -IF \n  2553 GC0712             END -IF \n  2554                ELSE  \n  2555                    ADD 1 TO WS -Src-SUB \n  2556                END -IF \n  2557            END -PERFORM \n  2558       *> -- Extract token string  \n  2559            MOVE F -Expanded -Src-REC(WS-Src-SUB : 1)  \n  2560              TO WS -Curr-CHR \n  2561            M OVE F-Expanded -Src-REC(WS-Src-SUB + 1: 1)  \n  2562              TO WS -Next-CHR \n  2563            IF WS -Curr-CHR = '.'  \n  ", "start_char_idx": 0, "end_char_idx": 2516, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2bca3d1-a8a9-457a-87c1-d145f037266a": {"__data__": {"id_": "b2bca3d1-a8a9-457a-87c1-d145f037266a", "embedding": null, "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef780403-4c43-40eb-927c-99e01a0e3090", "node_type": "4", "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a494c3cd63a8ea99f5de16a184f79c3a9cf45843256e56ae5e4e0a0f2833f3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "492b7e6f-1a3a-4ff4-99bf-e8b56c81db4a", "node_type": "1", "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "03287165c7c3652f91f18f1026a5e93e5dbccf784142de58f0cfec2397134ee7", "class_name": "RelatedNodeInfo"}}, "text": "2564                ADD 1 TO WS -Src-SUB \n  2565                MOVE WS -Curr-CHR TO WS -Token-Curr-TXT \n  2566                MOVE SPACE TO WS -Token-Type-CD \n  2567                MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2568                EXIT SECTION  \n  2569            END -IF \n  2570            IF WS -Curr-Char-Is-Punct-BOOL \n  2571            AND WS -Curr-CHR = '='  \n  2572            AND WS -Curr-Division -TXT = 'P'  \n  2573                ADD 1 TO WS -Src-SUB \n  2574                MOVE 'EQUALS' TO WS -Token-Curr-TXT \n  2575                MOVE 'K'      TO WS -Token-Type-CD \n  2576                EXIT SECTION  \n  2577            END -IF \n  2578            IF  WS-Curr-Char-Is-Punct-BOOL *> So subscripts don't get flagged w/ '*'  \n  2579            AND WS -Curr-CHR = '('  \n  2580            AND WS -Curr-Division -TXT = 'P'  \n  2581                MOVE SPACES TO WS -Token-Prev-TXT \n  2582            END -IF \n  ", "start_char_idx": 2516, "end_char_idx": 3454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddc1a132-b45f-4334-afef-b6266938f3e8": {"__data__": {"id_": "ddc1a132-b45f-4334-afef-b6266938f3e8", "embedding": null, "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e9287e3-b6ca-4876-825f-57519634ccb8", "node_type": "4", "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfd6420d93d28d49e2fe836e161ef25a6f11c17779edfb503d9834112624ce9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f05d4464-99aa-49d6-bc7f-586babff43bf", "node_type": "1", "metadata": {}, "hash": "cf9f9bda7a915ab3637eca03a0a50a659911743c8782cb612cbf77d485a15ab4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-74 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 59  \n====== ================================================================================================= ===============================  \n  2583            IF WS -Curr-Char-Is-Punct-BOOL \n  2584                ADD 1 TO WS -Src-SUB \n  2585                MOVE WS -Curr-CHR TO WS -Token-Curr-TXT \n  2586                MOVE SPACE TO WS -Token-Type-CD \n  2587                EXIT SECTION  \n  2588            END -IF \n  2589            IF WS -Curr-Char-Is-Quote-BOOL \n  2590                ADD 1 TO WS -Src-SUB \n  2591                UNSTRING F -Expanded -Src-REC \n  2592                    DELIMITED BY WS -Curr-CHR \n  2593                    INTO WS-Token-Curr-TXT \n  2594                    WITH POINTER WS -Src-SUB \n  2595                IF F -Expanded -Src-REC(WS-Src-SUB : 1) = '.'  \n  2596                    MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2597                    ADD 1 TO WS -Src-SUB \n  2598                END -IF \n  2599                SET WS -TT-Token-Is-Lit-Alpha-BOOL TO TRUE  \n  2600                EXIT SECTION  \n  2601            END -IF \n  2602            IF WS -Curr-Char-Is-X-BOOL AND WS -Next-Char-Is-Quote-BOOL \n  2603                ADD 2 TO  WS-Src-SUB \n  2604                UNSTRING F -Expanded -Src-REC \n  2605                    DELIMITED BY WS -Next-CHR \n  2606                    INTO WS -Token-Curr-TXT \n  2607                    WITH POINTER WS -Src-SUB \n  2608                IF F -Expanded -Src-REC(WS-Src-SUB : 1) = '.'  \n  ", "start_char_idx": 0, "end_char_idx": 2036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f05d4464-99aa-49d6-bc7f-586babff43bf": {"__data__": {"id_": "f05d4464-99aa-49d6-bc7f-586babff43bf", "embedding": null, "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e9287e3-b6ca-4876-825f-57519634ccb8", "node_type": "4", "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3dfd6420d93d28d49e2fe836e161ef25a6f11c17779edfb503d9834112624ce9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddc1a132-b45f-4334-afef-b6266938f3e8", "node_type": "1", "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a96603ff78587a81d9a805d806df2b6c1844f283f734a8f1d24e5b2bf59b4d2a", "class_name": "RelatedNodeInfo"}}, "text": "2609                    MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2610                    ADD 1 TO WS -Src-SUB \n  2611                END -IF \n  2612                SET WS -TT-Token-Is-Lit-Number-BOOL TO TRUE  \n  2613                EXIT SECTION  \n  2614            END -IF \n  2615            IF WS -Curr-Char-Is-Z-BOOL AND WS -Next-Char-Is-Quote-BOOL \n  2616                ADD 2 TO WS -Src-SUB \n  2617                UNSTRING F -Expanded -Src-REC \n  2618                    DELIMITED BY WS -Next-CHR \n  2619                    INTO WS -Token-Curr-TXT \n  2620                    WITH POINTER WS -Src-SUB \n  2621                IF F -Expanded -Src-REC(WS-Src-SUB : 1) = '.'  \n  2622                    MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2623                    ADD 1 TO WS -Src-SUB \n  2624                END -IF \n  2625                SET WS -TT-Token-Is-Lit-Alpha-BOOL TO TRUE  \n  2626                EXIT SECTION  \n  2627            END -IF \n  2628            IF WS -RS-Processing -PICTURE-CHR = 'Y'  \n  2629                UNSTRING F -Expanded -Src-REC \n  2630                    DELIMITED BY '. ' OR ' '  \n  2631                    INTO WS -Token-Curr-TXT \n  2632                    DELIMITER IN WS -Delim-TXT \n  2633                    WITH POINT ER WS-Src-SUB \n  2634                IF WS -Delim-TXT = '. '  \n  2635                    MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2636                    ADD 1 TO WS -Src-SUB \n  ", "start_char_idx": 2036, "end_char_idx": 3493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1a01391-86c1-4aeb-84ed-7ba06d80800a": {"__data__": {"id_": "e1a01391-86c1-4aeb-84ed-7ba06d80800a", "embedding": null, "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8c0cbe1-0a0d-48e6-aa68-945b7c61dc62", "node_type": "4", "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8ed010ac7ac5ba8c696f3b60688bddec94d16fa1113ac2eca928a135e4a3ebb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19f7ed07-3117-46b2-b559-1eb1d393be3d", "node_type": "1", "metadata": {}, "hash": "6a0e66ca5e1fa5ec3332933b2dfcdd7dac09fbdcb5cf6d4ae66c17cccdd5c6ed", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-75 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 60  \n====== ================================================================================================= ===============================  \n  2637                END -IF \n  2638                IF UPPER -CASE(WS-Token-Curr-TXT) = 'IS'  \n  2639                    MOVE SPACE TO WS -Token-Type-CD \n  2640                    EXIT SECTION  \n  2641                ELSE  \n  2642                    MOVE 'N' TO WS -RS-Processing -PICTURE-CHR \n  2643                    MOVE SPACE TO WS -Token-Type-CD \n  2644                    EXIT SECTION  \n  2645                END -IF \n  2646            END -IF \n  2647            UNSTRING F -Expanded -Src-REC \n  2648                DELIMITED BY '. ' OR ' ' OR '=' OR '(' OR ')' OR '*'  \n  2649                                  OR '/' OR '&' OR ';' OR ',' OR '<'  \n  2650                                  OR '>' OR ':'  \n  2651                INTO WS -Token-Curr-TXT \n  2652                DELIMITER IN WS -Delim-TXT \n  2653                WITH POINTER WS -Src-SUB \n  2654            IF WS -Delim-TXT = '. '  \n  ", "start_char_idx": 0, "end_char_idx": 1606, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19f7ed07-3117-46b2-b559-1eb1d393be3d": {"__data__": {"id_": "19f7ed07-3117-46b2-b559-1eb1d393be3d", "embedding": null, "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8c0cbe1-0a0d-48e6-aa68-945b7c61dc62", "node_type": "4", "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8ed010ac7ac5ba8c696f3b60688bddec94d16fa1113ac2eca928a135e4a3ebb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1a01391-86c1-4aeb-84ed-7ba06d80800a", "node_type": "1", "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7e2adc137bf560e4d1da409a7a5b673c7231076fca1fcf344a1b40dc151a6cf5", "class_name": "RelatedNodeInfo"}}, "text": "2655                MOVE 'Y' TO WS -RS-Token-Ended-Sentence -CHR \n  2656            END -IF \n  2657            IF WS -Delim-TXT NOT = ' . ' AND ' '  \n  2658                SUBTRACT 1 FROM WS -Src-SUB \n  2659            END -IF \n  2660       *> -- Classify Token  \n  2661            MOVE UPPER -CASE(WS-Token-Curr-TXT) TO WS -Token-Search-TXT \n  2662            IF WS -Token-Search-TXT = 'EQUAL' OR 'EQUALS'  \n  2663                MOVE 'EQUALS' TO WS -Token-Curr-TXT \n  2664                MOVE 'K'      TO WS -Token-Type-CD \n  2665                EXIT SECTION  \n  2666            END -IF \n  2667            SE ARCH ALL WS -Reserved -Word-TXT \n  2668                WHEN WS -RW-Word-TXT (WS-RW-IDX) = WS -Token-Search-TXT \n  2669                    MOVE WS -RW-Type-CD (WS-RW-IDX) TO WS -Token-Type-CD \n  2670 GC0710             IF WS -TT-Token-Is-Verb-BOOL \n  2671 GC0710                 MOVE 'Y' TO WS -RS-Verb-Has-Been-Found-CHR \n  2672 GC0710             END -IF \n  2673                    EXIT SECTION  \n  2674            END -SEARCH \n  2675       *> -- Not a reserved word, must be a user name  \n  2676            SET WS -TT-Token-Is-Identifier-BOOL TO TRUE  \n  2677            PERFORM 313 -Check-For-Numeric-Token \n  2678            IF WS -TT-Token-Is-Lit-Number-BOOL \n  2679                IF  (WS -RS-Last-Token-Ended-Sent-CHR = 'Y')  \n  2680                AND (WS -Curr-Division -TXT = 'D')  \n  2681                    MOVE 'LEVEL #' TO WS -Token-Curr-TXT \n  2682                    MOVE 'K'       TO WS -Token-Type-CD \n  2683                    EXIT SECTION  \n  2684                ELSE  \n  2685                    EXIT SECTION  \n  2686                END -IF \n  2687            END-IF \n  2688            .  \n  ", "start_char_idx": 1606, "end_char_idx": 3329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb767130-e5b1-45fe-a306-6d3cdec78a91": {"__data__": {"id_": "fb767130-e5b1-45fe-a306-6d3cdec78a91", "embedding": null, "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9154b9c-1f4a-4905-8a75-7e2360c60da7", "node_type": "4", "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d0661cf404f46b78fb7217f81e0949d2ea68720617e403effbfed74c6b1db8d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "301f18ab-dcaa-406e-91a3-aac0033684ab", "node_type": "1", "metadata": {}, "hash": "d59be94d750fbb066736f3fbb8b07c02ea9e7545254220088601a10cfe78e157", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-76 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 61  \n====== ====================================================================================================================== ==========  \n  2689       /  \n  2690        311 -Control-Record SECTION.  \n  2691            UNSTRING F -ES-2-256-TXT-256 \n  2692                DELIMITED BY '\"'  \n  2693                INTO WS -Temp-10-Chars-TXT \n  2694                     WS -Temp-256-Chars-TXT \n  2695                     WS -Dummy-TXT \n  2696            INSPECT WS -Temp-10-Chars-TXT REPLACING ALL '\"' BY SPACE  \n  2697 GC0712     IF WS -Temp-10-Chars-TXT(1:4) = 'line'  \n  2698 GC0712         MOVE SPACES TO WS -Temp-10-Chars-TXT(1:4)  \n  2699 GC0712     END -IF \n  2700            COMPUTE WS -I-SUB = NUMVAL(WS -Temp-10-Chars-TXT) - 1 \n  2701 GC1010     IF UPPER -CASE(TRIM(WS -Temp-256-Chars-TXT,Trailing)) =  \n  2702 GC1010        TRIM(WS -Main-Module-Name-TXT) \n  2703                MOVE WS -I-SUB TO WS -Curr-Line-NUM \n  2704                SET WS -RS-In-Main-Module-BOOL TO TRUE  \n  2705                IF WS -Saved-Section-TXT NOT = SPACES  \n  2706                    MOVE WS-Saved-Section-TXT TO WS -Curr-Section-TXT \n  2707                END -IF \n  2708            ELSE  \n  2709                SET WS -RS-In-Copybook -BOOL TO TRUE  \n  2710                IF WS -Saved-Section-TXT = SPACES  \n  2711                    MOVE WS-Curr-Section-TXT TO WS -Saved-Section-TXT \n  2712                END -IF \n  2713                MOVE LENGTH(TRIM(WS -Temp-256-Chars-TXT,Trailing))  \n  2714                  TO WS -I-SUB \n  2715                MOVE 0 TO WS -J-SUB \n  2716                PERFORM UNTIL WS -Temp-256-Chars-TXT(WS-I-SUB:1) = '/'  \n  2717                           OR WS -I-SUB = 0 \n  2718                    SUBTRACT 1 FROM WS -I-SUB \n  2719                    ADD      1 TO   WS -J-SUB \n  2720                END -PERFORM \n  2721                UNSTRING WS -Temp-256-Chars-TXT((WS-I-SUB + 1):WS -J-SUB) \n  2722                    DELIMITED BY '.'  \n  ", "start_char_idx": 0, "end_char_idx": 2528, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "301f18ab-dcaa-406e-91a3-aac0033684ab": {"__data__": {"id_": "301f18ab-dcaa-406e-91a3-aac0033684ab", "embedding": null, "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9154b9c-1f4a-4905-8a75-7e2360c60da7", "node_type": "4", "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d0661cf404f46b78fb7217f81e0949d2ea68720617e403effbfed74c6b1db8d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb767130-e5b1-45fe-a306-6d3cdec78a91", "node_type": "1", "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "284a3c36011bed6f357dc80d2768f5e5e485345714c2c910538ca198b9f1522d", "class_name": "RelatedNodeInfo"}}, "text": "2723                    INTO WS -Filename -TXT \n  2724                         WS -Dummy-TXT \n  2725                MOVE '['      TO WS-CS-1-CHR \n  2726                MOVE WS -Filename -TXT TO WS -CS-2-14-TXT \n  2727                IF WS -CS-11-14-TXT NOT = SPACES  \n  2728                    MOVE '...' TO WS -CS-11-14-TXT \n  2729                END -IF \n  2730                MOVE ']'      TO WS -CS-15-CHR \n  2731            END -IF \n  2732            MOVE SPACES TO F -Expanded -Src-REC *> Force another READ  \n  2733            MOVE 256    TO WS -Src-SUB \n  2734            .  \n  ", "start_char_idx": 2528, "end_char_idx": 3114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4683200-e601-4501-8e10-dc03c1bd4bc6": {"__data__": {"id_": "e4683200-e601-4501-8e10-dc03c1bd4bc6", "embedding": null, "metadata": {"page_label": "335", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0cb8e473-ad19-4e17-9b6e-75250ccca7ab", "node_type": "4", "metadata": {"page_label": "335", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "88dbaeb4790ac471ec4c7758649354bd9356635b7fa3217a72eb6abcab6c4457", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-77 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009  - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 62  \n====== ====================================================================================================================== ==========  \n  2735       /  \n  2736        312 -Expanded -Src-Record SECTION.  \n  2737 GC0711     MOVE 2 TO WS -Src-SUB \n  2738            IF WS -RS-In-Main-Module-BOOL \n  2739                ADD 1 To WS -Curr-Line-NUM \n  2740            END -IF \n  2741            .  \n  ", "start_char_idx": 0, "end_char_idx": 963, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d79c11c-0595-4f0e-902d-384062630562": {"__data__": {"id_": "9d79c11c-0595-4f0e-902d-384062630562", "embedding": null, "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03e3b5ea-8690-4346-abf5-461c724b060c", "node_type": "4", "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3baa5d4fd8e53851416024c34b6ea5c3b362e78935d26806fefe1f26c5b7bc07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01a62911-3b8c-4e79-bf51-f51a6cba4ac6", "node_type": "1", "metadata": {}, "hash": "875317c070fe29cccccfe5f342c71a869ca412ecce824382237b0a65781a904c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-78 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 63  \n====== ================================================================================================= ===============================  \n  2742       /  \n  2743        313 -Check-For-Numeric-Token SECTION.  \n  2744            MOVE WS -Token-Curr-TXT TO WS -Temp-32-Chars-1-TXT \n  2745            INSPECT WS -Temp-32-Chars-1-TXT \n  2746 GC0711         CONVERTING '01234567 89' TO SPACES  \n  2747 GC0711     IF WS -Temp-32-Chars-1-TXT = SPACES                      *> Simple Unsigned Integer  \n  2748                SET WS -TT-Token-Is-Lit-Number-BOOL TO TRUE  \n  2749                EXIT SECTION  \n  2750            END -IF \n  2751 GC0711     MOVE SPACES TO WS -Temp-32-Chars-2-TXT \n  2752 GC0711                    WS -Temp-32-Chars-3-TXT \n  2753 GC0711                    WS -Dummy-TXT \n  2754 GC0711     UNSTRING WS -Temp-32-Chars-1-TXT \n  2755 GC0711         DELIMITED BY 'e' OR 'E'  \n  2756 GC0711         INTO WS-Temp-32-Chars-2-TXT \n  2757 GC0711              WS -Temp-32-Chars-3-TXT \n  2758 GC0711              WS -Dummy-TXT \n  2759 GC0711     IF WS -Dummy-TXT NOT = SPACES                    *> More than one 'E' - Not Numeric  \n  2760 GC0711         EXIT SECTIO N \n  2761 GC0711     END -IF \n  2762 GC0711     IF WS -Temp-32-Chars-2-TXT(1:1) = '+' OR ' -' \n  2763 GC0711         MOVE SPACE TO WS -Temp-32-Chars-2-TXT(1:1)  \n  2764 GC0711     END -IF \n  2765 GC0711     IF WS -Temp-32-Chars-3-TXT(1:1) = '+' OR ' -' \n  2766 GC0711         MOVE SPACE TO WS -Temp-32-Chars-3-TXT(1:1)  \n  2767 GC0711     END -IF \n  2768            MOVE 0 TO WS -Tally-QTY \n  2769 GC0711     INSPECT WS -Temp-32-Chars-2-TXT \n  2770                TALLYING WS -Tally-QTY FOR ALL '.'  \n  ", "start_char_idx": 0, "end_char_idx": 2240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01a62911-3b8c-4e79-bf51-f51a6cba4ac6": {"__data__": {"id_": "01a62911-3b8c-4e79-bf51-f51a6cba4ac6", "embedding": null, "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03e3b5ea-8690-4346-abf5-461c724b060c", "node_type": "4", "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3baa5d4fd8e53851416024c34b6ea5c3b362e78935d26806fefe1f26c5b7bc07", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d79c11c-0595-4f0e-902d-384062630562", "node_type": "1", "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "787e1cf8a81e28a6ba765f39ec8a84780a3f8738f879e47ff4cc7470cf53716b", "class_name": "RelatedNodeInfo"}}, "text": "2771            IF WS-Tally-QTY = 1 \n  2772 GC0711         INSPECT WS -Temp-32-Chars-2-TXT REPLACING ALL '.' BY SPACE  \n  2773            END -IF \n  2774 GC0711     INSPECT WS -Temp-32-Chars-3-TXT \n  2775 GC0711         TALLYING WS -Tally-QTY FOR ALL '.'  \n  2776 GC0711     IF WS -Tally-QTY = 1 \n  2777 GC0711         INSPECT WS -Temp-32-Chars-3-TXT REPLACING ALL '.' BY SPACE  \n  2778 GC0711     END -IF \n  2779 GC0711     IF WS -Temp-32-Chars-2-TXT = SPACES AND WS -Temp-32-Chars-3-TXT = SPACES  \n  2780                SET WS -TT-Token-Is-Lit-Number-BOOL TO TRUE  \n  2781                EXIT SECTION  \n  2782            END -IF \n  2783            .  \n  ", "start_char_idx": 2240, "end_char_idx": 2896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8974a857-b8cd-4f5f-9d24-09376a6964da": {"__data__": {"id_": "8974a857-b8cd-4f5f-9d24-09376a6964da", "embedding": null, "metadata": {"page_label": "337", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c043f11-3af7-49da-83f6-40ba109a9f3a", "node_type": "4", "metadata": {"page_label": "337", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "56f4c3cb522a2e8f2aa718f204253c185e47dc71cbd5db5abd1843296a0dbc7a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-79 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 64  \n====== === =============================================================================================================================  \n  2784       /  \n  2785        320 -IDENTIFICATION -DIVISION SECTION.  \n  2786 GC0712     IF WS -TT-Token-Is-Argtype-BOOL \n  2787 GC0712         SET WS -TT-Token-Is-Reserved -Wd-BOOL TO TRUE  \n  2788 GC0712     END -IF \n  2789 GC0710     MOVE 'N' TO WS -RS-Verb-Has-Been-Found-CHR \n  2790            IF WS -TT-Token-Is-Keyword-BOOL \n  2791            AND WS -Token-Curr-TXT = 'DIVISION'  \n  2792                MOVE WS -Token-Prev-TXT TO WS -Curr-Division -TXT \n  2793                EXIT SECTION  \n  2794            END -IF \n  2795 GC0712     IF WS -Token-Prev-TXT = 'PROGRAM -ID' OR 'FUNCTION -ID' \n  2796                MOVE SPACES TO WS -Token-Prev-TXT \n  2797                MOVE WS -Token-Curr-TXT TO WS -Curr-Prog-ID-TXT \n  2798 GC0712         IF WS -CPI-16-CHR NOT = SPACES  \n  2799                    MOVE '...' TO WS -CPI-13-15-TXT \n  2800                END -IF \n  2801 GC0712         SEARCH ALL WS -Reserved -Word-TXT \n  2802 GC0712             WHEN WS -RW-Word-TXT (WS-RW-IDX) = 'LENGTH'  \n  2803 GC0712                 MOVE ' ' TO WS -RW-Type-CD (WS-RW-IDX) \n  2804 GC0712         END -SEARCH \n  2805                EXIT SECTION  \n  2806            END -IF \n  2807            .  \n  ", "start_char_idx": 0, "end_char_idx": 1899, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e35237f-8a90-4602-91da-657f7f4e07bc": {"__data__": {"id_": "2e35237f-8a90-4602-91da-657f7f4e07bc", "embedding": null, "metadata": {"page_label": "338", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc9c2e74-d7e8-4b12-a107-43378825beed", "node_type": "4", "metadata": {"page_label": "338", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7385e92be4976f0f1a461fd3f1a5d4758f42cffe16dfbcb610174406766167ae", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-80 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/sampl es/GCic.cbl  \nLine   Statement                                                                                                               Page: 65  \n====== ===================================================================================================== ===========================  \n  2808       /  \n  2809        330 -ENVIRONMENT -DIVISION SECTION.  \n  2810 GC0712     IF WS -TT-Token-Is-Argtype-BOOL \n  2811 GC0712         SET WS -TT-Token-Is-Reserved -Wd-BOOL TO TRUE  \n  2812 GC0712     END -IF \n  2813            IF WS -TT-Token-Is-Keyword-BOOL \n  2814            AND WS -Token-Curr-TXT = 'DIVISION'  \n  2815                MOVE WS -Token-Prev-TXT TO WS -Curr-Division -TXT \n  2816                EXIT SECTION  \n  2817            END -IF \n  2818            IF WS -TT-Token-Is-Keyword-BOOL \n  2819            AND WS -Token-Curr-TXT = 'SECTION'  \n  2820                MOVE WS -Token-Prev-TXT TO WS -Curr-Section-TXT \n  2821                EXIT SECTION  \n  2822            END -IF \n  2823            IF WS -TT-Token-Is-Identifier -BOOL \n  2824 GC0712         IF WS -Token-Prev-TXT = 'FUNCTION'  \n  2825 GC0712             PERFORM 360 -Release-Def \n  2826 GC0712         ELSE  \n  2827 GC0712             PERFORM 361 -Release-Ref \n  2828 GC0712         END -IF \n  2829            END -IF \n  2830            .  \n  ", "start_char_idx": 0, "end_char_idx": 1735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "951a2ada-9c2f-4321-80a0-d002828ba775": {"__data__": {"id_": "951a2ada-9c2f-4321-80a0-d002828ba775", "embedding": null, "metadata": {"page_label": "339", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1bd9e3a-d5ef-4f71-90ab-c5055aaf6b25", "node_type": "4", "metadata": {"page_label": "339", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37968ec98e4aed16a0f933bc114c2091ead6821578b0482bd5daea9e245f6329", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-81 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 66  \n====== ============================================================================================== ==================================  \n  2831       /  \n  2832        340 -DATA-DIVISION SECTION.  \n  2833 GC0712     IF WS -TT-Token-Is-Argtype-BOOL \n  2834 GC0712         SET WS -TT-Token-Is-Reserved -Wd-BOOL TO TRUE  \n  2835 GC0712     END -IF \n  2836            IF WS -TT-Token-Is-Keyword-BOOL \n  2837            AND WS -Token-Curr-TXT = 'DIVISION'  \n  2838 GC0712         SEARCH ALL WS -Reserved -Word-TXT \n  2839 GC0712             WHEN WS -RW-Word-TXT (WS-RW-IDX) = 'LENGTH'  \n  2840 GC0712                 M OVE 'I' TO WS -RW-Type-CD (WS-RW-IDX) \n  2841 GC0712         END -SEARCH \n  2842                MOVE WS -Token-Prev-TXT TO WS -Curr-Division -TXT \n  2843                EXIT SECTION  \n  2844            END -IF \n  2845            IF WS -TT-Token-Is-Keyword-BOOL \n  2846            AND WS-Token-Curr-TXT = 'SECTION'  \n  2847                MOVE WS -Token-Prev-TXT TO WS -Curr-Section-TXT \n  2848                EXIT SECTION  \n  2849            END -IF \n  2850            IF  (WS -Token-Curr-TXT = 'PIC' OR 'PICTURE')  \n  2851            AND  (WS-TT-Token-Is-Keyword-BOOL) \n  2852                MOVE 'Y' TO WS -RS-Processing -PICTURE-CHR \n  2853                EXIT SECTION  \n  2854            END -IF \n  2855 GC0710     IF WS -TT-Token-Is-Reserved -Wd-BOOL \n  2856 GC0710     AND WS -Token-Prev-TXT = 'LEVEL #' \n  2857 GC0710         MOVE SPACES TO WS -Token-Prev-TXT \n  2858 GC0710         EXIT SECTION  \n  2859 GC0710     END -IF \n  2860            IF WS -TT-Token-Is-Identifier -BOOL \n  2861                EVALUATE WS -Token-Prev-TXT \n  2862                WHEN 'FD'  \n  2863                    PERFORM 360 -Release-Def \n  2864                    MOVE SPACES TO WS -Token-Prev-TXT \n  2865                WHEN 'SD'  \n  2866                    PERFORM 360 -Release-Def \n  2867                    MOVE SPACES TO WS -Token-Prev-TXT \n  2868                WHEN 'LEVEL #'  \n  2869                    PERFORM 360 -Release-Def \n  2870                    MOVE SPACES TO WS -Token-Prev-TXT \n  2871                WHEN 'INDEXED'  \n  2872                    PERFORM 360 -Release-Def \n  2873                    MOV E SPACES TO WS -Token-Prev-TXT \n  2874                WHEN 'USING'  \n  2875                    PERFORM 362 -Release-Upd \n  2876                    MOVE SPACES TO WS -Token-Prev-TXT \n  2877                WHEN 'INTO'  \n  2878                    PERFORM 362 -Release-Upd \n  2879                    MOVE SPACES TO WS -Token-Prev-TXT \n  2880                WHEN OTHER  \n  2881                    PERFORM 361 -Release-Ref \n  2882                END -EVALUATE  \n  2883                EXIT SECTION  \n  2884            END -IF \n  ", "start_char_idx": 0, "end_char_idx": 3307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f22a87bd-8604-4601-ad09-ab55698177bc": {"__data__": {"id_": "f22a87bd-8604-4601-ad09-ab55698177bc", "embedding": null, "metadata": {"page_label": "340", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b89ebe0-2aaf-4283-97f6-f02e6995c2f0", "node_type": "4", "metadata": {"page_label": "340", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0be14917724adef5d0d9eb86ac3d6fb6e165daf700ca8c5d388941ba9b957675", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-82 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 67  \n====== ================================================================================================================ ================  \n  2885            .  \n  ", "start_char_idx": 0, "end_char_idx": 727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c68fd1c-c38d-462e-8e18-45236ff31d25": {"__data__": {"id_": "9c68fd1c-c38d-462e-8e18-45236ff31d25", "embedding": null, "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e6c018e-150d-4199-b37b-867d3a952835", "node_type": "4", "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49077b51044713c64bd39cf1f398e009bb0e46c679baf910246054626e95d910", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79d9b640-e14e-4926-a563-ef8ba32a1c9e", "node_type": "1", "metadata": {}, "hash": "3aee2e55de6ade5ff16d46ca6b895b388df341d05fd902e0e8b8eefcabc930eb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-83 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 68  \n====== ====================================================================================================================== ==========  \n  2886       /  \n  2887        350 -PROCEDURE -DIVISION SECTION.  \n  2888            IF WS -Curr-Section-TXT NOT = 'PROCEDURE'  \n  2889                MOVE 'PROCEDURE' TO WS -Curr-Section-TXT \n  2890            END -IF \n  2891 GC0710     IF WS -Token-Curr-Uc-TXT = 'PROGRAM'  \n  2892 GC0710     AND WS -Token-Prev-TXT = 'END'  \n  2893 GC0710         MOVE '?' ", "start_char_idx": 0, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79d9b640-e14e-4926-a563-ef8ba32a1c9e": {"__data__": {"id_": "79d9b640-e14e-4926-a563-ef8ba32a1c9e", "embedding": null, "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e6c018e-150d-4199-b37b-867d3a952835", "node_type": "4", "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "49077b51044713c64bd39cf1f398e009bb0e46c679baf910246054626e95d910", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c68fd1c-c38d-462e-8e18-45236ff31d25", "node_type": "1", "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "05ae74684165ef9a5f79913ea4c90f3b4ef25a44e039eccd68194696b69fea91", "class_name": "RelatedNodeInfo"}}, "text": "TO WS -Curr-Division -TXT \n  2894 GC0710         EXIT SECTION  \n  2895 GC0710     END -IF \n  2896            IF WS -TT-Token-Is-Keyword-BOOL \n  2897            AND WS -Token-Curr-TXT = 'DIVISION'  \n  2898                MOVE WS -Token-Prev-TXT TO WS -Curr-Division -TXT \n  2899 GC0712         SEARCH ALL WS -Reserved -Word-TXT \n  2900 GC0712             WHEN WS -RW-Word-TXT (WS-RW-IDX) = 'LENGTH'  \n  2901 GC0712                 MOVE 'I' TO WS -RW-Type-CD (WS-RW-IDX) \n  2902 GC0712         END -SEARCH \n  2903                EXIT SECTION  \n  2904            END-IF \n  2905 GC0313     IF WS -TT-Token-Is-Identifier -BOOL \n  2906 GC0313     AND WS -Token-Prev-TXT = SPACES  \n  2907 GC0313     AND WS -Curr-Verb-TXT = SPACES  \n  2908 GC0313*> ----- Definition of a Paragraph or Section  \n  2909 GC0313         PERFORM 360 -Release-Def \n  2910 GC0313         MOVE SPACES TO WS -Token-Prev-TXT \n  2911 GC0313         EXIT SECTION  \n  2912 GC0313     END -IF \n  2913 GC0712     IF WS -Token-Curr-TXT = 'CALL'  \n  2914 GC0712         SET WS -Argument -Is-Updatable -BOOL TO TRUE  \n  2915 GC0712     END -IF \n  2916 GC0712     IF WS -Curr-Verb-TXT = 'CALL'  \n  2917 GC0712         IF WS -TT-Token-Is-Argtype-BOOL \n  2918 GC0712             IF WS -Token-Curr-TXT = 'REFERENCE'  \n  2919 GC0712                 SET WS -Argument -Is-Updatable -BOOL TO TRU E \n  2920 GC0712             ELSE  \n  2921 GC0712                 SET WS -Argument -Is-Updatable -BOOL TO FALSE  \n  2922 GC0712             END -IF \n  2923 GC0712             EXIT SECTION  \n  2924 GC0712         END -IF \n  2925 GC0712     ELSE  \n  2926 GC0712         SET WS-Argument -Is-Updatable -BOOL TO FALSE  \n  2927 GC0712     END -IF \n  2928            IF NOT WS -TT-Token-Is-Identifier -BOOL \n  2929                EXIT SECTION  \n  2930            END -IF \n  2931            EVALUATE WS -Curr-Verb-TXT \n  2932            WHEN 'ACCEPT'  \n  2933                PERFORM 351 -ACCEPT \n  2934            WHEN 'ADD'  \n  2935                PERFORM 351 -ADD \n  2936            WHEN 'ALLOCATE'  \n  2937                PERFORM 351 -ALLOCATE  \n  2938            WHEN 'CALL'  \n  2939                PERFORM 351 -CALL \n  ", "start_char_idx": 1062, "end_char_idx": 3224, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d88f6c25-624b-4de1-9fa0-49d90f4e9685": {"__data__": {"id_": "d88f6c25-624b-4de1-9fa0-49d90f4e9685", "embedding": null, "metadata": {"page_label": "342", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "996015b3-fae0-43c8-9289-71ceed422f3c", "node_type": "4", "metadata": {"page_label": "342", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "31b2afc84a014efbea227062524242af3d895cbccbe4b70842e1a89a75bebab2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-84 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 69  \n====== ================================================================================================= ===============================  \n  2940            WHEN 'COMPUTE'  \n  2941                PERFORM 351 -COMPUTE \n  2942            WHEN 'DIVIDE'  \n  2943                PERFORM 351 -DIVIDE \n  2944            WHEN 'FREE'  \n  2945                PERFORM 351 -FREE \n  2946            WHEN 'INITIALIZE'  \n  2947                PERFORM 351 -INITIALIZE  \n  2948            WHEN 'INSPECT'  \n  2949                PERFORM 351 -INSPECT \n  2950            WHEN 'MOVE'  \n  2951                PERFORM 351 -MOVE \n  2952            WHEN 'MULTIPLY'  \n  2953                PERFORM 351 -MULTIPLY  \n  2954            WHEN 'PERFORM'  \n  2955                PERFORM 351 -PERFORM \n  2956            WHEN 'SET'  \n  2957                PERFORM 351 -SET \n  2958            WHEN 'STRING'  \n  2959                PERFORM 351 -STRING \n  2960            WHEN 'SUBTRACT'  \n  2961                PERFORM 351 -SUBTRACT  \n  2962            WHEN 'TRANSFORM'  \n  2963                PERFORM 351 -TRANSFORM  \n  2964            WHEN 'UNSTRING'  \n  2965                PERFORM 351 -UNSTRING  \n  2966            WHEN OTHER  \n  2967                PERFORM 361 -Release-Ref \n  2968            END -EVALUATE  \n  2969            .  \n  ", "start_char_idx": 0, "end_char_idx": 1864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d9fc9ee-aa04-420e-89a5-bb27eb05364e": {"__data__": {"id_": "2d9fc9ee-aa04-420e-89a5-bb27eb05364e", "embedding": null, "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bfd69bdb-448a-4d6a-b936-c615adfc4437", "node_type": "4", "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b693130718699de44adb2a4d6c91d29225e8b662ff755c52622519f751ce7df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce5bd309-7598-4b17-ae33-f6bc5628c6d4", "node_type": "1", "metadata": {}, "hash": "ae6901934553d249dc062498b1882903158751cf2649d0705c54c3799ff04772", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-85 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              201 3/11/21 \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 70  \n====== ====================================================================================================================== ==========  \n  2970       /  \n  2971        351 -ACCEPT SECTION.  \n  2972            EVALUATE WS -Token-Prev-TXT \n  2973            WHEN 'ACCEPT'  \n  2974                PERFORM 362 -Release-Upd \n  2975                MOVE SPACES TO WS -Token-Prev-TXT \n  2976            WHEN OTHER  \n  2977                PERFORM 361 -Release-Ref \n  2978            END -EVALUATE  \n  2979            .  \n  ", "start_char_idx": 0, "end_char_idx": 1080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce5bd309-7598-4b17-ae33-f6bc5628c6d4": {"__data__": {"id_": "ce5bd309-7598-4b17-ae33-f6bc5628c6d4", "embedding": null, "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bfd69bdb-448a-4d6a-b936-c615adfc4437", "node_type": "4", "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8b693130718699de44adb2a4d6c91d29225e8b662ff755c52622519f751ce7df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d9fc9ee-aa04-420e-89a5-bb27eb05364e", "node_type": "1", "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "01f047b802961e6b2359c4c6da3fa4abfeb8c6737074958bdadc264316e3083d", "class_name": "RelatedNodeInfo"}}, "text": "2980 \n  2981        351 -ADD SECTION.  \n  2982            EVALUATE WS -Token-Prev-TXT \n  2983            WHEN 'GIVING'  \n  2984                PERFORM 362 -Release-Upd \n  2985            WHEN 'TO'  \n  2986                PERFORM 362 -Release-Upd \n  2987            WHEN OTHER  \n  2988                PERFORM 361 -Release-Ref \n  2989            END -EVALUATE  \n  2990            .  \n  2991 \n  2992        351 -ALLOCATE SECTION.  \n  2993            EVALUATE WS -Token-Prev-TXT \n  2994            WHEN 'ALLOCATE'  \n  2995                PERFORM 362 -Release-Upd \n  2996                MOVE SPACES TO WS -Token-Prev-TXT \n  2997            WHEN 'RETURNING'  \n  2998                PERFORM 362 -Release-Upd \n  2999            WHEN OTHER  \n  3000                PERFORM 361 -Release-Ref \n  3001            END-EVALUATE  \n  3002            .  \n  3003 \n  3004        351 -CALL SECTION.  \n  3005            EVALUATE WS -Token-Prev-TXT \n  3006            WHEN 'RETURNING'  \n  3007                PERFORM 362 -Release-Upd \n  3008            WHEN 'GIVING'  \n  3009                PERFORM 362 -Release-Upd \n  3010            WHEN OTHER  \n  3011 GC0712        IF WS -Argument -Is-Updatable -BOOL \n  3012 GC0712             PERFORM 362 -Release-Upd \n  3013 GC0712        ELSE  \n  3014 GC0712             PERFORM 361 -Release-Ref \n  3015 GC0712        END-IF \n  3016            END -EVALUATE  \n  3017            .  \n  3018 \n  3019        351 -COMPUTE SECTION.  \n  3020            EVALUATE WS -Token-Prev-TXT \n  3021            WHEN 'COMPUTE'  \n  3022                PERFORM 362 -Release-Upd \n  3023            WHEN OTHER  \n  ", "start_char_idx": 1080, "end_char_idx": 2688, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "277892c6-cc78-4675-bf11-8ecb291eb876": {"__data__": {"id_": "277892c6-cc78-4675-bf11-8ecb291eb876", "embedding": null, "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b8446e10-4d5d-46c1-b6b0-dcfd9a007b54", "node_type": "4", "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7ee43be531d3aa5bbc3ff45dc60db14b2e6f51f039a3f414e6d23081b2dc8e92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52f0549d-02d4-4060-b68c-fa5dc47e33c4", "node_type": "1", "metadata": {}, "hash": "7825e1fe082b54c5d8e88f069e958f795961d52b3131baec1272d1c44c68990a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-86 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 71  \n====== ================================================================== ==============================================================  \n  3024                PERFORM 361 -Release-Ref \n  3025            END -EVALUATE  \n  3026            .  \n  3027 \n  3028        351 -DIVIDE SECTION.  \n  3029            EVALUATE WS -Token-Prev-TXT \n  3030            WHEN 'INTO'  \n  3031                PERFORM 363 -Set-Upd \n  3032                MOVE F -Sort-Work-REC TO WS -Held-Reference -TXT \n  3033            WHEN 'GIVING'  \n  3034                IF WS -Held-Reference -TXT NOT = SPACES  \n  3035                    MOVE WS -Held-Reference -TXT To F -Sort-Work-REC \n  3036                    MOVE SPACES         To WS -Held-Reference -TXT \n  3037                                           F -SW-Ref-Flag-CHR \n  3038                    RELEASE F -Sort-Work-REC \n  3039                END -IF \n  3040                PERFORM 362 -Release-Upd \n  3041            WHEN 'REMAINDER'  \n  3042                PERFORM 362 -Release-Upd \n  3043            WHEN OTHER  \n  3044                PERFORM 361 -Release-Ref \n  3045            END -EVALUATE  \n  3046            .  \n  3047 \n  3048        351 -FREE SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 1760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52f0549d-02d4-4060-b68c-fa5dc47e33c4": {"__data__": {"id_": "52f0549d-02d4-4060-b68c-fa5dc47e33c4", "embedding": null, "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b8446e10-4d5d-46c1-b6b0-dcfd9a007b54", "node_type": "4", "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7ee43be531d3aa5bbc3ff45dc60db14b2e6f51f039a3f414e6d23081b2dc8e92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "277892c6-cc78-4675-bf11-8ecb291eb876", "node_type": "1", "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "37f580ef9c3a5b1f387e339964fac965564646100902720907286f4fba9804b8", "class_name": "RelatedNodeInfo"}}, "text": "3049            PERFORM 362 -Release-Upd \n  3050            .  \n  3051 \n  3052        351 -INITIALIZE SECTION.  \n  3053            EVALUATE WS -Token-Prev-TXT \n  3054            WHEN 'INITIALIZE'  \n  3055                PERFORM 36 2-Release-Upd \n  3056            WHEN 'REPLACING'  \n  3057                PERFORM 361 -Release-Ref \n  3058            END -EVALUATE  \n  3059            .  \n  3060 \n  3061        351 -INSPECT SECTION.  \n  3062            EVALUATE WS -Token-Prev-TXT \n  3063            WHEN 'INSPECT'  \n  3064                PERFORM 364 -Set-Ref \n  3065                MOVE SPACES TO WS -Held-Reference -TXT \n  3066                MOVE SPACES TO WS -Token-Prev-TXT \n  3067            WHEN 'TALLYING'  \n  3068                PERFORM 362 -Release-Upd \n  3069                MOVE SPACES TO WS -Token-Prev-TXT \n  3070            WHEN 'REPLACING'  \n  3071                IF WS -Held-Reference -TXT NOT = SPACES  \n  3072                    MOVE WS -Held-Reference -TXT TO F -Sort-Work-REC \n  3073                    MOVE SPA CES         TO WS -Held-Reference -TXT \n  3074                    MOVE '*'            TO F -SW-Ref-Flag-CHR \n  3075                    RELEASE F -Sort-Work-REC \n  3076                END -IF \n  3077                MOVE SPACES TO WS -Token-Prev-TXT \n  ", "start_char_idx": 1760, "end_char_idx": 3042, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4b9622d-f5d2-4e4c-931b-cf8b543599b6": {"__data__": {"id_": "a4b9622d-f5d2-4e4c-931b-cf8b543599b6", "embedding": null, "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09aa8432-afc3-4f13-834c-b674ef4d7386", "node_type": "4", "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4790f8ffb7901e235686343a999f9cd9c69cb9ccd35e738f299a32ec3eb22d3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a03d138-6607-4aa7-8b30-23babb45171f", "node_type": "1", "metadata": {}, "hash": "e0c12b3e697c52d5a1d416bb53305d4d749727aed5447b81dbb1976a00cf11d1", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-87 GNU COBOL V2.0 1 1FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 72  \n====== ================================================================================================================= ===============  \n  3078            WHEN 'CONVERTING'  \n  3079                IF WS -Held-Reference -TXT NOT = SPACES  \n  3080                    MOVE WS -Held-Reference -TXT TO F -Sort-Work-REC \n  3081                    MOVE SPACES         TO WS -Held-Reference -TXT \n  3082                    MOVE '*'            TO F -SW-Ref-Flag-CHR \n  3083                    RELEASE F -Sort-Work-REC \n  3084                END -IF \n  3085                MOVE SPACES TO WS -Token-Prev-TXT \n  3086            WHEN OTHER  \n  3087                PERFO RM 361-Release-Ref \n  3088            END -EVALUATE  \n  3089           .  \n  3090 \n  3091        351 -MOVE SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 1344, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a03d138-6607-4aa7-8b30-23babb45171f": {"__data__": {"id_": "6a03d138-6607-4aa7-8b30-23babb45171f", "embedding": null, "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09aa8432-afc3-4f13-834c-b674ef4d7386", "node_type": "4", "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4790f8ffb7901e235686343a999f9cd9c69cb9ccd35e738f299a32ec3eb22d3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4b9622d-f5d2-4e4c-931b-cf8b543599b6", "node_type": "1", "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "65972370ceeceb4d1408478e2f94b68138264b97ddafbde990bb546cfae87c65", "class_name": "RelatedNodeInfo"}}, "text": "3092            EVALUATE WS -Token-Prev-TXT \n  3093            WHEN 'TO'  \n  3094                PERFORM 362 -Release-Upd \n  3095            WHEN OTHER  \n  3096                PERFORM 361 -Release-Ref \n  3097            END -EVALUATE  \n  3098            .  \n  3099 \n  3100        351 -MULTIPLY SECTION.  \n  3101            EVALUATE WS -Token-Prev-TXT \n  3102            WHEN 'BY'  \n  3103                PERFORM 363 -Set-Upd \n  3104                MOVE F -Sort-Work-REC TO WS -Held-Reference -TXT \n  3105            WHEN 'GIVING'  \n  3106                MOVE WS -Held-Reference -TXT TO F -Sort-Work-REC \n  3107                MOVE SPACES         TO WS -Held-Reference -TXT \n  3108                                       F-SW-Ref-Flag-CHR \n  3109                RELEASE F -Sort-Work-REC \n  3110                PERFORM 362 -Release-Upd \n  3111            WHEN OTHER  \n  3112                PERFORM 361 -Release-Ref \n  3113            END -EVALUATE  \n  3114            . \n  3115 \n  3116        351 -PERFORM SECTION.  \n  3117            EVALUATE WS -Token-Prev-TXT \n  3118            WHEN 'VARYING'  \n  3119                PERFORM 362 -Release-Upd \n  3120                MOVE SPACES TO WS -Token-Prev-TXT \n  3121            WHEN 'AFTER'  \n  3122                PERFORM 362 -Release-Upd \n  3123                MOVE SPACES TO WS -Token-Prev-TXT \n  3124            WHEN OTHER  \n  3125                PERFORM 361 -Release-Ref \n  3126            END -EVALUATE  \n  3127            .  \n  3128 \n  3129        351 -SET SECTION.  \n  3130            EVALUATE WS -Token-Prev-TXT \n  3131            WHEN 'SET'  \n  ", "start_char_idx": 1344, "end_char_idx": 2940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1feba834-c277-40c0-8d74-f4c1585766e0": {"__data__": {"id_": "1feba834-c277-40c0-8d74-f4c1585766e0", "embedding": null, "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f31feff2-2766-471b-bb07-c4e15c84f2c8", "node_type": "4", "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "644e127c51c2ac2ac269ffb183f3a0cd58fa15aac2c6fc61629e0fa526ff56ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "053b196a-bf9f-4d57-971d-8a894f807221", "node_type": "1", "metadata": {}, "hash": "c00cc98df78c8e4a77508ee263a223543dd36e0b43333683b804790e99f01d59", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-88 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 73  \n====== ============ ====================================================================================================================  \n  3132                PERFORM 362 -Release-Upd \n  3133            WHEN OTHER  \n  3134                PERFORM 361 -Release-Ref \n  3135            END-EVALUATE  \n  3136            .  \n  3137 \n  3138        351 -STRING SECTION.  \n  ", "start_char_idx": 0, "end_char_idx": 932, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "053b196a-bf9f-4d57-971d-8a894f807221": {"__data__": {"id_": "053b196a-bf9f-4d57-971d-8a894f807221", "embedding": null, "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f31feff2-2766-471b-bb07-c4e15c84f2c8", "node_type": "4", "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "644e127c51c2ac2ac269ffb183f3a0cd58fa15aac2c6fc61629e0fa526ff56ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1feba834-c277-40c0-8d74-f4c1585766e0", "node_type": "1", "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2cd19fac8a7db45fca0cacd5352b5c6f90e576e33055100c7dc53ffaa6932d39", "class_name": "RelatedNodeInfo"}}, "text": "3139            EVALUATE WS -Token-Prev-TXT \n  3140            WHEN 'INTO'  \n  3141                PERFORM 362 -Release-Upd \n  3142            WHEN 'POINTER'  \n  3143                PERFOR M 362-Release-Upd \n  3144            WHEN OTHER  \n  3145                PERFORM 361 -Release-Ref \n  3146            END -EVALUATE  \n  3147            .  \n  3148 \n  3149        351 -SUBTRACT SECTION.  \n  3150            EVALUATE WS -Token-Prev-TXT \n  3151            WHEN 'GIVING'  \n  3152                PERFORM 362 -Release-Upd \n  3153            WHEN 'FROM'  \n  3154                PERFORM 362 -Release-Upd \n  3155            WHEN OTHER  \n  3156                PERFORM 361 -Release-Ref \n  3157            END -EVALUATE \n  3158            .  \n  3159 \n  3160        351 -TRANSFORM SECTION.  \n  3161            EVALUATE WS -Token-Prev-TXT \n  3162            WHEN 'TRANSFORM'  \n  3163                PERFORM 362 -Release-Upd \n  3164                MOVE SPACES TO WS -Token-Prev-TXT \n  3165            WHEN OTHER  \n  3166                PERFORM 361 -Release-Ref \n  3167            END -EVALUATE  \n  3168            .  \n  3169 \n  3170        351 -UNSTRING SECTION.  \n  3171            EVALUATE WS -Token-Prev-TXT \n  3172            WHEN 'INTO'  \n  3173                PERFORM 362 -Release-Upd \n  3174            WHEN 'DELIMITER'  \n  3175                PERFORM 362 -Release-Upd \n  3176            WHEN 'COUNT'  \n  3177                PERFORM 362 -Release-Upd \n  3178            WHEN 'POINTER'  \n  3179                PERFORM 362 -Release-Upd \n  3180            WHEN 'TALLYING'  \n  3181                PERFORM 362 -Release-Upd \n  3182            WHEN OTHER  \n  3183                PERFORM 361 -Release-Ref \n  3184            END -EVALUATE  \n  3185            .  \n  ", "start_char_idx": 932, "end_char_idx": 2681, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63c2598b-4d39-419d-8591-42c78a2377fc": {"__data__": {"id_": "63c2598b-4d39-419d-8591-42c78a2377fc", "embedding": null, "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55dbbfde-8dde-4f0c-b755-31de5cfb713c", "node_type": "4", "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "050a273a721956002d52808b56e0dd8053febaa27f8c535161df43e750971f74", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad7dae62-ee71-491b-9467-4f935c4711c1", "node_type": "1", "metadata": {}, "hash": "688052d612c108c6ebdb272214f56ff166e8d07bd150f6db5325780e1758ea57", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-89 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/sam ples/GCic.cbl  \nLine   Statement                                                                                                               Page: 74  \n====== =================================================================================================== =============================  \n  3186 \n  3187        360 -Release-Def SECTION.  \n  3188            MOVE SPACES TO F -Sort-Work-REC \n  3189            MOVE WS -Curr-Prog-ID-TXT TO F -SW-Prog-ID-TXT \n  3190            MOVE WS -Token-Curr-Uc-TXT   TO F -SW-Token-Uc-TXT \n  3191            MOVE WS -Token-Curr-TXT      TO F -SW-Token-TXT \n  3192            MOVE WS -Curr-Section-TXT    TO F -SW-Section-TXT \n  3193            MOVE WS -Curr-Line-NUM    TO F -SW-Def-Line-NUM \n  3194            MOVE 0                      TO F -SW-Ref-Line-NUM \n  3195            RELEASE F -Sort-Work-REC \n  3196            .  \n  ", "start_char_idx": 0, "end_char_idx": 1281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad7dae62-ee71-491b-9467-4f935c4711c1": {"__data__": {"id_": "ad7dae62-ee71-491b-9467-4f935c4711c1", "embedding": null, "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55dbbfde-8dde-4f0c-b755-31de5cfb713c", "node_type": "4", "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "050a273a721956002d52808b56e0dd8053febaa27f8c535161df43e750971f74", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63c2598b-4d39-419d-8591-42c78a2377fc", "node_type": "1", "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f5c85d1a771d60e87416dc6ba7eebcd3dac151a2078e30b3a487c56a38d036b", "class_name": "RelatedNodeInfo"}}, "text": "3197 \n  3198        361 -Release-Ref SECTION.  \n  3199            PERFORM 364 -Set-Ref \n  3200            RELEASE F -Sort-Work-REC \n  3201            .  \n  3202 \n  3203        362 -Release-Upd SECTION.  \n  3204            PERFORM 363 -Set-Upd \n  3205            RELEASE F -Sort-Work-REC \n  3206            .  \n  3207 \n  3208        363 -Set-Upd SECTION.  \n  3209            MOVE SPACES TO F -Sort-Work-REC \n  3210            MOVE WS -Curr-Prog-ID-TXT TO F -SW-Prog-ID-TXT \n  3211            MOVE WS -Token-Curr-Uc-TXT   TO F -SW-Token-Uc-TXT \n  3212            MOVE WS -Token-Curr-TXT      TO F -SW-Token-TXT \n  3213            MOVE WS -Curr-Section-TXT    TO F -SW-Section-TXT \n  3214            MOVE  WS-Curr-Line-NUM    TO F -SW-Ref-Line-NUM \n  3215            MOVE '*'                    TO F -SW-Ref-Flag-CHR \n  3216            .  \n  3217 \n  3218        364 -Set-Ref SECTION.  \n  3219            MOVE SPACES TO F -Sort-Work-REC \n  3220            MOVE WS -Curr-Prog-ID-TXT TO F -SW-Prog-ID-TXT \n  3221            MOVE WS -Token-Curr-Uc-TXT   TO F -SW-Token-Uc-TXT \n  3222            MOVE WS -Token-Curr-TXT      TO F -SW-Token-TXT \n  3223            MOVE WS -Curr-Section-TXT    TO F -SW-Section-TXT \n  3224            MOVE WS -Curr-Line-NUM    TO F -SW-Ref-Line-NUM \n  3225            .  \n  ", "start_char_idx": 1281, "end_char_idx": 2578, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "307b75fb-552c-4039-b080-980123165029": {"__data__": {"id_": "307b75fb-552c-4039-b080-980123165029", "embedding": null, "metadata": {"page_label": "348", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62c0f547-5d79-4ba1-bafe-dac454538580", "node_type": "4", "metadata": {"page_label": "348", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "af1b3718e57418a8f36d9e0b7229a1e47aa4f5c0020616543d0bf1ad6d29b9e5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-90 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 75  \n====== ====================================================================================================================== ==========  \n  3226       /  \n  3227        400 -Produce-Xref-Listing SECTION.  \n  3228            MOVE SPACES       TO WS -Xref-Detail-Line-TXT \n  3229                                 WS -Group-Indicators -TXT \n  3230            MOVE 0            TO WS -I-SUB \n  3231                                 WS -Lines-Left-NUM \n  3232 GC0710     MOVE 'N'          TO WS -RS-Duplicate -CHR \n  3233            PERFORM FOREVER  \n  3234                RETURN F -Sort-Work-FILE AT END  \n  3235                    EXIT PERFORM  \n  3236                END -RETURN \n  3237                IF F -SW-Prog-ID-TXT  NOT = WS -GI-Prog-ID-TXT \n  3238                OR F -SW-Token-Uc-TXT NOT = WS -GI-Token-TXT \n  3239 GC0710             MOVE 'N' TO WS -RS-Duplicate -CHR \n  3240                    IF WS -Xref-Detail-Line-TXT NOT = SPACES  \n  3241                        PERFORM 410 -Generate -Report-Line \n  3242                    END -IF \n  3243                    IF F-SW-Prog-ID-TXT NOT = WS -GI-Prog-ID-TXT \n  3244                        MOVE 0 TO WS -Lines-Left-NUM \n  3245                    END -IF \n  3246                    MOVE F -SW-Prog-ID-TXT  TO WS -GI-Prog-ID-TXT \n  3247                    MOVE F -SW-Token-Uc-TXT TO WS -GI-Token-TXT \n  3248                END -IF \n  3249 GC0710         IF F -SW-Token-Uc-TXT = WS -GI-Token-TXT \n  3250 GC0710         AND F -SW-Def-Line-NUM NOT = SPACES  \n  3251 GC0710         AND WS -Xref-Detail-Line-TXT NOT = SPACES  \n  3252 GC0710             MOVE 'Y' TO WS -RS-Duplicate -CHR \n  3253 GC0710             PERFORM 410 -Generate -Report-Line \n  3254 GC0710             MOVE 0 TO WS -I-SUB \n  3255 GC0710             MOVE F -SW-Prog-ID-TXT TO WS -XDL-Prog-ID-TXT \n  3256 GC0710             MOVE '  (Duplicate Definition)' TO WS -XDL-Token-TXT \n  3257 GC0710             MOVE F -SW-Section-TXT TO WS -XDL-Section-TXT \n  3258 GC0710             MOVE F -SW-Def-Line-NUM TO WS -XDL-Def-Line-NUM \n  3259 GC0710             EXIT PERFORM CYCLE  \n  3260 GC0710         END-IF \n  3261 GC0710         IF F -SW-Token-Uc-TXT = WS -GI-Token-TXT \n  3262 GC0710         AND F -SW-Def-Line-NUM = SPACES  \n  3263 GC0710         AND WS -RS-Duplicate -CHR = 'Y'  \n  3264 GC0710             MOVE 'N' TO WS -RS-Duplicate -CHR \n  3265 GC0710             PERFORM 410 -Generate -Report-Line \n  3266 GC0710             MOVE 0 TO WS -I-SUB \n  3267 GC0710             MOVE F -SW-Prog-ID-TXT TO WS -XDL-Prog-ID-TXT \n  3268 GC0710             MOVE '  (Duplicate References)' TO WS -XDL-Token-TXT \n  3269 GC0710         END-IF \n  3270                IF WS -Xref-Detail-Line-TXT = SPACES  \n  3271                    MOVE F -SW-Prog-ID-TXT TO WS -XDL-Prog-ID-TXT \n  3272                    MOVE F -SW-Token-TXT TO WS -XDL-Token-TXT \n  3273                    MOVE F -SW-Section-TXT TO WS -XDL-Section-TXT \n  3274                    IF F -SW-Def-Line-NUM NOT = SPACES  \n  3275                        MOVE F -SW-Def-Line-NUM TO WS -XDL-Def-Line-NUM \n  3276                    END -IF \n  3277                END -IF \n  3278                IF F -SW-Reference -TXT > '000000'  \n  3279                    ADD 1 TO WS -I-SUB \n  ", "start_char_idx": 0, "end_char_idx": 3810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25ef4110-e668-46e6-a609-762f435a2e86": {"__data__": {"id_": "25ef4110-e668-46e6-a609-762f435a2e86", "embedding": null, "metadata": {"page_label": "349", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "607ae8d8-c9ca-43dd-8276-d45f3e353ab5", "node_type": "4", "metadata": {"page_label": "349", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "45183ba0ba03b43b70e6d004df07480c02474531abe697e9a06fcefb49bca9cb", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-91 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 76  \n====== ====================================================================================================================== ==========  \n  3280                    IF WS -I-SUB > WS -Lines-Per-Rec-CONST \n  3281                        PERFORM 410 -Generate -Report-Line \n  3282                        MOVE 1 TO WS -I-SUB \n  3283                    END -IF \n  3284                    MOVE F -SW-Ref-Line-NUM \n  3285                      TO WS -XDL-Ref-Line-NUM (WS-I-SUB) \n  3286                    MOVE F -SW-Ref-Flag-CHR \n  3287                      TO WS -XDL-Ref-Flag-CHR (WS-I-SUB) \n  3288                END -IF \n  3289            END -PERFORM \n  3290            IF WS -Xref-Detail-Line-TXT NOT = SPACES  \n  3291                PERFORM 410 -Generate -Report-Line \n  3292            END-IF \n  3293            .  \n  ", "start_char_idx": 0, "end_char_idx": 1383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe85ef80-e81b-4fd5-b5c4-3cf725bf0c1d": {"__data__": {"id_": "fe85ef80-e81b-4fd5-b5c4-3cf725bf0c1d", "embedding": null, "metadata": {"page_label": "350", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce2033fc-a5f4-4545-8073-a4fbffb53468", "node_type": "4", "metadata": {"page_label": "350", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c4745b5c65cdd42762f1a8b08e1c08583b51d697406518ce1e79a7f7bf944d19", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-92 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 77  \n====== ================================================================ ================================================================  \n  3294       /  \n  3295        410 -Generate -Report-Line SECTION.  \n  3296            IF WS -Lines-Left-NUM < 1 \n  3297 GC0712         MOVE SPACES TO F -Listing-REC \n  3298 GC0712         WRITE F -Listing-REC BEFORE PAGE  \n  3299 GC0712         MOVE SPACES TO F -Listing-REC \n  3300 GC0712         WRITE F -Listing-REC BEFORE 1  \n  3301 GC0712         WRITE F -Listing-REC FROM WS -Xref-Header-1-TXT BEFORE 1  \n  3302 GC0712         ADD 1 TO WS -Page-NUM \n  3303 GC0712         MOVE 'Page:' TO WS -PN-Literal-TXT \n  3304 GC0712         MOVE WS -Page-NUM TO WS -PN-Page-NUM \n  3305 GC0712         CALL 'C$JUSTIFY' USING WS -PN-Page-NUM, 'Left'  \n  3306 GC0712         CALL 'C$JUSTIFY' USING WS -Page-No-TXT, 'Right'  \n  3307 GC0712         MOVE WS -Page-No-TXT TO WS -XH3-Page-No-TXT \n  3308 GC0712         WRITE F -Listing-REC FROM WS -Xref-Header-2-TXT BEFORE 1  \n  3309 GC0712         WRITE F -Listing-REC FROM WS -Xref-Header-3-TXT BEFORE 1  \n  3310 GC0712         WRITE F -Listing-REC FROM WS-Xref-Header-4-TXT BEFORE 1  \n  3311                COMPUTE WS -Lines-Left-NUM = WS -Lines-Per-Page-NUM - 4 \n  3312            END -IF \n  3313 GC0712     WRITE F -Listing-REC FROM WS -Xref-Detail-Line-TXT BEFORE 1  \n  3314            MOVE SPACES TO WS -Xref-Detail-Line-TXT \n  3315            MOVE 0 TO WS -I-SUB \n  3316            SUBTRACT 1 FROM WS -Lines-Left-NUM \n  3317            .  \n  ", "start_char_idx": 0, "end_char_idx": 2092, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d241d8cf-e2a0-4b2c-b1a0-9b4e2e61f075": {"__data__": {"id_": "d241d8cf-e2a0-4b2c-b1a0-9b4e2e61f075", "embedding": null, "metadata": {"page_label": "351", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7555c572-2098-4efd-a172-c576a90d9830", "node_type": "4", "metadata": {"page_label": "351", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1eb41b5e52b1d65657868209b35b60d9cc4042b56a4f775bed4ec0844881bf96", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-93 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/2 1 \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 78  \n====== ====================================================================================================================== ==========  \n  3318       /  \n  3319        500 -Produce-Source-Listing SECTION.  \n  3320            OPEN INPUT F -Original-Src-FILE \n  3321                       F -Expanded -Src-FILE \n  3322            MOVE 0 TO WS -Src-Line-NUM \n  3323            PERFORM FOREVER  \n  3324                READ F -Expanded -Src-FILE AT END  \n  3325                    EXIT PERFORM  \n  3326                END -READ \n  3327 GC0712         IF F -ES-1-7-TXT NOT = '#DEFLIT'  \n  3328 GC0712             IF F -ES-1-CHR = '#'  \n  3329 GC0712                 PERFORM 510 -Control-Record \n  3330 GC0712             ELSE  \n  3331 GC0712                 PERFORM  520-Expanded -Src-Record \n  3332 GC0712             END -IF \n  3333 GC0712         END -IF \n  3334            END -PERFORM \n  3335            CLOSE F -Original -Src-FILE \n  3336                  F -Expanded -Src-FILE \n  3337            .  \n  ", "start_char_idx": 0, "end_char_idx": 1569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc519cb4-3ebd-4d04-8a05-6ed6aa535010": {"__data__": {"id_": "fc519cb4-3ebd-4d04-8a05-6ed6aa535010", "embedding": null, "metadata": {"page_label": "352", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ff2fd65-6208-4b61-8cf0-55816a6a2d5a", "node_type": "4", "metadata": {"page_label": "352", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f77722499e0b7bd01d12e8805e4b078ead5d981b7ee3d5fe1486f93b6e18752a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-94 GNU COBOL V2.0 11FEB2012 Sour ce Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statem ent                                                                                                               Page: 79  \n====== ====================================================================================================================== ======== == \n  3338       /  \n  3339        510 -Control-Record SECTION.  \n  3340            UNSTRING F -ES-2-256-TXT-256 \n  3341                DELIMITED BY '\"'  \n  3342                INTO WS -Temp-10-Chars-TXT \n  3343                     WS -Temp-256-Chars-TXT \n  3344                     WS-Dummy-TXT \n  3345 GC1010     IF UPPER -CASE(TRIM(WS -Temp-256-Chars-TXT,Trailing)) =  \n  3346 GC1010        TRIM(WS -Main-Module-Name-TXT) *> Main Pgm  \n  3347                SET WS -RS-In-Main-Module-BOOL TO TRUE  \n  3348                IF WS -Src-Line-NUM > 0 \n  3349                    READ F -Expanded -Src-FILE END -READ \n  3350                END -IF \n  3351            ELSE *> COPY  \n  3352                SET WS -RS-In-Copybook -BOOL TO TRUE  \n  3353            END -IF \n  3354            . \n  ", "start_char_idx": 0, "end_char_idx": 1489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37eb174e-cc27-4e14-b091-0bfab082643a": {"__data__": {"id_": "37eb174e-cc27-4e14-b091-0bfab082643a", "embedding": null, "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "863f98db-a335-4270-b23e-99613c971906", "node_type": "4", "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c33899ebc2c8623a99f365c924522f892e51bd1dff0f3499cdba4cbff3623147", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee21d4a3-2ee8-4c4f-8eb6-6b5ce235a834", "node_type": "1", "metadata": {}, "hash": "65581821fa98b6f5b38ba896799f8b748584014d3cfe8bd0c539f4d75abde969", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-95 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 80  \n====== ==================================================================================== ============================================  \n  3355       /  \n  3356        520 -Expanded -Src-Record SECTION.  \n  3357            IF WS -RS-In-Main-Module-BOOL \n  3358                ADD 1 To WS -Curr-Line-NUM \n  3359 GC0712         READ F -Original -Src-FILE AT END CONTINUE END -READ \n  3360                ADD 1 TO WS -Src-Line-NUM \n  3361                MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3362                MOVE WS -Src-Line-NUM TO WS -SDL-Line-NUM \n  3363                MOVE F -OS-1-128-TXT TO WS -SDL-Statement -TXT \n  3364 GC0712         MOVE LOWER -CASE(TRIM(F -OS-8-72-TXT,LEADING))  \n  3365 GC0712           TO WS -Temp-65-Chars-TXT \n  3366 GC0712         INSPECT WS -Temp-65-Chars-TXT REPLACING ALL '.' ", "start_char_idx": 0, "end_char_idx": 1383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee21d4a3-2ee8-4c4f-8eb6-6b5ce235a834": {"__data__": {"id_": "ee21d4a3-2ee8-4c4f-8eb6-6b5ce235a834", "embedding": null, "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "863f98db-a335-4270-b23e-99613c971906", "node_type": "4", "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c33899ebc2c8623a99f365c924522f892e51bd1dff0f3499cdba4cbff3623147", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37eb174e-cc27-4e14-b091-0bfab082643a", "node_type": "1", "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b875eb17b6955904a8bc0f0c4e9e9ce30f14255dd18f21bc67012b14f7f0ebcf", "class_name": "RelatedNodeInfo"}}, "text": "BY SPACE  \n  3367 GC0712         EVALUATE TRUE  \n  3368 GC0712             WHEN  F-OS-7-CHR = '/'  \n  3369 GC0712                 MOVE 0 TO WS -Lines-Left-NUM \n  3370 GC0712             WHEN WS -Temp-65-Chars-TXT = \"eject\"  \n  3371 GC0712                 MOVE 0 TO WS -Lines-Left-NUM \n  3372 GC0712                 EXIT SECTION  \n  3373 GC0712             WHEN WS -Temp-65-Chars-TXT = \"skip1\"  \n  3374 GC0712                 MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3375 GC0712                 PERFORM 530 -Generate -Source-Line \n  3376 GC0712                 EXIT SECTION  \n  3377 GC0712             WHEN WS-Temp-65-Chars-TXT = \"skip2\"  \n  3378 GC0712                 MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3379 GC0712                 PERFORM 530 -Generate -Source-Line 2 TIMES  \n  3380 GC0712                 EXIT SECTION  \n  3381 GC0712             WHEN W S-Temp-65-Chars-TXT = \"skip3\"  \n  3382 GC0712                 MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3383 GC0712                 PERFORM 530 -Generate -Source-Line 3 TIMES  \n  3384 GC0712                 EXIT SECTION  \n  3385 GC0712         END -EVALUATE  \n  3386                PERFORM 530 -Generate -Source-Line \n  3387                IF F -OS-129-256-TXT NOT = SPACES  \n  3388                    MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3389                    MOVE F -OS-129-256-TXT TO WS -SDL-Statement -TXT \n  3390                    PERFORM 530 -Generate -Source-Line \n  3391                END -IF \n  3392            ELSE  \n  3393                IF F -Expanded -Src-REC NOT = SPACES  \n  3394                    MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3395                    MOVE F -Expanded -Src-REC(1:128)  \n  3396                      TO WS -SDL-Statement -TXT \n  3397 GC0712             MOVE LOWER -CASE(TRIM(F -OS-8-72-TXT,LEADING))  \n  3398 GC0712               TO WS -Temp-65-Chars-TXT \n  3399 GC0712             INSPECT WS -Temp-65-Chars-TXT \n  3400 GC071 2                 REPLACING ALL '.' BY SPACE  \n  3401 GC0712             EVALUATE TRUE  \n  3402 GC0712                 WHEN WS -Temp-65-Chars-TXT = \"eject\"  \n  3403 GC0712                     MOVE 0 TO WS -Lines-Left-NUM \n  3404 GC0712                     EXIT SECTION  \n  3405 GC0712                 WHEN WS -Temp-65-Chars-TXT = \"skip1\"  \n  3406 GC0712                     MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3407 GC0712                     PERFORM 530 -Generate -Source-Line \n  3408 GC0712                     EXIT SECTION  \n  ", "start_char_idx": 1383, "end_char_idx": 3859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65b957ba-1f36-4edc-b5ef-26d07ce72054": {"__data__": {"id_": "65b957ba-1f36-4edc-b5ef-26d07ce72054", "embedding": null, "metadata": {"page_label": "354", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f937a09-b9d3-49eb-afc3-77f25c268668", "node_type": "4", "metadata": {"page_label": "354", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "bab6058720c5abfbad13c044623f3f98c02e66b991447af9f3bf1bd5c651f97a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-96 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 81  \n====== ==================================================== ============================================================================  \n  3409 GC0712                 WHEN WS -Temp-65-Chars-TXT = \"skip2\"  \n  3410 GC0712                     MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3411 GC0712                     PERFORM  530-Generate -Source-Line 2 TIMES  \n  3412 GC0712                     EXIT SECTION  \n  3413 GC0712                 WHEN WS -Temp-65-Chars-TXT = \"skip3\"  \n  3414 GC0712                     MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3415 GC0712                     PER FORM 530 -Generate -Source-Line 3 TIMES  \n  3416 GC0712                     EXIT SECTION  \n  3417 GC0712             END -EVALUATE  \n  3418                    PERFORM 530 -Generate -Source-Line \n  3419                    IF F -Expanded -Src-REC(129:128) NOT = SPACES  \n  3420                        MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3421                        MOVE F -Expanded -Src-REC(129:128)  \n  3422                          TO WS -SDL-Statement -TXT \n  3423                        PERFORM 530 -Generate -Source-Line \n  3424                    END-IF \n  3425                END -IF \n  3426            END -IF \n  3427            .  \n  ", "start_char_idx": 0, "end_char_idx": 1802, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "319953bf-8172-44f6-b6c8-487055118a38": {"__data__": {"id_": "319953bf-8172-44f6-b6c8-487055118a38", "embedding": null, "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00de9ba6-772d-4931-aa5a-10dce405dd02", "node_type": "4", "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3fcb3928b53f6042f650b225c64e686f3bee7a6383713b2f571563900e485e73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44255134-a96f-4fc0-b1ef-e9c7e0923845", "node_type": "1", "metadata": {}, "hash": "3d6561a09f702999f3e92795c73d10f4848babf83c69a92a599333103b44fe78", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-97 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nLine   Statement                                                                                                               Page: 82  \n====== ====================================================================================================================== ==========  \n  3428       /  \n  3429        530 -Generate -Source-Line SECTION.  \n  3430            IF WS -Lines-Left-NUM < 1 \n  3431 GC0712         WRITE F -Listing-REC FROM SPACES BEFORE PAGE  \n  3432 GC0712         WRITE F -Listing-REC FROM SPACES BEFORE 1  \n  3433 GC0712         WRITE F -Listing-REC FROM WS -Src-Header-1-TXT BEFORE 1  \n  3434 GC0712         ADD 1 TO WS -Page-NUM \n  3435 GC0712         MOVE 'Page:' TO WS -PN-Literal-TXT \n  3436 GC0712         MOVE WS -Page-NUM TO WS -PN-Page-NUM \n  3437 GC0712         CALL 'C$JUSTIFY' USING WS -PN-Page-NUM, 'Left'  \n  3438 GC0712         CALL 'C$JUSTIFY' USING WS -Page-No-TXT, 'Right'  \n  3439 GC071 2         MOVE WS -Page-No-TXT TO WS -SH3-Page-No-TXT \n  3440                WRITE F -Listing-REC FROM WS -Src-Header-2-TXT BEFORE 1  \n  3441 GC0712         WRITE F -Listing-REC FROM WS -Src-Header-3-TXT BEFORE 1  \n  3442 GC0712         WRITE F -Listing-REC FROM WS -Src-Header-4-TXT BEFORE 1  \n  3443                COMPUTE WS -Lines-Left-NUM = WS -Lines-Per-Page-NUM - 4 \n  3444            END -IF \n  3445 GC0712     WRITE F -Listing-REC FROM WS -Src-Detail-Line-TXT BEFORE 1  \n  3446            MOVE SPACES TO WS -Src-Detail-Line-TXT \n  3447            SUBTRACT 1 FROM WS -Lines-Left-NUM \n  3448            .  \n  ", "start_char_idx": 0, "end_char_idx": 1967, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44255134-a96f-4fc0-b1ef-e9c7e0923845": {"__data__": {"id_": "44255134-a96f-4fc0-b1ef-e9c7e0923845", "embedding": null, "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00de9ba6-772d-4931-aa5a-10dce405dd02", "node_type": "4", "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3fcb3928b53f6042f650b225c64e686f3bee7a6383713b2f571563900e485e73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "319953bf-8172-44f6-b6c8-487055118a38", "node_type": "1", "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b2c6419ee9702d30b7582ef3f73f854f96b2bfc4d059094b70c42d81213ac389", "class_name": "RelatedNodeInfo"}}, "text": "3449 \n  3450        END PROGRAM LISTING.  \n  ", "start_char_idx": 1967, "end_char_idx": 2012, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "626a9f62-b5e7-4294-8dfc-e8553013547e": {"__data__": {"id_": "626a9f62-b5e7-4294-8dfc-e8553013547e", "embedding": null, "metadata": {"page_label": "356", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b741f0cb-a641-4783-be36-e7f1a26a57bf", "node_type": "4", "metadata": {"page_label": "356", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0003c0171017bc6c4abf4694284147ffd04a932c161c8e57bd0804b6a93d38dc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-98 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 83  \n=============== ================================ ====== =============== ===================================================== ==========  \nCHECKSRC        000 -Main                           1294 PROCEDURE  \nCHECKSRC        L -A1-CHR                           1284 LINKAGE           1296    1308    1311    1318  \nCHECKSRC        L -A2-IDENT-DIVISION -BOOL           1289 LINKAGE           1340*  \nCHECKSRC        L -A2-LINKAGE-SECTION-BOOL          1288 LINKAGE           1334*  \nCHECKSRC        L -A2-Nothing-Special-BOOL          1290 LINKAGE           1295*  \nCHECKSRC        L -Argument -1-TXT                   1283 LINKAGE           1292  \nCHECKSRC        L -Argument -2-CHR                   1287 LINKAGE           1293  \nCHECKSRC        UPPER -CASE                              PROCEDURE         1311  \nCHECKSRC        WS -Compressed -Src-TXT              1270 WORKING -STORAGE   1305*   1328    1332    1338  \nCHECKSRC        WS -CS-CHR                          1271 WORKING -STORAGE   1312*   1318*   1327    1331    1337  \nCHECKSRC        WS-I-SUB                           1279 WORKING -STORAGE   1306*   1307    1308    1311    1318    1324*   1325    1327  \n                                                                          1328    1331    1331    1332    1337    1337    1338  \nCHECKSRC        WS -J-SUB                           1281 WORKING -STORAGE   1304*   1310*   1312    1317*   1318  \nCHECKSRC        WS -RS-Found-SPACE-CHR              1275 WORKING -STORAGE \nCHECKSRC        WS -RS-Not-Skipping -SPACE-BOOL      1277 WORKING -STORAGE   1303*    1309    1316*  \nCHECKSRC        WS -RS-Skipping -SPACE-BOOL          1276 WORKING -STORAGE   1313*  \nCHECKSRC        WS -Runtime-Switches -TXT            1274 WORKING -STORAGE \n  ", "start_char_idx": 0, "end_char_idx": 2322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b7b5ddc-24c5-45eb-aee5-b96bd1fe5230": {"__data__": {"id_": "0b7b5ddc-24c5-45eb-aee5-b96bd1fe5230", "embedding": null, "metadata": {"page_label": "357", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65647689-9302-4330-bf54-7a4397fe8f4c", "node_type": "4", "metadata": {"page_label": "357", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dfdff12b86048c25b64ea0c8225cc0ae0e9a5e8845d7fe688c982960612ed97c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-99 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright ( C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined    References (* = Updated)                               Page: 84  \n=============== ================================ ====== =============== ===================================================== ==========  \nGCic            000 -File-Error                      642 PROCEDURE  \nGCic            000 -Main                            663 PROCEDURE  \nGCic            100 -Initialization                  688 PROCEDURE          664  \nGCic            200 -Let-User-Set-Switches           800 PROCEDURE          667  \nGCic            210 -Run-Compiler                    881 PROCEDURE          668  \nGCic            220 -Make-Listing                   1017 PROCEDURE          672  \nGCic            230 -Run-Program                    1045 PROCEDUR E          676  \nGCic            240 -Find-LINKAGE-SECTION           1152 PROCEDURE          734  \nGCic            250 -Autoload -Listing               1191 PROCEDURE          678    1008    1039  \nGCic            900 -Terminate                      1237 PROCEDURE          680     728     861    1009    1145  \nGCic            COB -COLOR-BLACK                     170 [screenio     ]    427     432     522     532     542     547     557     564  \n                                                                           579     594     610     617     624  \nGCic            COB -COLOR-BLUE                      170 [screenio     ]    510  \nGCic            COB -COLOR-CYAN                      170 [screenio     ]    523  \nGCic            COB -COLOR-GREEN                     170 [screeni o     ]    433     548     595     611  \nGCic            COB -COLOR-MAGENTA                   170 [screenio     ]  \nGCic            COB -COLOR-RED                       170 [screenio     ]    516     580  \nGCic            COB -COLOR-WHITE                     170 [s creenio     ]    428     511     517     533     543     558     565     618  \n                                                                           625 \nGCic            COB -COLOR-YELLOW                    170 [screenio     ]  \nGCic            COB -CRT-STATUS                          PROCEDURE          804     805  \nGCic            COB -SCR-ESC                         170 [screenio     ]    860  \nGCic            COB -SCR-F1                          170 [screenio     ]    806  \nGCic            COB -SCR-F10                         170 [screenio     ]  \nGCic            COB -SCR-F11                         170 [screenio     ]  \nGCic            COB -SCR-F12                         170 [screenio     ]    863  \nGCic            COB -SCR-F13                         170 [screenio     ]  \nGCic            COB -SCR-F14                         170 [screenio     ]  \nGCic            COB -SCR-F15                         170 [screenio     ]  \nGCic            COB -SCR-F16                         170 [screenio     ]  \nGCic            COB -SCR-F17                         170 [screenio     ]  \nGCic            COB -SCR-F18                         170 [screenio     ]  \nGCic            COB -SCR-F19                         170 [screenio     ]  \nGCic            COB -SCR-F2                          170 [screenio     ]    812  \nGCic            COB -SCR-F20                         170 [screenio     ]  \nGCic            COB -SCR-F21                         170 [screenio     ]  \nGCic            COB -SCR-F22                         170 [screenio     ]  \nGCic            COB -SCR-F23                         170 [screenio     ]  \nGCic            COB -SCR-F24                         170 [screenio     ]  \nGCic            COB -SCR-F25                         170 [screenio     ]  \nGCic            COB -SCR-F26                         170 [screenio     ]  \nGCic            COB -SCR-F27                         170 [screenio     ]  \nGCic            COB -SCR-F28                         170 [screenio     ]  \nGCic            COB -SCR-F29                         170 [screenio     ]  \nGCic            COB-SCR-F3                          170 [screenio     ]    818  \nGCic            COB -SCR-F30                         170 [screenio     ]  \nGCic            COB -SCR-F31                         170 [screenio     ]  \nGCic            COB -SCR-F32                         170 [screenio     ]  \nGCic            COB -SCR-F33                         170 [screenio     ]  \nGCic            COB -SCR-F34                         170 [screenio     ]  \nGCic            COB -SCR-F35                         170 [screenio     ]  \nGCic            COB-SCR-F36                         170 [screenio     ]  \nGCic            COB -SCR-F37                         170 [screenio     ]  \nGCic            COB -SCR-F38                         170 [screenio     ]  \n  ", "start_char_idx": 0, "end_char_idx": 5131, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4704fcab-2bbe-4c5b-8285-797a9a433ec7": {"__data__": {"id_": "4704fcab-2bbe-4c5b-8285-797a9a433ec7", "embedding": null, "metadata": {"page_label": "358", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11f6ab73-4fff-4721-9cbd-409cf941e33f", "node_type": "4", "metadata": {"page_label": "358", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "599e98c48b181bb0e373e60208370098841510992c949699f37b71dbda15473c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-100 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing  - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Regis ter/Function     Defn   Where Defined   References (* = Updated)                               Page: 85  \n=============== ================================ ====== =============== ===================================================== ==========  \nGCic            COB -SCR-F39                         170 [screenio     ]  \nGCic            COB -SCR-F4                          170 [screenio     ]    824  \nGCic            COB -SCR-F40                         170 [screenio     ]  \nGCic            COB -SCR-F41                         170 [screenio     ]  \nGCic            COB -SCR-F42                         170 [screenio     ]  \nGCic            COB -SCR-F43                         170 [screenio     ]  \nGCic            COB -SCR-F44                         170 [screenio     ]  \nGCic            COB -SCR-F45                         170 [screenio     ]  \nGCic            COB -SCR-F46                         170 [screenio     ]  \nGCic            COB -SCR-F47                         170 [screenio     ]  \nGCic            COB -SCR-F48                         170 [screenio     ]  \nGCic            COB -SCR-F49                         170 [screenio     ]  \nGCic            COB -SCR-F5                          170 [screenio     ]    830  \nGCic            COB -SCR-F50                         170 [screenio     ]  \nGCic            COB -SCR-F51                         170 [screenio     ]  \nGCic            COB -SCR-F52                         170 [screenio     ]  \nGCic            COB -SCR-F53                         170 [screenio     ]  \nGCic            COB -SCR-F54                         170 [screenio     ]  \nGCic            COB -SCR-F55                         170 [screenio     ]  \nGCic            COB -SCR-F56                         170 [screenio     ]  \nGCic            COB -SCR-F57                         170 [screenio     ]  \nGCic            COB-SCR-F58                         170 [screenio     ]  \nGCic            COB -SCR-F59                         170 [screenio     ]  \nGCic            COB -SCR-F6                          170 [screenio     ]    836  \nGCic            COB -SCR-F60                         170 [screenio     ]  \nGCic            COB -SCR-F61                         170 [screenio     ]  \nGCic            COB -SCR-F62                         170 [screenio     ]  \nGCic            COB -SCR-F63                         170 [screenio     ]  \nGCic            COB -SCR-F64                         170 [screenio     ]  \nGCic            COB -SCR-F7                          170 [screenio     ]    842  \nGCic            COB -SCR-F8                          170 [screenio     ]    848  \nGCic            COB -SCR-F9                          170 [screenio     ]    854  \nGCic            COB -SCR-FATAL                       170 [screenio     ]  \nGCic            COB -SCR-KEY-DOWN                    170 [screenio     ]  \nGCic            COB -SCR-KEY-UP                      170 [sc reenio     ]  \nGCic            COB -SCR-MAX-FIELD                   170 [screenio     ]  \nGCic            COB -SCR-NO-FIELD                    170 [screenio     ]  \nGCic            COB -SCR-OK                          170 [screenio     ]  \nGCic            COB -SCR-PAGE_DOWN                   170 [screenio     ]  \nGCic            COB -SCR-PAGE_UP                     170 [screenio     ]  \nGCic            COB -SCR-PRINT                       170 [screenio     ]  \nGCic            COB -SCR-TIME-OUT                    170 [screenio     ] \nGCic            CONCATENATE                             PROCEDURE          789     968     990     996    1215    1218    122 2*   1224*  \n                                                                          1226*   1228*   1230*  \nGCic            F -Cobc-Output-FILE                  163 FILE               154     985    1003  \nGCic            F -Cobc-Output-REC                   164 FILE               986     991*    992    1000*   1001  \nGCic            F -Source-Code-FILE                  166 FILE               157     643    1153    1157    1158    1171    1172    1179  \nGCic            F -Source-Code-REC                   167 FILE              1162    1176  \nGCic            F1                                      WORKING -STORAGE    198  \nGCic            F12                                     WORKING-STORAGE    192  \nGCic            F2                                      WORKING -STORAGE    205  \nGCic            F3                                      WORKING -STORAGE    201  \nGCic            F4                                      WORKING-STORAGE    199  \nGCic            F5                                      WORKING -STORAGE    202  \n  ", "start_char_idx": 0, "end_char_idx": 5067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69e9eaf6-f921-40a7-998c-495d85e0eea4": {"__data__": {"id_": "69e9eaf6-f921-40a7-998c-495d85e0eea4", "embedding": null, "metadata": {"page_label": "359", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddf422db-304a-425e-9d1a-44b695295e5a", "node_type": "4", "metadata": {"page_label": "359", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "6634a258380cc8dd64368a89c4e896bfe34c4d1990f74d421ca345376a24ae6c", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-101 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 86 \n=============== ================================ ====== =============== ================================================ ===============  \nGCic            F6                                      WORKING -STORAGE    203  \nGCic            F7                                      WORKING -STORAGE    206  \nGCic            F8                                      WORKING -STORAGE    200  \nGCic            F9                                      WORKING -STORAGE    204  \nGCic            LD -Horiz-Line                       412 SCREEN             788  \nGCic            LD -LL-Corner                        407 SCREEN             444     474     490     50 4 \nGCic            LD -Lower-T                          411 SCREEN             476  \nGCic            LD -LR-Corner                        409 SCREEN             446     478     492     506  \nGCic            LD -UL-Corner                        406 SCREEN             434     448     480     494  \nGCic            LD -Upper-T                          410 SCREEN             450  \nGCic            LD -UR-Corner                        408 SCREEN             436     452     482     496  \nGCic            LD -Vert-Line                        413 SCREEN             438     439     441     442     454     455     456     458  \n                                                                           459     460     462     463     464     466     467     468  \n                                                                           470     471     472     484     485     487     488     498  \n                                                                           499     501     502  \nGCic            LENGTH                                  PROCEDURE          742     770    1070  \nGCic            LOWER -CASE                              PROCEDURE          887    1065  \nGCic            RETURN -CODE                             PROCEDURE          987    1020*   1031*   1033  \nGCic            S -Blank-SCR                         425 SCREEN             671    1142    1213    1242  \nGCic            S -Switches -SCR                      427 SCREEN             803*    885     975    1004    1019    1037    1239  \nGCic            SELCHAR                                 PROCEDURE          808     814     820     826     832     838     844     850  \n                                                                           856    1181  \nGCic            TRIM                                    PROCEDURE          651     656      761*    790     894     957     962     968  \n                                                                           978     984*    997    1070    1082    1100    1125    1143*  \n                                                                          1197    1199*   1204    1206*   1215    1218    1222*   1224*  \n                                                                          1226*   1228*   1230*  \nGCic            WHEN -COMPILED                           PROCEDURE          697  \nGCic            WS -Cmd-Args-TXT                     221 WORKING -STORAGE    710*    712     713     716     721  \nGCic            WS -Cmd-End-Quote-CHR                223 WORKING -STORAGE    714*    717  \nGCic            WS -Cmd-SUB                          225 WO RKING-STORAGE    711*    712     713     715*    719*    724*  \nGCic            WS -Cmd-TXT                          219 WORKING -STORAGE    882*    977*    982*    984*   1046*   1053*   1063*   1066*  \n                                                                          1073*   1077*   1083*   1088*   1093*   1101*   1109*   1115*  \n                                                                          1121*   1126*   1131*   1135*   1143*   1194*   1198*   1199*  \n                                                                          1201*   1205*   1206*   1216*   1219*   1222*   1224*   1226*  \n                                                                          1228*   1230*  \nGCic            WS -Cobc-Cmd-TXT                     227 WORKING -STORAGE    883*    892*    896*    900*    904*    909*    914*    919*  \n                                                                           924*    929*    934*    938*    951*    959*    963*    978  \nGCic            WS -Compilation -Switches -TXT         172 WOR KING-STORAGE \nGCic            WS -Config-Fn-TXT                    229 WORKING -STORAGE    888*    894  \nGCic            WS -CS-All-Switches -TXT              207 WORKING -STORAGE \nGCic            WS -CS-Arg-H1-TXT                    174 WORKING -STORAGE    628*  \nGCic            WS-CS-Arg-H2-TXT                    175 WORKING -STORAGE    629*  \nGCic            WS -CS-Args-TXT                      173 WORKING -STORAGE   1124    1125  \nGCic            WS -CS-Config-NUM                    192 WORKING -STORAGE    620     864*    86 5     866*    887  \nGCic            WS -CS-DEBUG-CHR                     209 WORKING -STORAGE    581     807     808*    810*    907  \nGCic            WS -CS-EXECUTE-CHR                   210 WORKING -STORAGE    584     674     825     826*    828*  \nGCic            WS-CS-Extra-H1-TXT                  195 WORKING -STORAGE    626*  \nGCic            WS -CS-Extra-H2-TXT                  196 WORKING -STORAGE    627*  \nGCic            WS -CS-Extra-TXT                     194 WORKING -STORAGE    955     957  \nGCic            WS -CS-Filename-TXT                  185 WORKING -STORAGE    620     887  \nGCic            WS -CS-Filenames -Table-TXT           184 WORKING -STORAGE \nGCic            WS -CS-Filenames -TXT                 176 WORKING -STORAGE    184  \nGCic            WS -CS-FREE-CHR                      211 WORKING -STORAGE    589     849     850*    852*    932  \nGCic            WS -CS-LIBRARY-CHR                   212 WORKING -STORAGE    583     819     820*    822*    898    1051    1106    1154*  \n  ", "start_char_idx": 0, "end_char_idx": 6427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b688e63f-1143-43a2-8c1d-786660573ade": {"__data__": {"id_": "b688e63f-1143-43a2-8c1d-786660573ade", "embedding": null, "metadata": {"page_label": "360", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94a87df3-8407-44bd-ac6f-73e0885a57b3", "node_type": "4", "metadata": {"page_label": "360", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2bf2e61122a8f7f7f5aba0035b3630c56f74882ce56dbd12b0c62e536ee502b4", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-102 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 87 \n=============== ================================ ====== =============== ================================================ ===============  \n                                                                          1181* \nGCic            WS -CS-LISTING-CHR                   213 WORKING -STORAGE    585     670     831     832*    834*    945     947*    949  \nGCic            WS -CS-NOFUNC-CHR                    214 WORKING -STORAGE    587     837     838*    840*    922  \nGCic            WS -CS-NOTRUNC-CHR                   215 WORKING -STORAGE    590     855     856*    858*    912  \nGCic            WS -CS-Switch-Defaults -TXT           197 WOR KING-STORAGE    208  \nGCic            WS -CS-TRACEALL -CHR                  216 WORKING -STORAGE    582     813     814*    816*    917  \nGCic            WS -CS-WARNALL-CHR                   217 WORKING -STORAGE    588     843     844*    846*    927  \nGCic            WS-Delete-Fn-TXT                    231 WORKING -STORAGE \nGCic            WS -File-Name-TXT                    233 WORKING -STORAGE    157     651     656     718*    723*    726     739     742  \n                                                                           749     752     763    1026*  \nGCic            WS -File-Status-Message-TXT          237 WORKING -STORAGE \nGCic            WS -FN-CHR                           234 WORKING -STORAGE    744     751*    755*  \nGCic            WS -FSM-Msg-TXT                      241 WORKING -STORAGE    646*    646*    646*    646*    646*    646*    646*    646*  \n                                                                           646*    646*    646*    646*    646*    646*    646*    646*  \n                                                                           646*    646*    646*    646*    646*    646*    646*    646*  \n                                                                           646*    646*    646*    646*    646*    646*  \nGCic            WS -FSM-Status-CD                    239 WORKING -STORAGE    159     646     648  \nGCic            WS -Horizontal -Line-TXT              243 WORKING -STORAGE    435     445     449     451     475     477     481     491  \n                                                                           495     505     788*  \nGCic            WS -I-SUB                            245 WORKING -STORAGE    742*    743     744     745     747     751     755     770*  \n                                                                           771     772     773     775     779     783     886*    897*  \n                                                                           901*    905*    910*    915*    920*    925*    930*    935*  \n                                                                           939*    952*    960*    964*   1047*   1054*   1064*   1067*  \n                                                                          1074*   1078*   1084*   1089*   1094*   1102*   1110*   1116*  \n                                                                          1122*   1127*   1132*   1136*  \nGCic            WS -J-SUB                            247 WORKING -STORAGE   1069*   1070    1071    1076  \nGCic            WS -Listing-Filename -TXT             249 WORKING -STORAGE    154     969*    970*    979     997    1025*   1197    1204  \nGCic            WS -OC-Compile-DT                    251 WORKING -STORAGE    513     697*  \nGCic            WS -OS-Cygwin-BOOL                   285 WORKING -STORAGE    739     763    1061    1091    1193  \nGCic            WS -OS-Dir-CHR                       260 WORKING -STORAGE    740*    744     755     764*   1087  \nGCic            WS -OS-Exe-Ext-CONST                 261 WORKING -STORAGE   1107    1108  \nGCic            WS -OS-Lib-Ext-CONST                 262 WORKING -STORAGE   1113    1114  \nGCic            WS -OS-Lib-Type-CONST                263 WORKING -STORAGE    599  \nGCic            WS -OS-OSX-BOOL                      287 WORKING -STORAGE   1200  \nGCic            WS -OS-Type-CD                       264 WORKING -STORAGE    790    1027*  \nGCic            WS -OS-Type-FILLER-TXT               289 WORKING -STORAGE    295  \nGCic            WS -OS-Type-TXT                      296 WORKING -STORAGE    790  \nGCic            WS -OS-Types-TXT                     295 WORKING -STORAGE \nGCic            WS -OS-UNIX-BOOL                     286 WORKING -STORAGE   1091  \nGCic            WS -OS-Windows-BOOL                  284 WORKING -STORAGE   1129    1193    1214  \nGCic            WS-Output-Msg-TXT                   299 WORKING -STORAGE    518     647*    793*    870*    884*    974*    989*    990  \n                                                                           998*   1006*   1018*   1024*   1030*   1035*   1144*   12 38 \nGCic            WS -Path-Delimiter -CHR               301 WORKING -STORAGE \nGCic            WS -PFN-CHR                          308 WORKING -STORAGE    772     779*    783*  \nGCic            WS -Pgm-Nm-TXT                       311 WORKING -STORAGE    776*    78 1*    968    1100    1215    1218  \nGCic            WS -Prog-Extension -TXT               303 WORKING -STORAGE    777*    782*  \nGCic            WS -Prog-File-Name-TXT               307 WORKING -STORAGE    559     749*    754*    770     776     780     962  \nGCic            WS-Prog-Folder-TXT                  305 WORKING -STORAGE    560     748*    753*    757     758*    761*   1060    1061  \n                                                                          1065    1070    1071    1076    1082  \nGCic            W S-RS-1st-Prog-Complete -BOOL        324 WORKING -STORAGE   1156    1165*  \nGCic            WS -RS-Compile-Failed-BOOL           317 WORKING -STORAGE    995*   1007  \nGCic            WS -RS-Compile-OK-BOOL               315 WORKING -STORAGE    669     988*  \nGCic            WS-RS-Compile-OK-CHR                314 WORKING -STORAGE \nGCic            WS -RS-Compile-OK-Warn-BOOL          316 WORKING -STORAGE    669  \n  ", "start_char_idx": 0, "end_char_idx": 6553, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ae44566-351a-4a17-a2e5-cebd3a279e3e": {"__data__": {"id_": "5ae44566-351a-4a17-a2e5-cebd3a279e3e", "embedding": null, "metadata": {"page_label": "361", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "413e8ab2-0040-47a5-8542-762bf4cdb0fa", "node_type": "4", "metadata": {"page_label": "361", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8bd471ee169ed1b40500c8902caefb17865c07026b32068f2e9544ce805c3744", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-103 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 88 \n=============== ================================ ====== =============== ================================ ===============================  \nGCic            WS -RS-Complete -BOOL                 319 WORKING -STORAGE    666     993*  \nGCic            WS -RS-Complete -CHR                  318 WORKING -STORAGE \nGCic            WS -RS-Double-Quote-Used-BOOL        322 WORKING -STORAGE   1059*   1085*   1119  \nGCic            WS -RS-IDENT-DIV-CHR                 323 WORKING -STORAGE \nGCic            WS -RS-More-To-1st-Prog-BOOL         325 WORKING -STORAGE   1155*  \nGCic            WS -RS-No-Switch-Changes-BOOL        327 WORKING -STORAGE    802     873*  \nGCic            WS -RS-No-Switch-Chgs-CHR            326 WORKING -STORAGE \nGCic            WS -RS-Not-Complete -BOOL             320 WORKING -STORAGE    665*  \nGCic            WS -RS-Output-File-Avail-BOOL        331 WORKING -STORAGE    675     976*  \nGCic            WS -RS-Output-File-Busy-BOOL         330 WORKING -STORAGE \nGCic            WS -RS-Output-File-Busy-CHR          329 WORKING -STORAGE \nGCic            WS -RS-Quote-CHR                     321 WORKING -STORAGE \nGCic            WS -RS-Source-Rec-Ident-BOOL         334 WORKING -STORAGE   1164    1170  \nGCic            WS -RS-Source-Rec-Ignored-BOOL       335 WORKING -STORAGE   1168*  \nGCic            WS -RS-Source-Rec-Linkage-BOOL       333 WORKING -STORAGE   1169    1180  \nGCic            WS -RS-Source-Record-Type-CHR        332 WORKING -STORAGE   1163*   1177*  \nGCic            WS -RS-Switch-Changes-BOOL           328 WORKING -STORAGE    801*  \nGCic            WS -RS-Switch-Error-CHR              336 WORKING -STORAGE \nGCic            WS -RS-Switch-Is-Bad-BOOL            337 WOR KING-STORAGE \nGCic            WS -RS-Switch-Is-Good-BOOL           338 WORKING -STORAGE \nGCic            WS -Runtime-Switches -TXT             313 WORKING -STORAGE \nGCic            WS -Tally-QTY                        340 WORKING -STORAGE    942*    944*    946  \n  ", "start_char_idx": 0, "end_char_idx": 2544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d7337fa-d1f2-4397-b6c0-2f8607eb1ecd": {"__data__": {"id_": "7d7337fa-d1f2-4397-b6c0-2f8607eb1ecd", "embedding": null, "metadata": {"page_label": "362", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dc976877-e90b-4dd3-a317-f6649c1e80b2", "node_type": "4", "metadata": {"page_label": "362", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8f60419e5e23589d6d70c2d44d77e5a140911d89f6192d0864d0ab86fde85da9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-104 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/sam ples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 89 \n=============== ================================ ====== =============== ===================================================== ==========  \nLISTING         000 -Main                           2393 PROCEDURE  \nLISTING         100 -Initialization                 241 0 PROCEDURE         2394  \nLISTING         300 -Tokenize -Source                2479 PROCEDURE         2401  \nLISTING         310 -Get-Token                      2530 PROCEDURE         2488  \nLISTING         311 -Control-Record                 2690 PROCEDURE         2549 \nLISTING         312 -Expanded -Src-Record            2736 PROCEDURE         2551  \nLISTING         313 -Check-For-Numeric-Token        2743 PROCEDURE         2677  \nLISTING         320 -IDENTIFICATION -DIVISION        2785 PROCEDURE         2509  \nLISTING         330-ENVIRONMENT -DIVISION           2809 PROCEDURE         2511  \nLISTING         340 -DATA-DIVISION                  2832 PROCEDURE         2513  \nLISTING         350 -PROCEDURE -DIVISION             2887 PROCEDURE         2515  \nLISTING         351 -ACCEPT                         2971 PROCEDURE         2933  \nLISTING         351 -ADD                            2981 PROCEDURE         2935  \nLISTING         351 -ALLOCATE                       2992 PROCEDURE         2937  \nLISTING         351 -CALL                           3004 PROCEDURE         2939  \nLISTING         351 -COMPUTE                        3019 PROCEDURE         2941  \nLISTING         351 -DIVIDE                         3028 PROCEDURE         2943  \nLISTING         351 -FREE                           3048 PROCEDURE         2945 \nLISTING         351 -INITIALIZE                     3052 PROCEDURE         2947  \nLISTING         351 -INSPECT                        3061 PROCEDURE         2949  \nLISTING         351 -MOVE                           3091 PROCEDURE         2951  \nLISTING         351-MULTIPLY                       3100 PROCEDURE         2953  \nLISTING         351 -PERFORM                        3116 PROCEDURE         2955  \nLISTING         351 -SET                            3129 PROCEDURE         2957  \nLISTING         351 -STRING                         3138 PROCEDURE         2959  \nLISTING         351 -SUBTRACT                       3149 PROCEDURE         2961  \nLISTING         351 -TRANSFORM                      3160 PROCEDURE         2963  \nLISTING         351 -UNSTRING                       3170 PROCEDURE         2965  \nLISTING         360 -Release-Def                    3187 PROCEDURE         2825    2863    2866    2869    2872    2909  \nLISTING         361 -Release-Ref                    3198 PR OCEDURE         2827    2881    2967    2977    2988    3000    3014    3024  \n                                                                          3044    3057    3087    3096    3112    3125    3134    3145  \n                                                                          3156    3166    3183  \nLISTING         362 -Release-Upd                    3203 PROCEDURE         2875    2878    2974    2984    2986    2995    2998    3007  \n                                                                          3009    3012    3022    3040    3042    3049    3055    3068  \n                                                                          3094    3110    3119    3122    3132    3141    3143    3152  \n                                                                          3154    3163    3173    3175    3177    3179    3181  \nLISTING         363 -Set-Upd                        3208 PROCEDURE         3031    3103    3204  \nLISTING         364 -Set-Ref                        3218 PROCEDURE         3064    3199  \nLISTING         400 -Produce-Xref-Listing           3227 PROCEDURE         2402  \nLISTING         410 -Generate -Report-Line           3295 PROCEDURE         3241    3253    3265    3281    3291  \nLISTING         500 -Produce-Source-Listing         3319 PROCEDURE         2396 \nLISTING         510 -Control-Record                 3339 PROCEDURE         3329  \nLISTING         520 -Expanded -Src-Record            3356 PROCEDURE         3331  \nLISTING         530 -Generate -Source-Line           3429 PROCEDURE         3375    3379    3383    3386    3390    3407    3411    3415  \n                                                                          3418    3423  \nLISTING         F -ES-1-7-TXT                       1397 FILE              2547    3327  \nLISTING         F -ES-1-CHR                         1394 FILE              2548    3328  \nLISTING         F -ES-2-256-TXT-256                 1395 FILE              2691    3340  \nLISTING         F -ES-8-256-TXT                     1398 FILE  \nLISTING         F -Expanded -Src-FILE                1392 FILE              1383    2480    2527    2537    3321    3324    3336    3349  \nLISTING         F -Expanded -Src-REC                 1393 FILE              2481*   2535    2559    2561    2591    2595    2604    2608  \n                                                                          2617    2621    2629    2647    2732*   3393    3395    3419  \n                                                                          3421 \nLISTING         F -Expanded -Src2-REC                1396 FILE  \n  ", "start_char_idx": 0, "end_char_idx": 5781, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29e06953-a9b8-4157-aaae-5236a67cb88e": {"__data__": {"id_": "29e06953-a9b8-4157-aaae-5236a67cb88e", "embedding": null, "metadata": {"page_label": "363", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3889fb77-de69-4178-a179-957e018cd49e", "node_type": "4", "metadata": {"page_label": "363", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8726b02d892fcef1d461a673b1e6d7f33d98d45dc4d977e05ea176028f4fc01a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-105 GNU COBOL V2.0 11FEB2 012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 90 \n=============== ================================ ====== =============== ================================================ ===============  \nLISTING         F -Listing-FILE                     1400 FILE              1385    2395    2403  \nLISTING         F -Listing-REC                      1401 FILE              3297*   3298    3299*   3300    3301    3308    3309    3310  \n                                                                          3313    3431    3432    3433    3440    3441    3442    3445  \nLISTING         F -Original -Src-FILE                1403 FILE              1387    3320    3335    3359  \nLISTING         F -Original -Src-REC                 1404 FILE  \nLISTING         F -OS-1-128-TXT                     1405 FILE              3363  \nLISTING         F -OS-129-256-TXT                   1410 FILE              3387    3389  \nLISTING         F -OS-7-CHR                         1407 F ILE              3368  \nLISTING         F -OS-8-72-TXT                      1408 FILE              3364    3397  \nLISTING         F -Sort-Work-FILE                   1412 FILE              1389    2397    3234  \nLISTING         F -Sort-Work-REC                    1 413 FILE              2502*   2504    2539*   2541    3032    3035*   3038    3072*  \n                                                                          3075    3080*   3083    3104    3106*   3109    3188*   3195  \n                                                                          3200    3205    3209*   3219*  \nLISTING         F -SW-Def-Line-NUM                  1418 FILE              3193*   3250    3258    3262    3274    3275  \nLISTING         F -SW-Prog-ID-TXT                   1414 FILE              2398    3189*   3210*   3220*   3237    3243    3246    3255  \n                                                                          3267    3271  \nLISTING         F -SW-Ref-Flag-CHR                  1421 FILE              3037*   3074*   3082*   3108*   3215*   3286  \nLISTING         F -SW-Ref-Line-NUM                  1420 FILE              2400    3194*   3214*   3224*   3284  \nLISTING         F -SW-Reference -TXT                 1419 FILE              3278  \nLISTING         F -SW-Section-TXT                   1417 FILE              3192*   3213*   3223*   3257    3273  \nLISTING         F -SW-Token-TXT                     1416 FILE              3191*   3212*   3222*   3272  \nLISTING         F -SW-Token-Uc-TXT                  1415 FILE              2399    3190*   321 1*   3221*   3238    3247    3249    3261  \nLISTING         L -Listing-Fn-TXT                   2384 LINKAGE           1385    2390  \nLISTING         L -OS-Type-CD                       2388 LINKAGE           2392    2414    2420  \nLISTING         L -Src-Fn-TXT                       2386 LINKAGE           1387    2391    2424    2424*   2425    2426    2430    2433  \n                                                                          2439    2443    2445    2450  \nLISTING         LENGTH                                  PROCEDURE         2425    2443    2713  \nLISTING         LOWER -CASE                              PROCEDURE         3364    3397  \nLISTING         NUMVAL                                  PROCEDURE         2465    2700  \nLISTING         RETURN -CODE                             PROCEDURE         2461  \nLISTING         TRIM                                    PROCEDURE         2424    2443    2455    2701    2702    2713    334 5    3346  \n                                                                          3364    3397  \nLISTING         UPPER -CASE                              PROCEDURE         2430    2433    2492    2638    2661    2701    3345  \nLISTING         WS -Argument -Is-Updatable -BOOL      2305 WORKING -STORAGE   2914*   2919*   2921*   2926*   3011  \nLISTING         WS -Argument -Type-CD                2304 WORKING -STORAGE \nLISTING         WS -CD-In-DATA-DIV-BOOL             1438 WORKING -STORAGE   2512  \nLISTING         WS -CD-In-ENV-DIV-BOOL              1437 WORKING -STORAGE   2510  \nLISTING         WS -CD-In-IDENT-DIV-BOOL            1436 WORKING -STORAGE   2508  \nLISTING         WS -CD-In-PROC-DIV-BOOL             1439 WORKING -STORAGE   2514  \nLISTING         WS -CPI-13-15-TXT                   1445 WORKING -STORAGE   2799*  \nLISTING         WS -CPI-16-CHR                      1446 WORKING -STORAGE   2798  \nLISTING         WS -CS-1-CHR                        1449 WORKING -STORAGE   2725*  \nLISTING         WS -CS-11-14-TXT                    1452 WORKING -STORAGE   2727    2728*  \nLISTING         WS-CS-15-CHR                       1453 WORKING -STORAGE   2730*  \nLISTING         WS -CS-2-14-TXT                     1450 WORKING -STORAGE   2726*  \nLISTING         WS -Curr-Char-Is-Punct-BOOL         1427 WORKING -STORAGE   2570    2578    2583  \nLISTING         WS-Curr-Char-Is-Quote-BOOL         1431 WORKING -STORAGE   2589  \nLISTING         WS -Curr-Char-Is-X-BOOL             1432 WORKING -STORAGE   2602  \nLISTING         WS -Curr-Char-Is-Z-BOOL             1433 WORKING -STORAGE   2615  \nLISTING         WS -Curr-CHR                        1426 WORKING -STORAGE   2560*   2563    2565    2571    2579    2585    2592  \nLISTING         WS -Curr-Division -TXT               1435 WORKING -STORAGE   2485*   2521    2572    2580    2680    2792*   2815*   2842*  \n                                                                          2893*   2898*  \nLISTING         WS -Curr-Line-NUM                   1441 WORKING -STORAGE   2484*   2544*   2703*   2739*   3193    3214    3224    3358*  \nLISTING         WS -Curr-Prog-ID-TXT                1443 WO RKING-STORAGE   2474*   2797*   3189    3210    3220  \n  ", "start_char_idx": 0, "end_char_idx": 6250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "987b3ab0-db03-4a71-91bd-1576f06fb0c2": {"__data__": {"id_": "987b3ab0-db03-4a71-91bd-1576f06fb0c2", "embedding": null, "metadata": {"page_label": "364", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b13a69f-152a-43cc-8c2c-0269cf3782fb", "node_type": "4", "metadata": {"page_label": "364", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "52a550bef620c780af13e31cd2f10df3a3b8bee10927aee5209706d30f420b39", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-106 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 91  \n=============== ================================ ====== =============== ===================================================== ==========  \nLISTING         WS -Curr-Section-TXT                1448 WORKING -STORAGE   2706*   2711    2820*   2847*   2888    2889*   3192    3213  \n                                                                          3223 \nLISTING         WS -Curr-Verb-TXT                   1455 WORKING -STORAGE   2475*   2499*   2523*   2907    2916    2931  \nLISTING         WS -Delim-TXT                       1457 WORKING -STORAGE   2632*   2634    2652*   2654    2657  \nLISTING         WS -Dummy-TXT                       1459 WORKING -STORAGE   2453*   2695*   2724*   2753*   2758*   2759    3344*  \nLISTING         WS -Expanded -Src-Fn-TXT             1461 WORKING -STORAGE   1383    2458*   2459*  \nLISTING         WS -Filename -TXT                    1463 WORKING -STORAGE   2452*   2455    2723*   2726  \nLISTING         WS -GI-Prog-ID-TXT                  1466 WORKING -STORAGE   3237    3243    3246*  \nLISTING         WS -GI-Token-TXT                    1467 WORKING -STORAGE   3238    3247*   3249    3261  \nLISTING         WS -Group-Indicators -TXT            1465 WORKING -STORAGE   3229*  \nLISTING         WS -Held-Reference -TXT              1469 WORKING -STORAGE   2476 *   2501    2502    2503*   2538    2539    2540*   3032*  \n                                                                          3034    3035    3036*   3065*   3071    3072    3073*   3079  \n                                                                          3080    3081*   3104*   3106    3107*  \nLISTING         WS -I-SUB                           1471 WORKING -STORAGE   2425*   2426    2427    2429    2432*   2433    2443*   2445  \n                                                                          2446    2447    2450    2700*   2703    2714*   2716    2717  \n                                                                          2718    2721    3230*   3254*   3266*   3279*   3280    3282*  \n                                                                          3285    3287    3315*  \nLISTING         WS -J-SUB                           1473 WORKING -STORAGE   2444*   2448*   2450    2715*   2719*   2721  \nLISTING         WS -Lines-Left-NUM                  1475 WORKING -STORAGE   3231*   3244*   3296    3311*   3316    3369*   3371*   3403*  \n                                                                          3430    3443*   3447  \nLISTING         WS -Lines-Per-Page-Env-TXT          1479 WORKING -STORAGE   2436*   2464    2465  \nLISTING         WS -Lines-Per-Page-NUM              1477 WORKING -STORAGE   2466*   2469*   3311    3443  \nLISTING         WS -Lines-Per-Rec-CONST             1424 WORKING -STORAGE   2352    3280  \nLISTING         WS -Main-Module-Name-TXT            1481 WORKING -STORAGE   2430*   2434*   2702     3346 \nLISTING         WS -Next-Char-Is-Quote-BOOL         1484 WORKING -STORAGE   2602    2615  \nLISTING         WS -Next-CHR                        1483 WORKING -STORAGE   2562*   2605    2618  \nLISTING         WS -OS-Type-FILLER-TXT              1486 WORKING -STORAGE   1492  \nLISTING         WS -OS-Type-TXT                     1493 WORKING -STORAGE   2414    2420  \nLISTING         WS -OS-Types-TXT                    1492 WORKING -STORAGE \nLISTING         WS -Page-No-TXT                     1498 WORKING -STORAGE   3306*   3307    3438*   3439  \nLISTING         WS -Page-NUM                        1496 WORKING -STORAGE   2411*   3302*   3304    3434*   3436  \nLISTING         WS -PN-Literal-TXT                  1499 WORK ING-STORAGE   3303*   3435*  \nLISTING         WS -PN-Page-NUM                     1500 WORKING -STORAGE   3304*   3305*   3436*   3437*  \nLISTING         WS -Program-Path-TXT                1502 WORKING -STORAGE   2439*   2440  \nLISTING         WS -Reserved -Word-Table-TXT         2261 WORKING -STORAGE \nLISTING         WS -Reserved -Word-TXT               2262 WORKING -STORAGE   2667    2801    2838    2899  \nLISTING         WS -Reserved -Words-TXT              1504 WORKING -STORAGE   2261  \nLISTING         WS -RS-Duplicate -CHR                2270 WORKING -STORAGE   3232*   3239*   3252*   3263    3264*  \nLISTING         WS -RS-In-Copybook -BOOL             2273 WORKING -STORAGE   2709*   3352*  \nLISTING         WS -RS-In-Main-Module-BOOL          2272 WORKING -STORAGE   2704*   2738    3347*    3357 \nLISTING         WS -RS-In-Which-Pgm-CHR             2271 WORKING -STORAGE \nLISTING         WS -RS-Last-Token-Ended-Sent-CHR    2274 WORKING -STORAGE   2533*   2679  \nLISTING         WS -RS-Processing -PICTURE-CHR       2275 WORKING -STORAGE   2628    2642*   2852* \nLISTING         WS -RS-Token-Ended-Sentence -CHR     2276 WORKING -STORAGE   2520    2532    2534*   2567*   2596*   2609*   2622*   2635*  \n                                                                          2655* \nLISTING         WS -RS-Verb-Has-Been-Found-CHR      2277 WORKING -STORAGE   2486*   2671*   2789*  \nLISTING         WS -Runtime-Switches                2269 WORKING -STORAGE \nLISTING         WS -RW-IDX                          2265 WORKING -STORAGE   2668    2669    2802    2803    2839    2840    2900    2901  \nLISTING         WS -RW-Type-CD                      2266 WORKING -STORAGE   2669    2803*   2840*   2901*  \nLISTING         WS -RW-Word-TXT                     2267 WORKING -STORAGE   2264    2668    2802    2839    2900  \nLISTING         WS -Saved-Section-TXT               2279 WORKING -STORAGE   2705    2706    2710    2711*  \nLISTING         WS -SDL-Line-NUM                    2282 WORKING -STORAGE   3362*  \nLISTING         WS -SDL-Statement -TXT               2284 WORKING -STORAGE   3363*   3389*   3396*   3 422* \nLISTING         WS -SH1-DT                          2288 WORKING -STORAGE   2473*  \n  ", "start_char_idx": 0, "end_char_idx": 6413, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "910198d7-ca88-4583-8a50-99bf495ee42d": {"__data__": {"id_": "910198d7-ca88-4583-8a50-99bf495ee42d", "embedding": null, "metadata": {"page_label": "365", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2859100b-c12b-428e-8179-5446ec72b79e", "node_type": "4", "metadata": {"page_label": "365", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7eea210b53b136a7d52356313c0eeb2731b8e26bc52d4e6b59e51fea2ed41e24", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-107 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 92  \n=============== ================================ ====== =============== ===================================================== ==========  \nLISTING         WS -SH1-Title-TXT                   2287 WORKING -STORAGE   2417*  \nLISTING         WS -SH3-Page-No-TXT                 2294 WORKING -STORAGE   3439*  \nLISTING         WS -Src-Detail-Line-TXT             2281 WORKING -STORAGE   3361*   3374*   3378*   3382*   3388*   3394*   3406*   3410*  \n                                                                          3414*   3420*   3445    3446*  \nLISTING         WS -Src-Header-1-TXT                2286 WORKING -STORAGE   3433  \nLISTING         WS -Src-Header-2-TXT                2290 WORKING -STORAGE   2440*   2441*   2442    3440  \nLISTING         WS -Src-Header-3-TXT                2292 WORKING -STORAGE   3441  \nLISTING         WS -Src-Header-4-TXT                2296 WORKING -STORAGE   3442  \nLISTING         WS -Src-Line-NUM                    2300 WORKING -STORAGE   3322*   3348    3360*   3362  \nLISTING         WS -Src-SUB                         2302 WORKING -STORAGE   2482*   2535    2536    2555*   2559    2561    2564*   2573*  \n                                                                          2584*   2590*   2594*   2595    2597*   2603*   2607*   2608  \n                                                                          2610*   2616*   2620*   2621    2623*   2633*   2636*   2653*  \n                                                                          2658    2733*   2737*  \nLISTING         WS -Tally-QTY                       2307 WORKING -STORAGE   2768*   2770*   2771    2775*   2776  \nLISTING         WS -Temp-10-Chars-TXT               2309 WORKING -STORAGE   2693*   2697    2698*   2700    3342*  \nLISTING         WS -Temp-256-Chars-TXT              2319 WORKING -STORAGE   2460*   2694*   2701    2713    2716    2721    3343*   3345  \nLISTING         WS -Temp-32-Chars-1-TXT             2311 WORKING -STORAGE   2744*   2747    2754  \nLISTING         WS -Temp-32-Chars-2-TXT             2313 WORKING -STORAGE   2751*   2756*   2762    2763*   2779  \nLISTING         WS -Temp-32-Chars-3-TXT             2315 WORKING -STORAGE   2752*   2757*   2765    2766*   2779  \nLISTING         WS -Temp-65-Chars-TXT               2317 WORKING -STORAGE   3365*   3370    3373    3377    3381    3398*   3402    3 405 \n                                                                          3409    3413  \nLISTING         WS -Today-DT                        2321 WORKING -STORAGE   2471*   2472  \nLISTING         WS -Token-Curr-TXT                  2323 WORKING -STORAGE   2492     2496*   2565*   2574*   2585*   2593*   2606*   2619*  \n                                                                          2631*   2638    2651*   2661    2663*   2681*   2744    2791  \n                                                                          2797    2814    2819    2837    2846    2850    2897    2913  \n                                                                          2918    3191    3212    3222  \nLISTING         WS -Token-Curr-Uc-TXT               2325 WORKING -STORAGE   2493*   2496    2499    2518    2891    3190    3211    3221  \nLISTING         WS -Token-Prev-TXT                  2327 WORKING -STORAGE   2500*   2518*   2522*   2581*   2792    2795    2796*   2815  \n                                                                          2820    2824    2842    2847    2856    2857*   2861    2864*  \n                                                                          2867*   2870*   2873*   2876*   2879*   2892    28 98    2906  \n                                                                          2910*   2972    2975*   2982    2993    2996*   3005    3020  \n                                                                          3029    3053    3062    3066*   3069 *   3077*   3085*   3092  \n                                                                          3101    3117    3120*   3123*   3130    3139    3150    3161  \n                                                                          3164*   3171  \nLISTING         WS-Token-Search-TXT                2329 WORKING -STORAGE   2661*   2662    2668  \nLISTING         WS -Token-Type-CD                   2331 WORKING -STORAGE   2566*   2575*   2586*   2639*   2643*   2664*   2669*   2682*  \nLISTING         WS -TT-Token-Is-Argtype-BOOL        2332 WORKING -STORAGE   2786    2810    2833    2917  \nLISTING         WS -TT-Token-Is-EOF-BOOL            2333 WORKING -STORAGE   2489    2543*  \nLISTING         WS -TT-Token-Is-Identifier -BOOL     2334 WORKING -STORAGE   2676*   2823    2860    2 905    2928  \nLISTING         WS -TT-Token-Is-Keyword-BOOL        2335 WORKING -STORAGE   2494    2517    2790    2813    2818    2836    2845    2851  \n                                                                          2896 \nLISTING         WS -TT-Token-Is-Lit-Alpha-BOOL      2336 WORKING -STORAGE   2599*   2625*  \nLISTING         WS -TT-Token-Is-Lit-Number-BOOL     2337 WORKING -STORAGE   2612*   2678    2748*   2780*  \nLISTING         WS -TT-Token-Is-Reserved -Wd-BOOL    2339 WORKING -STORAGE   2495    2787*   2811 *   2834*   2855  \nLISTING         WS -TT-Token-Is-Verb-BOOL           2338 WORKING -STORAGE   2498    2670  \nLISTING         WS -Usernames -QTY                   2341 WORKING -STORAGE   2483*  \nLISTING         WS -XDL-Def-Line-NUM                2348 WORKING -STORAGE   3258*   3275*  \nLISTING         WS -XDL-Prog-ID-TXT                 2344 WORKING -STORAGE   3255*   3267*   3271*  \nLISTING         WS -XDL-Ref-Flag-CHR                2354 WORKING -STORAGE   3287*  \nLISTING         WS -XDL-Ref-Line-NUM                2353 WORKING -STORAGE   3285*  \nLISTING         WS -XDL-Reference -TXT               2352 WORKING -STORAGE \nLISTING         WS -XDL-Section-TXT                 2350 WORKING -STORAGE   3257*   3273*  \nLISTING         WS -XDL-Token-TXT                   2346 WORKING -STORAGE   3256*   3268*   3272*  \nLISTING         WS -XH1-DT                          2359 WORKING -STORAGE   2472*  \n  ", "start_char_idx": 0, "end_char_idx": 6668, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5c26315-da6a-4295-8d2f-6f0181b2197f": {"__data__": {"id_": "d5c26315-da6a-4295-8d2f-6f0181b2197f", "embedding": null, "metadata": {"page_label": "366", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f62c61e-7c00-4f44-9b95-1db2fae5e730", "node_type": "4", "metadata": {"page_label": "366", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "8f4f28ba6899eec7dd5a84b128625745861e1ce1b987e75b7829f6d4491df534", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GCic  \u2013 an Interactive GNU COBOL  Full-Screen Compiler Front -End Sample Programs  \n \n11FEB2012 Version  Page 10-108 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                          E:/GNU-COBOL/samples/GCic.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 93  \n=============== ================================ ====== =============== ===================================================== ==========  \nLISTING         WS -XH1-Title-TXT                   2358 WORKING -STORAGE   2423*  \nLISTING         WS -XH3-Page-No-TXT                 2370 WORKING -STORAGE   3307*  \nLISTING         WS -Xref-Detail-Line-TXT            2343 WORKING -STORAGE   3228*   3240    3251    3270    3290    3313    3314*  \nLISTING         WS -Xref-Header-1-TXT               2357 WORKING -STORAGE   3301 \nLISTING         WS -Xref-Header-2-TXT               2361 WORKING -STORAGE   2442*   3308  \nLISTING         WS -Xref-Header-3-TXT               2363 WORKING -STORAGE   3309  \nLISTING         WS -Xref-Header-4-TXT               2372 WORKING -STORAGE   3310  \n ", "start_char_idx": 0, "end_char_idx": 1345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ebd6568-4890-4d2f-a82a-43256b2f14b5": {"__data__": {"id_": "1ebd6568-4890-4d2f-a82a-43256b2f14b5", "embedding": null, "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a188e631-adb8-47c4-ac1f-e0d0c34ee3a9", "node_type": "4", "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a359c227f1fe1141f11f32e3525f6aa9d71fa4e8715ad43f5c9d11805b0f5bd1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6df930df-68ad-431c-9d6f-4bb33ebd45ec", "node_type": "1", "metadata": {}, "hash": "d0458fab5a538700b31fb452a828f235139de16db74c7206ad786c73671a3a27", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-109 10.5.  STREAMIO \u2013 A Utility Subroutine to Simplify Stream I/O  \nSTREAMIO   is a utility I created to assist with handling stream I/O functions.  I\u2019ve used it to construct a number of useful little com mand -line utilities.  \n", "start_char_idx": 0, "end_char_idx": 368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6df930df-68ad-431c-9d6f-4bb33ebd45ec": {"__data__": {"id_": "6df930df-68ad-431c-9d6f-4bb33ebd45ec", "embedding": null, "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a188e631-adb8-47c4-ac1f-e0d0c34ee3a9", "node_type": "4", "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "a359c227f1fe1141f11f32e3525f6aa9d71fa4e8715ad43f5c9d11805b0f5bd1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ebd6568-4890-4d2f-a82a-43256b2f14b5", "node_type": "1", "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b7fb665173343c21ae113428d740dc923d209ed805823c6b82f4efa34f27b82e", "class_name": "RelatedNodeInfo"}}, "text": "Usage of this subroutine is completely documented in the program comments.  The program COPY s a copybook named STREAMIOcb , the format of which is described in the program \ncomments.  \nBoth STREAMIO.cbl  and STREAMIOcb.cpy  are included in the \u201csamples\u201d directory of  any pre -built distributions of GNU COBOL  that I have created .   \n  ", "start_char_idx": 368, "end_char_idx": 707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efac6625-c88a-4631-b478-74cc39b00b92": {"__data__": {"id_": "efac6625-c88a-4631-b478-74cc39b00b92", "embedding": null, "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5def114f-dffb-4f3b-a5ba-5e6b5f7081ff", "node_type": "4", "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f32b28911980498853253bc1bbe341ce4dbc54dbe2588ce22560d44e62dd2df3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1beaaa49-25ac-45ec-8d23-c7eb3d275426", "node_type": "1", "metadata": {}, "hash": "1eef990a049d8bc95e529329fbf2665f57b2a5fe8e698a69be77b757c4980049", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-110 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples /STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 1 \n====== =================================================================================================== =============================  \n     1        >>SOURCE FORMAT IS FIXED  \n     2        IDENTIFICATION DIVISION.  \n     3        PROGRAM -ID. STREAMIO.  \n     4       *>****************************************************************  \n     5       *> Author: Gary L. Cutler                                       **  \n     6       *>         CutlerGL@gmail.com                                   **  \n     7       *>                                                              **  \n     8       *> This routine centralizes all byt estream file I/O  functions  **  \n     9       *> into one routine.  The manner in which this routine is       **  \n    10       *> CALLed is as follows:                                        **  \n    11       *>                                                              ** \n    12       *>           CALL \"STREAMIO\" USING control -block [ , arg2 ]     **  \n    13       *>                                                              **  \n    14       *> where 'control -block' is defined by the \"STREAMIOcb.cpy\"     **  \n    15       *> copybook and 'arg2' will vary, depending upon the function   **  \n    16       *> specified in the control block.                              **  \n    17       *>                                                              **  \n    18       *> The STREAMIO routine has an advantage over the various       **  \n    19       *> \"CBL_xxxxxx_FILE\" routines in that:                          **  \n    20       *>                                                              **  \n    21       *> 1. It automates the establishment and on -going adjustment of **  \n    22       *>    the file -offset value in such a way as to simplify the    **  \n    23       *>    sequential processing of a bytestream file (you may still **  \n    24       *>    specify a file -offset manuall y on each read or write, if  **  \n    25       *>    you wish)                                                 **  \n    26       *>                                                              **  \n    27       *> 2. It auto -detects the size of the I/O buffer yo u supply to  **  \n    28       *>    STREAMIO, using that as the byte -count of all read and    **  \n    29       *>    write operations.                                         **  \n    30       *>                                                              **  \n    31       *> 3. Not only does it support the raw input and output of data **  \n    32       *>    that the CBL_READ_FILE and CBL_WRITE_FILE routines do,    **  \n    33       *>    but on input it is also capable of delivering just a      **  \n    34       *>    single newline -delimited or carriage -return/newline de -   ** \n    35       *>    limited record to the caller.                             **  \n    36       *>                                                              **  \n    37       *> 4. On output, ST REAMIO can optionally append either a new -   ** \n    38       *>    line or carriage -return/newline sequence (your choice) to **  \n    39       *>    the end of every record it writes.                        **  \n    40       *>                                                              ** \n    41       *> 5. STREAMIO can automatically generate filenames for output  **  \n    42       *>    files if you wish, simplifying the process of creating    **  \n    43       *>    scratch or work files.                                    **  \n    44       *>                                                              **  \n    45       *> 6. The STREAMIO routine also allows you to (optionally) re -  ** \n    46       *>    gister a general error -handling routine to be given con -  ** \n    47       *>    trol should a fatal error be detected with STREAMIO.      **  \n    48       *>                                                              **  \n    49       *>    This routine can be \"turned on\" and \"turned off\" at will. ", "start_char_idx": 0, "end_char_idx": 4597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1beaaa49-25ac-45ec-8d23-c7eb3d275426": {"__data__": {"id_": "1beaaa49-25ac-45ec-8d23-c7eb3d275426", "embedding": null, "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5def114f-dffb-4f3b-a5ba-5e6b5f7081ff", "node_type": "4", "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f32b28911980498853253bc1bbe341ce4dbc54dbe2588ce22560d44e62dd2df3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efac6625-c88a-4631-b478-74cc39b00b92", "node_type": "1", "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "78584f1a8a30d35481666bad2a166311f88f9b7c939b8d68ebc30b141b59725f", "class_name": "RelatedNodeInfo"}}, "text": "**  \n    50       *>                                                              **  \n    51       *> The control block format is as follows.  This structure must **  \n    52       *> be defined under an 01 -level dat a item of your creation and  **  \n    53       *> should be INITIALIZEd before any items within it are used.   **  \n    54       *>                                                              **  \n  ", "start_char_idx": 4597, "end_char_idx": 5016, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f28b51b-c7cc-4378-9e5b-38487538b9f1": {"__data__": {"id_": "2f28b51b-c7cc-4378-9e5b-38487538b9f1", "embedding": null, "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7", "node_type": "4", "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25e7351831d547ad9dbdc41271cf369fe79d969ab3c2094df330a6b62b5cd9da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da7e3020-ea30-4d75-825a-f016f30a64f2", "node_type": "1", "metadata": {}, "hash": "cf753f1e62842227058a3eea66237a5c8e05bfa73ed4ee771ff694b1991c7588", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-111 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/Min GW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 2 \n====== ====================================================================================================================== ==========  \n    55       *> 05 SCB -Handle-NUM                   PIC X(4) COMP -X.         **  \n    56       *> 05 SCB -Mode-CD                      PIC X(1).                ", "start_char_idx": 0, "end_char_idx": 858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da7e3020-ea30-4d75-825a-f016f30a64f2": {"__data__": {"id_": "da7e3020-ea30-4d75-825a-f016f30a64f2", "embedding": null, "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7", "node_type": "4", "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25e7351831d547ad9dbdc41271cf369fe79d969ab3c2094df330a6b62b5cd9da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f28b51b-c7cc-4378-9e5b-38487538b9f1", "node_type": "1", "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c1cc825c34484e0a642ff43652cc150f7d26b9559308ec4de6dc47cc209ef350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "611eb08b-f4e5-44bb-aec3-a73f4d75370f", "node_type": "1", "metadata": {}, "hash": "bea8468e34698cc0d0b363e9c3ec2269736cbc2f234974125fabc6ad38b7dcaa", "class_name": "RelatedNodeInfo"}}, "text": "**  \n    57       *>    88 SCB -Mode-Input-BOOL           VALUE 'I', 'i'.          **  \n    58       *>    88 SCB -Mode-Output-BOOL          VALUE 'O', 'o'.          **  \n    59       *>    88 SCB -Mode-Both-BOOL            VALUE 'B', 'b'.          **  \n    60       *> 05 SCB -Function -CD                  PIC X(2).                **  \n    61       *>    88 SCB -Func-CLOSE-BOOL           VALUE 'C ' , 'c '.        **  \n    62       *>    88 SCB -Func-DELETE-BOOL          VALUE 'D ', 'd '.        **  \n    63       *>    88 SCB -Func-OPEN-BOOL            VALUE 'O ', 'o '.        **  \n    64       *>    88 SCB -Func-READ-BOOL            VALUE 'R ', 'r '.        * * \n    65       *>    88 SCB -Func-READ-Delim-BOOL      VALUE 'RD', 'rd',        **  \n    66       *>                                           'rD', 'Rd'.        **  \n    67       *>    88 SCB -Func-WRITE-BOOL           VALUE 'W ', 'w '.        **  \n    68       *>    88 SCB -Func-WRITE-Delim-BOOL     VALUE 'WD', 'wd',        **  \n    69       *>                                           'wD', 'Wd'.        **  \n    70       *> 05 SCB -Delimiter -Mode-CD            PIC X(1).                **  \n    71       *>    88 SCB-Delim-Unix-BOOL           VALUE 'U', 'u'.          **  \n    72       *>    88 SCB -Delim-Windows-BOOL        VALUE 'W', 'w'.          **  \n    73       *> 05 SCB -Offset-NUM                   PIC X(8) COMP -X.         ", "start_char_idx": 858, "end_char_idx": 2270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "611eb08b-f4e5-44bb-aec3-a73f4d75370f": {"__data__": {"id_": "611eb08b-f4e5-44bb-aec3-a73f4d75370f", "embedding": null, "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7", "node_type": "4", "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "25e7351831d547ad9dbdc41271cf369fe79d969ab3c2094df330a6b62b5cd9da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da7e3020-ea30-4d75-825a-f016f30a64f2", "node_type": "1", "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53ec09f8158bf5ad1cbab0f01580f8cb2ed79d613dd3dc374e94253b0e7642a1", "class_name": "RelatedNodeInfo"}}, "text": "**  \n    74       *> 05 SCB -Error-Routine-PTR            USAGE PROGRAM -POINTER.   **  \n    75       *> 05 SCB -Error-Routine-NUM REDEFINES SCB -Error-Routine-PTR     **  \n    76       *>                                     USAGE BINARY -LONG.       **  \n    77       *> 05 SCB -Return-CD                    USAGE BINARY -LONG.       **  \n    78       *> 05 SCB -Filename -TXT                 PIC X(256).              **  \n    79       *>                                                              **  \n    80       *> Such a structure is defined for your use using t he copybook  **  \n    81       *> \"STREAMIOcb.cpy\" (you may also define your own, provided it  **  \n    82       *> conforms to the above layout).                               **  \n    83       *> -------------------------------------------------------------- ** \n    84       *> SCB -Handle-NUM                                               **  \n    85       *> -------------------------------------------------------------- ** \n    86       *>                                                              **  \n    87       *> Serves as a file handle to the file once it has been opened  **  \n    88       *> (via the \"SCB -Func-OPEN-BOOL\" function).                     **  \n    89       *>                                                              **  \n    90       *> ----------------- --------------------------------------------- ** \n    91       *> SCB -Mode-CD                                                  **  \n    92       *> -------------------------------------------------------------- ** \n    93       *>                                                              ** \n    94       *> Prior to calling \"STREAMIO\" for the first time for a file,   **  \n    95       *> the appropriate subordinate level -88 must be set to TRUE to  **  \n    96       *> select an I/O mode.  You may also simply move one of the     **  \n    97       *> string values listed on the level -88 items to \"SCB -Mode-CD\". ** \n    98       *>                                                              **  \n    99       *> -------------------------------------------------------------- ** \n   100       *> SCB -Function -CD                                              **  \n   101       *> -------------------------------------------------------------- ** \n   102       *>                                                              ** \n   103       *> The appropriate subordinate level -88 must be set to TRUE to  **  \n   104       *> select a function you'd like to execute against a file.  You **  \n   105       *> may also simply move one of the string values listed on the  **  \n   106       *> level -88 items to \"SCB -Function -CD\".                         **  \n   107       *>                                                              **  \n   108       *> Available functions are as follows:                          ** \n  ", "start_char_idx": 2270, "end_char_idx": 5172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57e56554-1eb7-4f64-90b7-fe0859f58cbf": {"__data__": {"id_": "57e56554-1eb7-4f64-90b7-fe0859f58cbf", "embedding": null, "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a21e7d2a-309b-475f-909b-a0c9324a7c65", "node_type": "4", "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "569d7411f3cb29c441d386131cae19fe9e0f265aa2ed4166cdb38bbe191bf309", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75d0d4db-8435-4926-b785-6044b999c06e", "node_type": "1", "metadata": {}, "hash": "4f852cc4b1fb256a5d8ef54a2c6dfbbb34ce23f19fe27bd6b4696045f8012608", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-112 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 3 \n====== =============================================================================== =================================================  \n   109       *>                                                              **  \n   110       *> SCB -Func-OPEN-BOOL                                           **  \n   111       *>                                                              ** \n   112       *>      This must be the function specified the first time you  **  \n   113       *>      call STREAMIO for any given file.  It opens the file &  **  \n   114       *>      makes it available for use according to t he             **  \n   115       *>      \"SCB -Mode-CD\" specification.                            ", "start_char_idx": 0, "end_char_idx": 1266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75d0d4db-8435-4926-b785-6044b999c06e": {"__data__": {"id_": "75d0d4db-8435-4926-b785-6044b999c06e", "embedding": null, "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a21e7d2a-309b-475f-909b-a0c9324a7c65", "node_type": "4", "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "569d7411f3cb29c441d386131cae19fe9e0f265aa2ed4166cdb38bbe191bf309", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57e56554-1eb7-4f64-90b7-fe0859f58cbf", "node_type": "1", "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3eb45ec7d52a59181b33631589b7f4b2674342a838903fe5c124fcafe4a85682", "class_name": "RelatedNodeInfo"}}, "text": "**  \n   116       *>                                                              **  \n   117       *>      The filename being opened must be specified in the      * * \n   118       *>      \"SCB -Filename -TXT\" field.                               **  \n   119       *>                                                              **  \n   120       *>      The SCB -Offset-NUM field will be initialized to ZERO.   **  \n   121       *>                                                              **  \n   122       *>      If \"arg2\" is specified in conjunction with this funct -  ** \n   123       *>      ion, it will be ignored.                                **  \n   124       *>                                                              ** \n   125       *> SCB -Func-CLOSE-BOOL                                          **  \n   126       *>                                                              **  \n   127       *>      This functi on should be the one specified the LAST time **  \n   128       *>      you call STREAMIO against a specific file.  After this  **  \n   129       *>      function has been executed, you'll have to re -open the  **  \n   130       *>      file if you wish to use it with STREAMIO again.         **  \n   131       *>                                                              **  \n   132       *>      The SCB -Handle-NUM item will be reset to ZERO.          **  \n   133       *>                                                              ** \n   134       *>      If \"arg2\" is specified in conjunction with this funct -  ** \n   135       *>      ion, it will be ignored.                                **  \n   136       *>                                                              **  \n   137       *> SCB -Func-DELETE-BOOL                                         **  \n   138       *>                                                              **  \n   139       *>      This function will delete the file specified in the     **  \n   140       *>      control block (see SCB -Filename -TXT).                   **  \n   141       *>                                                              **  \n   142       *>      This function should not be performed against a file    **  \n   143       *>      that is ope n.                                           **  \n   144       *>                                                              **  \n   145       *>      If \"arg2\" is specified in conjunction with this funct -  ** \n   146       *>      ion, it will be ignored.                                ** \n   147       *>                                                              **  \n   148       *> SCB -Func-READ-BOOL                                           **  \n   149       *>                                                              **  \n   150       *>      This function invokes a standard CBL_READ_FILE against  **  \n   151       *>      the file specified in the control block (see            **  \n   152       *>      SCB-Filename -TXT).                                      **  \n   153       *>                                                              **  \n   154       *>      The buffer into which you wish to read data must be     **  \n   155       *>      supplied as  \"arg2\".  The size of that buffer, in bytes, **  \n   156       *>      will define the \"byte -count\" value supplied to the      **  \n   157       *>      CBL_READ_FILE subroutine.  The buffer data item will be **  \n   158       *>      set to SPACES before the re ad takes place.              **  \n   159       *>                                                              **  \n   160       *>      If the file -offset value (SCB -Offset-NUM) is greater    **  \n   161       *>      than the size of the file, a \"no more data\"  return code **  \n   162       *>      (01) will be passed back in SCB -Return-CD and the       **  \n  ", "start_char_idx": 1266, "end_char_idx": 5144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "feda77a3-cb4c-411a-ac04-a64b2cf51bda": {"__data__": {"id_": "feda77a3-cb4c-411a-ac04-a64b2cf51bda", "embedding": null, "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f3b20aa-4f55-4be3-95ac-c0ed92573c96", "node_type": "4", "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f19d210067fd3ef9129b669d5eaec72f8879c05234db32844b1fca3cea7ef2aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50a6ec46-f2c8-49ed-b349-ef934969253f", "node_type": "1", "metadata": {}, "hash": "6365ff13e1ac4540b81ec03fd68c91fdeabca54bc1e8fcd4cc569d36e0d9d4ce", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-113 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 4 \n====== ============================================================================================================================= === \n   163       *>      buffer will have been set to SPACES.                    **  \n   164       *>                                                              ** \n   165       *>      At the conclusion of a successful SCB -Func-READ-BOOL,   **  \n   166       *>      the value of SCB -Offset-NUM will have been automati -    ** \n   167       *>      cally incremented by the byte -count size of \"arg2\".     ", "start_char_idx": 0, "end_char_idx": 1101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50a6ec46-f2c8-49ed-b349-ef934969253f": {"__data__": {"id_": "50a6ec46-f2c8-49ed-b349-ef934969253f", "embedding": null, "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f3b20aa-4f55-4be3-95ac-c0ed92573c96", "node_type": "4", "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f19d210067fd3ef9129b669d5eaec72f8879c05234db32844b1fca3cea7ef2aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "feda77a3-cb4c-411a-ac04-a64b2cf51bda", "node_type": "1", "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "dd6fe5c81f58f0982a50e04926ef2d1c1d93c811f64b86be15c2ba359577e507", "class_name": "RelatedNodeInfo"}}, "text": "**  \n   168       *>                                                              **  \n   169       *> SCB -Func-WRITE-BOOL                                          **  \n   170       *>                                                              * * \n   171       *>      This function invokes a standard CBL_WRITE_FILE against **  \n   172       *>      the file specified in the control block (see            **  \n   173       *>      SCB -Filename -TXT).                                      **  \n   174       *>                                                              **  \n   175       *>      The buffer from which data will be written to the file  **  \n   176       *>      must be supplied as \"arg2\".  The size of that buffer,   **  \n   177       *>      in bytes, will define the \"byte -count\" value supplied   **  \n   178       *>      CBL_WRITE_FILE subroutine.  The buffer data will be     **  \n   179       *>      written to the file -offset position defined by the      **  \n   180       *>      SCB -Offset-NUM value.  You may specify \"arg2\" either    **  \n   181       *>      as an actual alphanumeric data item or as an alpha -     ** \n   182       *>      numeric literal.                                        **  \n   183       *>                                                              ** \n   184       *>      If the file -offset value (SCB -Offset-NUM) is greater    **  \n   185       *>      than the size of the file, a \"no more data\" return code **  \n   186       *>      will be passed back in SCB -Return-CD and th e buffer     **  \n   187       *>      will have been set to SPACES.                           **  \n   188       *>                                                              **  \n   189       *>      At the conclusion of a successful SCB -Func-WRITE-BOOL   **  \n   190       *>      operation, the value of SCB -Offset-NUM will have been   **  \n   191       *>      automatically incremented by the byte -count size of     **  \n   192       *>      \"arg2\".                                                 **  \n   193       *>                                                              ** \n   194       *> SCB -Func-READ-Delim-BOOL                                     **  \n   195       *>                                                              **  \n   196       *>      SCB -Func-READ-Delim-BOOL bahaves like the SCB -FUNC-     ** \n   197       *>      READ function, with the following behavioral dif -       ** \n   198       *>      ferences:                                               **  \n   199       *>                                                              ** \n   200       *>      1. When data is read from the file, only that data read **  \n   201       *>         up to BUT NOT INCLUDING an end -of-line delimiter     **  \n   202       *>         sequence (either a LF or CRLF) will be retained in   **  \n   203       *>         the buffer - the remainder of the buffer from the    **  \n   204       *>         end -of-line sequence onward will be reset to SPACES. **  \n   205       *>         The file -offset value (SCB -Offset-NUM) will be in -   ** \n   206       *>         cremented ONLY by the amount of data transferred up  **  \n   207       *>         to AND INCLUDING the end -of-line sequence.           **  \n   208       *>                                                              ** \n   209       *>      2. When data is read from the file and an end -of-line   **  \n   210       *>         delimiter sequence (either a LF or a CRLF) cannot be **  \n   211       *>         found within the buffer,  the assumption is made that **  \n   212       *>         the record is too long to fit within the buffer.  In **  \n   213       *>         these instances, an SCB -Return-CD value of 02 will   **  \n   214       *>         be returned and the SCB -Offset-NUM value  will be     **  \n   215       *>         incremented past the next end -of-line sequence in    **  \n   216       *>         the file (this will involve at least one additional  **  \n  ", "start_char_idx": 1101, "end_char_idx": 5148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bba0ed14-b7e2-41e3-8d8a-20026fff8072": {"__data__": {"id_": "bba0ed14-b7e2-41e3-8d8a-20026fff8072", "embedding": null, "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3d3eba5-62fc-4e32-b655-d1002c822730", "node_type": "4", "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7a2486f30befd76f75a8eee560fba16bdf9cdf90b8c57e49ad7758369e8983a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc6145a9-7100-4c8f-aa30-b906f4f1727d", "node_type": "1", "metadata": {}, "hash": "702d97e987e79343e64aa3ac831eae6caeb2d219d19fc71c6f2570aadca41b31", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-114 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C)  2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 5 \n====== ====================================================================================================================== ==========  \n   217       *>         call to CBL_READ_FILE to locate that eol sequence,   **  \n   218       *>         but any additional such reads will be done internal - ** \n   219       *>         ly to STREAMIO and will be entirely transparent to   **  \n   220       *>         the caller of STREAMIO.                              ** \n   221       *>                                                              **  \n   222       *>      DO NOT USE the Streamio -READ-Delim function if the      **  \n   223       *>      possibility exists that linefeed (X\"0A\") or carriage -   ** \n   224       *>      return (X\"0D\") characters could exist as actual data    **  \n   225       *>      characters in the file.                                 ", "start_char_idx": 0, "end_char_idx": 1429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc6145a9-7100-4c8f-aa30-b906f4f1727d": {"__data__": {"id_": "cc6145a9-7100-4c8f-aa30-b906f4f1727d", "embedding": null, "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3d3eba5-62fc-4e32-b655-d1002c822730", "node_type": "4", "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "7a2486f30befd76f75a8eee560fba16bdf9cdf90b8c57e49ad7758369e8983a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bba0ed14-b7e2-41e3-8d8a-20026fff8072", "node_type": "1", "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3069dcf9bf2f09a2697a37ddc23d3099435150e3a19e0801ee3d565824cf09d5", "class_name": "RelatedNodeInfo"}}, "text": "**  \n   226       *>                                                              **  \n   227       *> SCB -Func-WRITE-Delim-BOOL                                    **  \n   228       *>                                                              **  \n   229       *>      SCB -Func-WRITE-Delim-BOOL acts like the Streamio -       ** \n   230       *>      FUNC-WRITE function, with the following difference:     **  \n   231       *>                                                              **  \n   232       *>      After the specified data is written to the file, an     **  \n   233       *>      end -of-line sequence will also be written to the file.  **  \n   234       *>      The file -offset value (SCB -Value) will be incremented   **  \n   235       *>      by the byte -count size of the data PLUS the size of the **  \n   236       *>      end -of-line sequence.  One of two possible end -of-line  **  \n   237       *>      sequences must be specified using the value of SCB -     ** \n   238       *>      Delimter -Mode.                                          **  \n   239       *>                                                              ** \n   240       *> -------------------------------------------------------------- ** \n   241       *> SCB -Delimiter -Mode-CD                                        **  \n   242       *> -------------------------------------------------------------- ** \n   243       *>                                                              **  \n   244       *> This data item is needed only when issuing the Streamio -     ** \n   245       *> FUNC -WRITE-Delim function.  In those circumstances, this     **  \n   246       *> item defines what end -of-line delimiter sequence is to be    **  \n   247       *> written:                                                     **  \n   248       *>                                                              **  \n   249       *> If SCB -Delim-Unix-BOOL is true, a linefeed character will    **  \n   250       *> be written.                                                  **  \n   251       *>                                                              **  \n   252       *> If SCB -Delim-Windows-BOOL is tru e, a carriage -return and     **  \n   253       *> linefeed sequence will be written.                           **  \n   254       *>                                                              **  \n   255       *> -------------------------------------------------------------- ** \n   256       *> SCB -Offset-NUM                                               **  \n   257       *> -------------------------------------------------------------- ** \n   258       *>                                                              ** \n   259       *> This data item specifies the next relative byte number with - ** \n   260       *> in the file where the next read or write will start.         **  \n   261       *>                                                              ** \n   262       *> SCB -Offset-NUM is automatically set to 0 (the first byte)    **  \n   263       *> when the file is opened, and is automatically incremented as **  \n   264       *> the file is read or written via STREAMIO.                    **  \n   265       *>                                                              **  \n   266       *> You may also manually set this value as desired before any   **  \n   267       *> call to STREAMIO.                                            ** \n   268       *>                                                              **  \n   269       *> -------------------------------------------------------------- ** \n   270       *> SCB -Error-Routine-PTR                                        **  \n  ", "start_char_idx": 1429, "end_char_idx": 5147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eea871a8-fd5d-4998-aebf-9df5464d465a": {"__data__": {"id_": "eea871a8-fd5d-4998-aebf-9df5464d465a", "embedding": null, "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bb27cc1-09df-4b81-9d1d-c312b99de80c", "node_type": "4", "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a72dff0aed0e4e0c25ab1edc1f5df9d2901e0b1fc00210a5092867cc0c9e6fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77a0051c-96d7-46c8-b102-ba8327a379a5", "node_type": "1", "metadata": {}, "hash": "2cee42b4774bbf90d6aec6585e6eb1d17efd69cfbd89585aef1ebfdf019e7ad3", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-115 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/sam ples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 6 \n====== =============================================================================================== =================================  \n   271       *> -------------------------------------------------------------- ** \n   272       *>                                                              **  \n   273       *> To specify a general error -handling routine fo r handling     **  \n   274       *> STREAMIO failures, Create the routine and define an entry -   ** \n   275       *> name for it via the ENTRY statement.  Then use the following **  \n   276       *> to set that routine up as the error handler:                 * * \n   277       *>                                                              **  \n   278       *>    SET SCB -Error-Routine-PTR TO ENTRY \"entry -name\"           **  \n   279       *>                                                              **  \n   280       *> To \"turn off\" the error -routine:                             **  \n   281       *>                                                              **  \n   282       *>    SET SCB -Error-Routine-PTR TO NULL                         **  \n   283       *>                                                              ** \n   284       *> If a fatal error occurs (any error not marked with a \">\" in  **  \n   285       *> the SCB -Return-CD discussion), the error routine you spe -    ** \n   286       *> cified (if any) will be set up as an exit routine via the    **  \n   287       *> CBL_EXIT_PROC subroutine; the STREAMIO routine will then is - ** \n   288       *> sue a STOP RUN to intentionally trigger your error routine.  ", "start_char_idx": 0, "end_char_idx": 2174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77a0051c-96d7-46c8-b102-ba8327a379a5": {"__data__": {"id_": "77a0051c-96d7-46c8-b102-ba8327a379a5", "embedding": null, "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bb27cc1-09df-4b81-9d1d-c312b99de80c", "node_type": "4", "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "2a72dff0aed0e4e0c25ab1edc1f5df9d2901e0b1fc00210a5092867cc0c9e6fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eea871a8-fd5d-4998-aebf-9df5464d465a", "node_type": "1", "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "534fd08578392cf6fc2d4d76979beca2fb3725a37f03895a4d6ba6a54141f70f", "class_name": "RelatedNodeInfo"}}, "text": "**  \n   289       *> You will not be able to recover your program once your error **  \n   290       *> routine triggers.  If you wish to be able to recover from    **  \n   291       *> fatal STREAMIO errors, you should NOT use the SCB -Error-     ** \n   292       *> Routine feature but instead you should explicitl y test the   **  \n   293       *> SCB -Return-CD value after every call to STREAMIO.            **  \n   294       *>                                                              **  \n   295       *> A default error routine is defined by the \"STREAMIOError.cpy\"**  \n   296       *> copybook.                                                    **  \n   297       *>                                                              **  \n   298       *> -------------------------------------------------------------- ** \n   299       *> SCB-Return-CD                                                **  \n   300       *> -------------------------------------------------------------- ** \n   301       *>                                                              **  \n   302       *> The following ar e the possible SCB -Return-CD values.  The    **  \n   303       *> ones marked with a \">\" will NOT trigger an error -routine, if **  \n   304       *> one is currently registered via SCB -Error-Routine-PTR.       **  \n   305       *>                                                              ** \n   306       *>   12 I/O error writing to file                               **  \n   307       *>   11 File does not exist                                     **  \n   308       *>   10 File already OPEN or already CLOSEd                     **  \n   309       *> > 02 READ -Delim was truncated                                **  \n   310       *> > 01 No more data is available from the current              **  \n   311       *>      SCB-Offset-NUM                                          **  \n   312       *> > 00 OK - the operation was successful                       **  \n   313       *>   -1 Invalid SCB -Function -CD                                 **  \n   314       *>   -2 Invalid SCB -Mode-CD                                     **  \n   315       *>   -3 CBL_xxxxx_FILE routine rejected operation               **  \n   316       *>   -4 Invalid delimiter mode specified (Not U/W)              **  \n   317       *>                                                              ** \n   318       *> -------------------------------------------------------------- ** \n   319       *> SCB -Filename -TXT                                             **  \n   320       *> ------------------------------------------------- ------------- ** \n   321       *>                                                              **  \n   322       *> This is the name of the file you wish to access.             **  \n   323       *>                                                              **  \n   324       *> If you are planning on reading the file, the file MUST exist **  \n  ", "start_char_idx": 2174, "end_char_idx": 5148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b778797-4974-40c4-8e10-fca22bfd0a63": {"__data__": {"id_": "1b778797-4974-40c4-8e10-fca22bfd0a63", "embedding": null, "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "222502d3-e79d-470b-ab84-c483cf624e94", "node_type": "4", "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ad7c020b27e23b97f02d40464dac51a8d37c8a062213cd588f40d7388b914926", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39ec31a3-df66-42bb-81a7-a4cb3aa759f1", "node_type": "1", "metadata": {}, "hash": "7d7d7855f08737d4322230f982bd3fa3a221ff470d9c224a0c0068624ed94513", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-116 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 7 \n====== =============== =================================================================================================================  \n   325       *> at the time the SCB -Func-OPEN-BOOL is executed.              **  \n   326       *>                                                              ** \n   327       *> If you are planning on writing to the file, the file need    **  \n   328       *> exist when the SCB -Func-OPEN-BOOL is issued.                 ", "start_char_idx": 0, "end_char_idx": 1019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39ec31a3-df66-42bb-81a7-a4cb3aa759f1": {"__data__": {"id_": "39ec31a3-df66-42bb-81a7-a4cb3aa759f1", "embedding": null, "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "222502d3-e79d-470b-ab84-c483cf624e94", "node_type": "4", "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ad7c020b27e23b97f02d40464dac51a8d37c8a062213cd588f40d7388b914926", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b778797-4974-40c4-8e10-fca22bfd0a63", "node_type": "1", "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b519ca96eae173582bed081a11afebb5d2937518511e9f2021aa403cec16e522", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e56af11-9175-4dab-a1c9-fa5547598f68", "node_type": "1", "metadata": {}, "hash": "c5e5b61c6f0490d81f5735735cfcfae892a8f37a9499f3e9d158f0fd510b90ff", "class_name": "RelatedNodeInfo"}}, "text": "**  \n   329       *>                                                              * * \n   330       *> In general, the contents of SCB -Filename -TXT should re -      ** \n   331       *> flect the complete path to the file as well as the name of   **  \n   332       *> the file itself, unless the file is contained in whatever    **  \n   333       *> directory is current at the time the SCB -Func-OPEN-BOOL is   **  \n   334       *> executed.                                                    **  \n   335       *>                                                              **  \n   336       *> The following special values may be used for                 **  \n   337       *> SCB -Filename -TXT:                                            **  \n   338       *>                                                              **  \n   339       *> SPACES If the fi lename is SPACES, a filename will be created **  \n   340       *>        automatically for you in whatever directory is de -    ** \n   341       *>        fined by the TEMP environment variable.  If there IS  **  \n   342       *>        no TEMP variable defined,  the \"/tmp\" folder will be   **  \n   343       *>        assumed.  The filename will be STREAMIO -nnnnnnnn.dat  **  \n   344       *>        where \"nnnnnnnn\" is a random number.                  **  \n   345       *>                                                              ** \n   346       *> .      If you specify only a dot (period) as the filename,   **  \n   347       *>        the behavior will be the same as with a value of      **  \n   348       *>        SPACES except there will be no \".dat\" at the end of   **  \n   349       *>        the generated filename.                               **  \n   350       *>                                                              **  \n   351       *> .ext   If you specify a filename extension prefixed with a   **  \n   352       *>        dot (period), the behavior will be the same as if a   **  \n   353       *>        value of SPACES were specified, except that the given **  \n   354       *>        extension will be used instead of \".dat\".  Note that  **  \n   355       *>        if you ar e using a Unix/Cygwin implementation of      **  \n   356       *>        OpenCOBOL and you'd like to specify a hidden file in  **  \n   357       *>        the current directory as the SCB -Filename -TXT, you    **  \n   358       *>        MUST code the filename as  \"./.xxxxx\" to avoid having  **  \n   359       *>        it treated as this special name.                      **  \n   360       *>                                                              **  \n   361       *>****************************************************************  \n   362        ENVIRONMENT DIVISION.  \n   ", "start_char_idx": 1019, "end_char_idx": 3782, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e56af11-9175-4dab-a1c9-fa5547598f68": {"__data__": {"id_": "3e56af11-9175-4dab-a1c9-fa5547598f68", "embedding": null, "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "222502d3-e79d-470b-ab84-c483cf624e94", "node_type": "4", "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ad7c020b27e23b97f02d40464dac51a8d37c8a062213cd588f40d7388b914926", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39ec31a3-df66-42bb-81a7-a4cb3aa759f1", "node_type": "1", "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "adc7749ea33755ff48c258d83aca18a06fb3f211f14a45bff44e683436671e75", "class_name": "RelatedNodeInfo"}}, "text": "363        CONFIGURATION SECTION.  \n   364        REPOSITORY.  \n   365            FUNCTION ALL INTRINSIC.  \n   366        DATA DIVISION.  \n   367        WORKING-STORAGE SECTION.  \n   368        01  WS -Access-Mode-CD                     PIC X(1) COMP -X. \n   369        01  WS -Arg-Length-NUM                     PIC X(4) COMP -X. \n   370        01  WS -Buffer-TXT                         PIC X(256).  \n   371        01  WS-Delim-Buffer-TXT                   PIC X(2).  \n   372        01  WS -Env-Temp-TXT                       PIC X(256).  \n   373        01  WS -Slash-CHR                          PIC X(1).  \n   374        01  WS -Tally-NUM                          USAGE BIN ARY-LONG. \n   375        01  WS -8-Digit-NUM                        PIC 9(8).  \n   376        01  WS -256-Byte-TXT                       PIC X(256).  \n   377        LINKAGE SECTION.  \n   378        01  L -StreamIO -Control-Block-TXT. \n  ", "start_char_idx": 3782, "end_char_idx": 4697, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e5b0c8f-4fc3-4e68-a760-c77a7be91c99": {"__data__": {"id_": "1e5b0c8f-4fc3-4e68-a760-c77a7be91c99", "embedding": null, "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3", "node_type": "4", "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36cb65c01848d939ea11822688afc07a6925498a25890c1e65030fa8dcdf0248", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f958cbf5-2359-4250-9f21-247a4c1539d5", "node_type": "1", "metadata": {}, "hash": "a9707741d0db6226cdc1cb84e7db05035a588a2f3b19ae4f7646a55f3860b143", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-117 GNU COBOL V2.0 11FEB2012 Source  Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statemen t                                                                                                                Page: 8  \n====== ====================================================================================================================== ==========  \n   379            COPY STREAMIOcb  \n   380                REPLACING LEADING ==SCB -== BY ==L -SCB-==. \n        05 L-SCB-Handle-NUM PIC X(4) COMP -X. \n        ", "start_char_idx": 0, "end_char_idx": 856, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f958cbf5-2359-4250-9f21-247a4c1539d5": {"__data__": {"id_": "f958cbf5-2359-4250-9f21-247a4c1539d5", "embedding": null, "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3", "node_type": "4", "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36cb65c01848d939ea11822688afc07a6925498a25890c1e65030fa8dcdf0248", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e5b0c8f-4fc3-4e68-a760-c77a7be91c99", "node_type": "1", "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "545d3350befc8fa25b5097ce3f521a56ffc81c5106311c05230a3f73ecc81ec2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8499007-1aee-4a9a-9140-6989c295aafa", "node_type": "1", "metadata": {}, "hash": "e84083912a9d35f9bd6ec2bd0866328e7f2b5171c7339fd58f17aa7b616e4ee1", "class_name": "RelatedNodeInfo"}}, "text": "05 L-SCB-Mode-CD PIC X(1).  \n        88 L-SCB-MODE-Input-BOOL VALUE 'I' 'i'.  \n        88 L-SCB-MODE-Output-BOOL VALUE 'O' 'o'.  \n        88 L-SCB-MODE-Both-BOOL VALUE 'B' 'b'.  \n        05 L-SCB-Function -CD PIC X(2).  \n        88 L-SCB-Func-CLOSE-BOOL VALUE 'C ' 'c '.  \n        88 L-SCB-Func-DELETE-BOOL VALUE 'D ' 'd '.  \n        88 L-SCB-Func-OPEN-BOOL VALUE 'O ' 'o '.  \n        88 L-SCB-Func-READ-BOOL VALUE 'R ' 'r '.  \n        88 L-SCB-Func-READ-Delim-BOOL VALUE 'RD' 'rd'  \n        'rD' 'Rd'.  \n        88 L-SCB-Func-WRITE-BOOL VALUE 'W ' 'w '.  \n        88 L-SCB-Func-WRITE-Delim-BOOL VALUE 'WD' 'wd'  \n        'wD' 'Wd'.  \n        05 L-SCB-Delimiter -Mode-CD PIC X(1).  \n        88 L-SCB-DELIM-Unix-BOOL VALUE 'U' 'u'.  \n        88 L-SCB-DELIM-Windows-BOOL VALUE 'W' 'w'.  \n        05 L-SCB-Offset-NUM PIC X(8) COMP -X. \n        ", "start_char_idx": 856, "end_char_idx": 1697, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8499007-1aee-4a9a-9140-6989c295aafa": {"__data__": {"id_": "d8499007-1aee-4a9a-9140-6989c295aafa", "embedding": null, "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3", "node_type": "4", "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "36cb65c01848d939ea11822688afc07a6925498a25890c1e65030fa8dcdf0248", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f958cbf5-2359-4250-9f21-247a4c1539d5", "node_type": "1", "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0aaad3750f04596ebedf2eb44d840b8a520af9c8ea145ccb249169d7845a9ee8", "class_name": "RelatedNodeInfo"}}, "text": "05 L-SCB-Error-Routine-PTR USAGE PROGRAM -POINTER.  \n        05 L-SCB-Error-Routine-NUM REDEFINES L -SCB-Error-Routine-PTR \n        USAGE BINARY -LONG. \n        05 L-SCB-Return-CD USAGE BINARY -LONG. \n        05 L-SCB-Filename -TXT PIC X(256).  \n   381        01  L -Arg2-TXT                            PIC X ANY LENGTH.  \n   382        PROCEDURE DIVISION USING L -StreamIO -Control-Block-TXT, \n   383                                 L -Arg2-TXT. \n   384        000 -Main SECTION.  \n   385            MOVE 00 TO L -SCB-Return-CD \n   386            EVALUATE TRUE  \n   387                WHEN L-SCB-Func-CLOSE-BOOL \n   388                    PERFORM 030 -Validate -Handle-NonZero \n   389                    PERFORM 200 -CLOSE \n   390                WHEN L -SCB-Func-DELETE-BOOL \n   391                    CALL \"CBL_DELETE_FILE\" USING L -SCB-Filename -TXT \n   392                WHEN L -SCB-Func-OPEN-BOOL \n   393                    PERFORM 020 -Validate -Handle-Zero \n   394                    PERFORM 100 -OPEN \n   395                WHEN L -SCB-Func-READ-BOOL \n   396                    PERFORM 030 -Validate -Handle-NonZero \n   397                    PERFORM 400 -READ \n   398                WHEN L -SCB-Func-READ-Delim-BOOL \n   399                    PERFORM 030 -Validate -Handle-NonZero \n   400                    PERFORM 500 -READ-Delim \n   401                WHEN L -SCB-Func-WRITE-BOOL \n   402                    PERFORM 030 -Validate -Handle-NonZero \n   403                    PERFORM 300 -WRITE \n   404                WHEN L -SCB-Func-WRITE-Delim-BOOL \n   405                    EVALUATE TRUE  \n   406                        WHEN L -SCB-Delim-Unix-BOOL \n   407                            PERFORM 030 -Validate -Handle-NonZero \n   408                            PERFORM 300 -WRITE \n  ", "start_char_idx": 1697, "end_char_idx": 3489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8747a04-ece6-463e-9ad3-c159654e1ca6": {"__data__": {"id_": "d8747a04-ece6-463e-9ad3-c159654e1ca6", "embedding": null, "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "047a76c0-ef5b-4d44-b414-85a3cf16917d", "node_type": "4", "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f58342d26ab10f295d57239af02b578a30388942ac51b7344c697af6a774f775", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b92a0646-982f-496a-a9e8-77eea9a7cd48", "node_type": "1", "metadata": {}, "hash": "a74c52646d3e188a53618e103eb839cd899b17a9fd6e5881c7784399ee20ac7e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-118 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                                Page: 9 \n====== ====================================================================================================================== ==========  \n   409                            MOVE 1 TO WS -Arg-Length-NUM \n   410                            MOVE X\"0A\" TO WS -Delim-Buffer-TXT \n   411                        WHEN L -SCB-Delim-Windows-BOOL \n   412                            PERFORM 030 -Validate -Handle-NonZero \n   413                            PERFORM 300 -WRITE \n   414                            MOVE 2 TO WS -Arg-Length-NUM \n   415                            MOVE X\"0D0A\" TO WS -Delim-Buffer-TXT \n   416                       WHEN OTHER  \n   417                            MOVE -4 TO L-SCB-Return-CD \n   418                            PERFORM 099 -ERROR-Return \n   419                    END -EVALUATE  \n   420                    CALL \"CBL_WRITE_FILE\" USING L -SCB-Handle-NUM \n   421                                                L -SCB-Offset-NUM \n   422                                                WS -Arg-Length-NUM \n   423                                                0  \n   424                                                WS -Delim-Buffer-TXT \n   425                    PERFORM 040 -Check-WRITE-SCB-Return-CD \n   426                    ADD WS -Arg-Length-NUM TO L -SCB-Offset-NUM \n   427                WHEN OTHER  \n   428                    MOVE -1 TO L-SCB-Return-CD \n   429                    PERFORM 099 -ERROR-Return \n   430            END -EVALUATE \n   431            GOBACK  \n   432            .  \n   433        020 -Validate -Handle-Zero SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 2131, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b92a0646-982f-496a-a9e8-77eea9a7cd48": {"__data__": {"id_": "b92a0646-982f-496a-a9e8-77eea9a7cd48", "embedding": null, "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "047a76c0-ef5b-4d44-b414-85a3cf16917d", "node_type": "4", "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f58342d26ab10f295d57239af02b578a30388942ac51b7344c697af6a774f775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8747a04-ece6-463e-9ad3-c159654e1ca6", "node_type": "1", "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9f06b356bb03d83ab27faedc3aea9fdd34041cec9d8b66ee95a851248460835d", "class_name": "RelatedNodeInfo"}}, "text": "434            IF L -SCB-Handle-NUM NOT = ZERO  \n   435                MOVE 10 TO L -SCB-Return-CD \n   436                PERFORM 099 -ERROR-Return \n   437            END-IF \n   438            .  \n   439        030 -Validate -Handle-NonZero SECTION.  \n   440            IF L -SCB-Handle-NUM = ZERO  \n   441                MOVE 10 TO L -SCB-Return-CD \n   442                PERFORM 099 -ERROR-Return \n   443            END -IF \n   444            .  \n   445        040 -Check-WRITE-SCB-Return-CD SECTION.  \n   446            IF RETURN -CODE < 0  \n   447                MOVE -3 TO L-SCB-Return-CD \n   448                PERFORM 099 -ERROR-Return \n   449            END -IF \n   450            IF RETU RN-CODE = 30  \n   451                MOVE 12 TO L -SCB-Return-CD \n   452                PERFORM 099 -ERROR-Return \n   453            END -IF \n   454            MOVE 00 TO L -SCB-Return-CD \n   455            .  \n   456        050 -Check-READ-SCB-Return-CD SECTION.  \n   457            IF RETURN -CODE < 0  \n   458                MOVE -3 TO L-SCB-Return-CD \n   459                PERFORM 099 -ERROR-Return \n   460            END -IF \n   461            IF RETURN -CODE = 10  \n   462                MOVE 01 TO L -SCB-Return-CD \n  ", "start_char_idx": 2131, "end_char_idx": 3354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1780a61c-7a45-49bf-aafa-66e6d5351c54": {"__data__": {"id_": "1780a61c-7a45-49bf-aafa-66e6d5351c54", "embedding": null, "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89639ce0-e0f2-4dc2-a92f-734e12d54d9b", "node_type": "4", "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "60e5e58029577c69dc7d520e473faa76ad8d85dfdf09360042fa54779fc5e6ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1078d8a1-2de8-4392-97c4-8bf50eb6b20c", "node_type": "1", "metadata": {}, "hash": "fb7f9961e27d997357f6491a7667755d304bc7c57247b3682dd1c358eab9d9fe", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-119 GNU COBOL V2.0  11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cb l \nLine   Statement                                                                                                               Page: 10  \n====== =============================================================================================================== =================  \n   463                GOBACK  \n   464            END -IF \n   465            MOVE 00 TO L -SCB-Return-CD \n   466            .  \n   467        060 -Identify -TEMP SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 872, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1078d8a1-2de8-4392-97c4-8bf50eb6b20c": {"__data__": {"id_": "1078d8a1-2de8-4392-97c4-8bf50eb6b20c", "embedding": null, "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89639ce0-e0f2-4dc2-a92f-734e12d54d9b", "node_type": "4", "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "60e5e58029577c69dc7d520e473faa76ad8d85dfdf09360042fa54779fc5e6ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1780a61c-7a45-49bf-aafa-66e6d5351c54", "node_type": "1", "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53f895769508b3bd992e3b84920d8dec952a9a76db2b6b72f314d204cff0c6fd", "class_name": "RelatedNodeInfo"}}, "text": "468            ACCEPT WS -Env-Temp-TXT FROM ENVIRONMENT \"TEMP\"  \n   469            EVALUATE TRUE  \n   470                WHEN WS -Env-Temp-TXT (1:1) = \"/\"  \n   471                    MOVE \"/\"    TO WS -Slash-CHR \n   472                WHEN WS -Env-Temp-TXT (2:1) = \":\"  \n   473                    MOVE \" \\\"    TO WS -Slash-CHR \n   474                WHEN OTHER  \n   475                    MOVE \"/tmp\" TO WS -Env-Temp-TXT \n   476                    MOVE \"/\"    TO WS -Slash-CHR \n   477            END -EVALUATE  \n   478            .  \n   479        099 -ERROR-Return SECTION.  \n   480            IF L -SCB-Error-Routine-NUM NOT = 0  \n   481                CALL \"CBL_EXIT_PROC\" USING 0, L -SCB-Error-Routine-PTR \n   482                STOP RUN  \n   483            END -IF \n   484            GOBACK  \n   485            .  \n   486        100 -OPEN SECTION.  \n   487            IF  (L-SCB-Mode-Input-BOOL OR L -SCB-Mode-Both-BOOL) \n   488            AND (L -SCB-Filename -TXT = SPACES OR LOW -VALUES) \n   489                MOVE 11 TO L -SCB-Return-CD \n   490                PERFORM 099 -ERROR-Return \n   491            END -IF \n   492            EV ALUATE TRUE    \n   493                WHEN L -SCB-Filename -TXT = SPACES OR LOW -VALUES \n   494                    PERFORM 060 -Identify -TEMP \n   495                    MOVE SPACES TO L -SCB-Filename -TXT \n   496                    COMPUTE  \n   497                        WS -8-Digit-NUM = \n   498                        RANDOM(SECONDS -PAST-MIDNIGHT) * 100000000  \n   499                    END -COMPUTE \n   500                    STRING  \n   501                        TRIM(WS -Env-Temp-TXT,TRAILING)  \n   502                        WS -Slash-CHR \n   503                        \"STREAMIO -\" \n   504                        WS -8-Digit-NUM \n   505                        \".dat\"  \n   506                        DELIMITED BY SIZE  \n   507                        INTO L -SCB-Filename-TXT \n   508                WHEN L -SCB-Filename -TXT(1:1) = \".\"  \n   509                    PERFORM 060 -Identify -TEMP \n   510                    IF L -SCB-Filename -TXT(2:1) = SPACE  \n   511                        MOVE SPACES TO WS -256-Byte-TXT \n   512                    ELSE \n   513                        MOVE L -SCB-Filename -TXT TO WS -256-Byte-TXT \n   514                    END -IF \n   515                    MOVE SPACES TO L -SCB-Filename -TXT \n   516                    COMPUTE WS -8-Digit-NUM = \n  ", "start_char_idx": 872, "end_char_idx": 3310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "072928e6-a73c-4949-8517-d8d5f6f89d40": {"__data__": {"id_": "072928e6-a73c-4949-8517-d8d5f6f89d40", "embedding": null, "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60eb91f6-0e9a-4a15-9ff9-c3399964c63a", "node_type": "4", "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d9207b8ac4badcfaf6a174e84256121894e98ad5c2d2684284e6f013a7586dc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bbb746e-b284-4e3c-b6f2-8ccf4cd082a9", "node_type": "1", "metadata": {}, "hash": "0e3382e39b2132c4d47f42e463b8c7e49a86042b9c507c78278c600ae8d08d85", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-120 GNU COBOL V2.0 11FEB201 2 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                               Page:  11 \n====== ====================================================================================================================== ==========  \n   517                        RANDOM(SECONDS -PAST-MIDNIGHT) * 100000000  \n   518                    STRING  \n   519                        TRIM(WS -Env-Temp-TXT,TRAILING)  \n   520                        WS -Slash-CHR \n   521                        \"STREAMIO -\" \n   522                        WS -8-Digit-NUM \n   523                        TRIM(WS -256-Byte-TXT,TRAILING)  \n   524                        DELIMITED BY SIZE  \n   525                        INTO L -SCB-Filename -TXT \n   526            END-EVALUATE  \n   527            EVALUATE TRUE  \n   528                WHEN L -SCB-Mode-Input-BOOL \n   529                    MOVE 1 TO WS -Access-Mode-CD \n   530                WHEN L -SCB-Mode-Output-BOOL \n   531                    MOVE 2 TO WS -Access-Mode-CD \n   532                WHEN L -SCB-Mode-Both-BOOL \n   533                    MOVE 3 TO WS -Access-Mode-CD \n   534                WHEN OTHER  \n   535                    MOVE -2 TO L-SCB-Return-CD \n   536                    PERFORM 099 -ERROR-Return \n   537            END-EVALUATE  \n   538            CALL \"CBL_OPEN_FILE\" USING TRIM(L -SCB-Filename -TXT,TRAILING)  \n   539                                       WS -Access-Mode-CD \n   540                                       0  \n   541                                       0 \n   542                                       L -SCB-Handle-NUM \n   543            IF RETURN -CODE = 35  \n   544                MOVE 11 TO L -SCB-Return-CD \n   545                PERFORM 099 -ERROR-Return \n   546            END -IF \n   547            IF RETURN -CODE < 0  \n   548                MOVE -2 TO L-SCB-Return-CD \n   549                PERFORM 099 -ERROR-Return \n   550            END -IF \n   551            MOVE 00 TO L -SCB-Return-CD \n   552            MOVE 0 TO L -SCB-Offset-NUM \n   553            . \n   554        200 -CLOSE SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 2538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9bbb746e-b284-4e3c-b6f2-8ccf4cd082a9": {"__data__": {"id_": "9bbb746e-b284-4e3c-b6f2-8ccf4cd082a9", "embedding": null, "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60eb91f6-0e9a-4a15-9ff9-c3399964c63a", "node_type": "4", "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d9207b8ac4badcfaf6a174e84256121894e98ad5c2d2684284e6f013a7586dc9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "072928e6-a73c-4949-8517-d8d5f6f89d40", "node_type": "1", "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "cdbafa39c2318a87706e928384897d12464f4931ab30815061a828080c1a67fa", "class_name": "RelatedNodeInfo"}}, "text": "555            CALL \"CBL_CLOSE_FILE\" USING L -SCB-Handle-NUM \n   556            IF RETURN -CODE < 0  \n   557                MOVE -2 TO L-SCB-Return-CD \n   558                PERFORM 099 -ERROR-Return \n   559            END-IF \n   560            MOVE 00 TO L -SCB-Return-CD \n   561            MOVE 0 TO L -SCB-Handle-NUM \n   562            .  \n   563        300 -WRITE SECTION.  \n   564            CALL \"C$PARAMSIZE\" USING 2  \n   565            MOVE RETURN -CODE TO WS -Arg-Length-NUM \n   566            CALL \"CBL_WRITE_FILE\" USING L -SCB-Handle-NUM \n   567                                        L -SCB-Offset-NUM \n   568                                        WS -Arg-Length-NUM \n   569                                        0  \n   570                                        L-Arg2-TXT \n  ", "start_char_idx": 2538, "end_char_idx": 3329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdb1c1c8-0af2-4b3e-9300-7dd9d7ad0152": {"__data__": {"id_": "fdb1c1c8-0af2-4b3e-9300-7dd9d7ad0152", "embedding": null, "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5447a6e0-5f19-48aa-aa06-d7ecd3cc1b08", "node_type": "4", "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fe2874f71dd9f5522c3e6ffb54a85f1ba0eec859e47d201fcef32f2f83c570d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "270f35d1-37d8-412e-ac37-4dd6944f64c1", "node_type": "1", "metadata": {}, "hash": "7d68e8a0ac94f724a080321e24f1290a7a439a2bada0ba0d2d0c8579b99b04d0", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-121 GNU COBOL V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nLine   Statement                                                                                                               Page: 12  \n====== ========================================================== ======================================================================  \n   571            PERFORM 040 -Check-WRITE-SCB-Return-CD \n   572            ADD WS -Arg-Length-NUM TO L -SCB-Offset-NUM \n   573            .  \n   574        400 -READ SECTION.  \n   ", "start_char_idx": 0, "end_char_idx": 877, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "270f35d1-37d8-412e-ac37-4dd6944f64c1": {"__data__": {"id_": "270f35d1-37d8-412e-ac37-4dd6944f64c1", "embedding": null, "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5447a6e0-5f19-48aa-aa06-d7ecd3cc1b08", "node_type": "4", "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "fe2874f71dd9f5522c3e6ffb54a85f1ba0eec859e47d201fcef32f2f83c570d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdb1c1c8-0af2-4b3e-9300-7dd9d7ad0152", "node_type": "1", "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c8e54ed8ec141a28b3f85e7121ed8343b84abdc2f01a49f76d342bd425891239", "class_name": "RelatedNodeInfo"}}, "text": "575            CALL \"C$PARAMSIZE\" USING 2  \n   576            MOVE RETURN -CODE TO WS -Arg-Length-NUM \n   577            MOVE SPACES TO L -Arg2-TXT(1:WS -Arg-Length-NUM) \n   578            CALL \"CBL_READ_FILE\" USING L -SCB-Handle-NUM \n   579                                       L-SCB-Offset-NUM \n   580                                       WS -Arg-Length-NUM \n   581                                       0  \n   582                                       L -Arg2-TXT \n   583            PERFORM 050 -Check-READ-SCB-Return-CD \n   584            ADD WS -Arg-Length-NUM TO L -SCB-Offset-NUM \n   585            .  \n   586        500 -READ-Delim SECTION.  \n   587            CALL \"C$PARAMSIZE\" USING 2  \n   588            MOVE RETURN -CODE TO WS -Arg-Length-NUM \n   589            MOVE SPACES TO L -Arg2-TXT(1:WS -Arg-Length-NUM) \n   590            CALL \"CBL_READ_FILE\" USING L -SCB-Handle-NUM \n   591                                       L -SCB-Offset-NUM \n   592                                       WS -Arg-Length-NUM \n   593                                       0 \n   594                                       L -Arg2-TXT \n   595            PERFORM 050 -Check-READ-SCB-Return-CD \n   596            MOVE 0 TO WS -Tally-NUM \n   597            INSPECT L -Arg2-TXT(1:WS -Arg-Length-NUM) \n   598                TALLYING WS -Tally-NUM FOR ALL X\"0A\"  \n   599            IF WS -Tally-NUM = 0 *> No LF found - return truncated data and position past next LF (if any)  \n   600                IF L -Arg2-TXT(WS-Arg-Length-NUM:1) = X\"0D\"  \n   601                    MOVE SPACE TO L -Arg2-TXT(WS-Arg-Length-NUM:1) \n   602                END -IF \n   603                ADD WS -Arg-Length-NUM TO L -SCB-Offset-NUM \n   604                MOVE 02 TO L -SCB-Return-CD \n   605                MOVE 256 TO WS -Arg-Length-NUM \n   606                PERFORM UNTIL 0 = 1  \n   607                    MOVE SPACES TO WS -Buffer-TXT \n   608                    CALL \"CBL_READ_FILE\" USING L -SCB-Handle-NUM \n   609                                               L -SCB-Offset-NUM \n   610                                               WS-Arg-Length-NUM \n   611                                               0  \n   612                                               WS -Buffer-TXT \n   613                    IF RETURN -CODE < 0  \n   614                        MOVE -3 TO L-SCB-Return-CD \n   615                        PERFORM 099 -ERROR-Return \n   616                    END -IF \n   617                    IF RETURN -CODE = 10  \n   618                        GOBACK  \n   619                    END -IF \n   620                    MOVE 0 TO WS -Tally-NUM \n   621                    INSPECT WS -Buffer-TXT \n   622                        TALLYING WS -Tally-NUM FOR ALL X\"0A\"  \n   623                    IF WS -Tally-NUM = 0 \n   624                        ADD 256 TO L -SCB-Offset-NUM \n  ", "start_char_idx": 877, "end_char_idx": 3729, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbfebcab-1814-4cc1-9db8-9f0f458c60f4": {"__data__": {"id_": "dbfebcab-1814-4cc1-9db8-9f0f458c60f4", "embedding": null, "metadata": {"page_label": "380", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91235c5d-dbfd-4455-a6f0-0bb49b630309", "node_type": "4", "metadata": {"page_label": "380", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "30d0599339a4ed2c55673ea2903be6a2013b7cca374f68a8bf68bbb85d2e264b", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-122 GNU COBOL  V2.0 11FEB2012 Source Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL              2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAM IO.cbl \nLine   Statement                                                                                                               Page: 13  \n====== ====================================================================================================================== ==========  \n   625                    ELSE  \n   626                        MOVE 0 TO WS -Tally-NUM \n   627                        INSPEC T WS-Buffer-TXT \n   628                            TALLYING WS -Tally-NUM \n   629                            FOR CHARACTERS BEFORE INITIAL X\"0A\"  \n   630                        ADD WS -Tally-NUM, 1 TO L -SCB-Offset-NUM \n   631                        GOBACK  \n   632                    END-IF \n   633                END -PERFORM \n   634            ELSE         *> There is (at least) one LF in the buffer  \n   635                MOVE 0 TO WS -Tally-NUM \n   636                INSPECT L -Arg2-TXT(1:WS -Arg-Length-NUM) \n   637                    TALLYING WS -Tally-NUM \n   638                    FOR CHARACTERS BEFORE INITIAL X\"0A\"  \n   639                ADD WS -Tally-NUM, 1 TO L -SCB-Offset-NUM \n   640                IF WS -Tally-NUM > 1 \n   641                    IF L -Arg2-TXT(WS-Tally-NUM:1) = X\"0D\" \n   642                        COMPUTE WS -Arg-Length-NUM = \n   643                                  WS -Arg-Length-NUM \n   644                                - WS-Tally-NUM \n   645                                + 1  \n   646                    ELSE  \n   647                        COMPUTE WS -Arg-Length-NUM = \n   648                                  WS -Arg-Length-NUM \n   649                                - WS-Tally-NUM \n   650                        ADD 1 TO WS -Tally-NUM \n   651                    END -IF \n   652                    MOVE SPACES  \n   653                      TO L -Arg2-TXT(WS-Tally-NUM:WS-Arg-Length-NUM) \n   654                ELSE  \n   655                    MOVE SPACES  \n   656                      TO L -Arg2-TXT(1:WS -Arg-Length-NUM) \n   657                END -IF \n   658            END -IF \n   659            .  \n  ", "start_char_idx": 0, "end_char_idx": 2476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8141e2ff-b9c3-4b1f-9cda-ff22a70de7aa": {"__data__": {"id_": "8141e2ff-b9c3-4b1f-9cda-ff22a70de7aa", "embedding": null, "metadata": {"page_label": "381", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e0b16c1-16d2-42cb-bb56-d5824a6d3aaa", "node_type": "4", "metadata": {"page_label": "381", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ae615a42b19eb3224d9a01b9d5ac726bf1f3a6f5fec85d61e99798497e219e6d", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-123 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 14 \n=============== ============ ==================== ====== =============== ===============================================================  \nSTREAMIO        000 -Main                            384 PROCEDURE  \nSTREAMIO        020 -Validate -Handle-Zero            433 PROCEDURE          393  \nSTREAMIO        030 -Validate -Handle-NonZero         439 PROCEDURE          388     396     399     402     407     412  \nSTREAMIO        040 -Check-WRITE-SCB-Return-CD       445 PROCEDURE          425     571  \nSTREAMIO        050 -Check-READ-SCB-Return-CD        4 56 PROCEDURE          583     595  \nSTREAMIO        060 -Identify -TEMP                   467 PROCEDURE          494     509  \nSTREAMIO        099 -ERROR-Return                    479 PROCEDURE          418     429     436     442     448     452     459     490  \n                                                                           536     545     549     558     615  \nSTREAMIO        100 -OPEN                            486 PROCEDURE          394  \nSTREAMIO        200 -CLOSE                           554 PROCEDURE          389 \nSTREAMIO        300 -WRITE                           563 PROCEDURE          403     408     413  \nSTREAMIO        400 -READ                            574 PROCEDURE          397  \nSTREAMIO        500 -READ-Delim                      586 PROCEDURE          400 \nSTREAMIO        L -Arg2-TXT                          381 LINKAGE            383     570*    577*    582*    589*    594*    600     601*  \n                                                                           641     653*    656*  \nSTREAMIO        L-SCB-DELIM-Unix-BOOL               380 [STREAMIOcb   ]    406  \nSTREAMIO        L -SCB-DELIM-Windows-BOOL            380 [STREAMIOcb   ]    411  \nSTREAMIO        L -SCB-Delimiter -Mode-CD             380 [STREAMIOcb   ]  \nSTREAMIO        L -SCB-Error-Routine-NUM             380 [STREAMIOcb   ]    480  \nSTREAMIO        L -SCB-Error-Routine-PTR             380 [STREAMIOcb   ]    380     481*  \nSTREAMIO        L -SCB-Filename -TXT                  380 [STREAMIOcb   ]    391*    488     493     495*    507*    508     510     513  \n                                                                           515*    525*    538*  \nSTREAMIO        L -SCB-Func-CLOSE-BOOL               380 [STREAMIOcb   ]    387  \nSTREAMIO        L -SCB-Func-DELETE-BOOL              380 [STREAMIOcb   ]    390  \nSTREAMIO        L -SCB-Func-OPEN-BOOL                380 [STREAMIOcb   ]    392  \nSTREAMIO        L -SCB-Func-READ-BOOL                380 [STREAMIOcb   ]    395  \nSTREAMIO        L -SCB-Func-READ-Delim-BOOL          38 0 [STREAMIOcb   ]    398  \nSTREAMIO        L -SCB-Func-WRITE-BOOL               380 [STREAMIOcb   ]    401  \nSTREAMIO        L -SCB-Func-WRITE-Delim-BOOL         380 [STREAMIOcb   ]    404  \nSTREAMIO        L -SCB-Function -CD                   380 [STREAMIOcb   ]  \nSTREAMIO        L -SCB-Handle-NUM                    380 [STREAMIOcb   ]    420*    434     440     542*    555*    561*    566*    578*  \n                                                                           590*    608*  \nSTREAMIO        L -SCB-MODE-Both-BOOL                380 [STREAMIOcb   ]    487     532  \nSTREAMIO        L -SCB-Mode-CD                       380 [STREAMIOcb   ]  \nSTREAMIO        L -SCB-MODE-Input-BOOL               380 [STREAMIOcb   ]    487     528  \nSTREAMIO        L -SCB-MODE-Output-BOOL              380 [STREAMIOcb   ]    530  \nSTREAMIO        L -SCB-Offset-NUM                    380 [STREAMIOcb   ]    421*    426*    552*    567*    572*    579*    584*    591*  \n                                                                           603*    6 09*    624*    630*    639*  \nSTREAMIO        L -SCB-Return-CD                     380 [STREAMIOcb   ]    385*    417*    428*    435*    441*    447*    451*    454*  \n                                                                           458*    462*    4 65*    489*    535*    544*    548*    551*  \n                                                                           557*    560*    604*    614*  \nSTREAMIO        L -StreamIO -Control-Block-TXT        378 LINKAGE            382  \nSTREAMIO        RANDOM                                  PROCEDURE          498     517  \nSTREAMIO        RETURN -CODE                             PROCEDURE          446     450     457     461     543     547     556     565  \n                                                                           576     588     613     617  \nSTREAMIO        SECONDS -PAST-MIDNIGHT                   PROCEDURE          498     517  \nSTREAMIO        TRIM                                    PROCEDURE          501     519     523     538*  \nSTREAMIO        WS -256-Byte-TXT                     376 WORKING -STORAGE    511*    513*    523  \nSTREAMIO        WS -8-Digit-NUM                      375 WORKING -STORAGE    497*    504     516*    522  \nSTREAMIO        WS -Access-Mode-CD                   368 WO RKING-STORAGE    529*    531*    533*    539*  \nSTREAMIO        WS -Arg-Length-NUM                   369 WORKING -STORAGE    409*    414*    422*    426     565*    568*    572     576*  \n                                                                           577     580*    584     588*    589     592*    597     600  \n                                                                           601     603     605*    610*    636     642*    643     647*  \n                                                                           648     653     656  \n  ", "start_char_idx": 0, "end_char_idx": 6098, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2c9f3fd-b113-4c2b-b650-9bc861c7729c": {"__data__": {"id_": "a2c9f3fd-b113-4c2b-b650-9bc861c7729c", "embedding": null, "metadata": {"page_label": "382", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "374d2791-dae4-4d17-8272-a6176a3d8946", "node_type": "4", "metadata": {"page_label": "382", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "c7d38a8890e5d166249f22e544d44814e30316e06065eb341521f894227de13e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  STREAMIO  \u2013 A Utility Subroutine to Simplify Stream I/O  Sample  Programs  \n \n11FEB2012 Version  Page 10-124 GNU COBOL V2.0 11FEB2012 Cross -Reference Listing - GCic for Windows/MinGW Copyright (C) 2009 - 2013, Gary L. Cutler, GPL     2013/11/21  \n                                                                                                      E:/GNU-COBOL/samples/STREAMIO.cbl  \nPROGRAM-ID      Identifier/Register/Function     Defn   Where Defined   References (* = Updated)                               Page: 15 \n=============== ================================ ====== ========== ===== ===============================================================  \nSTREAMIO        WS -Buffer-TXT                       370 WORKING -STORAGE    607*    612*  \nSTREAMIO        WS -Delim-Buffer-TXT                 371 WORKING -STORAGE    410*    415*    424*  \nSTREAMIO        WS -Env-Temp-TXT                     372 WORKING -STORAGE    468*    470     472     475*    501     519  \nSTREAMIO        WS -Slash-CHR                        373 WORKING -STORAGE    471*    473*    476*    502     520  \nSTREAMIO        WS -Tally-NUM                        374 WORKING -STORAGE    596*    598*    599     620*    622*    623     626*    628*  \n                                                                           630     635*    637*    639     640     641     644     649  \n                                                                           650*    653  \n ", "start_char_idx": 0, "end_char_idx": 1493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc7608cd-abb3-4a03-a3dc-aae713d29f16": {"__data__": {"id_": "bc7608cd-abb3-4a03-a3dc-aae713d29f16", "embedding": null, "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa1c0843-cf7c-48be-8091-bab726bc7294", "node_type": "4", "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0e5fdbdb057d1701e2d8d85a2819806742c3b5939f774a2321258627a599ce3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b2c7a68-be64-4420-8221-a769bf7c271d", "node_type": "1", "metadata": {}, "hash": "77bf937fd811f0a061b2ba48bfaaba4d3dd9b68d46e228aef588a53671a40c1f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Glossary of Terms  \n \n11FEB2012 Version  Page 11-1 \n 11. Glossary of Terms  \nThere are many terms that are used throughout this document (as well as throughout ANY document dealing with the \nCOBOL language) that are used to make discussions of syntax and semantics more concise.  The following is a list of \nsuch terms and their definitions.  \nAlphanumeric \nLiteral  A string of characters enclosed within a pair of quotation marks (\u201c) or apostrophes (\u2018).  See section \n1.8. \nCollating \nSequence  The sequence in which the characters that are acceptable to a computer are ordered for purposes \nof all types of sorting, merging, comparing, and processing.  GNU COBOL  programs may utilize \nstandard character -set collating sequences (such as that defined by  the ASCII or EBCDIC \ncharactersets) or programmer -defined custom sequences as specified in the OBJECT -COMPUTER \nparagraph (section 4.1.2 ) and define d in the SPECIAL -NAMES paragraph (section 4.1.4 ). \nCompilation \nGroup  The collection of all compilation units being compil ed by a single execution of the GNU COBOL  \ncompiler.  \n", "start_char_idx": 0, "end_char_idx": 1127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b2c7a68-be64-4420-8221-a769bf7c271d": {"__data__": {"id_": "3b2c7a68-be64-4420-8221-a769bf7c271d", "embedding": null, "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa1c0843-cf7c-48be-8091-bab726bc7294", "node_type": "4", "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0e5fdbdb057d1701e2d8d85a2819806742c3b5939f774a2321258627a599ce3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc7608cd-abb3-4a03-a3dc-aae713d29f16", "node_type": "1", "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4a43d695cea1c015286ccfe9478dc6878d16bfdce9c184ee9f740c6f7616e73a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbcd19f6-6dc8-46bc-a0f1-e241aa1ea4dd", "node_type": "1", "metadata": {}, "hash": "82b8e97b9444eeefbef9a850e9ae804561b5b79849a446fddcec872eaa589c58", "class_name": "RelatedNodeInfo"}}, "text": "Compilation Unit  A single source file being compiled by the GNU COBOL  compiler.  A compilation unit may contain \none or more program s. \nDivision  COBOL programs are broken into four major areas, called DIVISIONS.  Divisions are used to collect \nprogram components oriented toward specific similar goals together in a single place.  The COBOL \ndivisions are:  \n IDENTIFICATION DIVISION \u2013 nam es the program and, optionally, if it is a subprogram, defines \nit\u2019s high -level data initialization policy and/or global availability to other programs compiled in \nthe same compilation group . \n ENVIRONMENT DIVISION \u2013 defines characteristics of the environment  in which the program \nwill be executed, such as files the program will be reading and/or writing, run -time switches \nthat may be used to pass information into the program from the operating system \nenvironment and any special options that may be needed in or der for the program to \nproperly compile; typically, those special options are used to enable COBOL programs created \nusing some other version of COBOL to be compiled and executed under a different version.  \n DATA DIVISION \u2013 provides detailed descriptions of the files, data and data structures the \nprogram will be working with.  \n PROCEDURE DIVISION \u2013 contains the actual executable program code.  \nDynamically -\nloadable library  The GNU COBOL  compiler can create dynamically -loadabl e library files when compiling \nsubprograms  as their own separate compilation group s.  On UNIX systems, these will be \u201c.so\u201d files \nwhile on Windows systems these will be DLLs.  Main programs  can be created in this manner also.  \nThe \u201c-m\u201d compiler switch is used to create dynamically -loadable libraries.  \nDynamically -\nloadable module  A synonym for Dynamically -loadable library . \n", "start_char_idx": 1127, "end_char_idx": 2923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbcd19f6-6dc8-46bc-a0f1-e241aa1ea4dd": {"__data__": {"id_": "dbcd19f6-6dc8-46bc-a0f1-e241aa1ea4dd", "embedding": null, "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa1c0843-cf7c-48be-8091-bab726bc7294", "node_type": "4", "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0e5fdbdb057d1701e2d8d85a2819806742c3b5939f774a2321258627a599ce3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b2c7a68-be64-4420-8221-a769bf7c271d", "node_type": "1", "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "302b447f0ca05c24a752f63ba45505ee171b4b195529452fb5053d4ecd88b5aa", "class_name": "RelatedNodeInfo"}}, "text": "Elementary Item  A data item described as not being further logically subdivided.  \nEntry -point  A spot in the PROCEDURE DIVISION where a pr ogram may begin execution when it is executed \nfrom the operating system , invoked as a user -defined function  or CALL ed by another program.  \nEvery program has at least one entry -point \u2013 known as the primary entry -point  \u2013 which \ncorresponds to the  first executable statement  in the PROCEDURE DIVISION following the \nDECLARATIVES  area, if any.  Additional entry -points may be defined via the ENTRY  statement (see \nsection 6.4.14 ). \nEntry -point \nname  Every entry -point  has a name.  That name must be unique for all program s that comprise an \nexecutable program.  Entry -point names are defined using a subroutine\u2019s  PROGRAM -ID clause \n(see section 3) or via ENTRY statements coded in the subroutine\u2019s PROCEDURE DIVISION (see \nsection 6.4.14 ).  ", "start_char_idx": 2923, "end_char_idx": 3826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c65a97a-103c-4b60-82fa-c67db75feeac": {"__data__": {"id_": "0c65a97a-103c-4b60-82fa-c67db75feeac", "embedding": null, "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c", "node_type": "4", "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5113ca7e52ae095696108d2cc0ce282814d1eb8e9fa7cddff1a4003c7c20f479", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bafd0336-b6b6-49fd-a859-839b68d23d61", "node_type": "1", "metadata": {}, "hash": "197753524641e4f3d7ae671a1703dbe047c5c7bb4b8a410812439ff06a49955f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Glossary of Terms  \n \n11FEB2012 Version  Page 11-2 \n Executable file  The GNU C OBOL  compiler can create operating -system appropriate files that may be executed \ndirectly from the operating system environment.  On Windows systems, these will be \u201c.exe\u201d files \nwhereas on UNIX systems they will have no specific extensions.  The \u201c -x\u201d compiler switch is used \nto create executable files. Only main programs  should be compiled in this manner.  \nFigurative \nconstants  GNU COBOL , like other COBOL implementations, supports a number of reserved words that may \nbe used to represent a specific literal  value.  These are known as figurative constants.  ", "start_char_idx": 0, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bafd0336-b6b6-49fd-a859-839b68d23d61": {"__data__": {"id_": "bafd0336-b6b6-49fd-a859-839b68d23d61", "embedding": null, "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c", "node_type": "4", "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5113ca7e52ae095696108d2cc0ce282814d1eb8e9fa7cddff1a4003c7c20f479", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c65a97a-103c-4b60-82fa-c67db75feeac", "node_type": "1", "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "723e51c09d834bd36a14c615edc3d33bea51ed07c6ad5e4f4340dd6cc1b2a7db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60d33b36-1dbf-45bd-b445-ca61e9ce2202", "node_type": "1", "metadata": {}, "hash": "8360d5062b48dbaa1d7a744c1597dfa78993db9e5527322bfcbe8f4648af1e74", "class_name": "RelatedNodeInfo"}}, "text": "See section \n1.9. \nGroup item  A group item is an identifier  that is broken down into sub -items.  For example, a MAILING -\nADDRESS might be broken down into STR EET-ADDRESS, APARTMENT -NUMBER, CITY, STATE and \nZIP-CODE components.  \nIdentifiers  These are data items a COBOL program will be working with.  The vast majority of identifiers are \ndefined by the user (programmer) while a few are pre -define d by the GNU COBOL  compiler.  \nIdentifiers pre -defined by the compiler are referred to as registers .  Other programming languages \ngenerally refer to identifiers as \u201cvariables\u201d.  \nImperative \nstatement  There are two types of GNU COBOL  statements that meet this definition:  \n1. A non -conditional GNU COBOL  statement ; i.e. one that performs an unconditional action and \nlacks any decision -making capabilities (including EXCEPTION , ON SIZE ERROR  and AT END  \nclauses), or\u2026  \n2. A conditional GNU COBOL  statement  properly terminated with the correct \u201cEND -xxxx\u201d \ntrailer.  \nAny PROCEDURE DIVISION  statement  can be made to be imperative \u2013 and ther efore may be used \nin circumstances that only allow imperative stateme nts - under one or the other definition.   \nIntrinsic Function  A built -in routine that accepts arguments and returns a value; synta ctically, these may be used \nmost places where GNU COBOL  identifiers are valid.  \nSee section 6.1.7  for documentation on all supported intrinsic functions.  \nLevel number  A user -defined word expressed as a 1 - or 2-digit number that indicates the hierarchical position of \na data item or the special properties of a data description entry.  \nLevel numbers in the range 1 through 49 indicate the position of a data item in the hierarchical \nstructure of a logical record .   Level numbers in the range 1 thr ough 9 can be written either as a \nsingle digit or as a zero followed by the significant digit.  \nLevel numbers 66, 77, 78 and 88 identify special properties of a data description entry.  \nSee sections 5.3, 5.4, 5.5 and 0. \n", "start_char_idx": 685, "end_char_idx": 2691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60d33b36-1dbf-45bd-b445-ca61e9ce2202": {"__data__": {"id_": "60d33b36-1dbf-45bd-b445-ca61e9ce2202", "embedding": null, "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c", "node_type": "4", "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "5113ca7e52ae095696108d2cc0ce282814d1eb8e9fa7cddff1a4003c7c20f479", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bafd0336-b6b6-49fd-a859-839b68d23d61", "node_type": "1", "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "4694988b7de4bc22fedd6ec0b0bdfdb4529d94efc0c7044bfa79203028f0b7db", "class_name": "RelatedNodeInfo"}}, "text": "Literal  A numeric literal  or an alphanumeric literal . \nMain program  A GNU COBOL  program that is to be executed directly from an operating system or shell event.  \nMain programs are not executed from other programs unless such execu tion is accomplished via \nthe CALL  \u201cSYSTEM\u201d facility.  \nNumeric literal  A numeric constant.  See section 1.8. \nPrimary Entry -\nPoint See entry -point . \nProcedure  All executable code statements  within a single PROCEDURE DIVISION paragraph or SECTION.  \nProcedure name  A programmer -defined SECTION or paragraph name in the PROCEDURE DIVISION assigned to a \nprocedure .  Procedure names serve as a means by which a statement  may refer to the statements  \nthat follow the procedure name.   ", "start_char_idx": 2691, "end_char_idx": 3422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d372479-4a75-4239-be54-3cb7518e5a82": {"__data__": {"id_": "7d372479-4a75-4239-be54-3cb7518e5a82", "embedding": null, "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a", "node_type": "4", "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92d937ce711c4b05c630e0e455be68a96c3f6f5552b847e22f9ca51b2ed33b65", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91bfaaad-08c0-4533-bd61-f86487e6a757", "node_type": "1", "metadata": {}, "hash": "b0013f1a852f81e4539d32af3cf3fc5a52f6124fcb9995f33c484f9c76fd6cf5", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Glossary of Terms  \n \n11FEB2012 Version  Page 11-3 \n Program  A GNU COBOL  main program or subprogram.  Subprogram program s may be nested inside of \nother program s and a main program  may be followed by any number of subprogram program s in \nthe same compilation group . \nQualification  The process of establishing a unique reference to a data item whose name is duplicated in a \nprogram.  This takes the form of using the duplicated data name and the name of any of its parent \ndata items,  connected by \u201cOF\u201d or \u201cIN\u201d such that the combination of those two data names is \nunique within the program.  \nRecord  The most -inclusive, highest level, data item.  ", "start_char_idx": 0, "end_char_idx": 693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91bfaaad-08c0-4533-bd61-f86487e6a757": {"__data__": {"id_": "91bfaaad-08c0-4533-bd61-f86487e6a757", "embedding": null, "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a", "node_type": "4", "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92d937ce711c4b05c630e0e455be68a96c3f6f5552b847e22f9ca51b2ed33b65", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d372479-4a75-4239-be54-3cb7518e5a82", "node_type": "1", "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "33e377e95b697631f539892074f2695824f3e4214f0b67d58357b1eb89528138", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "818259d7-a1fd-4e90-9746-9152db6276f1", "node_type": "1", "metadata": {}, "hash": "35c97c12df3c57f81626ede3391b051bb3b76c54984c5c3657cc07459ac97c89", "class_name": "RelatedNodeInfo"}}, "text": "The level number  for a record is 01.  A record c an be \neither an elementary item  or a group item . \nRegisters  Special data items that are automatically defined for your use by the GNU COBOL  compiler.  See \nsection 6.1.8 . \nReserved word  A COBOL word specified in the list of words that can be used in a COBOL source program, but that \nmust not appear in the program as user -defined words or system names.  \nSentence  Any number of COBOL statements , followed by a period.  \nStatement  A single COBOL instruction.  Every statement starts with a verb  which defines the overall action \nthe statement will take.  Any additional syntax following the verb  refines the actions that will be \ntaken.  \nSubprogram  A user -defined function  or a subroutine . \nSubroutine  A program executed from another via a GNU COBOL  \u201cCALL \u201d statement (or the equivalent in \nwhatever programming language that other program was written in).    \nUser -defined \nFunction  A user -written GNU COBOL  subprogram that may be executed in a syntactically -similar manner to \nthat by which the various built -in intrinsic functions  are executed.  \nUser -defined \nnames  Either the name of an identifier  or a procedure  in the program.  GNU COBOL  limits user -defined \nnames to a maximum of 31 characters taken from the set of numeric digits, upper - and lower -\ncase letters, hyphens and underscores.  A user -defined name may neither begin nor end with a \nhyphen or unders core.  User -defined names used as file names may additionally not begin with a \ndigit although - unlike many other programming languages - user -defined names used as \nidentifiers  or procedure  names m ay. \nVerb  A single COBOL reserved -word  which defines an action a COBOL program will take at execution \ntime.  Every COBOL statement  begins with a verb.  Some verbs perform relatively simple actions \n(MOVE , STOP, SET, etc.) ", "start_char_idx": 693, "end_char_idx": 2580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "818259d7-a1fd-4e90-9746-9152db6276f1": {"__data__": {"id_": "818259d7-a1fd-4e90-9746-9152db6276f1", "embedding": null, "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a", "node_type": "4", "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "92d937ce711c4b05c630e0e455be68a96c3f6f5552b847e22f9ca51b2ed33b65", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91bfaaad-08c0-4533-bd61-f86487e6a757", "node_type": "1", "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3b595e1782f749c50a3a0aab9b1b7dc0f6a71fd08a2fdd84eb006d6a50efa77", "class_name": "RelatedNodeInfo"}}, "text": "while others can perform extremely complex actions (SEARCH, SORT, \nMERGE, STRING, UNSTRING, etc.).  \n  ", "start_char_idx": 2580, "end_char_idx": 2683, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a23abd4-056a-402b-a0cc-7a19b59821a1": {"__data__": {"id_": "4a23abd4-056a-402b-a0cc-7a19b59821a1", "embedding": null, "metadata": {"page_label": "386", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e79facfe-8dc6-4f2f-a3cc-66211f19b471", "node_type": "4", "metadata": {"page_label": "386", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "3856f2d0841154372e8e4ac95e459863b88e5983ab584b64415d697053008722", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Glossary of Terms  \n \n11FEB2012 Version  Page 11-4 \n   ", "start_char_idx": 0, "end_char_idx": 89, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be7c2ec1-2153-489b-95b1-51a0610fa82d": {"__data__": {"id_": "be7c2ec1-2153-489b-95b1-51a0610fa82d", "embedding": null, "metadata": {"page_label": "387", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1ddbae92-cce9-43a6-acd2-2d306bcc033e", "node_type": "4", "metadata": {"page_label": "387", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0ae77c95661ed65a6ea48db723f9bf6179b28288659e7374694d79c292bec776", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page I \n Index  \n\" \n\"*\" In Column 7, 1 -17 \n\"*>\", 1 -17 \n\"/\" In Column 7, 1 -17 \n> \n>>D, 1 -17 \nA \nACCEPT, 5 -19, 6 -30 \nCommand -Line Arguments, 6 -32 \nCONSOLE, 6 -32 \nDate/Time, 6 -35 \nEnvironment, 6-33 \nScreen Data, 6 -33 \nScreen Size, 6 -35 \nACCESS MODE, 4 -12, 4 -13 \nDYNAMIC, 6 -49, 6 -78, 6 -79, 6 -85, 6 -96 \nRANDOM, 6 -49, 6 -78, 6 -79, 6 -85 \nSEQUENTIAL, 4 -11, 4 -12, 6 -49, 6 -85, 6 -96 \nADD  \nCORRESPONDING, 6-39 \nGIVING, 6-39 \nTO, 6 -38 \nADDRESS OF  \nFREE, 6 -61 \nSET, 6 -91 \nAFTER, 6 -77 \nINSPECT, 6 -68, 6 -69 \nPERFORM VARYING, 6 -76 \nPERFORM WITH TEST, 6 -77 \nWRITE ADVANCING, 6 -109 \nALL \nINSPECT, 6 -68, 6 -69 \nVALUE, 5 -17 \nALL PROCEDURES, 6 -30 \nALLOCATE, 5 -6, 6-40 \nALPHABET, 4 -6 \nALPHABETIC, 6-6 \nALPHABETIC -LOWER, 6-6 \nALPHABETIC -UPPER, 6-6 \nAlphanumeric Literal, 1 -18 \nALTER, 6-41 \nALTERNATE RECORD KEY, 4 -13, 6 -96 \nALTERNATE RECORD KEY fields, 6 -79 \nANY, 6-57 \nANY LENGTH, 5 -6 \nARGUMENT -NUMBER, 6 -32 \nARGUMENT -VALUE, 6 -32, 6 -33 \nArithmetic Expressions, 6-2 \nASCENDING KEY  \nSORT, 6 -94, 6 -95 \nTable, 6 -88 \nASSI GN, 4 -9 \nAT ACCEPT, 6 -34 \nDISPLAY, 6 -51 \nEND (READ), 6 -78 \nEND -OF-PAGE, 6 -109 \nAUTO, 5 -19 \nB \nBACKGROUND -COLOR, 5 -19, 5 -23 \nBack -Tab Key, 5 -19 \nBASED, 5 -5, 5-6, 6-91 \nBEEP, 5 -20 \nBEFORE  \nINSPECT, 6 -68, 6 -69 \nPERFORM WITH TEST, 6 -77 \nWRITE ADVANCING, 6 -109 \nBELL, 5 -20 \nBig-Endian, 5 -16 \nBLANK LINE, 5 -20 \nBLANK SCREEN, 5 -20 \nBLANK WHEN ZERO, 5 -6, 5-20 \nBLINK, 5 -20 \nBLOCK CONTAINS, 5 -3 \nBY \nCONTENT, 7 -11 \nPERFORM VARYING, 6 -76, 6 -77 \nREFERENCE, 6 -30, 6 -43, 7 -10, 7 -12 \nVALUE, 6 -30, 7 -12 \nBY CONTENT, 7 -4 \nBY REFERENCE, 7 -4 \nBY VALUE, 7 -4 \nBYTE -LENGTH, 5 -25 \nC \nC$CALL EDBY, 8 -11 \nC$CHDIR, 8 -11 \nC$COPY, 8 -11 \nC$DELETE, 8 -11 \nC$FILEINFO, 8 -12 \nC$GETPID, 8-12 \nC$JUSTIFY, 8-12 \nC$MAKEDIR, 8 -12 \nC$NARG, 8 -12, 8-23 \nC$PARAMSIZE , 8-13 \nC$PRINTABLE, 8 -13 \nC$SLEEP , 8-13 \nC$TOLOWER , 8-13 \nC$TOUPPER , 8-13 \nCALL , 6-6, 6-42, 10-1 \nCALL -CONVENTION, 6-42 \nCalled Program, 7 -1 \nCalling Program, 7 -1 \nCANCEL, 6 -44, 7 -2 \nCBL_AND , 8-13 \nCBL_CHANGE_DIR, 8 -14 \nCBL_CHECK_FILE_EXIST, 8 -14 \nCBL_CLOSE_FILE , 8-14 ", "start_char_idx": 0, "end_char_idx": 2173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5caa32ac-bcac-4fe6-bf8f-2b80482e7d76": {"__data__": {"id_": "5caa32ac-bcac-4fe6-bf8f-2b80482e7d76", "embedding": null, "metadata": {"page_label": "388", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "caad82f0-9b43-436e-9dfb-ecdae8daacf7", "node_type": "4", "metadata": {"page_label": "388", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "67d5d944c08f9d99e6388a56aad342c638ff37311a4fec7225e758b042397b97", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page II \n CBL_COPY_FILE, 8 -15 \nCBL_CREATE_DIR, 8 -15 \nCBL_CREATE_FILE , 8-15 \nCBL_DELETE_DIR , 8-15 \nCBL_DELETE_FILE, 8 -15 \nCBL_EQ , 8-18 \nCBL_ERROR_PROC , 8-16 \nCBL_EXIT_PROC , 8-17 \nCBL_FLUSH_FILE, 8-18 \nCBL_GET_CSR_LOCN, 8 -18 \nCBL_GET_SCR_SIZE, 8 -19 \nCBL_IMP , 8-19 \nCBL_NIMP , 8-19 \nCBL_NOR , 8-20 \nCBL_NOT , 8-20 \nCBL_OC_NANOSLEEP, 8-20 \nCBL_OPEN_FILE, 8-15, 8-20 \nCBL_OR , 8-21 \nCBL_READ_FILE , 8-20, 8-21 \nCBL_RENAME_FILE, 8 -21 \nCBL_TOUPPER , 8-22 \nCBL_WRITE_FILE, 8-15, 8-20, 8-22 \nCBL_XOR , 8-22 \nCDF Statements  \n>>DEFINE, 2 -2 \n>>IF, 2 -3 \n>>SET, 2 -4 \n>>SOURCE, 2 -4 \n>>TURN, 2 -5 \nCOPY, 2 -1 \nREPLACE, 2 -2 \nCHAIN, 6 -29 \nCHAINING, 6 -29 \nCHARACTERS, 6 -69 \nCLASS, 4 -6 \nCLASSIFICATION, 4 -2 \nCLOSE, 6 -26, 6 -45, 6 -75 \nCOB -CRT-STATUS , 4-4, 6-36 \ncobcrun, 8 -7 \nCODE -SET, 5 -3 \nCOL, 5 -20 \nCollating Sequence, 10 -1 \nCOLLATING SEQUENCE, 4 -2, 4-8 \nCOLUMN, 5 -19, 5 -20 \nColumn 7  \n\"*\", 1 -17 \n\"/\", 1 -17 \n\"D\", 1 -17 \nCOLUMNS, 6-35 \nCombined Conditions, 6-8 \nCOMMAND -LINE, 6 -32 \nCOMMIT, 6 -26, 6 -46, 6 -85 \nCOMMON , 3-1 \nCompilation Group, 10 -1 \nCompiler Switches  \nAll Switches, 8-1 \n-b, 8-3 \n-conf, 8 -5 \n-fdebugging -line, 1 -17, 4 -2 \n-ffold -copy, 2 -4 \n-ffunctions -all, 4 -3 -fixed, 2 -4 \n-fnotrunc, 8-26 \n-foptional -file, 4 -8 \n-free, 1 -14, 1 -15, 2 -4 \n-fsyntax -extension, 4 -6 \n-g, 6-14 \n-m, 8-3, 8-7, 10 -1 \n-o, 8-3 \n-S, 8-3 \n-Wobsolete, 3 -1 \n-x, 8-3, 8-7, 10 -2 \nCOMPUTE, 6 -47 \nCondition Names, 6-5 \nConditional Expressions, 6-2, 6-5 \nConditions  \nCombined, 6-8 \nLevel -88 C ondition Names, 6-5 \nNegated, 6-8 \nRelation, 6-7 \nSwitch Status, 6-7 \nConfiguration Files, 8 -5 \nCONFIGURATION SECTION, 4 -1 \nCONSOLE, 6-50 \nCONSOLE IS CRT, 4 -4 \nCONSTANT, 2 -3, 5-25 \nConstant Descriptions, 5 -25 \nCONTINUE, 6 -48 \nCONVERSION, 6 -34, 6 -51 \nCONVERTING, 6 -68, 6-69, 6 -104 \nCORRESPONDING, 6-39 \nCOUNT, 6 -107 \nCRT, 6-50 \nCRT STATUS, 4 -4, 6-36 \nCURRENCY SIGN, 4 -4 \nCURSOR IS, 4 -5 \nD \nD In Column 7, 1 -17 \nDATA DIVISION, 1 -9, 1-12 \nDATA RECORD, 5 -3 \nDATE, 6 -35 \nDATE YYYYMMDD, 6 -35 \nDAY, 6 -35 \nDAY YYYYDDD, 6 -35 \nDAY-OF-WEEK, 6 -35 \nDEBUGGING MODE, 4 -2 \nDECIMAL POINT IS COMMA, 4 -4 \nDECLARATIVES, 6 -30, 6 -49, 6 -75, 10 -1 \nDEFAULT, 6 -66 \nDEFINED, 2 -3 \nDELETE, 6 -49, 6 -75 \nDELIMITED BY  \nSTRING, 6 -99 \nUNSTRING, 6 -106 \nDELIMITED BY SIZE, 6 -99 \nDELIMITER, 6 -107 \nDESCENDING KEY  \nSORT, 6 -94, 6 -95 \nTable, 6-88 \nDISC, 4 -9 ", "start_char_idx": 0, "end_char_idx": 2439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d504789-8a55-423a-9848-9a9c6f221e0f": {"__data__": {"id_": "4d504789-8a55-423a-9848-9a9c6f221e0f", "embedding": null, "metadata": {"page_label": "389", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b5451e7-b742-408a-87f2-1d94327d2115", "node_type": "4", "metadata": {"page_label": "389", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0bb895c39bbc19b47b00c42b0f64cdbade25b882ece55b1144c1927298629e44", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page III \n DISK, 4 -9, 5-3 \nDISPLAY, 5 -19 \nCommand -Line Arguments, 6 -50 \nCONSOLE, 6 -50 \nEnvironment, 6 -50 \nScreen Data, 6 -51 \nDISPLAY (ASSIGN), 4 -9 \nDIVIDE  \nBY/GIVING, 6 -54 \nBY/REMAINDER, 6 -55 \nINTO, 6 -53 \nINTO/GIVING, 6 -53 \nINTO/REMAINDER, 6 -54 \nDIVISION, 10 -1 \nDYNAMIC, 4 -12, 4 -13 \nDynamically -Loadable Library, 10 -1 \nE \nElementary Item, 10 -1 \nELSE, 6 -65 \nEMPTY -CHECK, 5 -23 \nEND -IF, 6-65 \nENTRY, 6-56, 6-90, 10 -1 \nEntry Point, 10 -1 \nENVIRONMENT, 6 -33 \nENVIRONMENT DIVISION, 1 -9, 4-1 \nEnvironment Variables  \nCOB_CC, 8 -4 \nCOB_CFLAGS, 8 -4 \nCOB_CONFIG_DIR, 8 -4 \nCOB_CONFIG_PATH, 8 -5 \nCOB_COPY_DIR, 8 -4, 8-5 \nCOB_DISPLAY_WARNINGS, 8 -8 \nCOB_LDADD, 8 -4 \nCOB_LDFLAGS, 8 -4 \nCOB_LIBRARY_PATH, 8 -8 \nCOB_LIBS, 8 -4 \nCOB_PRE_LOAD, 8 -8 \nCOB_SCREEN_ESC, 6 -34, 8 -9 \nCOB_SCREEN_EXCEPTIONS, 6 -34, 8 -9 \nCOB_S ET_DEBUG, 8 -8 \nCOB_SET_TRACE, 8 -9 \nCOB_SORT_MEMORY, 8 -9 \nCOB_SWITCH_n, 8 -9 \nCOB_SYNC, 8 -9 \nCOBCPY, 8 -4 \ndd_literal -1, 4-9 \nDD_ literal -1, 4-9 \nLD_LIBRARY_PATH, 8 -4 \nliteral -1, 4-9 \nPATH, 8 -10 \nTEMP, 8 -10 \nTMP, 8 -5, 8-10 \nTMPDIR, 8 -5, 8-10 \nENVIRONMENT -NAME, 6 -33 \nENVIRONMENT -VALUE, 6 -33 \nERASE EOL, 5 -21 \nERASE EOS, 5 -21 \nError Procedure (user -defined), 6 -75, 8-16 \nESCAPE KEY, 6 -36 EVALUATE, 6 -57 \nEVENT STATUS, 4 -5 \nEXCEPTION  \nACCEPT, 6 -37 \nCALL , 6-42 \nDISPLAY, 6-52 \nExecutable File, 10 -2 \nEXIT, 6 -59 \nPARAGRAPH, 6 -59, 6 -71 \nPERF ORM, 6 -59 \nPERFORM CYCLE, 6-59 \nPROGRAM, 6 -71, 6 -93, 6 -95 \nSECTION, 6 -59, 6 -71 \nSimple, 6 -59 \nExit Procedure (user -defined), 8-17 \nExpressions  \nArithmetic, 6-2 \nConditional, 6-2, 6-5 \nEXTEND, 6 -75, 6 -108 \nEXTERNAL, 4 -8, 5-5 \nFD, 5 -2, 5-5 \nF \nFD, 6 -108, 6 -109 \n-fdebugging -line, 1 -17, 4 -2 \n-ffold -copy, 2 -4 \n-ffunctions -all, 4-3 \nFigurative Constant, 1 -19, 10 -2 \nFile Description, 6 -108, 6 -109 \nFILE SECTION, 1 -9 \nFILE STATUS, 4 -9 \nFILE-CONTROL, 1 -9, 4-8 \nFILLER, 5 -5 \nFIRST  \nINSPECT, 6 -68, 6 -69 \n-fixed, 2 -4 \nFixed Format Mode, 1-14 \nFOLDCOPYNAME, 2 -4 \n-foptional -file, 4 -8 \nFOREGROUND -COLOR, 5 -21, 5 -23 \nFOREVER, 6-76, 6-77 \n-free, 1 -14, 1 -15, 2 -4 \nFREE, 6 -61 \nFree Format Mode, 1 -15 \nFROM  \nPERFORM VARYING, 6 -76 \nREWRITE, 6 -85 \nScreen Item Description, 5 -21 \nWRITE, 6 -108 \n-fsyntax -extention, 4-6 \nFULL, 5 -21 \nFunction  \nUser -Defined, 7 -1 \nFUNCTION -ID, 3-1 \nG \nGENERATE, 6 -62 \nGIVING  \nCALL , 6-42 ", "start_char_idx": 0, "end_char_idx": 2418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c43a4165-4cea-4c3f-a0f9-ec3ad5b4fea7": {"__data__": {"id_": "c43a4165-4cea-4c3f-a0f9-ec3ad5b4fea7", "embedding": null, "metadata": {"page_label": "390", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e60f7e1e-e362-415d-b6b1-df50fd2c4873", "node_type": "4", "metadata": {"page_label": "390", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "deacf6e31c3c5d7a45c9fb4d908d6d4a9033fc91dbbd93dd07a866891bc13866", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page IV \n MERGE, 6 -71 \nSORT, 6 -94 \nSTOP, 6 -98 \nGLOBAL, 6 -30 \nFD, 5 -2, 5-5 \nGO TO, 6 -71, 6-76, 6-93, 6 -95 \nDEPENDING ON, 6 -64 \nSimple, 6 -64 \nGOBACK , 6-60, 6-63, 6 -71, 6 -93, 6 -95, 8-17 \nGroup Item, 10 -2 \nH \nHIGHLIGHT, 5 -22 \nI \nIDENTIFICATION DIVISION, 3 -1 \nIdentifier, 10 -2 \nIF, 6 -65 \nIGNORING LOCK, 6 -26 \nImperative Statement, 10 -2 \nINDEXED BY, 6 -88, 6 -91 \nINITIAL , 3-1, 6-42 \nINITIALIZE, 6-40 \nVerb, 6 -66 \nINITIATE, 6 -67 \nINPUT, 6 -75 \nINPUT PROCEDURE, 6 -82, 6 -93 \nINPUT -OUTPUT SECTION, 1 -9, 4-7 \nINSPECT, 6 -68, 6 -104 \nIntrinsic Function, 10 -2 \nIntrinsic Functions (Supported)  \nABS, 6 -11 \nACOS, 6 -11 \nANNUITY, 6 -11 \nASIN, 6 -11 \nATAN, 6 -11 \nBYTE -LENGTH, 6 -11 \nCHAR, 6-11 \nCOMBINED -DATETIME, 6-12 \nCONCATENATE , 6-12 \nCOS, 6 -12 \nCURRENCY -SYMBOL, 6 -12 \nCURRENT -DATE, 6-12 \nDATE -OF-INTEGER, 6-13 \nDATE -TO-YYYYMMDD, 6-13 \nDAY-OF-INTEGER, 6-13 \nDAY-TO-YYYYDDD, 6-13 \nE, 6-13 \nEXCEPTION -FILE, 6-13 \nEXCEPTION -LOCATION, 6-14 \nEXCEPTION -STATEMENT, 6-14 \nEXCEPTION -STATUS, 6-14 \nEXP, 6-14 \nEXP10, 6-14 \nFACTORIAL, 6-14 \nFRACTIONAL -PART, 6-14 \nHIGHEST -ALGEBRAIC, 6-15 \nINTEGER, 6-15 \nINTEGER -OF-DATE, 6-15 INTEGER -OF-DAY, 6-15 \nINTEGER -PART, 6-15 \nLENGTH, 6-15 \nLENGTH -AN, 6-15 \nLOCALE -COMPARE, 6-15 \nLOCALE -DATE, 6-16 \nLOCALE -TIME, 6-16 \nLOCALE -TIME -FROM -SECS, 6-16 \nLOG, 6-16 \nLOG10, 6-16 \nLOWER -CASE, 6-16 \nLOWEST -ALGEBRAIC, 6-17 \nMAX, 6-17, 6-22 \nMIDRANGE, 6-17 \nMOD, 6-17 \nMODULE -CALL ER-ID, 6-17 \nMODULE -DATE, 6-17 \nMODULE -FORMATTED -DATE, 6-17 \nMODULE -ID, 6-18 \nMODULE -PATH, 6-18 \nMODULE -SOURCE, 6-18 \nMODULE -TIME, 6-18 \nMONETARY -DECIMAL -POINT, 6 -19 \nMONETARY -THOUSANDS -SEPARATOR, 6 -19 \nNUMERIC -DECIMAL -POINT, 6 -19 \nNUMERIC -THOUSANDS -SEPARATOR, 6 -19 \nNUMVAL, 1 -18, 6 -19 \nNUMVAL -C, 1-18, 6 -20 \nNUMVAL -F, 6-20 \nORD, 6-20 \nORD -MAX, 6-20 \nORD -MIN, 6-21 \nPI, 6-21 \nPRESENT -VALUE, 6-21 \nRANDOM, 6-21 \nRANGE, 6-21 \nREM, 6-21 \nREVERSE, 6-21 \nSECONDS -FROM -FORMATTED -TIME, 6-22 \nSECONDS -PAST -MIDNIGHT, 6-22 \nSIGN, 6-22 \nSIN, 6-22 \nSQRT, 6-22 \nSTORED -CHAR -LENGTH, 6-22 \nSUBSTITUTE, 6-22, 6-23 \nSUM, 6-23 \nTAN, 6-23 \nTEST -DATE -YYYYMMDD, 6-23 \nTEST -DAY-YYYYDDD, 6-23 \nTEST -NUMVAL, 6-23 \nTEST -NUMVAL -C, 6-23 \nTEST -NUMVAL -F, 6-23 \nTRIM, 6-23 \nUPPER -CASE, 6-24 \nVARIANCE, 6-24 \nWHEN -COMPILED, 6-24 \nYEAR -TO-YYYY, 6-24 \nIntrinsic Functions (Unsupported)  \nBOOLEAN -OF-INTEGER, 6 -10 \nCHAR -NATIONAL, 6 -10 \nDISPLAY -OF, 6 -11 ", "start_char_idx": 0, "end_char_idx": 2478, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b532a8f7-7512-4a2b-8804-35473f8b3441": {"__data__": {"id_": "b532a8f7-7512-4a2b-8804-35473f8b3441", "embedding": null, "metadata": {"page_label": "391", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2dddf6-bca3-4127-9a1c-8297d88577ba", "node_type": "4", "metadata": {"page_label": "391", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e96919fe624bb60c3b7d708f0f0c303ab49b34d959e7ca7250da7c73292f757a", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page V \n EXCEPTION -FILE-N, 6-10 \nEXCEPTION -LOCATION -N, 6-10 \nINTEGER -OF-BOOLEAN, 6 -11 \nNATIONAL -OF, 6 -10 \nSTANDARD -COMPARE, 6 -10 \nINVALID KEY  \nDELETE, 6 -49 \nREWRITE, 6 -85 \nSTART, 6 -96 \nWRITE, 6 -108 \nI-O, 6-75, 6 -108 \nI-O-CONTROL, 4 -14 \nJ \nJUSTIFIED RIGHT, 5 -6, 5-22 \nK \nKEY (START), 6 -96 \nKEYBOARD (ASSIGN), 4 -9 \nL \nLABEL RECORD, 5 -3 \nLEADING  \nINSPECT, 6 -68, 6 -69 \nSIGN, 5 -13, 5 -24 \nLEFTLINE, 5 -22 \nLENGTH, 5 -25 \nLENGTH OF, 6 -38 \nUse With Alphanumeric Literals, 1 -20 \nLevel  \n66, 5 -19 \n78, 5 -19, 5 -25 \n88, 5 -19 \nLevel Number, 10 -2 \nLINAGE, 5 -1, 5-3, 6-24, 6-109 \nLINE, 5 -19, 5 -22 \nLINE ADVANCING, 1 -7, 6-108 \nLINES  \nACCEPT, 6 -35 \nAT BOTTOM, 6 -109 \nAT TOP, 6 -109 \nWRITE ADVANCING, 6 -109 \nLINKAGE SECTION, 6-29, 6-91 \nLiteral, 10 -2 \nLittle -Endian, 5 -16 \nLOCALE, 4 -3, 4-4 \nLOCAL -STORAGE SECTION, 6-43 \nLOCK, 4 -10 \nLOWLIGHT, 5 -22 \nM \nMain Program, 10 -2 \nMEMORY SIZE, 4 -2 \nMERGE, 6 -70 \nMOVE  \nCORRESPONDING, 6 -72 \nSimple, 6 -72 MULTIPLE FILE TAPE, 4 -14 \nMULTIPLY  \nBY, 6 -73 \nGIVING, 6 -73 \nN \nNEAREST -AWAY -FROM -ZERO , 6-27 \nNegated Conditions, 6-8 \nNEGATIVE, 6-6 \nNested Subprograms , 3-1 \nNEXT, 6 -78 \nNEXT SENTENCE, 6 -74 \nNO ADVANCING, 6-50 \nNO REWIND, 6 -45 \nNO-ECHO, 5 -23 \nNOFOLDCOPYNAME, 2 -4 \nNOT AT END, 6 -78 \nNOT AT END -OF-PAGE, 6 -109 \nNOT EXCEPTION  \nACCEPT, 6 -37 \nDISPLAY, 6-52 \nNOT INVALID KEY  \nDELETE, 6 -49 \nREAD, 6 -80 \nREAD, 6 -79 \nREWRITE, 6 -85 \nSTART, 6-97 \nWRITE, 6 -108 \nNOT ON OVERFLOW  \nSTRING, 6 -99 \nUNSTRING, 6 -107 \nNOT ON SIZE ERROR  \nADD, 6 -38 \nCOMPUTE, 6-47 \nDIVIDE, 6-53, 6-54, 6 -55 \nMULTIPLY, 6-73 \nSUBTRACT, 6 -100 \nNUMBER -OF-CALL -PARAMETERS, 8-13, 8-23 \nNUMERIC, 6-6 \nNumeric Literal, 1 -18, 10 -2 \nO \nOBJECT -COMPUTER, 4 -2 \nOCCURS, 5 -6, 6-88 \nOMITTED, 6-6 \nON OVERFLOW  \nSTRING, 6 -99 \nUNSTRING, 6 -107 \nON SIZE ERROR  \nADD, 6-38 \nCOMPUTE, 6-47 \nDIVIDE, 6-53, 6-54, 6 -55 \nMULTIPLY, 6-73 \nSUBTRACT, 6 -100 \nOPEN, 6 -75, 6 -78, 6 -79, 6 -96, 6 -108 \nOPTIONAL, 4 -8 \nORGANIZATION  \nINDEXED, 1 -8, 4-13, 6 -49, 6 -78, 6 -85, 6 -96, 6 -108, 8 -9 ", "start_char_idx": 0, "end_char_idx": 2106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "511716d0-facb-4224-b2d8-e4a83bf32243": {"__data__": {"id_": "511716d0-facb-4224-b2d8-e4a83bf32243", "embedding": null, "metadata": {"page_label": "392", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c417eb2e-15d3-452b-8e6a-579aec027362", "node_type": "4", "metadata": {"page_label": "392", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "d0d766f533b1297d648aae961bf7a2090369438d70a2a00c77638f9a375139a2", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page VI \n LINE SEQUENTIAL, 1 -6, 4-11, 5 -3, 6-45, 6 -70, 6 -85, 6 -93, 6 -\n108 \nRECORD BINARY SEQUENTIAL, 1 -7, 4-11, 5 -3, 6-45, 6 -70, \n6-85, 6 -93, 6 -108 \nRELATIVE, 1 -8, 4-12, 6 -49, 6 -85, 6 -96, 6 -108 \nOUTPUT, 6 -75, 6 -108 \nOUTPUT PROCEDURE, 6 -84 \nMERGE, 6 -71 \nSORT, 6 -94 \nOVERFLOW  \nCALL , 6-42 \nOVERLINE, 5 -22 \nOVERRIDE, 2 -3 \nP \nPAGE  \nWRITE ADVANCING, 6 -109 \nPARAMETER  \nCDF, 2 -3 \nPERFORM, 6 -31, 6 -59 \nInline, 6 -77 \nProcedural, 6 -76 \nPOSITIVE, 6-6 \nPREVIOUS, 6 -78 \nPrimary Entry -Point Name , 3-1 \nPRIMARY RECORD KEY, 6 -79 \nPRINTER, 4 -9, 4-12, 6-50 \nProcedure, 10 -2 \nPROCEDURE DIVISION, 6 -29 \nProcedure Name, 10 -2 \nProgram, 10 -2 \nCalled, 7 -1 \nCalling, 7 -1 \nPROGRAM COLLATING SEQUENCE, 6 -94, 6 -95 \nPROGRAM -ID, 3-1 \nPROGRAM -POINTER, 6 -90 \nPROMPT, 5 -23 \nQ \nQualification, 6 -1, 10 -2 \nR \nRANDOM, 4 -9, 4-12, 4 -13 \nREAD, 6-49, 6-75, 6 -78, 6 -79, 6 -85 \nREADY TRACE, 6 -81 \nRecord, 10 -3 \nRECORD CONTAINS, 5 -3, 6-85 \nRECORD DELIMITER, 4 -8 \nRECORD IS VARYING, 5 -3, 6-85 \nRECORD KEY, 4 -13, 6 -49, 6 -85, 6 -96 \nRECORDING MODE, 5 -3 \nREDEFINES, 5 -5, 5-12 \nREEL, 6 -45 \nReference Modifier, 6 -2 \nRegisters, 10 -3 \nRelation Conditions, 6-7 \nRELATIVE KEY, 4 -12, 6 -49, 6 -85, 6 -96 \nRELEASE, 6 -82, 6 -93 REPLACING  \nINITIALIZE, 6 -66 \nREPLACING (COPY), 2 -1 \nREPLACING (INSPECT), 6 -68, 6 -69 \nREPORT IS, 5 -3 \nREPORT  SECTION, 5 -1 \nREPOSITORY, 4 -3, 6-10 \nREQUIRED, 5 -23 \nRESERVE, 4 -8 \nReserved Word, 10 -3 \nRESET TRACE, 6 -83 \nRETURN, 6 -71, 6 -84, 6 -94 \nRETURN -CODE , 6-98, 8 -11, 8 -12, 8-14, 8-15, 8-16, 8-17, 8-18, \n8-19, 8-20, 8-21, 8-23 \nRETURNING, 6-29, 6-30, 6-40 \nCALL , 6-42 \nSTOP, 6-98 \nREVERSED, 6 -75 \nREVERSE -VIDEO, 5 -23 \nREWRITE, 6 -85 \nROLLBACK, 6 -26, 6 -86 \nROUNDED , 6-27 \nDIVIDE, 6-55 \nS \nSAME RECORD AREA, 4 -14, 6 -70 \nSAME SORT AREA, 4 -14, 6 -70 \nSAME SORT -MERGE AREA, 4 -14, 6 -70 \nSCREEN CONTROL, 4 -5 \nSCREEN SECTION, 1 -12 \nSCROLL, 6 -34 \nSEARCH  \n(Sequential), 6 -87 \nALL (Binary Search), 6 -88 \nSECURE, 5 -23 \nSEGMENT -LIMIT, 4 -2 \nSELECT, 1 -9 \nSentence, 10 -3 \nSEPARATE CHARACTER, 5 -13, 5 -24 \nSEQUENTIAL, 4 -12, 4 -13 \nSET \n>>IF Option, 2 -3 \nAddress, 6 -90 \nCondition Name, 6 -91 \nENVIRONMENT, 6 -90 \nIndex, 6 -91 \nProgram -Pointer, 6 -90 \nSwitch, 6 -92 \nUP/DOWN, 6 -91 \nSET ADDRESS, 5 -6 \nSET ATTRIBUTE, 6 -92 \nSHARING, 4 -10, 6 -75 \nSHARING WITH ALL OTHER, 4 -8 \nShift -Tab Key, 5 -19 \nSIGN, 5 -13, 5 -24 \nSIZE, 6 -30 \nSIZE IS AUTO, 6 -30 \nSORT  \nFile, 6 -93 \nTable, 6 -95 ", "start_char_idx": 0, "end_char_idx": 2520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b8025e3-be9b-4684-9cb7-6634e1d3c346": {"__data__": {"id_": "3b8025e3-be9b-4684-9cb7-6634e1d3c346", "embedding": null, "metadata": {"page_label": "393", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "881d5b9e-eb7f-4a8e-8c8f-6f2c88824943", "node_type": "4", "metadata": {"page_label": "393", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "065acab26d7112ef170897c4360da69f062c5cbdbe7762e65331da59bcbe6af9", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page VII \n SORT STATUS, 4 -9 \nSOURCE -COM PUTER, 4 -2 \nSpecial Registers, 10 -3 \nSPECIAL -NAMES, 4 -3, 4-4, 6-50, 8-24 \nSplit Keys, 4 -13 \nSTART, 6 -75, 6 -96 \nStatement, 10 -3 \nSTOP RUN , 6-63, 6 -71, 6-76, 6-93, 6 -95, 6 -98, 8-17 \nSTRING, 6 -99 \nSubprogram, 10 -3 \nSubroutine, 10 -3 \nSubscripts, 6 -1 \nSUBTRACT  \nCORRESPONDING, 6 -101 \nFROM, 6 -100 \nGIVING, 6 -100 \nSUPPRESS, 6 -102 \nSwitch Status Conditions, 6-7 \nSWITCH -n, 4-6, 8-23, 8-24 \nSYMBOLIC CHARACTERS, 4 -7 \nSYNCHRONIZED, 5 -13 \nSYSTEM, 8 -23 \nSYSTEM -DEFAULT, 4 -3 \nT \nTab Key, 5 -19 \nTALLYING, 6 -68 \nUNSTRING, 6 -107 \nTAPE, 4 -9 \nTERMINATE, 6 -103 \nTHROUGH, 6-57, 6-76 \nTHRU, 6-57, 6-76 \nTIME, 6 -35 \nTIMEOUT, 6 -34 \nTIME -OUT, 6 -34 \nTIMES, 6-59, 6-76, 6 -77 \nTO \nScreen Item Description, 5 -21 \nTO VALUE, 6 -66 \nTRACE  \nCOB_SET_TRACE Environment Variable, 8 -9 \nREADY, 6 -81 \nRESET, 6 -83 \nTRAILING  \nINSPECT, 6-68, 6 -69 \nSIGN, 5 -13, 5 -24 \nTRANSFORM, 6 -104 \nTRUNCATION , 6-27 \nU \nUNDERLINE, 5 -22 \nUNIT, 6 -45 \nUNLOCK, 6 -26, 6 -46, 6 -75, 6 -105 \nUNSTRING, 6 -106 \nUNTIL, 6-59, 6-76, 6 -77 \nUNTIL EXIT, 6-76 \nUPDATE, 6 -34 \nUPON, 6-50 \nUSAGE, 5 -14 BINARY -CHAR, 7 -9, 8-23 \nBINARY -CHAR SIGNED, 7 -9 \nBINARY -CHAR UNSIGNED, 7 -9 \nBINARY -C-LONG SIGNED, 7 -9 \nBINARY -DOUBLE, 7 -9 \nBINARY -DOUBLE SIGNED, 7 -9 \nBINARY -DOUBLE UNSIGNED, 7 -9 \nBINARY -INT, 7 -9 \nBINARY -LONG, 7 -9 \nBINARY -LONG SIGNED, 7 -9 \nBINARY -LONG UNSIGNED, 7 -9 \nBINARY -LONG -LONG, 7 -9 \nBINARY -SHORT, 7-9 \nBINARY -SHORT SIGNED, 7 -9 \nBINARY -SHORT UNSIGNED, 7 -9 \nCOMPUTATIONAL -1, 7-9 \nCOMPUTATIONAL -2, 7-10 \nDISPLAY, 6-5 \nINDEX, 6 -91 \nPOINTER, 6-5, 6-40, 6-91 \nPROGRAM POINTER, 6-5 \nPROGRAM -POINTER, 6 -91, 8-16, 8-17 \nUSE AFTER STANDARD ERROR PROCEDURE, 6 -30 \nUSE BEFORE REPORTING, 6 -30 \nUSE FOR DEBUGGING, 6 -30 \nCOB_SET_DEBUG Environment Variable, 8 -8 \nUSER -DEFAULT, 4 -3 \nUser -Defined Function, 7 -1, 10 -3 \nuser -defined name, 10 -3 \nUser -Defined Name, 10 -3 \nUSING, 6 -29 \nScreen Item Description, 5 -21 \nUSING ( CALL ), 6-43 \nUSING (SORT), 6-93 \nV \nVALUE, 5 -17, 5 -24, 5 -26 \nVALUE OF, 5 -3 \nVARYING, 6-59, 6-76, 6 -77 \nVerb, 10 -3 \nW \n-Wall, 6 -75 \nWHEN, 6-57 \nWITH  \nDUPLICATES IN ORDER, 6 -70, 6 -93, 6 -95 \nIGNORE LOCK, 6 -26 \nLOCK, 6 -26 \nCLOSE, 6 -45 \nOPEN, 6 -75 \nNO LOCK, 6 -26 \nNO REWIND  \nOPEN, 6 -75 \nPOINTER  \nSTRING, 6-99 \nUNSTRING, 6 -106 \nTEST, 6 -77 \nWITH FILLER, 6 -66 \nWITH WAIT, 6 -27 ", "start_char_idx": 0, "end_char_idx": 2438, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c0a3657-d982-4654-ae95-b304af30d6fc": {"__data__": {"id_": "5c0a3657-d982-4654-ae95-b304af30d6fc", "embedding": null, "metadata": {"page_label": "394", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "239de56c-f8a0-4f85-8f6c-cfaf0f264230", "node_type": "4", "metadata": {"page_label": "394", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "53788ee4e04a2cbe33b1739cb351d70115fb32782dfe274dc430ebaec0616daa", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  Index  \n \n11FEB2012 Version  Page VIII \n -Wobsolete, 6 -75 \nWRITE, 6 -108 \nX \nX\"E4\", 8-24 X\"E5\", 8-24 \nX\"F4\", 8-24 \nX\"F5\", 8 -25 \nX\u201d91\u201d, 8-23 \n  ", "start_char_idx": 0, "end_char_idx": 179, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c2f251b-9cda-4d77-a037-07974de14784": {"__data__": {"id_": "6c2f251b-9cda-4d77-a037-07974de14784", "embedding": null, "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d255750-9bee-4c0a-9fcb-8676f8420860", "node_type": "4", "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14010acbbf00c1385369c3aed888d2193d87598f53b3fe6d87790b5ad9fc0ccf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6295624-6cad-4e98-bbed-0c4c59c59230", "node_type": "1", "metadata": {}, "hash": "be5790d5e7d366be0d0593ed460838be690b61fe4727b8057fffc7edb1a975ac", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page IX \n  \nGNU Free Documentation License  \nVersion 1.3, 3 November 2008  \n Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.  \n     <http://fsf.org/>  \n Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.  \n", "start_char_idx": 0, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6295624-6cad-4e98-bbed-0c4c59c59230": {"__data__": {"id_": "f6295624-6cad-4e98-bbed-0c4c59c59230", "embedding": null, "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d255750-9bee-4c0a-9fcb-8676f8420860", "node_type": "4", "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14010acbbf00c1385369c3aed888d2193d87598f53b3fe6d87790b5ad9fc0ccf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c2f251b-9cda-4d77-a037-07974de14784", "node_type": "1", "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "058f820aa8b6d38f6f9d2141be8d87453d7f5f102ed41c989bf5655587549cb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b4787bf-b813-43ba-8a4d-54ad246fda1e", "node_type": "1", "metadata": {}, "hash": "6cbf4e5ac5267ed17b28fcc4477e53816b4392e4334b85a3ff0cfaa673cc3d65", "class_name": "RelatedNodeInfo"}}, "text": "0. PREAMBLE  \nThe purpose of this Licen se is to make a manual, textbook, or other functional and useful document \"free\" in the \nsense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, \neither commercially or noncommercially.  \nSecondaril y, this License preserves for the author and publisher a way to get credit for their work, while not being \nconsidered responsible for modifications made by others.  \nThis License is a kind of \"copyleft\", which means that derivative works of the document must  themselves be free in the \nsame sense.  It complements the GNU General Public License, which is a copyleft license designed for free software.  \nWe have designed this License in order to use it for manuals for free software, because free software needs free \ndocumentation: a free program should come with manuals providing the same freedoms that the software does.  But \nthis License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or  \nwhether it is published as  a printed book.  We recommend this License principally for works whose purpose is \ninstruction or reference.  \n1. APPLICABILITY AND DEFINITIONS  \nThis License applies to any manual or other work, in any medium, that contains a notice placed by the copyright \nholder saying it can be distributed under the terms of this License.  Such a notice grants a world -wide, royalty -free \nlicense, unlimited in duration, to use that work under the conditions stated herein.  The \"Document\", below,  \nrefers to any such manual or wo rk.  Any member of the public is a licensee, and is addressed as \"you\".  You accept the \nlicense if you copy, modify or distribute the work in a way requiring permission under copyright law.  \nA \"Modified Version\" of the Document means any work containing the  Document or a portion of it, either copied \nverbatim, or with modifications and/or translated into another language.  \nA \"Secondary Section\" is a named appendix or a front -matter section of the Document that deals exclusively with the \nrelationship of the pub lishers or authors of the Document to the Document's overall subject (or to related matters) \nand contains nothing that could fall directly within that overall subject.  (Thus, if the Document is in part a textbook of \nmathematics, a Secondary Section may no t explain any mathematics.)  The relationship could be a matter of historical  \nconnection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position \nregarding them.  \nThe \"Invariant Sections\" are certain Se condary Sections whose titles are designated, as being those of Invariant \nSections, in the notice that says that the Document is released under this License.  If a section does not fit the above \ndefinition of Secondary then it is not allowed to be designat ed as Invariant.  The Document may contain zero  \nInvariant Sections.  ", "start_char_idx": 389, "end_char_idx": 3367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b4787bf-b813-43ba-8a4d-54ad246fda1e": {"__data__": {"id_": "8b4787bf-b813-43ba-8a4d-54ad246fda1e", "embedding": null, "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d255750-9bee-4c0a-9fcb-8676f8420860", "node_type": "4", "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14010acbbf00c1385369c3aed888d2193d87598f53b3fe6d87790b5ad9fc0ccf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6295624-6cad-4e98-bbed-0c4c59c59230", "node_type": "1", "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "600aafed4827dfdbd62037199fc935b701c0a3ef351deed24e75ab6b09365bf2", "class_name": "RelatedNodeInfo"}}, "text": "If the Document does not identify any Invariant Sections then there are none.  \nThe \"Cover Texts\" are certain short passages of text that are listed, as Front -Cover Texts or Back -Cover Text s, in the \nnotice that says that the Document is released under this License.  A Front -Cover Text may be at most 5 words, and a \nBack -Cover Text may be at most 25 words.  \nA \"Transparent\" copy of the Document means a machine -readable copy, represented in a fo rmat whose specification \nis available to the general public, that is suitable for revising the document straightforwardly with generic text editors ", "start_char_idx": 3367, "end_char_idx": 3971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6ca832f-dbf8-44f1-a1b8-5d3765bd618e": {"__data__": {"id_": "b6ca832f-dbf8-44f1-a1b8-5d3765bd618e", "embedding": null, "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a", "node_type": "4", "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "924072c78c2c256f26745dd9e08565cadfd144119584010c18ab711221f567bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75f90425-973e-4bde-85b6-a405660b6635", "node_type": "1", "metadata": {}, "hash": "1773b5f07fbfa2195c4c1331aaf473ff84bfb6fc943c6061928bbfa2be7edbcc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page X \n or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing ed itor, and \nthat is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input  \nto text formatters.  A copy made in an otherwise Transparent file format whose markup, or absence of markup, has \nbeen arranged t o thwart or discourage subsequent modification by readers is not Transparent.  \n", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75f90425-973e-4bde-85b6-a405660b6635": {"__data__": {"id_": "75f90425-973e-4bde-85b6-a405660b6635", "embedding": null, "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a", "node_type": "4", "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "924072c78c2c256f26745dd9e08565cadfd144119584010c18ab711221f567bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6ca832f-dbf8-44f1-a1b8-5d3765bd618e", "node_type": "1", "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f854d67e3c5f62f7cc85d8f9e93aff433cf6f9bfc58dc20d3161c028a932454f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17f680ea-2fa3-4c30-a19d-11f1bfa3be91", "node_type": "1", "metadata": {}, "hash": "28e8c5cdaca85d3fae87bcb36eb2e281e9d177f7b8529cc0ad3b0c9e175f4016", "class_name": "RelatedNodeInfo"}}, "text": "An image format is not Transparent if used for any substantial amount of text.  A copy that is not \"Transparent\" is \ncalled \"Opaque\".  \nExamples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX \ninput format, SGML or XML using a publicly available DTD, and standard -conforming simple HTML, PostScript or PDF \ndesigned for human modification.  Examples of transparent image formats include PNG, XCF and JPG.  Opaque formats  \ninclude proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which \nthe DTD and/or processing tools are not generally available, and the machine -generated HTML, PostSc ript or PDF \nproduced by some word processors for output purposes only.  \nThe \"Title Page\" means, for a printed book, the title page itself, plus such following pages as are needed to hold, \nlegibly, the material this License requires to appear in the title pa ge.  For works in formats which do not have any title \npage as such, \"Title Page\" means the text near the most prominent appearance of the work's title, preceding the \nbeginning of the body of the text.  \nThe \"publisher\" means any person or entity that distri butes copies of the Document to the public.  \nA section \"Entitled XYZ\" means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in \nparentheses following text that translates XYZ in another language.  (Here XYZ stands for a sp ecific section name \nmentioned below, such as \"Acknowledgements\", \"Dedications\", \"Endorsements\", or \"History\".)  To \"Preserve the \nTitle\" of such a section when you modify the Document means that it remains a section \"Entitled XYZ\" according to \nthis definiti on. \nThe Document may include Warranty Disclaimers next to the notice which states that this License applies to the \nDocument.  These Warranty Disclaimers are considered to be included by reference in this License, but only as regards \ndisclaiming warranties:  any other implication that these Warranty Disclaimers may have is void and has no effect on \nthe meaning of this License.  \n2. VERBATIM COPYING  \nYou may copy and distribute the Document in any medium, either commercially or noncommercially, provided that \nthis License, the copyright notices, and the license notice saying this License applies to the Document are reproduced \nin all copies, and that you add no other conditions whatsoever to those of this License.  You may not use technical \nmeasures to obstruct or c ontrol the reading or further copying of the copies you make or distribute.  ", "start_char_idx": 547, "end_char_idx": 3147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17f680ea-2fa3-4c30-a19d-11f1bfa3be91": {"__data__": {"id_": "17f680ea-2fa3-4c30-a19d-11f1bfa3be91", "embedding": null, "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a", "node_type": "4", "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "924072c78c2c256f26745dd9e08565cadfd144119584010c18ab711221f567bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75f90425-973e-4bde-85b6-a405660b6635", "node_type": "1", "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "9a75a1d7c5049107ca41c6487e1c6f0d77b36a127bfef593b9fe96f539c5b0e8", "class_name": "RelatedNodeInfo"}}, "text": "However, you \nmay accept compensation in exchange for copies.  If you distribute a large enough number of copies you must also \nfollow the conditions in section 3.  \nYou may also lend  copies, under the same conditions stated above, and you may publicly display copies.  \n3. COPYING IN QUANTITY  \nIf you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering \nmore than 100, and the Document's l icense notice requires Cover Texts, you must enclose the copies in covers that \ncarry, clearly and legibly, all these Cover Texts: Front -Cover Texts on the front cover, and Back -Cover Texts on the back \ncover.  Both covers must also clearly and legibly ident ify you as the publisher of these copies.  The front cover must \npresent the full title with all words of the title equally prominent and visible.  You may add other material on the \ncovers in addition.  \nCopying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these \nconditions, can be treated as verbatim copying in other respects.  \nIf the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as \nfit reaso nably) on the actual cover, and continue the rest onto adjacent pages.  \nIf you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a \nmachine -readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer -", "start_char_idx": 3147, "end_char_idx": 4672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c07d6017-5215-4565-9185-59d023be6e5f": {"__data__": {"id_": "c07d6017-5215-4565-9185-59d023be6e5f", "embedding": null, "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f", "node_type": "4", "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1412f4c9fb5d921e5160b8023c9204b993527c260c44112d5a4ff4355bf7afac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f58e112-ee72-4c8c-b261-72d53f56726e", "node_type": "1", "metadata": {}, "hash": "76c6d968570d2c5bf4b0da6f7719eab6412686dcd3604d02a448c3cc4bc7bedc", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page XI \n network location from which the general network -using public has access to download using public -standard network \nprotocols a complete Transparent copy of the Document, free of added material.  \nIf you use the latter optio n, you must take reasonably prudent steps, when you begin distribution of Opaque copies in \nquantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year \nafter the last time you distribute an Opaqu e copy (directly or through your agents or retailers) of that edition to the \npublic.  \n \n", "start_char_idx": 0, "end_char_idx": 673, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f58e112-ee72-4c8c-b261-72d53f56726e": {"__data__": {"id_": "3f58e112-ee72-4c8c-b261-72d53f56726e", "embedding": null, "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f", "node_type": "4", "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1412f4c9fb5d921e5160b8023c9204b993527c260c44112d5a4ff4355bf7afac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c07d6017-5215-4565-9185-59d023be6e5f", "node_type": "1", "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "ec135f6d1cfe2e92ad6500256b272617de524dbd838e4ea50de38c7f6c927449", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e974654-3965-4489-bace-4490558bb080", "node_type": "1", "metadata": {}, "hash": "0a1346d0613a9f38b61258a175c59057bdc9cb37247bf36eac2502f420b4149c", "class_name": "RelatedNodeInfo"}}, "text": "It is requested, but not required, that you contact the authors of the Document well before redistributing any large \nnumber of copies, to give them a chance to provide yo u with an updated version of the Document.  \n", "start_char_idx": 673, "end_char_idx": 890, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e974654-3965-4489-bace-4490558bb080": {"__data__": {"id_": "0e974654-3965-4489-bace-4490558bb080", "embedding": null, "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f", "node_type": "4", "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "1412f4c9fb5d921e5160b8023c9204b993527c260c44112d5a4ff4355bf7afac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f58e112-ee72-4c8c-b261-72d53f56726e", "node_type": "1", "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "18364f0f6c0f48c29ba04fa5e3aba441a10369df25bbb4d8a11fc383a8196408", "class_name": "RelatedNodeInfo"}}, "text": "4. MODIFICATIONS  \nYou may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, \nprovided that you release the Modified Version under precisely this License, with the  Modified Version filling the role \nof the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of \nit.  In addition, you must do these things in the Modified Version:  \nA. Use in the Title Page (and on the  covers, if any) a title distinct from that of the Document, and from those of \nprevious versions (which should, if there were any, be listed in the History section of the Document).  You may use \nthe same title as a previous version if the original publishe r of that version gives permission.  \nB. List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications \nin the Modified Version, together with at least five of the principal authors of the Document (all of  its principal \nauthors, if it has fewer than five), unless they release you from this requirement.  \nC. State on the Title page the name of the publisher of the Modified Version, as the publisher.  \nD. Preserve all the copyright notices of the Document.  \nE. Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.  \nF. Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified \nVersion under the terms of this License,  in the form shown in the Addendum below.  \nG. Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's \nlicense notice.  \nH. Include an unaltered copy of this License.  \nI. Preserve the section Entitle d \"History\", Preserve its Title, and add to it an item stating at least the title, year, new \nauthors, and publisher of the Modified Version as given on the Title Page.  If there is no section Entitled \"History\" \nin the Document, create one stating the title , year, authors, and publisher of the Document as given on its Title \nPage, then add an item describing the Modified Version as stated in the previous sentence.  \nJ. Preserve the network location, if any, given in the Document for public access to a Transpare nt copy of the \nDocument, and likewise the network locations given in the Document for previous versions it was based on.  \nThese may be placed in the \"History\" section.  You may omit a network location for a work that was published at \nleast four years befor e the Document itself, or if the original publisher of the version it refers to gives permission.  \nK. For any section Entitled \"Acknowledgements\" or \"Dedications\", Preserve the Title of the section, and preserve in \nthe section all the substance and tone of each of the contributor acknowledgements and/or dedications given \ntherein.  \nL. Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles.  Section numbers or \nthe equivalent are not considered part of the section titles . \nM. Delete any section Entitled \"Endorsements\".  Such a section may not be included in the Modified Version.  \nN. Do not retitle any existing section to be Entitled \"Endorsements\" or to conflict in title with any Invariant Section.  \nO. Preserve any Warranty Disclaimers.  ", "start_char_idx": 890, "end_char_idx": 4248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe2415d8-d12e-4ee8-aab5-69034d3b5c9b": {"__data__": {"id_": "fe2415d8-d12e-4ee8-aab5-69034d3b5c9b", "embedding": null, "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fc2cadb-a624-43ba-859a-0aa00444a5cc", "node_type": "4", "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e41dd4a3ef8c732c3959641912a60f2e4bf6979483b206c2d55318270fe94973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75ee5e8a-550c-43b8-9841-2a3a29b71323", "node_type": "1", "metadata": {}, "hash": "fc68c2e4e8c1e49b58b5ed959d12d7efd9b0b02f1ec9d233ef83ec132b3a847e", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page XII \n If the Modified Version includes new front -matter sections or appendices that qualify as Secondary Sections and \ncontain no material copied from the Document, you may at your option designate some or all of these sections as \ninvariant.  To do t his, add their titles to the list of Invariant Sections in the Modified Version's license notice.  \nThese titles must be distinct from any other section titles.  \nYou may add a section Entitled \"Endorsements\", provided it contains nothing but endorsements of your Modified \nVersion by various parties --for example, statements of peer review or that the text has been approved by an \norganization as the authoritative definition of a standard.  \n \nYou may add a passage of up to five words as a Front -Cover Text, and a pa ssage of up to 25 words as a Back -Cover \nText, to the end of the list of Cover Texts in the Modified Version.  Only one passage of Front -Cover Text and one of \nBack -Cover Text may be added by (or through arrangements made by) any one entity.  If the Document  already \nincludes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are \nacting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the \nprevious publisher t hat added the old one.  \nThe author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity \nfor or to assert or imply endorsement of any Modified Version.  \n5. COMBINING DOCUMENTS  \nYou may combine the Document  with other documents released under this License, under the terms defined in \nsection 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all \nof the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license \nnotice, and that you preserve all their Warranty Disclaimers.  \nThe combined work need only contain one copy of this License, and multiple identical Invariant Sections may be \nreplaced with a single c opy.  If there are multiple Invariant Sections with the same name but different contents, make \nthe title of each such section unique by adding at the end of it, in parentheses, the name of the original author or \npublisher of that section if known, or else a unique number.  \nMake the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined \nwork.  \nIn the combination, you must combine any sections Entitled \"History\" in the various original documents, forming on e \nsection Entitled \"History\"; likewise combine any sections Entitled \"Acknowledgements\", and any sections Entitled \n\"Dedications\".  You must delete all sections Entitled \"Endorsements\".  \n", "start_char_idx": 0, "end_char_idx": 2883, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75ee5e8a-550c-43b8-9841-2a3a29b71323": {"__data__": {"id_": "75ee5e8a-550c-43b8-9841-2a3a29b71323", "embedding": null, "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fc2cadb-a624-43ba-859a-0aa00444a5cc", "node_type": "4", "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "e41dd4a3ef8c732c3959641912a60f2e4bf6979483b206c2d55318270fe94973", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe2415d8-d12e-4ee8-aab5-69034d3b5c9b", "node_type": "1", "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "f46989c45d788149c7a11266a53ca84f1373d276e994730af0feee789b813ce6", "class_name": "RelatedNodeInfo"}}, "text": "6. COLLECTIONS OF DOCUMENTS  \nYou may make a collection consisting of the  Document and other documents released under this License, and replace \nthe individual copies of this License in the various documents with a single copy that is included in the collection, \nprovided that you follow the rules of this License for verbatim cop ying of each of the documents in all other respects.  \nYou may extract a single document from such a collection, and distribute it individually under this License, provided \nyou insert a copy of this License into the extracted document, and follow this Licens e in all other respects regarding \nverbatim copying of that document.  \n7. AGGREGATION WITH INDEPENDENT WORKS  \nA compilation of the Document or its derivatives with other separate and independent documents or works, in or on a \nvolume of a storage or distributi on medium, is called an \"aggregate\" if the copyright resulting from the compilation is \nnot used to limit the legal rights of the compilation's users beyond what the individual works permit.  \nWhen the Document is included in an aggregate, this License does n ot apply to the other works in the aggregate which \nare not themselves derivative works of the Document.  \nIf the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less \nthan one half of the entire aggre gate, the Document's Cover Texts may be placed on covers that bracket the \nDocument within the aggregate, or the electronic equivalent of covers if the Document is in electronic form.  ", "start_char_idx": 2883, "end_char_idx": 4445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96af0f6b-7c3a-42d5-9875-bd43edd96055": {"__data__": {"id_": "96af0f6b-7c3a-42d5-9875-bd43edd96055", "embedding": null, "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428", "node_type": "4", "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0ae88d52d04ba0c4b972c2073802cf2f28eee802ed4b4ec6aea652ca4a6588f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dfbc82e-c9b0-4997-922b-cb47732576aa", "node_type": "1", "metadata": {}, "hash": "d500cbd5b69b734a639395152fc3c118a7217416f1b06cc2f3e7cf73090a192f", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page XIII \n Otherwise they must appear on printed covers that bracket the whole aggre gate.  \n8. ", "start_char_idx": 0, "end_char_idx": 185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6dfbc82e-c9b0-4997-922b-cb47732576aa": {"__data__": {"id_": "6dfbc82e-c9b0-4997-922b-cb47732576aa", "embedding": null, "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428", "node_type": "4", "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0ae88d52d04ba0c4b972c2073802cf2f28eee802ed4b4ec6aea652ca4a6588f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96af0f6b-7c3a-42d5-9875-bd43edd96055", "node_type": "1", "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "42691b816af15e39ad47df48345accc86bf40d10919bc2589dfb0edee95b24ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "653c954d-a9d8-4e92-96b0-77bcfff55ed9", "node_type": "1", "metadata": {}, "hash": "955f1569b10fd1a6af1144eecb5a547b112b62afcf0d588d9adde2cf121fc4f6", "class_name": "RelatedNodeInfo"}}, "text": "TRANSLATION  \nTranslation is considered a kind of modification, so you may distribute translations of the Document under the terms \nof section 4.  \nReplacing Invariant Sections with translations requires special permission from their copyright holders,  but you may \ninclude translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections.  \nYou may include a translation of this License, and all the license notices in the Document, and any Warranty \nDisclaimers,  provided that you also include the original English version of this License and the original versions of \nthose notices and disclaimers.  In case of a disagreement between the translation and the original version of this \nLicense or a notice or disclaimer, the original version will prevail.  \n \nIf a section in the Document is Entitled \"Acknowledgements\", \"Dedications\", or \"History\", the requirement (section 4) \nto Preserve its Title (section 1) will typically require changing the actual title.  \n9. ", "start_char_idx": 185, "end_char_idx": 1203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "653c954d-a9d8-4e92-96b0-77bcfff55ed9": {"__data__": {"id_": "653c954d-a9d8-4e92-96b0-77bcfff55ed9", "embedding": null, "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428", "node_type": "4", "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "0ae88d52d04ba0c4b972c2073802cf2f28eee802ed4b4ec6aea652ca4a6588f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dfbc82e-c9b0-4997-922b-cb47732576aa", "node_type": "1", "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "61815300279ffd9d3b84b0d38aab68baacc12a3162503b69db29909761c5361e", "class_name": "RelatedNodeInfo"}}, "text": "TERMINATION  \nYou may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License.  \nAny attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights \nunder this License.  \nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) \nprovisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, \nif the copyr ight holder fails to notify you of the violation by some reasonable means prior to 60 days after the \ncessation.  \nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies \nyou of the violation by som e reasonable means, this is the first time you have received notice of violation of this \nLicense (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the \nnotice.  \nTermination of your rights under this section does not terminate the licenses of parties who have received copies or \nrights from you under this License.  If your rights have been terminated and not permanently reinstated, receipt of a \ncopy of some or all of the same material does not give you any rights to use it.  \n10. FUTURE REVISIONS OF THIS LICENSE  \nThe Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time \nto time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new \nproblems or concerns.  See http://www.gnu.org/copyleft/.  \nEach version of the License is given a distinguishing version number.  \nIf the Document specifies that a particular numbered version of this License \"or any later versio n\" applies to it, you \nhave the option of following the terms and conditions either of that specified version or of any later version that has \nbeen published (not as a draft) by the Free Software Foundation.  If the Document does not specify a version numbe r \nof this License, you may choose any version ever published (not as a draft) by the Free Software Foundation.  If the \nDocument specifies that a proxy can decide which future versions of this License can be used, that proxy's public \nstatement of acceptance  of a version permanently authorizes you to choose that version for the Document.  \n11. RELICENSING  \n\"Massive Multiauthor Collaboration Site\" (or \"MMC Site\") means any World Wide Web server that publishes \ncopyrightable works and also provides prominent facili ties for anybody to edit those works.  A public wiki that \nanybody can edit is an example of such a server.  A \"Massive Multiauthor Collaboration\" (or \"MMC\") contained in the \nsite means any set of copyrightable works thus published on the MMC site.  \n\"CC-BY-SA\" means the Creative Commons Attribution -Share Alike 3.0 license published by Creative Commons \nCorporation, a not -for-profit corporation with a principal place of business in San Francisco, California, as well as \nfuture copyleft versions of that license p ublished by that same organization.  ", "start_char_idx": 1203, "end_char_idx": 4380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "963f2ca7-4e33-4acb-bb40-6ada598b797f": {"__data__": {"id_": "963f2ca7-4e33-4acb-bb40-6ada598b797f", "embedding": null, "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6789132-8c1a-4d2b-927c-6cbd9caa85fb", "node_type": "4", "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14bf1336abdb10b5d1ce0150bbcee8e9910aac5a536c4a131519d7b92850d101", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3f0d9d6-d81a-4a74-8fa4-6ce125ec7a9d", "node_type": "1", "metadata": {}, "hash": "a753f0cde6dad519c039b26bfe66854071a26f7ffa2f28655a013e78ebb9ed98", "class_name": "RelatedNodeInfo"}}, "text": "GNU COBOL  2.0 Programmers Guide  GNU Free Documentation License  \n \n11FEB2012 Version  Page XIV \n \"Incorporate\" means to publish or republish a Document, in whole or in part, as part of another Document.  \nAn MMC is \"eligible for relicensing\" if it is licensed under this License, and if all works that were first publis hed under \nthis License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) \nhad no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.  \n", "start_char_idx": 0, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3f0d9d6-d81a-4a74-8fa4-6ce125ec7a9d": {"__data__": {"id_": "a3f0d9d6-d81a-4a74-8fa4-6ce125ec7a9d", "embedding": null, "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6789132-8c1a-4d2b-927c-6cbd9caa85fb", "node_type": "4", "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "14bf1336abdb10b5d1ce0150bbcee8e9910aac5a536c4a131519d7b92850d101", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963f2ca7-4e33-4acb-bb40-6ada598b797f", "node_type": "1", "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}, "hash": "b3959a153e7406a71c62bca48c12611da949ad72b90e848c7178b3088d740620", "class_name": "RelatedNodeInfo"}}, "text": "The operator of an MMC Site may re publish an MMC contained in the site under CC -BY-SA on the same site at any \ntime before August 1, 2009, provided the MMC is eligible for relicensing.  ", "start_char_idx": 548, "end_char_idx": 736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"53bf41f3-452a-4212-baaf-3b8bee4b8383": {"doc_hash": "446126153c4221fb1f1705d58f80c96458335da324e9ea9fea4de4e671c50f2d", "ref_doc_id": "23d12095-5494-4dc1-9d73-217ec8fc0f52"}, "bf472390-5c76-4df6-8192-720b22c4ac79": {"doc_hash": "6c3948d5dd105963e1bd59841720a5f13452ab0bab110aef592f1e0cca970c69", "ref_doc_id": "40fe008c-53c6-47ed-bdfc-9b7337d66b35"}, "4f9a555e-ee8f-4408-9f8e-4afa8019aac8": {"doc_hash": "906239d56ba79003f22c55cf95bbf4ed4a42be245b19b72cd2b4cc56056caf9c", "ref_doc_id": "40fe008c-53c6-47ed-bdfc-9b7337d66b35"}, "0044bce3-b99a-48b7-a64d-288ff9cebb1d": {"doc_hash": "657be64a7c50eddab7c476d4add11d7a6438c59179afe06e6ad8528d48a8d26d", "ref_doc_id": "b7363acf-e953-4ff5-86ef-82a4644634f5"}, "1de97c50-8be7-40e3-aa94-7ff83fa95f8b": {"doc_hash": "f506d625f7ca0eb994e05c33f1f121aa031cdd010bb1539d83c466b1d1ebbd95", "ref_doc_id": "b7363acf-e953-4ff5-86ef-82a4644634f5"}, "266ad9e8-5bca-4ee3-b536-dad1cbd85f62": {"doc_hash": "d7e2596efe63283aa8c3bce966b565e04001a2915c8e4238aafb4184c518d3ce", "ref_doc_id": "5a256c6f-d494-4c94-8d41-bc605e4d637f"}, "75090174-3c37-4ef1-adab-3c357a83894d": {"doc_hash": "28ed900f3735fe2a8aeb3e93125e2148c8040aed180e18ed0dfd9ef2720d73e0", "ref_doc_id": "92b752d1-30a5-4c36-a678-42d978cb2b92"}, "c637f05a-9b3b-46a1-b485-de5d5360eab0": {"doc_hash": "3b9097804ae978e757a9d1f561735d4d6643dff1589bcdf8ce30484d268dd6c2", "ref_doc_id": "92b752d1-30a5-4c36-a678-42d978cb2b92"}, "f1d6b171-8509-4b20-a93f-5a12299c761d": {"doc_hash": "7a2caeed46ddd6fa53f87bfef37550e26c4f07fe64c25d864dfaab0a796ff8ed", "ref_doc_id": "92b752d1-30a5-4c36-a678-42d978cb2b92"}, "71f21173-a84d-4f81-b281-552fb842e33b": {"doc_hash": "bbe04445ec740051e82e745da22405fa10b8a31f099903b5b52106833dcfe903", "ref_doc_id": "92b752d1-30a5-4c36-a678-42d978cb2b92"}, "8b72111d-4720-4778-9b20-251913652806": {"doc_hash": "1609e71ca4446760eb087e557817c60ba9673d9e40ee7a68301bb1d78e2f6432", "ref_doc_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef"}, "d4209acf-feb9-4bc3-8ef7-08a5ef8794db": {"doc_hash": "aff1bf114d5c398e114288e8c289503c21757367204522a06117e6a66a9acdff", "ref_doc_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef"}, "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7": {"doc_hash": "c88d25435d4449d12f6a65ce57dfc0e5850f88417aeb242b952ba07f8def7b8c", "ref_doc_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef"}, "903cd9a0-f243-4829-aed8-53204c571b03": {"doc_hash": "a894c9ad6ddb355e173c6603bb9a4846f1b7c802c7972c003aff4d75a0e175e4", "ref_doc_id": "2c48ae2e-4cad-4915-8f69-1c2cf897baef"}, "f6ec7f7c-e29e-4807-988f-7c7544f89d44": {"doc_hash": "d72d3649c7a011a4eda5fd57c273059081c674b6e945ab412d56d4a5c6a7e872", "ref_doc_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df"}, "5c151aaa-624c-4d43-bb76-2497ee6d8a85": {"doc_hash": "7fa0a8de2b1fd5273f5bb2ce28c5c64fe299becb615b3f3c79c213538d5692b7", "ref_doc_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df"}, "71fec814-20b3-4531-9c4a-2834fcd1cab8": {"doc_hash": "0f71313f3fc3b17c45569dbf27274f7014b710d3be06da0b9ab3c13f605aed88", "ref_doc_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df"}, "4b2c079b-ec45-4b2a-9508-c5fd1dd8307e": {"doc_hash": "c761aec90479c9b60102a4319af95b588a40c5148d35f40e5d8a3e46084d583a", "ref_doc_id": "41cbfd8c-8429-44b4-b05d-9e398c09f7df"}, "258b7e56-3de0-40c4-9838-afc5d496d970": {"doc_hash": "e3f80ef98e39b423a3638e715da88b3bcb4e8d1872d77130f62a0b2d8d838f9f", "ref_doc_id": "794b4324-268d-45a0-9c68-70b1f052249b"}, "20a04aa2-4767-4e81-bae8-40578cab27cb": {"doc_hash": "43115e88425a5faaf53ee824af2c3ceab30c81f58b9085c1d790b5b976db10f5", "ref_doc_id": "794b4324-268d-45a0-9c68-70b1f052249b"}, "91b16fdf-df9a-4038-8c12-b7db61c7acf0": {"doc_hash": "d1f4a8a74e22667c0df56e66f0b37f18d5a29acedca0946f2d5466e2022a5891", "ref_doc_id": "794b4324-268d-45a0-9c68-70b1f052249b"}, "ef1e1449-a49e-4518-a4af-d31cc9ea583b": {"doc_hash": "35daef52b089a540c342b8bfc9fc2d54744e905278aa1872b5bc978a80649667", "ref_doc_id": "794b4324-268d-45a0-9c68-70b1f052249b"}, "a3e3e723-bcc1-47d2-953b-b80e3a304f12": {"doc_hash": "d03cc69f7d22d963beac00d48fe2c6cbaa69a3b6ad763a8c84407b305b06f66e", "ref_doc_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5"}, "ff2574ca-dec7-46d1-b83b-de684c629ad8": {"doc_hash": "ec06ce8d213ed7f916f58bd9c92ddb9490d33a5784012bac20bf78c8aeffd8b4", "ref_doc_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5"}, "f7422710-ea6f-4dce-b24b-24cfa7952773": {"doc_hash": "e14729808f9457a4f1b2b5931a7506cfe7fcc6ce2b944ddc583afaff8cb6ba87", "ref_doc_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5"}, "0296452a-2101-436c-9798-e1f7a0037c30": {"doc_hash": "829a3181f19382a0b48757dc77012ff979822e2b1dddd983ffce7e0017252334", "ref_doc_id": "7dabf9f5-ccd5-41ac-9938-0337b8960fb5"}, "6186cb44-bad4-41cd-9a15-66c17ad91737": {"doc_hash": "529c7252b6182e327718ab7b501d5b6997bed0cce6b7597839e6914d4cd2f91c", "ref_doc_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885"}, "086c77bb-7cee-45c9-add7-e398ed4311ae": {"doc_hash": "06081212ad800442c0e7cc8259a33f15fe92ad6f352fadce700c04a8189c1f18", "ref_doc_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885"}, "d50ba49a-79dd-4a0b-9aba-906102ac40ce": {"doc_hash": "10956f1d1699b453b51d6404f11e8cb1d3a7f5e8389c9cca3bbaf9deffbb1d1a", "ref_doc_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885"}, "c5525be1-bba8-43ca-ae22-bfd6b20d2ab3": {"doc_hash": "50c38b2df55296f20066de37e5f23b7781f3ad57c6635b6ba0b7c7eb1be6c0cf", "ref_doc_id": "00d1cda2-e45e-4c46-8e06-e9adabe94885"}, "7a362c72-7e9f-46b2-95ea-22a5ba53120d": {"doc_hash": "963a56fee0b540feaab962e4dfec5d04cba94988ba41c1d54b2180a2f6b02fae", "ref_doc_id": "f663f423-4c30-491e-a148-7bf3cc75e128"}, "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8": {"doc_hash": "ba6f4c96e990d70a906251851da48377fcb15d9a9cb67ffd4facad58e5df2438", "ref_doc_id": "f663f423-4c30-491e-a148-7bf3cc75e128"}, "656baed6-63a2-4973-8217-5bffcc746821": {"doc_hash": "9cc4720ef14b2711dc6e9b7a2f27c3f186c7d5ad369af4e3e35feaf64277d0cd", "ref_doc_id": "f663f423-4c30-491e-a148-7bf3cc75e128"}, "7ca8be7d-338b-42b6-b681-eee221b84493": {"doc_hash": "5ce3afcf92f482adcf0c89ed0a26f4b352bfa5178e5100e54ae5ce018358e0e5", "ref_doc_id": "f663f423-4c30-491e-a148-7bf3cc75e128"}, "5e0fd98a-ec7e-4178-a35e-182eabdbea21": {"doc_hash": "30dbdae5c7485007c0ce79c8536c02a33b1c78708e9d001a3cee5990e487a030", "ref_doc_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e"}, "9c8290b6-df0c-4508-b2f7-d07cdf24a088": {"doc_hash": "472f75ec2b765aab611da4d4f8e1a96ef9a47237c112b71dde9926b8e812b059", "ref_doc_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e"}, "54890e7d-d970-480c-90de-8f5bd37cd356": {"doc_hash": "457d03a78ad8cf65a6dc5bcc944d13e79860cf4bba0bfd20c17b4ac8b142b24f", "ref_doc_id": "5d7b863c-40dd-463a-9f5f-e8f1007eb14e"}, "ccf36001-b186-47c4-90b6-be7d62619e5c": {"doc_hash": "26db177efc12a2353db99827b350cccaef7192e189f112f138e27dc440f7e8e7", "ref_doc_id": "4f4bf0e2-dc53-42dd-b7b5-073419444ff0"}, "7d1a829e-a7fa-42a6-8df8-dd0b227282d3": {"doc_hash": "87acdde346f19f4263dac313cdef934f2c47c7bea6862e05922285a00bbe1422", "ref_doc_id": "4f4bf0e2-dc53-42dd-b7b5-073419444ff0"}, "c715d56b-191f-4cce-83a9-3763ea361110": {"doc_hash": "8b690fe9c21a2d45c48b4fe4efeea1071583b307a5663b00f590e8a566eb1e79", "ref_doc_id": "32512d19-4b00-4786-92c1-c1b945618d7f"}, "8a9190d7-cb06-44dc-a578-8fbb40aef3ff": {"doc_hash": "5d8b7f72f45bd171fc4550293f9dbbbcdee82e59540848497b76ac7042438ba6", "ref_doc_id": "32512d19-4b00-4786-92c1-c1b945618d7f"}, "450e6967-e946-42ed-b197-0c8594c910c7": {"doc_hash": "393d9f0e6fb068b6dea9d2be21cffb45f33c37422a6c96d9198337e712367198", "ref_doc_id": "6290aa2c-f659-49fe-9ca3-c625bb1438ea"}, "0e7d6743-703c-49b2-845b-e767049a0112": {"doc_hash": "b5270db143f3f55b7f2e9e8cbfb360d59547638d100e8591cda06561530fac8d", "ref_doc_id": "908ef37a-c50f-46bb-adef-ff36f7511ff1"}, "3daf8d19-ac8e-404a-ba5b-8e7648f36d3d": {"doc_hash": "79427e82155d106626a7ab28e7babdf36f24bb9f7cd7b75f35fac1dce8096c5c", "ref_doc_id": "43b05f27-24de-497f-850e-c2143875d6b7"}, "16e78e6f-4f02-46c1-9d90-cdc993c47940": {"doc_hash": "cf4a2dfc54bebfc02ab9bc6b7bc0ae576f4ba3787c1af279b2283976fd1ee940", "ref_doc_id": "43b05f27-24de-497f-850e-c2143875d6b7"}, "76cd7a76-0402-4cbd-b3ae-64654ad487f2": {"doc_hash": "a655fd264de0b09a6619fd0156c6b850694909bd18b7d2c4ee524a4eb565b8cb", "ref_doc_id": "43b05f27-24de-497f-850e-c2143875d6b7"}, "bf126563-33ff-4a1c-b53b-d6c1ea665da1": {"doc_hash": "1c1afb5dd07724d623de6ee5d0ec4cdd8e62db2079876ab62d0b11244ca882ad", "ref_doc_id": "21a3898a-f12a-4794-a946-4ee34c183643"}, "0d45a013-155d-43c1-b2d9-b0168d860764": {"doc_hash": "ea1556b9969101ac0ad63b8271451c400abb0b268f30b65f3871d03b1b430213", "ref_doc_id": "21a3898a-f12a-4794-a946-4ee34c183643"}, "e6231e58-bc8b-44ec-8fc8-44341cc3b14a": {"doc_hash": "c2fa515369c858ddd25760ee48e3fd7e118f3c86e3aed7e0ee7803ace6387662", "ref_doc_id": "21a3898a-f12a-4794-a946-4ee34c183643"}, "86505ad7-4e6d-407a-a1d2-d59403ad3556": {"doc_hash": "0741370106594176720a6489376026b9d6c752ebe6445bd982214a86c86b60ee", "ref_doc_id": "08233cc1-2ce5-4b1e-af95-c878148353a2"}, "0e64f7b9-c96b-410e-9a2d-510def4bb0d9": {"doc_hash": "f2660f5b778847f1ce3ecbe31472ce4e2a8cce54d92944bad9f1bd7836df09ad", "ref_doc_id": "08233cc1-2ce5-4b1e-af95-c878148353a2"}, "12296885-5b1a-4bc8-9f55-97433c1a5bf0": {"doc_hash": "bc1eeb0f1772f30a8f13dd02571ae6cc6a336a0629432852b69432fd520c0c70", "ref_doc_id": "08233cc1-2ce5-4b1e-af95-c878148353a2"}, "8e0684c0-625d-49b6-a914-5db9b1d4e101": {"doc_hash": "94f716a3323ac6010821eaf893043d7614fc5c8a127e83c60107cc40c8afd270", "ref_doc_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5"}, "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688": {"doc_hash": "d0affa146cd192f9b725d9b049bedfd215ca6560f4bfb808a1b9579ba71dae2d", "ref_doc_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5"}, "c9248cf3-d502-44c9-8496-b90ac5a02817": {"doc_hash": "d9d846b77851ad67c7f96caa51d1ef55136d2ce065f5933f14c081ad5ab5a047", "ref_doc_id": "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5"}, "83fef36d-cc10-4535-9e86-5177bf77c137": {"doc_hash": "a6a1c6defb6e1b00e6ab047c2ecf35bf0aae391b9afa35735a3dbc49e9848e12", "ref_doc_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf"}, "f198b342-56f4-4ca1-a61e-8ff7edbd7480": {"doc_hash": "634fe0b9d9e8676058a583b910317ee76a81faee63e72184858f739a98d14ca8", "ref_doc_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf"}, "3d95982f-3ccb-46ee-b574-24237710c1e6": {"doc_hash": "95bafbbde7c52c2f451409f5d60ba5edf7da41449991a665913b9fcd00fc9aee", "ref_doc_id": "24c6e4fe-530d-45fc-b28d-53c622e9dfaf"}, "c14c6f73-d36a-48db-840d-6743f61fd983": {"doc_hash": "b3d48ff9cb1d1c8d56ffcbc9308d760fea6b5a46bcd921969968ff4854cc9aec", "ref_doc_id": "79df2d75-a1a4-488f-8e9f-2c72cccf5ba6"}, "392943af-341f-41c6-a778-1dbe790f1f51": {"doc_hash": "7382b4f234f228c9ae8bf2936cd2325915f6e651ad575f371f0cf5591e9521bb", "ref_doc_id": "79df2d75-a1a4-488f-8e9f-2c72cccf5ba6"}, "9c4f3d48-06b8-48e8-bb72-65fba0b0ee2b": {"doc_hash": "271beb9c3d4a16cc5b323c8a804e5b95cce43ed61286c3244181124c7992a4df", "ref_doc_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782"}, "579c66b9-d1cf-4937-bbad-ea0cdb41c61e": {"doc_hash": "605be476ff87f9dcf56f47ec1d2aacb0b5a0fbcebdb0b1021eed5eedd43a028a", "ref_doc_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782"}, "377a5ada-3fc8-49c4-a2a7-6d95e6c9cf2a": {"doc_hash": "266c318b09612b8771ef6c444d862e89d5decc912233c355c8f48a846abeec49", "ref_doc_id": "9adfd97d-0fc6-4127-bc96-0e4890dc4782"}, "6ad7cc27-28c8-4a79-b5f8-fe42d0d5f02c": {"doc_hash": "825435940164802e9bbaa2428bbbf3f8d6a92fa19b56ae2dcc61bdd8d68e9f64", "ref_doc_id": "593b56aa-e50f-46c1-8073-d7f991860c69"}, "df82032b-a91b-465e-a7cc-b7a245b711f1": {"doc_hash": "04a85550ac79ee725b1250192801bd53728f3301150915e20020fe4d8a7c60d5", "ref_doc_id": "593b56aa-e50f-46c1-8073-d7f991860c69"}, "91d0b10a-4b26-4ba2-b202-2ac977800a94": {"doc_hash": "ffbb0452a3ed36aca9fa962f738dffd071ad05ac2a3378c948b877acaec8fd70", "ref_doc_id": "593b56aa-e50f-46c1-8073-d7f991860c69"}, "2d106a2d-ed94-4cfc-9c9e-115d4cf2dfc3": {"doc_hash": "4d1b9fe77c91bbb9cae3fe47016466e4cb36ec835f9d6a51a0cfdc8adb229ba6", "ref_doc_id": "75bcae47-1f76-4533-ab12-aeadc92bd995"}, "03fc80b6-be2c-44ff-a04e-e3a870ccc7be": {"doc_hash": "cc7944eb9c02acd7523bc50c4c06c0f056bc05b532eb061cf4c36bba37e2ad22", "ref_doc_id": "75bcae47-1f76-4533-ab12-aeadc92bd995"}, "94c8ce6e-4439-4b83-999c-ab5895693c03": {"doc_hash": "b912c68d9b5b706326fab7f5445c7c56e12b3b01e6a4d2c86e751c04fadf87ac", "ref_doc_id": "75bcae47-1f76-4533-ab12-aeadc92bd995"}, "14a0cc8d-80cb-4a8c-9028-d1266bda183c": {"doc_hash": "dcafb57adc26b27c37b14975134b403b45d9404cfdbd6a17310b2e832a22be55", "ref_doc_id": "24e7fa0c-f784-4ead-8699-ce6204850d54"}, "765d5187-5a1d-40d7-afd9-0443b29d5240": {"doc_hash": "e9182a2953249eb0bb8778ec98446b470a8115ba88d85c6ac8ad298342978c71", "ref_doc_id": "24e7fa0c-f784-4ead-8699-ce6204850d54"}, "47a391ae-874d-4eee-b669-bb7758b7a3d5": {"doc_hash": "e4b268d99e38e281316ee2f3944cb80dbfe570527576349c23b265b014e3a371", "ref_doc_id": "24e7fa0c-f784-4ead-8699-ce6204850d54"}, "d2515558-dd2c-42bb-a49a-035b96fe7f4c": {"doc_hash": "c9ac31384dde831cb9cc4cfc66e38063d2673d0d3233a71eadd45975684b94a1", "ref_doc_id": "4764088b-fe2b-4b30-bbd1-f9e96606d9a8"}, "e35f5fa1-01c8-4de2-80a9-e63266d1b7a7": {"doc_hash": "ce62bb62d6b396c0babf733248784f557366d3bec5d458ecd145c39e8296a3e8", "ref_doc_id": "4764088b-fe2b-4b30-bbd1-f9e96606d9a8"}, "4a6c5ae0-1742-4e39-b8fd-a84850816ca2": {"doc_hash": "00431aea4d207fde1deeafaeb787e3a409f37eb2a12d377fd95d416bbdc9ccf7", "ref_doc_id": "64f4fb18-b869-4677-bec2-b0344d985d20"}, "74c0b494-b40c-489e-82a7-85da3cf5892a": {"doc_hash": "8ab8ea84bda91be7377cc15daf9a139923de5e54620600f5c4b99a90fb147b80", "ref_doc_id": "64f4fb18-b869-4677-bec2-b0344d985d20"}, "9a13fd38-7b38-461f-a123-2bd78f071214": {"doc_hash": "0c1443f221c965495ad376159ab58e8f44afc84276e70681e543868fb13bfdae", "ref_doc_id": "5bea4f7c-4ab9-4985-83cd-383c96ced389"}, "afa8196b-95f5-45b7-8edc-46e159b9a77e": {"doc_hash": "01434821bbfcefc44477c2c54d02028d243fdcec22ce32d2f6a3eb7b21be5f44", "ref_doc_id": "5bea4f7c-4ab9-4985-83cd-383c96ced389"}, "44adaf06-e8bb-400a-a156-84cfeea90bff": {"doc_hash": "9b9d3b5d050aaea14674b7eac53d9f1be57ec70bc0766ac895fefb567e4063ab", "ref_doc_id": "a8f748c5-e7c2-48ee-8941-d57b63f0d234"}, "77fc56da-5059-47ad-b2c7-6a483b2a0fd7": {"doc_hash": "e69d2e6bca6e6075d9f92ea67eefa60fcf25be1d0e763da203f8e10df35b9996", "ref_doc_id": "a8f748c5-e7c2-48ee-8941-d57b63f0d234"}, "98c865bd-8b82-4514-926d-a5a4eda8c9bb": {"doc_hash": "c1b8fc0a341331023358abbf11826fbc72f9a815c2fa94438dd7cf4080b42724", "ref_doc_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8"}, "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae": {"doc_hash": "de07696bdb66acf04f5fc5e85e294ab4c361044570e6f559685b7b8998912142", "ref_doc_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8"}, "e45e8786-86bc-46a6-9e27-807828a42f90": {"doc_hash": "e89df438f66136ea0f3e29c97b70ef738ad4757a989225f207a273f8c83bcd31", "ref_doc_id": "24c93f16-dad4-4260-b6a8-a5cd60f261a8"}, "36f7ef5b-30ea-49ab-a6c5-e94d24ad668b": {"doc_hash": "f6f4e6040c7f8645985d7a1394d3f007bcd9e70ce67e1c6517fb9e17a590f29d", "ref_doc_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e"}, "a02ee002-f4e1-43d8-8a96-1823ac1cadd1": {"doc_hash": "183e271cd24e928cfed0fcc78dcd2ec1e6a8f9a520cdb5bd4a9164f698a7b421", "ref_doc_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e"}, "8515cb0e-0ea9-4ff6-8954-e3a765b56bf4": {"doc_hash": "128534af2192c3fac6a9f3770c788350246b4a501817b392a8de92a3707acb81", "ref_doc_id": "01369c3e-b9f1-4e03-a2db-fe8fffa7539e"}, "dbff4355-39e8-47dd-8f60-2c44f97445ce": {"doc_hash": "52d0287ebf54dc0ebe95b1911d9da739ceefc1ebe82d128807d22ea524ef8ebc", "ref_doc_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580"}, "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8": {"doc_hash": "d578f465209316eeda93b156b7ea5442e2efc44d0ca89f867908a6a9849dcdc3", "ref_doc_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580"}, "c5f22c47-f9bc-4ba3-9d99-32da291f9fc3": {"doc_hash": "d639ed9bed46d5bc9f08bbb30d1d7f864250b24ba62a9a27bce734c58c76ef5e", "ref_doc_id": "7c0c4541-276b-4f3d-93a0-1edea3aa8580"}, "7ac17321-2398-49c3-8ad4-836be1dbde5b": {"doc_hash": "75bae124686a61c10937326de83151d037be169e956127a0c55e0eba62b13a03", "ref_doc_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d"}, "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f": {"doc_hash": "abbe0b268a6bd1e6c87c8d4464171166ac3bd5b4aa919b3c80c11b5838d0e715", "ref_doc_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d"}, "f69e0c80-4643-4ca2-bd70-817bd9941950": {"doc_hash": "f51cdc959ca06c3fc95021a3f3b5c231f2badfc93b4f1ae27d22205182a906e7", "ref_doc_id": "3478e9ee-4fc9-46ef-828a-0d07bb86288d"}, "fb0b8114-1b87-4161-8e3c-9e7100c6f198": {"doc_hash": "019573e481146716b90f636e6a062e1874f2ac820070c51e31753d67860b8607", "ref_doc_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de"}, "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e": {"doc_hash": "c08dbabc01220df19adb1cacdad5653da65beb0858382933e4f4711ed57d4800", "ref_doc_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de"}, "a4953c58-0a12-4cf8-b59e-d175bfd7315b": {"doc_hash": "3b35c616dbe47c5f1bc9d8561ebf3706e8c7e19cbfb423c112f46fb8ea08d685", "ref_doc_id": "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de"}, "78c07387-484f-4c71-8472-98df5d64fdda": {"doc_hash": "c9dc78f92e53b168174bda6a57042132d21373602c214b531d4f0e99ab2f1887", "ref_doc_id": "e6ea936b-62b9-4bff-bd61-43280dbf3061"}, "cdd3225a-c868-4dc8-bb2b-5d1fdede40a0": {"doc_hash": "089fdeb25112f508ee0fa6da8c7529e396c8b24109a537e1130582eb6643d119", "ref_doc_id": "e6ea936b-62b9-4bff-bd61-43280dbf3061"}, "305cb33c-21d1-43e9-a3f8-d801b2f2d2c8": {"doc_hash": "59983d7e18b1271d7713aeae524a27c771181607bd88df44a96bc4c3b4530553", "ref_doc_id": "1196481d-c98a-4dd7-acbe-416a593ac148"}, "d682d670-af5a-47ba-ab7b-b862b421158b": {"doc_hash": "db46354faa9a96ff41b189bf651d041623bba60685a059f81304d0a31ef1af27", "ref_doc_id": "1196481d-c98a-4dd7-acbe-416a593ac148"}, "31dc2b7d-f313-424b-9da6-d6077a5df683": {"doc_hash": "d7eec861b7657a5f714ab4649a092c5dbed25373e138c83210cfaa6fc73da6a6", "ref_doc_id": "1196481d-c98a-4dd7-acbe-416a593ac148"}, "4ca029cb-150b-4694-9f18-2ffc8c186250": {"doc_hash": "18f92368d047e16d594fd7ed5e833c57525c2cf57b52088c601a5c553dd28c08", "ref_doc_id": "2022255a-bde6-4818-9325-b9f396edb043"}, "ce640a28-3108-4b3d-afd8-3495e7073dbb": {"doc_hash": "7e55d93b4ae0928ac38f3853d36e8c014a8c1268fd68132d5aa083f4645e2e0e", "ref_doc_id": "2022255a-bde6-4818-9325-b9f396edb043"}, "c49d3d30-223a-460a-8999-6105b1e29408": {"doc_hash": "45f6623c1ca43e8b95fa8a326a0f50c09bc43e7213cae3cb1f67ec9bd56e8abe", "ref_doc_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169"}, "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e": {"doc_hash": "265990970fdf05349fdc96fb600602b2ca8df18a3dcea7f1ac87436d474f65cb", "ref_doc_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169"}, "98848281-538c-4bb4-8b9e-df079994e3cf": {"doc_hash": "a54bf85b72cb6c5586ce98cd2dbae94003513df16dcc622282dc00f81d802ab4", "ref_doc_id": "bcfb755b-b958-4cc8-b97d-231e5f5fd169"}, "b1cec0df-a2b0-4f39-8d00-2987fba5d005": {"doc_hash": "4a26b7d13f15953383c55c5b5bb8cf0d814c796172a550316e1085556c23f1e9", "ref_doc_id": "aec78c57-43e3-4618-8cfd-45cbdabae0b4"}, "8dbccb6c-8829-4ec7-b228-b5cc36f13e4e": {"doc_hash": "ae9066a60f64e7017ba69eade39e403c9998cc9a58fa60c387a9c78bad111f16", "ref_doc_id": "aec78c57-43e3-4618-8cfd-45cbdabae0b4"}, "cda2cc47-2c5e-4996-af74-d02ad23fb162": {"doc_hash": "bcd80ed69f9b97c599306c8d3a34444aec9c107a22e49c2ea60a22f232761e3c", "ref_doc_id": "fb48588d-51c1-4fa3-9bf6-bf2456f5f318"}, "0fbb17fb-46ab-40f7-9581-e6b608124c23": {"doc_hash": "c281313376b6ce58e8f6f599c13f94e1afe53b7a6641f2fd99c12b6073c21f2e", "ref_doc_id": "fb48588d-51c1-4fa3-9bf6-bf2456f5f318"}, "f1c7d8ed-4a2e-44c4-a139-28d4262e1415": {"doc_hash": "e342b0341ff7e45610a47c49ea5b235146f6126f77c3344f53b10ca6abef8f83", "ref_doc_id": "4c12024f-4f17-462e-b46b-5c394949acca"}, "69445069-1300-4b56-b3cc-1225106eea99": {"doc_hash": "2cd5fd0a13d41ac05f080d9a4f5ba642f975f08af5648f6b646cd6c36cb156b9", "ref_doc_id": "311c96b3-6dc5-4b37-8922-609126f3132e"}, "c321f11a-6fbf-493b-b668-31c45a9392d2": {"doc_hash": "92d1cefe83f2f720c240abd14646bcfad7cf8712ce38da1bfd9085c913cfc2f8", "ref_doc_id": "311c96b3-6dc5-4b37-8922-609126f3132e"}, "707d8363-4c58-419b-bc35-26e9706cc16a": {"doc_hash": "43093b2bff47b1fa13e6ea249a8324bcc533af35a9ea5223cfcb93aa25242ea9", "ref_doc_id": "311c96b3-6dc5-4b37-8922-609126f3132e"}, "1d006e56-d3c9-4295-aec8-d288f06925a8": {"doc_hash": "f34f368d01578bb7b0661278a7ceabf524a6558205e0bd42435d8dd6bc647303", "ref_doc_id": "06e5e280-d852-4b5f-910c-637ac3a0a938"}, "1505259f-6e10-414e-862b-5713cdf28754": {"doc_hash": "ffd9b1a024ab005db80fe7d896026d6a28d05e37f5a672dd56165db6c4de0915", "ref_doc_id": "06e5e280-d852-4b5f-910c-637ac3a0a938"}, "cabb71c1-61e6-4106-b43b-6a3a94fe41d7": {"doc_hash": "ab4e2d3033395ab103969318172e6d39685fbd9289dd31a790a8c7f1d50907b9", "ref_doc_id": "06e5e280-d852-4b5f-910c-637ac3a0a938"}, "f3ae7623-8ccd-4941-a3a9-b7ef867328df": {"doc_hash": "4f272ee32017189187d866fac4d7f33b57e4e5df402ae86da9215912f201e6c8", "ref_doc_id": "98744e3c-0ffe-40b9-b36c-fc769785a068"}, "01a70e21-7d61-4caf-9607-c264d6044c75": {"doc_hash": "33730137f66f000596d0063f25e337e5757fe05cf5afd35973ea434053a1cb7e", "ref_doc_id": "98744e3c-0ffe-40b9-b36c-fc769785a068"}, "9e0f8acc-c042-460a-a6b2-a8b78b6916b7": {"doc_hash": "63d25072538943095b7395bef17c7277b6a338d9a04f1adc7cb5014d186ce44e", "ref_doc_id": "98744e3c-0ffe-40b9-b36c-fc769785a068"}, "12bd91db-e6bd-4f91-be01-6d3e6c63dcd0": {"doc_hash": "8ace983bdce90f79c1e6718a8dd346363330204d215844ef2d3a1ffbad161b5c", "ref_doc_id": "833f8234-8abe-4ba2-ad44-316f42e4b104"}, "135de2cf-a0a7-4e8f-8126-84c07a03c770": {"doc_hash": "62a58fb0724db113a6a6a3d1d7c371c373925ceb536f66b0eaac68590a4ca124", "ref_doc_id": "833f8234-8abe-4ba2-ad44-316f42e4b104"}, "d082fda5-fd23-44ec-a71d-6d2590a0d6e0": {"doc_hash": "3ab8b6c43a3b7e1890a4e9bec4d4d98745e14cdaa5545a51799be7cf925fb914", "ref_doc_id": "833f8234-8abe-4ba2-ad44-316f42e4b104"}, "3609ee8e-144a-4f7b-8d56-c80a1d003afe": {"doc_hash": "1dabbda5d95042bc883b1098bae9dc59f62e1f533136e12a9113e96aa4b9cfa2", "ref_doc_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d"}, "98750ad1-899a-4e7e-ba94-20eb01bac3fa": {"doc_hash": "dab397690c98b9fb91ca6499e9282418355521edfb4776521041310f1d77f2ea", "ref_doc_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d"}, "7c69d095-4aa5-4303-9365-624c4c4c884a": {"doc_hash": "a0f161e937db4548b148ad47256e93f51a0474df9947e8ed6c915707bdacd141", "ref_doc_id": "8d5a5784-e6ef-4d8a-98b0-6e46890f069d"}, "b3ebb17f-e94b-4aa4-b19a-8426ee72873b": {"doc_hash": "b422da8a1e7237ac69d4fb07e68a0bf064356ae1d21d8ecd601c4f0151e10117", "ref_doc_id": "5e77ed84-971b-426f-bda3-61f7e9532626"}, "088e581f-85c9-4c7f-a6e9-47f69494d773": {"doc_hash": "bcf4e2228265b34884e7cf95fe78c7813a6c4a0b629ec89dee376dfb531dfb6e", "ref_doc_id": "5e77ed84-971b-426f-bda3-61f7e9532626"}, "f10a04ff-54a8-4845-8156-0c14bedfc2d9": {"doc_hash": "68e46b03c779eac0cec0856f0f4b5a42f05df05cc4c84b50d84435880dae0596", "ref_doc_id": "5e77ed84-971b-426f-bda3-61f7e9532626"}, "d7df5b83-59d3-4c44-b5c8-e51191e9d2e5": {"doc_hash": "baf46d78c31b8942a2757529e70c5095af0e57ba50dcd0886e4e30c23eb281cf", "ref_doc_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32"}, "18a29e23-8309-48d6-b9f8-8b3a756cd854": {"doc_hash": "3268cfcea5783b29bee563930b62ace58983a9bc552ae73719101fb946f29a23", "ref_doc_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32"}, "dd253342-4f9a-4571-b24b-1b8580531029": {"doc_hash": "abd556f1761ab095ead1a33b620e56cb7bc71eb7c07a45ce76c199d6d7348c4d", "ref_doc_id": "e7ccdd1e-74f8-4478-ac54-f4315bd04c32"}, "5b9a7327-79ba-4269-8ad0-143db0b2b441": {"doc_hash": "8cce499b6a418958a92e151b97cdbb2a2662efb18adca66b8e8c8f38f28211be", "ref_doc_id": "53b8222b-b9cf-47a8-be90-cff719188640"}, "3e60225a-4904-4b4e-b6cf-20a71a424683": {"doc_hash": "afce61de4d4aa0cbc34a5e23420e674f68467ede107f8e967f22ada1a5ad7625", "ref_doc_id": "53b8222b-b9cf-47a8-be90-cff719188640"}, "253912bf-973a-4f5c-9f10-e706af5312a3": {"doc_hash": "bd6bbbf9cd144ec8f808a9276ebc2253e093a639ac8a59ef078fd6622d448ef1", "ref_doc_id": "53b8222b-b9cf-47a8-be90-cff719188640"}, "2c2b90a2-7388-40a4-8856-8cbc9cfd732d": {"doc_hash": "07f50be60100204805fe403bef0acc3a11c7894e2909d6e751bf47f49b9079d1", "ref_doc_id": "0e0d35c0-9cbb-4e61-8d59-cdc6b72b4feb"}, "6d3e660e-c78d-4f92-ba68-5a725b486553": {"doc_hash": "f0a21ad8362f71445690631139df724c5458169d637d35baed7a278038afe9c6", "ref_doc_id": "0e0d35c0-9cbb-4e61-8d59-cdc6b72b4feb"}, "9a762e93-d847-4fee-8174-092eaaf04f15": {"doc_hash": "6be97c0ac4a15d1d492da55505c3fa3b23202a0aacdc96ecef3d8d82d2dbfa9f", "ref_doc_id": "f307ca91-ac27-45d7-b22c-1b99431135d5"}, "5c2d232d-3c81-43cd-bd99-46486b49df19": {"doc_hash": "ed0eb3eed2451a8c0934cb3ce9e35abcb70c5d221c692af8339d5e0967da3493", "ref_doc_id": "f307ca91-ac27-45d7-b22c-1b99431135d5"}, "84704abc-f5b7-445a-bc35-f0047c4a2f00": {"doc_hash": "d9136778ac42d4ed5b81653e4cdad43db07ec8e01906c6da639438829259a034", "ref_doc_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c"}, "cf721ced-9e2b-4ca0-8369-c690258bf35b": {"doc_hash": "ba658016f11feb37c580da405e13cab552aaab1d3948e292efd1b1aa0bb54694", "ref_doc_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c"}, "c1847468-3f90-44d3-9174-2c4c0b2be703": {"doc_hash": "31d88cd51e865ee8226d63c094627981ed4b06883654ed2ed851f25406a42c63", "ref_doc_id": "b92e5bc5-32f4-4545-b702-ed95196c6c5c"}, "f9d480bc-ac6b-4a06-8916-0ed7afc81c14": {"doc_hash": "6904d7d2b2fa7d14964579edc7cd8de6455a0324a3b7e4ef8024e30a455a1cca", "ref_doc_id": "569818b3-cffa-4713-a187-bcea79695568"}, "a07a261a-2bb4-4e42-ab1e-d94471c9fee8": {"doc_hash": "bb112e06c52d4bd7b90aa1c244433d73bea4b2d1b855929bc0faf662b9405bde", "ref_doc_id": "569818b3-cffa-4713-a187-bcea79695568"}, "4e60815f-54e4-4645-92ce-a3195a9f54b0": {"doc_hash": "0725c309272d05ed1e6aa683c01569d4e67f6d4ab0e33905562814726387d815", "ref_doc_id": "5a064895-f3c9-4808-ab79-103bc8b553d4"}, "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247": {"doc_hash": "52a3b0a4f04ca76c234f6a578c50ce1b42474f5bbf44aceac210d7134fdc29c7", "ref_doc_id": "5a064895-f3c9-4808-ab79-103bc8b553d4"}, "85336622-3b81-4b92-b412-626dd96168a9": {"doc_hash": "084e928a5a622cf4a5b5c41701a4ca03123d88cf936d0b4ab5bccaf9387eb6f5", "ref_doc_id": "5a064895-f3c9-4808-ab79-103bc8b553d4"}, "84166803-206c-4cb8-94b1-edc180afabf6": {"doc_hash": "594ae672a3bde4b4fdbc2bd1e5775c72e17b8ee7a56d5cc65a14f3b502825cf9", "ref_doc_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328"}, "fdbf07a9-232a-460e-8494-113112583e22": {"doc_hash": "c8d73ede380443c6b9f4ae3fc3b09b14d1ce935043be61214a494b6c6361c0ae", "ref_doc_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328"}, "524d1c43-a6db-4f4e-8d0e-91f1b299575d": {"doc_hash": "2b1f70a1939492971df23ecee969afbfe99c0422fbbe41f5ed5579278ab72150", "ref_doc_id": "ee675dc1-e8e7-492b-83c8-e4a48757f328"}, "5a75cdc2-a802-4a19-9173-f3ed02d184c3": {"doc_hash": "8f2ce05410e816fb18a68d04e44ebb58dcd19e2951465b6346886ce85ee95117", "ref_doc_id": "3a963ae3-330a-44df-b99e-4e9b571155fe"}, "e396bc62-209f-4ed2-8703-3ee551782d47": {"doc_hash": "0d38fdec53967265716245f6844fa6ff8626a6129d45c860cde6d1f3531787b6", "ref_doc_id": "3a963ae3-330a-44df-b99e-4e9b571155fe"}, "1fcc7fa3-3d15-41b8-a7ac-df99606b1dbf": {"doc_hash": "64fc395ac08330a4a6b7c1e100a0efe00fab8b90f6a49083562cd2a3acea3c5a", "ref_doc_id": "3a963ae3-330a-44df-b99e-4e9b571155fe"}, "7f88655e-f3ac-4827-a01e-f70c448e5552": {"doc_hash": "d1ccfd7e58cda08da88fa784373ab10d6f5acaf9fffa9d8b70c8ac00f56a98b4", "ref_doc_id": "6973ece1-a08b-43b1-9bba-5893762a10e6"}, "3bf7c7d1-cdc2-479b-951a-0f96f1dcd34a": {"doc_hash": "f2bfed0930c1ca99a8623dc45f5bed31cce2299f49e6c1778cb6e2f6bbc27933", "ref_doc_id": "6973ece1-a08b-43b1-9bba-5893762a10e6"}, "2a2871e6-5bf5-4947-b02b-a389ba5b2b1d": {"doc_hash": "3702c632e4d1ab4948cace69f00f5101237c15ccf93a2138144da73a0618e87b", "ref_doc_id": "fe952172-5caf-4ebd-a9d6-6e9c38b1538c"}, "15af85a1-ae76-4a90-ba69-2626be4999fa": {"doc_hash": "4c4100248c36b24cae8d876ff3dd485e37f367cd3d64f15f32bf24fe48fa9eb9", "ref_doc_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825"}, "05161677-6e60-4c6f-b117-2ad6b0b285f9": {"doc_hash": "3ec516fee6d17780dfcccb1028116b360c5dbad3b0218c384564df441013f37a", "ref_doc_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825"}, "d241c4cc-c10e-46e5-9745-106fd60cfce5": {"doc_hash": "b325908fb4b0390f26c67a74463d8dd86efed5daa189334db7b445e02fcce032", "ref_doc_id": "e53516f7-bb5a-416d-b06c-4fdf1d1c5825"}, "04432928-5a20-422b-aa51-27c495f178b4": {"doc_hash": "3020e62341c994df56adde26753c1c9617f888d977da1a6ff08834f278347060", "ref_doc_id": "2eaa3724-3d41-49b5-8e58-12ce9434f6be"}, "e58056ef-bcc5-437f-98a8-701e3c254124": {"doc_hash": "6a1d73eb0914676926545821f53cc14eb9623e3ae10a6dee0ba4b598d942bfe1", "ref_doc_id": "2eaa3724-3d41-49b5-8e58-12ce9434f6be"}, "d89acea1-7647-4879-bee1-98c8eeb7870b": {"doc_hash": "f4dd4f94f80dfea6b7267dbbf3fb2f52c4cc4d46bbccf9eea3959bad5a391996", "ref_doc_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b"}, "f4814d3d-8615-4bc9-8413-21db8e3d9696": {"doc_hash": "ea54983b4f4be441ce56caab24869d333b506161d506d34c4531d9203e52cdb9", "ref_doc_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b"}, "75fd92b1-b8f6-4041-8396-b20f6645ae6a": {"doc_hash": "979142d6d6678a3991331a1704eafcf94607e58a2fc3c546e7527a848085abf5", "ref_doc_id": "0bd560cb-05d6-4270-bc1f-eb1f891e464b"}, "7bfa7abb-8fcf-439c-9c3c-4c540a24b754": {"doc_hash": "6f1cb6c26c84d1f5e8658f74fdeac0114c5cd8382a17424e8088139672827fcd", "ref_doc_id": "a5802a35-05e1-4dcf-b160-b13eb39f6910"}, "50fb184c-ecb8-4e47-a778-fb4358036ce2": {"doc_hash": "3adae5600c3373f7503f744a1faed5a91bea7d451e03307c2428a1097c5f025b", "ref_doc_id": "a5802a35-05e1-4dcf-b160-b13eb39f6910"}, "41e0379d-5298-47a6-b88e-6bb84210084e": {"doc_hash": "73d420df7b07c7c3139dc7630530bdc04267de843909c52cffe7863fb9f22c0f", "ref_doc_id": "abcbbb41-6aa6-4384-a954-54e782116937"}, "982075c9-50d6-4bb8-bf3f-f8f7b9ada977": {"doc_hash": "d6a019bbfad60d0560c2154901d6cb5c7a9654ee7d2ec9f37d99d9cd57eda9f8", "ref_doc_id": "abcbbb41-6aa6-4384-a954-54e782116937"}, "36a60426-eedc-4d66-9a64-566a6273a98d": {"doc_hash": "9751bec7fe6a672ab5cb4083999ba196a0f8233a018fad6232b4180d93660415", "ref_doc_id": "63afd7a0-2212-475d-a3ca-62be5bee3de4"}, "41bb89f4-5f89-4835-95f2-aa3e5148e46d": {"doc_hash": "8864061f4e34117e699ba0510f35ff88e03693d236fa5e527ad89bb62b867d5b", "ref_doc_id": "63afd7a0-2212-475d-a3ca-62be5bee3de4"}, "c9e86f49-e9b6-4c3d-9726-24d61783565c": {"doc_hash": "2651bd9ef45ef48ad4aff372602ff6e5f64facbc2377ca4a1fc8ef905242fd6c", "ref_doc_id": "2080a320-4179-40bb-842a-9c0903ad88b3"}, "3111054e-fdcb-4527-a214-a07cd5936527": {"doc_hash": "262b3359b03d2064689299c984c6a3d6cd8c1b1e46f00bf9dc4e19a6825605e4", "ref_doc_id": "2080a320-4179-40bb-842a-9c0903ad88b3"}, "3068bab1-2b93-425e-a48f-b9e96183c573": {"doc_hash": "6849095f40190a6d43735edb53b94f17e6086cd0f98a642aa82994c57f407894", "ref_doc_id": "2080a320-4179-40bb-842a-9c0903ad88b3"}, "2655990a-d19e-45d1-9469-ca81c80c80f6": {"doc_hash": "f549cb2820fcce9de53d75dc2948e091b477316ef5ec64311116e93f96303268", "ref_doc_id": "b1c38257-179e-4213-ac89-7f82c6502517"}, "215a06b8-a874-4cad-af08-4733556e867f": {"doc_hash": "eb0b7ef7928bf45f23e9c02d3186a7178a6514c5c38a25540d73818751259337", "ref_doc_id": "b1c38257-179e-4213-ac89-7f82c6502517"}, "d9bcbf03-27e4-4df1-ac28-89a5dab2e657": {"doc_hash": "77c666238ad991c1c20a26db7f397224c4d0ec69ba62bfca3e01f02af6685ae6", "ref_doc_id": "b1c38257-179e-4213-ac89-7f82c6502517"}, "bdff6f58-e1b9-401e-ac58-450e19067007": {"doc_hash": "5e6b3eaa7e535ffbcd9d645dd0dfb33c9441fb23e98451ab614fe9115b069199", "ref_doc_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62"}, "ae2c6c99-b42b-4b39-a1aa-723e47cea682": {"doc_hash": "98d680da72dfeeff04547c928b6f1adc172f716405a4b554db6d3dd0e15e0321", "ref_doc_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62"}, "9248c451-833a-48d5-a4d4-6fc72a14c1cf": {"doc_hash": "4e328448fdc3ec43794f2bc3680712af1c6350fcf882897e67ccfc0c85547b4b", "ref_doc_id": "05ce0b82-ef9a-490c-9405-601c46c2ff62"}, "e7d83f9f-2e12-4b12-a45a-d40a68434e38": {"doc_hash": "1746db92cfb99e37d6a5f56dfccafd6c0c07fa7c8b3c5eef90f52af230e4d0ff", "ref_doc_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4"}, "48ae22d9-68b3-4c7f-855a-586146f490e0": {"doc_hash": "63acc79e89b43ccf8a44f23490267dd2da6400f24318158dc593acd41c8d4578", "ref_doc_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4"}, "829be7fd-c7ba-42f7-8bf4-51bb11b812fd": {"doc_hash": "efc12d1079bacac11afcf983df2ddf55c0ebd24f113525662905a53c571d7779", "ref_doc_id": "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4"}, "27302734-5021-45ee-8eea-7584bb59d288": {"doc_hash": "e7c11c02bcfe957fab57b55f28ad600f618e2361d159d95534f724617c9eedc5", "ref_doc_id": "9e262974-ee9f-492a-a794-5cd1bf50972e"}, "a4f83fe2-ae09-4750-81da-83ab942f21f2": {"doc_hash": "05a1e7327767a335515664b4cf1d2296a5eae08ba0e685ea280bf97b27aee8d6", "ref_doc_id": "9e262974-ee9f-492a-a794-5cd1bf50972e"}, "299e58de-46de-430b-b9db-e87ad56ccf3a": {"doc_hash": "deeac58449090909c5bce8aa0ae458ab12152e2bd80dc289f3000aa02963f177", "ref_doc_id": "9e262974-ee9f-492a-a794-5cd1bf50972e"}, "1df2c793-0a6f-4473-b967-3346ff53f383": {"doc_hash": "90640a82bbb9e0904e866571f6034dd4402571057b96c0f44d66ba52c2637532", "ref_doc_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6"}, "0457547f-b5cf-495b-9af9-63e5140e0d09": {"doc_hash": "a1a1bf37255ee79706cc50af9c2c604d8a6423713e6c74b5af0a856dd72cf081", "ref_doc_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6"}, "27d84622-9b52-4e64-a4e5-07017cd3f1eb": {"doc_hash": "0ab1217d10e823160c10108041adea2e799a25cb9d7c3a6d0554d46d6b923169", "ref_doc_id": "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6"}, "7fa85137-7f34-4aa8-b1fb-ba1fbbe1963b": {"doc_hash": "5bcf8a807f55ed244208dde5e021a9eedbe7d6beceeea213f28e9566a316b9ac", "ref_doc_id": "e6a7198b-f62d-4349-9240-e7ab7888122a"}, "140ddc32-1e79-40d3-a1a3-56de924e83b2": {"doc_hash": "953d86f99f1ac36c35cd94acb18a85f1efafe3154441c46dee8f8fa59459e5e1", "ref_doc_id": "e6a7198b-f62d-4349-9240-e7ab7888122a"}, "f629b0be-5f4a-4c82-82a1-1cfc72240e49": {"doc_hash": "9d6fbba68fb7a984c497a990e2a1f86f86d30756bc1a513f54b58599a22f8c6f", "ref_doc_id": "e6a7198b-f62d-4349-9240-e7ab7888122a"}, "5d11edba-ea18-4bd7-9976-8c83dcbae78a": {"doc_hash": "0b2caa9737b49c6d1b15613da61e1b046e322ede7b893a73229fe3df27fc1af5", "ref_doc_id": "79528cad-cde0-411d-b1a4-7b42aff7d60f"}, "72aa2711-db7e-4061-ae98-efda8b970bfd": {"doc_hash": "b0bd3338381657919e38c8db91292d677392897c75e15fda7ee1a8762d3d5035", "ref_doc_id": "79528cad-cde0-411d-b1a4-7b42aff7d60f"}, "7de06d75-68b5-4082-a658-154f65b407f4": {"doc_hash": "9521b911db016cc0c0d8dd3ade10480c3517b6a53fb224417f1d2036f7fbad0f", "ref_doc_id": "d5b5f064-0c2c-43a5-8d28-14f171386095"}, "4747856f-2007-4e23-908f-6224909878e4": {"doc_hash": "1b5a46e04f547279d151322c5f340a5f8b98ef13f2a645342369b4761b36d105", "ref_doc_id": "d5b5f064-0c2c-43a5-8d28-14f171386095"}, "ed2475a8-734b-43eb-b215-f963e9d4611f": {"doc_hash": "c146ef76e2fa9f4fc509dc88ed2c6ed202e4a9e8c037a3b2915e2c635bc367ee", "ref_doc_id": "d5b5f064-0c2c-43a5-8d28-14f171386095"}, "461760cb-70a7-4fd1-a9db-db27ca193db0": {"doc_hash": "baed06c3d4e388a8f5a4f5f80607aefa1456daf452b515109195e149ab3baf28", "ref_doc_id": "cf682347-a278-45ef-adde-c627a3564272"}, "56f741d1-413b-471a-a1bf-e82c1b921cdf": {"doc_hash": "5fdbb7f6260db526a6b182848afd7312d34c41c966269f801513c0c3a825de14", "ref_doc_id": "cf682347-a278-45ef-adde-c627a3564272"}, "24aa729a-99e1-49df-88cb-912befa237af": {"doc_hash": "52d6bb3ab7154562dab5d344e21d9fcf8f0bc1210e17ea79db8bb540a306aff6", "ref_doc_id": "5b509944-1d03-49a0-a4c4-09781bbdc385"}, "45bf727d-0730-4a1f-b3a3-0c1c873c2fab": {"doc_hash": "198e4fdb809c5d20150ce3d59b8c3195a7270ddf4c5f7ecb311e7485c601cc60", "ref_doc_id": "5b509944-1d03-49a0-a4c4-09781bbdc385"}, "0c221451-8201-4c08-99c4-304999a527c0": {"doc_hash": "8d3d3d4ff8d3370e36f34543476cd7b4b1f26a5a13002f33c04808ab8d7cc432", "ref_doc_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e"}, "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3": {"doc_hash": "9cbf9b51f94c3b652f48f52f124b04193029aa757fe188852a68abf3666c7108", "ref_doc_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e"}, "5aa3b179-ae61-4a99-9d2c-a6f00681ccf1": {"doc_hash": "b9677ff10445082b2571a12d4a7d9f0263d449cbcda0eacaf105da179e22ac78", "ref_doc_id": "ad53ed6a-5749-4ed7-8831-5fc332509e4e"}, "e96693b2-6e3b-4c10-a9e7-95aa3ca66f55": {"doc_hash": "2e3a0a97ca65f91e2ebe386438a82c2d9e13552950d6d0e290275889a48d27bc", "ref_doc_id": "29d6156b-9fe0-48e4-b151-b22423846b47"}, "0d0670bf-5b33-425a-ad02-b23de7a05c0b": {"doc_hash": "99d2556bc318e4f78ba6fe0a9a6013340fe8c62ddd89794972ead595f7da05c7", "ref_doc_id": "29d6156b-9fe0-48e4-b151-b22423846b47"}, "7d17772e-d222-4829-b32d-9fb1b869415a": {"doc_hash": "ae57a6ea37d93d0b40844ca37439d0b61b3947c671274c1416e8c1fd520b8f64", "ref_doc_id": "29d6156b-9fe0-48e4-b151-b22423846b47"}, "e85a0f35-0808-4674-a533-97540fc31dec": {"doc_hash": "6717e516233f085ac375372b94b2cb24142a98aacab659e179d097392e325ac9", "ref_doc_id": "99a9535d-02bb-4140-92cd-a10d2a1654db"}, "c0031d59-a62c-4993-a5b8-823104cc208a": {"doc_hash": "423a5c3225704228e09f8597cd056f123d14cdcbad8058eefd04d887ccc92011", "ref_doc_id": "99a9535d-02bb-4140-92cd-a10d2a1654db"}, "183e79e1-433d-4390-b4b4-b2197db392fd": {"doc_hash": "4935a3feb30644ea827a0411369e88b0a5f7d9de6367e49712d6cb60a53c37bd", "ref_doc_id": "033f9051-4452-48d6-ba5c-2cf30cb3235c"}, "fa0c3897-d6ed-44d2-85d7-36f1d313246a": {"doc_hash": "d9bf215276ae252cad918a0393778989cf85db4557d054f2a6ba8b142e0271e2", "ref_doc_id": "033f9051-4452-48d6-ba5c-2cf30cb3235c"}, "93aa3599-33f0-49eb-866f-b2e25e60ad01": {"doc_hash": "f1ec2b65fad533b2f929f4d01523e07cc2e0ab2a3c36e63af820fa8db178f582", "ref_doc_id": "38cd6045-a758-4735-82bb-225459cc76ee"}, "df940fd3-0b18-4a78-bf06-a8d65c422922": {"doc_hash": "b7763921fd0e0e4dc7b75ab8ccf81727d53e96d69deeef880686bc42c4085bce", "ref_doc_id": "38cd6045-a758-4735-82bb-225459cc76ee"}, "282bafe0-723c-46c1-81ed-c5d6c9854999": {"doc_hash": "c33a9bcf3393f9585dcfbedca793f704f9af624146634fd0c2394325b146ef81", "ref_doc_id": "38cd6045-a758-4735-82bb-225459cc76ee"}, "fad1b8ee-881b-4ebd-b2d5-bdcd8aa629c5": {"doc_hash": "b759a88462925f17241c7f893bda66a554856e854acabcce14fcf353172f3ef0", "ref_doc_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe"}, "b047a9aa-ff56-4208-bff6-4fa756ca94fb": {"doc_hash": "eb2ff27d4493796c5cb5781a8a3a3ac03a36f21c28ea721da9db28c8912a6210", "ref_doc_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe"}, "f66b7df8-e3ee-4505-a023-f73fb7a9ed53": {"doc_hash": "6457b0d097a333b1467ef342a238aced77e9bb9e8ebc137a2f8c3eea1b6adf4d", "ref_doc_id": "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe"}, "c3011061-df16-4446-9d53-966433b10dc4": {"doc_hash": "202aa98a5473724f41cb3c3a6823062b5815640d014adc24ae93ede2ef5774a9", "ref_doc_id": "734ec8ee-a25a-497b-9218-b70c189de4e3"}, "5d8acc0a-0d20-4862-9220-2404a0da4ad5": {"doc_hash": "68e8d59ddc02843cde769522944d61bd41d0fe48a6dc3168a9adfe189821bf84", "ref_doc_id": "734ec8ee-a25a-497b-9218-b70c189de4e3"}, "2c880062-31d3-4e09-bee7-3fff90468af8": {"doc_hash": "7cd04534d4c57bf6d7d9a888a6de6c62d8cc6aac3baa347fdcd44e9eee79fa63", "ref_doc_id": "734ec8ee-a25a-497b-9218-b70c189de4e3"}, "2073834d-f536-4833-ad59-f863ec0aef8d": {"doc_hash": "37171513e2ef69bfd36965726c04862d2937a8c899ee0d1e6c6ce74c65a659f4", "ref_doc_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022"}, "4d154734-b071-46e0-bb94-b26622a3ef7c": {"doc_hash": "366b00c27f3db4f956759b765aa01add056ae08916ac1d2a04946cb9ac49d825", "ref_doc_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022"}, "62007527-e2b3-486a-9a12-5d565536440f": {"doc_hash": "f1ab95e70a89adf24f84576f571996e627a7dc62a05bcae010d29fe344cfe3ce", "ref_doc_id": "e0a7b4fb-8136-46ac-ae0e-4f4a66782022"}, "9c107b52-f97c-442e-a2a3-dfe1aa6e703b": {"doc_hash": "9ae20c68ed05de05509192b56fec725f2741f775727b7702e57a13d76d417237", "ref_doc_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d"}, "3f661e17-8bc8-44ac-8d5d-ffe3a071296e": {"doc_hash": "b8d629894e4329acf3d7de093ae8985f59e8f4274253f03f276f591f6aee8b84", "ref_doc_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d"}, "003239ab-620b-41b1-903d-68265a69b7e7": {"doc_hash": "59cf3d91307c1c65b5b599e44e3c20440740775a94154a3f65a68c1cd57592ef", "ref_doc_id": "59f7ea35-2bc0-4354-b3bc-767514a2366d"}, "7685b032-465c-4619-925c-cf52ece4837b": {"doc_hash": "fb9877a84636d29b80c2f96cfe7c955a8c46c3e91d4f80e9f549b01b5a779030", "ref_doc_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2"}, "d0cac3f0-0153-446e-9f7a-146f42f69196": {"doc_hash": "dfcbc8e03fffc7a781ef0fcdd8cd785cad7e3093c543ce13e883f06659fecbee", "ref_doc_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2"}, "67bbf578-2c5d-40b5-be0d-eb71d2326a28": {"doc_hash": "4908210a7795e311f970e419c8a7f85f1e53e049fa8d1d78d881529a36f4cfce", "ref_doc_id": "b9cc6284-7170-47ed-89c3-a5c9b09044e2"}, "642a1e57-460f-4958-83cd-a6c5dcfa09be": {"doc_hash": "2c2684934c8f7d5c0cd002fbeaf6062dc138c0a4087f7dd9c7acb95ea03149da", "ref_doc_id": "b448c3b1-c3cf-4092-81c2-c51818539ad8"}, "f3615cbe-932f-4daa-b2f4-4b6d0d11580a": {"doc_hash": "d3967882606a19f6d2975a372e3784ce594c391ea2e421609d36a301d1dbd9b5", "ref_doc_id": "b448c3b1-c3cf-4092-81c2-c51818539ad8"}, "e178afc5-d73a-4157-9cb8-5fcfdf0439f1": {"doc_hash": "b1148bd98ebc9afaec94c85ae207d7a861da38817d01e61c49bc497054e9d0e0", "ref_doc_id": "37399807-0717-4acf-9a96-72e87cd2dae9"}, "74d5501f-65c9-45ae-b0a5-b6b597de34c8": {"doc_hash": "10fb5f5a133651d4cc6f42a4f7c3dfd9acaa3e82359818d85fe34ec14676aaca", "ref_doc_id": "37399807-0717-4acf-9a96-72e87cd2dae9"}, "a7b0cdc9-c89b-426f-9c25-f763e99a39e5": {"doc_hash": "17552e52f1b8caf6c9a2ec27bff5972fef4170fd7f8a6ebcb1a809aa77f3b266", "ref_doc_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14"}, "c444c0f4-d128-4b8c-9ee3-3ad703b03afc": {"doc_hash": "63d40a52629350b2fe343329a16abd7f26d388186f4d558d4c18bf7c67205011", "ref_doc_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14"}, "b2a0bfac-2f27-4149-8c49-83f389e544c9": {"doc_hash": "286ca1166a546dea5b40dffe5333377753f4aee0a6265b72bb141cc734ed4a0e", "ref_doc_id": "b9062343-982e-4ed3-b6a5-bd86d9a96f14"}, "99c450b3-16e7-4ea0-bbb4-ed2183f9aa82": {"doc_hash": "5baa5ceaccfa639b2898195bdf99bd1a5d19221cde87ba5da08eb33eebb490be", "ref_doc_id": "5569b904-e479-4e7c-ae65-5dad142cab85"}, "9adabfab-ba8d-478a-8efb-0b4a16c68388": {"doc_hash": "2fec2bceb4104fb2e81920b6d8a32d43a065c051b296fd4d07caf93ef500082a", "ref_doc_id": "5569b904-e479-4e7c-ae65-5dad142cab85"}, "72bc99ac-2008-4a8b-8b0d-3b5aeae80977": {"doc_hash": "1ce54c3d85549d3adfaf7b587fefe575eecfeec89cbd64dbbe2f6cd511cb3ae1", "ref_doc_id": "5569b904-e479-4e7c-ae65-5dad142cab85"}, "2a38f6c9-cb6b-480f-be4b-f34085c0d9da": {"doc_hash": "4203b479e71044d603458c39fc7732494ca0bef9d0bd4b81592ac4ff29ce2a0e", "ref_doc_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021"}, "3638be35-3e8b-4b3f-a513-e7d772f20eab": {"doc_hash": "1f47eb3b340efa61d63875d9dd527e079b4e9275ebf13787e54bdf6a3b4c09b3", "ref_doc_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021"}, "96a2534c-45ae-4940-900c-210c0a85c377": {"doc_hash": "0680e798276c9670a2f6be70c308e055b9c5833b02f421bd660518b52b7dfbf1", "ref_doc_id": "1b041c9c-b8bb-48b3-8d59-d175e7b5e021"}, "0b99078c-7f4b-48bb-892a-fc1ec83d77e9": {"doc_hash": "ee169fbfedd70aec64a9189ad45ad38e31312c61237e2d55603201b33ce57a05", "ref_doc_id": "9931a92f-9e59-42f3-a728-780def1247b1"}, "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa": {"doc_hash": "09764f48a261724e8523e2b288abfcde61cde1e9012497a52bb683a5cbff8f57", "ref_doc_id": "9931a92f-9e59-42f3-a728-780def1247b1"}, "51b90cfb-ea71-43a8-a43e-41394e24a067": {"doc_hash": "9aa37ab4db75fb2d1629be5702a6451bed1bfcbee414065b0afe9aba3a80632f", "ref_doc_id": "9931a92f-9e59-42f3-a728-780def1247b1"}, "80ad94f2-061a-44ab-9292-172cfba3edec": {"doc_hash": "7c6911d762e7099d5ced5610379ee0f7b219ca6907f555a1a5f5e8307b95c340", "ref_doc_id": "3413ea8d-7982-4109-80e0-96913437781b"}, "4a05607d-ed1f-49c9-930c-355a8da8a3c7": {"doc_hash": "9913889f4a08a38626ba93ab2b04ce453f69dce0377dfbe221692802dba1a8bb", "ref_doc_id": "3413ea8d-7982-4109-80e0-96913437781b"}, "0a443b5e-2299-4180-b305-c7d4d9f47e70": {"doc_hash": "64f79adaf4b9715cadfa7a738663a4dbc2b6f3db922587ce58b8350e39346fd3", "ref_doc_id": "3413ea8d-7982-4109-80e0-96913437781b"}, "81649f77-7d35-45e6-af1f-640d12b1a031": {"doc_hash": "d5507f63d83905609ebe74a8f621d4b07c17cf38ffb9c22789b0b8248d919317", "ref_doc_id": "501563dd-b689-4b9d-a1c5-d777d2a21dd0"}, "8963a3fc-d194-4082-8266-5685700d59af": {"doc_hash": "4e91d09af356b997b4a065a27c9f6aa26f4377f583953acfe296b15c51b32e9b", "ref_doc_id": "501563dd-b689-4b9d-a1c5-d777d2a21dd0"}, "d3fc6bc1-571b-4936-bf72-442948650bbf": {"doc_hash": "34b50769bc561bd2b42af7d6d59ee40a5f6a658e87bdeae8a973c2c2692243b3", "ref_doc_id": "7803d600-c2e5-4359-a8f7-26fa1e430dbd"}, "71dbbbf4-2da8-4617-8e2d-2d134c5bf2d1": {"doc_hash": "aa85d45afbcefc589239f129676ce0ad04b38a7f10f1cc63f2cc2d5e31f4a7cd", "ref_doc_id": "7803d600-c2e5-4359-a8f7-26fa1e430dbd"}, "e21c4c66-928f-4242-9fef-e03a4b8277a5": {"doc_hash": "dfb964f75c34c3f9047e14c82f1fb03adc681147c2eb6a572e41aa74efeaa3a6", "ref_doc_id": "d9ea3e19-4a78-4ce2-92c8-b8c410365ea1"}, "8c14d1a8-05be-4974-a3a3-76c3d23d0d13": {"doc_hash": "b7f62e4e81d655969be667ec9ad22525b7e2b108e041d8d298745a0100c9679d", "ref_doc_id": "d9ea3e19-4a78-4ce2-92c8-b8c410365ea1"}, "87828e2e-cae5-42a4-8e7e-a378062b72dc": {"doc_hash": "8777bfbdd74e93e1530e08430ee3a6e13e525465304c772bb311ce58b6d1013f", "ref_doc_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be"}, "5b811e76-18ae-49f1-a688-3fc52bb00bb5": {"doc_hash": "a99249c89989dced86faee8858ab441f6ced50039e11a7eb4f41bdf373d7118e", "ref_doc_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be"}, "242d91e7-0e84-447a-a511-ac8da51ece76": {"doc_hash": "b462051c67a6f481ff4235c2b03ed2d1e13cb414aa74004fc6996ff3c08f9993", "ref_doc_id": "150f6d3f-437c-4b8e-87bb-d0d5af0788be"}, "dd4ae17a-1871-4b0c-bc5a-3f4755422c25": {"doc_hash": "266142726b2658f60ad037b38c15472d251324ad4a2786b8668e371b6abff1b0", "ref_doc_id": "2e270caa-ed45-4469-949a-fd39edd36be6"}, "75dda0d5-7370-4244-b44b-7e4596586714": {"doc_hash": "cc035faed6cec3ecf74282c0c058470e771042d9e4df19a226c1b323b12b2bd2", "ref_doc_id": "2e270caa-ed45-4469-949a-fd39edd36be6"}, "e4dbd3dd-9bce-4972-8712-52587000a782": {"doc_hash": "ee279772f903dad21b4dfd3712719b46020e75b4e26fe177d13bd510c3c97f6e", "ref_doc_id": "2e270caa-ed45-4469-949a-fd39edd36be6"}, "16cafb69-a998-4c26-aade-28f9dd006e79": {"doc_hash": "b88979ea77a4a9e8cfa02a995101911753e409d203bb412320c59e07aa824839", "ref_doc_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad"}, "d22aac33-ee5a-4be7-8e4d-225e272c6c39": {"doc_hash": "d491660bc41be865faaefc30031f9b52ab302fd613e57bdf2b09f18d92d7838b", "ref_doc_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad"}, "d8ad95fc-0d71-4308-b6cc-87afe4118008": {"doc_hash": "bae52a85dfa197b424ec348d4f363edb314b757dea1974899eeb2add7ad0b40d", "ref_doc_id": "1d0b8f75-069e-48e5-9a57-12de676bcaad"}, "4bf30da7-e1ef-4d9f-a57a-88f8f240f406": {"doc_hash": "542cb333e2fa4712bb9e69346d90d1b390a327340b116f03abba81146395e16c", "ref_doc_id": "094c6ac1-bd0b-4a82-ac68-8d7c9fae865c"}, "d06b23c9-bb5a-4eaa-bccb-ed3237060d7f": {"doc_hash": "4735924eb4b5aa25187516927809cf96b345d7a3cdd27787872bf05b2c50134c", "ref_doc_id": "094c6ac1-bd0b-4a82-ac68-8d7c9fae865c"}, "af7333b4-4a28-4232-90d5-0f19d04b8d04": {"doc_hash": "c063b8b4ad034eee6bfe41211008b1e9bd3dc866bf0cfbb30bf49a6e7729aa5b", "ref_doc_id": "9daf359a-0691-4631-83ec-864032242595"}, "d0b2972c-c9ac-4109-b608-cff70d2fe359": {"doc_hash": "9d87d2e1ce82e2ab5b5dd96b27419b63bd39dec40441bd275119874d99dd5055", "ref_doc_id": "9daf359a-0691-4631-83ec-864032242595"}, "38195d40-2719-45dd-bdfb-28bf327e39d5": {"doc_hash": "45a4538dd9b6a5869c226601a083c90b0bb7a661cfbb0b987d2ebe5762a95ba6", "ref_doc_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6"}, "8522c12d-36e6-4618-a970-3c6cf59fc592": {"doc_hash": "029092cf28e381fff3d250df9daa91909b051543c3d87851ba9cb99ff8eff5fd", "ref_doc_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6"}, "16250ed4-d518-4411-acf1-2324465e0960": {"doc_hash": "cd38b58da3d092430efe1ff8c9ace8c8bcac5be5fa8446fb87dd396c0bdddde1", "ref_doc_id": "eaa0c961-9c47-4972-9b5c-706d22b3e3d6"}, "bfc9c5f8-0ab5-48c2-97e0-b96859150715": {"doc_hash": "92e17fbc04dbc387664f303cc37592671594b9b2a70cb4596856421908d640e4", "ref_doc_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468"}, "6d890d02-c3b4-4c84-8138-46337a87f991": {"doc_hash": "837c9d1ce3e0684089117328c6a2c1574fad1c3c4847673ac690024547bc8c01", "ref_doc_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468"}, "3d5fd494-f66a-4397-abfd-bf89ccfabe62": {"doc_hash": "37e37ded272db2276c5405a8cd2c4cbc6d8b6e9288a68e54b31b3ca1b13d54a4", "ref_doc_id": "19bceb5b-40bd-47a5-9c32-a3e0aca7e468"}, "c6c775f8-c44a-4fad-8a6c-c8922406a985": {"doc_hash": "1fe7c57d8180f39ef5e5821a08c51a9eb63eded7abb400a1c9807d326d9e70f0", "ref_doc_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5"}, "485ec083-4189-4610-a49f-9bf46026e888": {"doc_hash": "ed978c6f7a4e0445242a5a519e54de38c26eaa6f1b5fceabb469d2e3cd495073", "ref_doc_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5"}, "af101114-6d8f-4f73-bfa9-63e041d150f4": {"doc_hash": "54bb737f873259f758a1f52580ffe8c21b3d22c521858c76efd858934f0ec4b9", "ref_doc_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5"}, "74e7d57b-b19e-47b5-bdc5-1d90f447072f": {"doc_hash": "43aaece8c6966e03ede5bd3132b1ab21c09713de56de804b70c941c3650bcb6f", "ref_doc_id": "c59e764a-39e5-4004-a92d-33a5c6bfc2e5"}, "dd070148-fcae-4038-8d3e-dd9d9d492d4e": {"doc_hash": "efa6ce9579088677afdfac62ce86240ee90fa0f38b40d86f2bfc0381b1dff073", "ref_doc_id": "150cf30b-f370-4a8b-8a07-f32f0e12ba96"}, "6c775314-cdf2-4d9d-afdb-74efd0936ec0": {"doc_hash": "214404c908b8b9ff7a05fc35428d9b98bfe3ea3c77a4f63b5b81b5912be629dd", "ref_doc_id": "150cf30b-f370-4a8b-8a07-f32f0e12ba96"}, "5f35ccf0-b7d5-44f8-b40d-9709f11d5ce0": {"doc_hash": "32905c579169e4f73ae57e192d978a3f0064b32420e44f3fcf19f2cc4976e858", "ref_doc_id": "1993620f-4e63-4723-8697-725614a1e458"}, "e11717db-52d8-4880-b293-883ce900a9dd": {"doc_hash": "7cfe37e49e5f93690afb527a7375441f148018d563095d40b25f7b694490f6b6", "ref_doc_id": "1993620f-4e63-4723-8697-725614a1e458"}, "3ff63954-d453-4f6d-a8a7-7cfc0f0edbcb": {"doc_hash": "d6882f9a8f5b9770d1824582c7dff9c16fb07a3abfad64a56b7cdc71f3b74385", "ref_doc_id": "f758155d-13b4-4df9-a44b-1e9f07dfb994"}, "733ab213-6668-48f9-9629-b94de514579a": {"doc_hash": "e8d6306f250d4f5d0fb925408c7660200d1314d802c8ea5faad569ff53095319", "ref_doc_id": "f758155d-13b4-4df9-a44b-1e9f07dfb994"}, "c114f1df-ea3f-496c-9749-99e4cfc8356e": {"doc_hash": "31912c51941ce03016fa278e6f3c3f258eebb1a06547ec98fb31f0996c0dd0c6", "ref_doc_id": "03a05338-d801-422b-9a7a-b05a81b85bc7"}, "3723ffa7-5af5-4654-a39a-e84038aa2241": {"doc_hash": "38f9956d12263ab51d769489c2e8ad22149ba51117ff2a7a4afeb14f4c00fdff", "ref_doc_id": "03a05338-d801-422b-9a7a-b05a81b85bc7"}, "5abc906a-20a8-48ca-b34d-8d8293981f7f": {"doc_hash": "45152501f65bc7da0b1b8410a1c3e7cbf93f1e3f3fcb0f2a5c196d2302fad33c", "ref_doc_id": "815ba303-bcad-4831-b9c5-e2d78985749a"}, "ac909690-6913-43f3-95b3-d2e277b5ae28": {"doc_hash": "f372bf5653f73ef2b54c24eee97aed12d8268b3235e0d175554602773e70ab01", "ref_doc_id": "815ba303-bcad-4831-b9c5-e2d78985749a"}, "e2fef361-60ea-4db1-92de-0e885e1b13a8": {"doc_hash": "1ffefdaba203d722291bc1096f7d233a821236e50ff4644c3809d7b2bc51a660", "ref_doc_id": "01f6861f-ae8c-41fb-958d-11487bb3b509"}, "f5621613-626b-4b4d-8622-39e57422ea16": {"doc_hash": "46511c886b8f600634e9fe16029723fe25d56e081a44bd6b57c5129df7be463b", "ref_doc_id": "01f6861f-ae8c-41fb-958d-11487bb3b509"}, "b3a6b636-1527-4d3e-bb25-2acf8b247902": {"doc_hash": "e1ab1875adf00102a9d5c5c16c7a1ca26bb51f87ddb0e3cc0499f639040c7024", "ref_doc_id": "01f6861f-ae8c-41fb-958d-11487bb3b509"}, "1e86c68c-6cd7-466c-8b45-9ffbe2c75139": {"doc_hash": "0f13d31edef4cfcbf883da427b8f14a038c1b7f6d4a6f09060d145c3eb4c813f", "ref_doc_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e"}, "68cf5b1f-46ef-492a-94c3-d10ec84559f6": {"doc_hash": "16fab85cacac015f69f341744a5ef60133400a8e209d3789c2fbfdcc3eb2d955", "ref_doc_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e"}, "4ef1b444-b2c9-4b86-80d9-50c3a864ab5f": {"doc_hash": "57c3f34c0f40eaff2a9a2d9bd5f911ba286937a59e16841b44970c9c91959275", "ref_doc_id": "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e"}, "8c77481a-758d-481d-9a84-b9c669135516": {"doc_hash": "329fd368d666042acdb5df0f3cb6dfd230517e9caf31a2a7ae530456fb4ec6a7", "ref_doc_id": "72971d80-bda9-4c0f-be03-786304d2a533"}, "32e6622b-d604-4968-b742-9e32703d0a00": {"doc_hash": "f31388c4f596abc228cbf422f7daeb08a954169d7f1e348eb7de7c3d945b6a89", "ref_doc_id": "72971d80-bda9-4c0f-be03-786304d2a533"}, "6bb7bce8-78ce-4177-84cc-e1a0c1f74e4c": {"doc_hash": "fafa3161413d2418efdbf308c895de1de89ef268601d129099f0136c5a618db1", "ref_doc_id": "72971d80-bda9-4c0f-be03-786304d2a533"}, "5d49af94-5939-4a88-93a1-9aede3da405a": {"doc_hash": "235cf22567cd9eaef5d0a76b2ed72522619b7405c12e5c5c03832c9c146d08b2", "ref_doc_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900"}, "f7c6278d-b606-4a51-87ee-4403ba8edaaa": {"doc_hash": "8e18934de529c6940a81abd1cfaa003ff76bc71b48039396faf20116239083a9", "ref_doc_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900"}, "54b1bd4f-bf4d-4b0a-802d-460dba63d387": {"doc_hash": "cd14507ac43603dca470f34b1d7ebedfb486b58d19463f4a58b8cc2f9e19d7f0", "ref_doc_id": "d697fd96-59ce-48cb-bfd8-15e542ee4900"}, "560de637-836a-457e-8c21-c340365121c9": {"doc_hash": "4e89c03dc683a8205806eb24914aa3e46414a1d197cdcef4130907741e84ca8e", "ref_doc_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f"}, "9bf1d076-7cd1-4f91-8eed-dd24b0693293": {"doc_hash": "19453311a98206aca9a9d705e3ce88822ab297cc94e5f3fcfba00d997063c049", "ref_doc_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f"}, "f97bdde2-039d-460c-8c8d-bbc3397589d8": {"doc_hash": "f5080da400b2cccb3531b975c60a1017f6797278ce102ae52b93aa4eb42baf43", "ref_doc_id": "a7f39a5b-4f51-4253-83c4-c760b34dd41f"}, "482d8b7c-3cc4-4437-b339-2583e104dde4": {"doc_hash": "e8c69da6659fe1354974a5b551508cf39f5de70087ce3fa2324a845f4b855306", "ref_doc_id": "a909af8f-b665-44c1-871b-f73188e2b459"}, "535d3a85-d357-4f47-9ad9-e751e5f21e3b": {"doc_hash": "63e2d4b042aa4147cfc41e4be49019d3d1d6c93e83655a0852fe5b01ebeeb563", "ref_doc_id": "a909af8f-b665-44c1-871b-f73188e2b459"}, "50f9b37d-1f81-429f-bb40-cb47eae0276a": {"doc_hash": "61020d905c977d12573e12b3b29eaee431e19a468c0488c7c504abbc807d3895", "ref_doc_id": "a909af8f-b665-44c1-871b-f73188e2b459"}, "3b657296-4b59-466e-8392-e46994f1a607": {"doc_hash": "91b1470b3fe9a87288c9c4af4d6e14ac2853496e9ca5caebfa92fb3a5e30e601", "ref_doc_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60"}, "15008751-7e1c-436b-b55a-74d050369057": {"doc_hash": "af7df75f63fc7de5959c9ffe15f1c20356190ab0d6507091aa8619cce478e2ec", "ref_doc_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60"}, "d9c857a0-ad47-4503-8cca-e09c4d8b4654": {"doc_hash": "228906607320a7e53cd00fafefeab2b24a2d310096032aef21cbcf1c89ba5e48", "ref_doc_id": "a85e9ed6-1d8d-4222-9eee-e860dba90c60"}, "460c21e0-566e-4b6b-be52-4229f26299b0": {"doc_hash": "a71de37c2e4e1c22bcf5e9e3479f478bf0772b573bb5d05a5171ce15a4f0b41e", "ref_doc_id": "bc6220ea-cc99-4367-80a0-0d5fe5f32b6d"}, "3309f929-249e-49fa-838a-1679d3ee2d75": {"doc_hash": "f87a3b2f79d84c76180ae8636dd4208182d3bc127222d2e41557b36aa58cdc32", "ref_doc_id": "bc6220ea-cc99-4367-80a0-0d5fe5f32b6d"}, "6b12f09a-2e4b-44a1-b7a9-97e1f3c0e6fe": {"doc_hash": "cabe27ab6511ee9224e39e105491bd6c7e525ef8ff59e6d32d6c36a696fde856", "ref_doc_id": "cfee5237-28fb-4bc8-8c55-92553cc50e4b"}, "956a4dfc-06c0-42f1-89f5-0f8edea3d86d": {"doc_hash": "6e2a3a4b46c8a6e2c0214a5e5df9ae32b35fc008ed28b003852d2ca8ca89fb62", "ref_doc_id": "cfee5237-28fb-4bc8-8c55-92553cc50e4b"}, "f94d3504-320d-4c78-bba1-f7069b931c2c": {"doc_hash": "2e2de4848a59d83ae3c1a995e277f9956b384f6f15f316d237a362e4296a4e18", "ref_doc_id": "eecdca00-6afa-49ca-8f08-28fcb3424ee1"}, "ac13e018-09a1-45c2-9a73-f5dcf126fa28": {"doc_hash": "a14229caa3e6de9ee9306a7de2c2325a493bc036c3fe69302ac4e699ca547107", "ref_doc_id": "eecdca00-6afa-49ca-8f08-28fcb3424ee1"}, "41f82b24-bea7-491c-8020-418d308dd012": {"doc_hash": "d16bbe21ec834cd8475405d5eb8e4ec134255f797a361e256f4eaa48798e395d", "ref_doc_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0"}, "39ec4bdc-8790-4758-bdcc-5d0c5831f16c": {"doc_hash": "7421b34d9ca7f254e89200521bbe4cd268e6902955c2ea68ac92b826131c50c8", "ref_doc_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0"}, "28f5426c-4dab-4436-a684-17a9036047c9": {"doc_hash": "cb8ea404ff55bd8fa00c3539b1b107deeb524786faeb3a8ce7010548f60403ba", "ref_doc_id": "b65d4149-4418-4a59-bed4-c70a9b9c05c0"}, "73a09d09-463c-4e37-94a3-ea5bfe969d7b": {"doc_hash": "382c4570d85ce79e6d20de716068e2ead061a161b59af79ae3390429f2538442", "ref_doc_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb"}, "f5ae0003-b92a-4440-aed5-4af9b2caa3be": {"doc_hash": "c505a77555745a87bde2eaf1a5ff1a9f83601839e658d091d13e753dadd64ac2", "ref_doc_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb"}, "bfe95d98-a6df-4332-beb5-baa0cbca8b33": {"doc_hash": "4aea72c867433a0d3373603ff43e710fea7386d6e21e534d3bf89af0f86348de", "ref_doc_id": "b7b9f244-bb11-4a5b-88e5-2b690c553deb"}, "37018b8c-80ac-4e7d-9582-09259ae59e30": {"doc_hash": "144f9fb382cfdb83fa000cbe2ba08773e736b131a2fbc8b62fcac009912677fa", "ref_doc_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1"}, "a49d15ef-b120-4519-86e3-d71182b0b882": {"doc_hash": "730419a4adf53b86f7d8dd9d215b20eb832f9504cbcc204069bbe7fd861c071c", "ref_doc_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1"}, "212e6dbd-db28-4452-a89c-5b744f8aefe9": {"doc_hash": "1812513a4a381a96becb77e2956355613708095d5a7a734be8c74d7b3ab1264a", "ref_doc_id": "9c1678a3-9ec7-44f3-b91d-d325cf57acc1"}, "5196474f-348a-42b5-bc16-8a4a9335af06": {"doc_hash": "1baf8fed126eacacf01aa7bee139af88828f3f935b894a2f9e60104e6db9d93c", "ref_doc_id": "a0eff26c-8f49-466e-812d-a70cc68e866f"}, "23471b4b-fbc9-4d38-af70-2dc301b15a18": {"doc_hash": "52e9af0a1c34a0884658aa621ffafe2ba9910ea918859b0fbf7b7b14103545fd", "ref_doc_id": "a0eff26c-8f49-466e-812d-a70cc68e866f"}, "77a6bc4e-21c6-408c-aa43-91b9e785ac35": {"doc_hash": "79f78c43b66984d98f1f821c2e1eb205288896dec09fc761219008ffdb3f65a9", "ref_doc_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae"}, "15764751-f07b-4b10-9e1e-97051aba8fc0": {"doc_hash": "9f7e6dc7321eb592606307e818db1e951572f7c608e5b89f0a0ffe7d6f54fd2a", "ref_doc_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae"}, "6ecde42a-4f02-49ee-b03a-972123c93fd1": {"doc_hash": "c28141a4ebe5ff80f103e4886a136fd35ce059e67e57949d12afbe91631e9b45", "ref_doc_id": "0f6a69ea-1806-4b0f-9e05-078f2fd24bae"}, "dc0e25f6-8620-4c85-b3f9-25dde0278ef5": {"doc_hash": "9b2a83dfc93440565e2b72298bbc001de2e5aebeab2eb72e13a2dd767de77a9a", "ref_doc_id": "80dc0551-929e-4306-b3fe-3896c5db61e5"}, "651f8e31-9c08-4e44-9b17-2d6cb883addd": {"doc_hash": "dafe694dc62ee2df317e9770a94446cdc295e2a69567e44b7a00ac0f89caebd8", "ref_doc_id": "80dc0551-929e-4306-b3fe-3896c5db61e5"}, "4c3fa5fd-c6d7-4c98-be0b-4aa7897b968b": {"doc_hash": "4e8ddb59fdc1403482ee3455fd45e7456a6cc93831fd5581e06ce7edab9350c3", "ref_doc_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990"}, "508308cc-275c-4108-abea-342360614d2a": {"doc_hash": "2d8667bd3e40e99ca6a957fc3cff877d4130f9efe66c8cfa3586e775fd5f6f74", "ref_doc_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990"}, "cb0742f5-1959-480c-9338-52e6cf950458": {"doc_hash": "0d41c5b17c2acd5a8e5a0be56c7d235caa46514176030eee4c79607726245560", "ref_doc_id": "9bd832c3-2e07-423c-b73c-4e50f8ac0990"}, "727c2e15-680f-4752-90eb-aa1cb71e1a3c": {"doc_hash": "8766855dd4347297ce9e0120863bb62bc465a8292a90c1a87024f7ab2e359f02", "ref_doc_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf"}, "61bbd862-fd3f-42b4-b909-f65a8f152606": {"doc_hash": "b7edad8f11bcd759e8b9bdb77c09730a9ea2e728d3753d548e2386847369e253", "ref_doc_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf"}, "83a18cc6-dc75-481e-b063-d52476ee3a47": {"doc_hash": "b53bc4df090e8fa6690a3a6effe85b0549ead500cb1eccfcfb62178fea877b4c", "ref_doc_id": "407cec08-52b6-43ea-ab39-acc3ec2a21bf"}, "710c6f58-56ce-4511-a420-5e9e6b11e28a": {"doc_hash": "dfc3821a4cb99d91e625a1a78b91e11ede202f814ef9ab036aff4ca5611140d3", "ref_doc_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521"}, "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46": {"doc_hash": "50e9f49cd02c7475f827238994925d4788de184614850965a83a1c2d84d85eda", "ref_doc_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521"}, "8e3f858d-ed06-45d7-a5d2-cfce0a9a75e7": {"doc_hash": "579ace0254a0ad3ab15f76cf116bed0237a54d8009fbf2e3c72cce8cf420762d", "ref_doc_id": "046d728a-70ff-4d2c-8de3-9f8fa7260521"}, "281b4f0e-8b63-4224-af03-06ead4e7b15b": {"doc_hash": "63a776c4340f52f653841d72e4d9b652b7f6fe0b28041549c22186f6dfef2663", "ref_doc_id": "f57ee002-962a-45ab-9aa8-e237c6affa76"}, "16c5b8b7-1c96-4f73-8213-c2e4722948b7": {"doc_hash": "7527412d0d2c435930163eacec203307a1d67d88d1286c644b5157bf27eeef2b", "ref_doc_id": "f57ee002-962a-45ab-9aa8-e237c6affa76"}, "5f11309e-f8a2-43d4-be4b-7d0c0e1f5a65": {"doc_hash": "d6319d7695bd60de798e629cbce6c1c605820c58c4a72a1ac4635bf90ec541d6", "ref_doc_id": "08e1b220-97da-4418-b2ba-6c614756a51b"}, "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f": {"doc_hash": "3b8606b59d62dd1824fc4e2d945e826d66d4c56413de68fec2b28dc37bfd2a2c", "ref_doc_id": "08e1b220-97da-4418-b2ba-6c614756a51b"}, "1d4ba5c4-de80-4fc7-9d54-157b7b12f7df": {"doc_hash": "111be7075eba50908dda1d03e73982c4737b50cce143a44e134260677df21046", "ref_doc_id": "08e1b220-97da-4418-b2ba-6c614756a51b"}, "04f0c3f6-7953-467f-a168-154a986cbafb": {"doc_hash": "cbf76e8288dbb03819bb838b7dab8a8051bad1c327f71a08cff1576c9929acc4", "ref_doc_id": "34bce83d-cbef-43d4-87f9-d2a891c87619"}, "e9fd09b1-00f5-4438-a08a-d51da6084c4c": {"doc_hash": "f0cc408e449111e904bf48015e8ddf48d1c21574aef485248800296e3fe6aaa3", "ref_doc_id": "34bce83d-cbef-43d4-87f9-d2a891c87619"}, "60e3204a-f1fa-4237-b3f3-666bb60b2fd1": {"doc_hash": "d4bf589d37ffa45be7c44aab337f37fce1f0aee4ec4d6dc65c654ce18ce5fa8b", "ref_doc_id": "b79276ec-2437-46cf-86b6-721af5fad0b4"}, "57c7b1cc-a073-4e1c-875e-4642bd47253d": {"doc_hash": "7e06c2eaca01a7ef5c80cc1b78e8ff7ec86240b598879431088725187c8ca88a", "ref_doc_id": "b79276ec-2437-46cf-86b6-721af5fad0b4"}, "fc785764-e68b-4082-95ae-f657c2e12623": {"doc_hash": "ac30f63a33583bfc2aeb2e0d7d4258063428c75cb2cc210c706bdda874917fc6", "ref_doc_id": "b79276ec-2437-46cf-86b6-721af5fad0b4"}, "cb7f84b5-cba9-4fc9-af28-dd90880a8e53": {"doc_hash": "23bddba0641e1e20c6570fe586402ddbd61d4e23ce9f6c44df81688114e7f4df", "ref_doc_id": "43a19dca-e840-4abd-aece-1e151d154dd5"}, "f7a55646-92a8-4261-a541-a743cdbe0272": {"doc_hash": "ebd83d8d80542881c119fe39ee377a88e86b103320a814ef431749da6728581f", "ref_doc_id": "43a19dca-e840-4abd-aece-1e151d154dd5"}, "3799d0d6-4ad6-47af-a7c3-9030bd76f9f2": {"doc_hash": "9831cddb17c3caa69d3d542c0823de14aeef6c690aa67581e826d0843dc4ff30", "ref_doc_id": "fbfdc6ed-4d1f-4681-bb58-86a62112d552"}, "2c06a8d8-6d9c-4a79-bb4c-e6e200dd484d": {"doc_hash": "ec65935e96e28617c8dda4d40ef8561d5bbf4a8a122905ff2b3e8688525786cf", "ref_doc_id": "fbfdc6ed-4d1f-4681-bb58-86a62112d552"}, "3cb2610c-4102-4ceb-b581-ce098304992d": {"doc_hash": "8ec9ffc877d48ce9da90c9f04707e9f1766b70450dca3240b6b8de72ebc98fa5", "ref_doc_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de"}, "4230780e-ff2e-4ed9-ac79-98204ccdc547": {"doc_hash": "22e89b97255d5359efa3e032b29e21ce96052632d257e3cc7018bc33e7779814", "ref_doc_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de"}, "9b8b93a4-16fc-4b2f-8599-e73c7f228e2c": {"doc_hash": "db394624703384d69316032b5de20fa86957bb8fd820afd240ed13c2114ebdd6", "ref_doc_id": "1b5c198b-c0a5-4b97-af6c-92fdae4d89de"}, "91fa0c51-a152-4eba-8813-da86fb931f81": {"doc_hash": "cfe5e0832e06e3e5cb11115ee6824b396b87c31b4fa154fb1b46e316289c4645", "ref_doc_id": "2368af20-a76a-46d0-8a05-ddd70573838e"}, "fd7d02c5-03d9-442d-840c-389b6e8c27db": {"doc_hash": "1b0f5d5cc3fae0fde61907f675f595ae30ffc5ec022fd742786be817b2d504cd", "ref_doc_id": "2368af20-a76a-46d0-8a05-ddd70573838e"}, "47beb3b9-34a6-42f5-a94e-7dee46e2f589": {"doc_hash": "d5b1803964eca797ff4acb77bbb6de117e2c8808c8237c8307b12eb9ac6bef64", "ref_doc_id": "ae896505-27ba-4e9e-a29e-b6874c340e11"}, "1133bdb8-9749-4b6b-b3d9-6d9bfdce613a": {"doc_hash": "416c5ece83b9727585e461549defb579781324d18103931865ff1b4ca521ddac", "ref_doc_id": "ae896505-27ba-4e9e-a29e-b6874c340e11"}, "d408e380-c02e-4574-8529-abb87c89804c": {"doc_hash": "b32087398a8c4cf7135a4f0b4a5a3947e4d14e88ad6e48863b5adc314e59115a", "ref_doc_id": "faa5d4fc-141a-4633-977d-c7ecfaeefed4"}, "6d127561-63d0-4c00-bc25-b23457791406": {"doc_hash": "849de8ff7d8ae3911269af15b8092d342fe958f4af6267a7276bf91ae6ba3f1c", "ref_doc_id": "faa5d4fc-141a-4633-977d-c7ecfaeefed4"}, "907c139f-b7e3-42d0-af7a-80a2c1ab3f52": {"doc_hash": "2e6bbb82f5362a054a7e6a410da922837fafb9f7809a44d1c908ad61ce9c5148", "ref_doc_id": "6a377e3f-b8bd-46c5-b028-34a1fcb52988"}, "6a76793f-80af-4628-b347-49a7ee06faf0": {"doc_hash": "fb3c5cfa0011786312338a6ce4161fb6d1a365d40d24f2e2a6fdeb4e0d28d198", "ref_doc_id": "6a377e3f-b8bd-46c5-b028-34a1fcb52988"}, "2cf2fb18-fe61-4283-803a-2594e0b03b17": {"doc_hash": "8194c18358ada6e655ee899ec210e97713d9c7488ee0ec8d047cb18fe3aac66f", "ref_doc_id": "d0a150b6-97a3-4967-8e1c-01afd59f4d4f"}, "c49d0500-7e80-420e-a280-3f9fe69d8198": {"doc_hash": "c60fef83f986748a1ca1882cd41f46e7b256d3063000ced581f1c3844f336dc8", "ref_doc_id": "d0a150b6-97a3-4967-8e1c-01afd59f4d4f"}, "2cdada33-1d54-43f3-ba5e-bf1c0d772c1d": {"doc_hash": "5effb7bc0c0268eb16711ac9c1ebb8ab07bcd999aa8e19ca18746a827a681403", "ref_doc_id": "f29b83d0-ef0a-4fb7-aa4e-067884cf8f80"}, "c5d24a03-3e5e-4987-a66d-d3d050e60b5c": {"doc_hash": "6448f54d5c7b4ac21b0fca0e2d05aefb29ddd73b961afd0561dc18091745727e", "ref_doc_id": "f29b83d0-ef0a-4fb7-aa4e-067884cf8f80"}, "61452b86-2713-4dd8-9d19-faa904194cfd": {"doc_hash": "5ea48d07262c5081962c2a9163d2d5ed92ad786460188b6ae835a17d19cf0ca2", "ref_doc_id": "585c42eb-7f7a-428d-a58e-dc262ddf7d70"}, "4c362495-7faf-4372-b8e1-367cab0c81a0": {"doc_hash": "26285e72a999ed7c1f53fc6fc911bf9746d4cb6d03accae737f39582d98af985", "ref_doc_id": "585c42eb-7f7a-428d-a58e-dc262ddf7d70"}, "40dabc99-17f5-4982-adfb-7b6f3a3595ea": {"doc_hash": "26a8727d30addc8411b203209ccb317454daae984e5a438ccbc15d9b525274de", "ref_doc_id": "4cbffaa0-2ea8-49b6-879e-79cf0dfd23a9"}, "5dd54b17-7527-4133-b082-38ce4287a62f": {"doc_hash": "767061c2b0c88f35b58a972e6e26ef54ee3b53efe06d01163727ce4040c40d94", "ref_doc_id": "4cbffaa0-2ea8-49b6-879e-79cf0dfd23a9"}, "ef3b6ea0-f6e4-46ac-a2d8-02609b47b33e": {"doc_hash": "a4624456a6e541539600315e3a94dfbad860ab4ce65653f65e847bf1b0cc7653", "ref_doc_id": "98b3534e-47af-4e6e-9df0-b44500c743c1"}, "a038b144-ec86-4560-afb7-d94a93755a17": {"doc_hash": "1f11da655af0f967e66c3c12a3244d001989ad84fda03044e06def2699bc1276", "ref_doc_id": "98b3534e-47af-4e6e-9df0-b44500c743c1"}, "a6b1aed1-782c-41ed-b757-1e52be3b708f": {"doc_hash": "92aee086bbe894d0798d45fcee3b540a7f31c303594db79639b8bc3376fe86ff", "ref_doc_id": "9e9d4dfb-d5ac-4a39-b7aa-824d45e630bc"}, "95e9c904-9e4b-49ce-951c-687e511f1b29": {"doc_hash": "44139c510f81de47602477a3f36faa95ab63d0372160d8f339989b1af90d3d40", "ref_doc_id": "9e9d4dfb-d5ac-4a39-b7aa-824d45e630bc"}, "db01a155-fbd1-4b21-8bfd-afe129128432": {"doc_hash": "498a6db9540edfd4e8b6a5a1d97d42d2247119b61df52bdca1c1d88114a9a98a", "ref_doc_id": "9e954b10-87f0-4905-aba1-8a6daf7ea88e"}, "c004831c-6037-4a70-8de6-3f97ced70eb5": {"doc_hash": "45b207a1a02381eca1d5c1f5f210ddbea3666a690c4027c3713d66be8c38f1fc", "ref_doc_id": "9e954b10-87f0-4905-aba1-8a6daf7ea88e"}, "4ef86e2e-9b78-457f-bf9b-afb2c8b4d55e": {"doc_hash": "44b4201758656e8f49bf4935da7070a7ce30a05007146979267f609ab615ab76", "ref_doc_id": "539fd4b2-0767-49be-8481-a71d2c016b5d"}, "62264394-d41f-4948-a207-28ba6875d467": {"doc_hash": "99fbe30c7dccde3f8b9dcd567fa1d5f8951a1188f4984cfe7552a1835d015de9", "ref_doc_id": "539fd4b2-0767-49be-8481-a71d2c016b5d"}, "7f33bd26-ec0d-41d8-b989-cdac52e09254": {"doc_hash": "35095abbcff1bb8d2e884fdc9d865c548cbac7bbd30a3e1e299873c154ec6704", "ref_doc_id": "4490db42-eefa-4d00-b7f0-0c8169722614"}, "06764239-581c-43d2-83cf-2251369e252f": {"doc_hash": "92a8802668bdd3851350ee3d275aae2289cb901c5f693b1157f560f5cadfaaed", "ref_doc_id": "4490db42-eefa-4d00-b7f0-0c8169722614"}, "2d1c83a3-3012-4843-8865-36601fbfeefc": {"doc_hash": "b251753d50c9802e3dc5dc895d3ce238ecf415bdf795f478611b776f4a239d02", "ref_doc_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185"}, "38b4545e-f7b2-4dfd-b349-c604b153693b": {"doc_hash": "0124b9d435f6e9441ff9485ec55d841b2bfbd43de37c28c6f7f6ebc173e2924e", "ref_doc_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185"}, "61edc0d5-8323-42b7-9d4f-f4893230381c": {"doc_hash": "497b63a32c4fbcd424c32fceb51f4635f1eb56c59bcf39e9b713b185452dcbbf", "ref_doc_id": "88a8fa14-d099-46f0-9b2e-d7046bb05185"}, "5b10192e-cbb7-4c4f-b2fc-2dddc5cd19e7": {"doc_hash": "6ca067fcaa2651651bccc06fe8c90c8c080e1e321c485a3c76a9fecf8430d059", "ref_doc_id": "2c4c709a-dfd2-4cf9-8cfe-e4da8765e9f8"}, "eaaa8346-89e2-49ed-8828-3a0153dfb05f": {"doc_hash": "be12e5f2b30f97e128ee9a4dd35d7ba430754853bd558e69da2512c980128f09", "ref_doc_id": "2c4c709a-dfd2-4cf9-8cfe-e4da8765e9f8"}, "190e6982-7264-4f3e-bc69-8d8e69dab527": {"doc_hash": "f8e2d53142b97ea24144d11f52b473e08c14ce1b7745236d4793965b2fd48329", "ref_doc_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63"}, "0ef28d87-2220-4d15-9b07-03f87958cf8b": {"doc_hash": "39b26dfe786d4bec24c3e2651d359c18c3a5c8d21f4c819f463963690a9eb708", "ref_doc_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63"}, "37534c5e-ad79-4f1f-80b8-7b1ca5237625": {"doc_hash": "b55d7f1267459b966f7d3371778fc6d15c32eda8950e857b428505309f6abb94", "ref_doc_id": "7f14d1a2-f136-465c-95ef-bde2c69b6d63"}, "11ce7bc0-6a66-4391-b220-92b58f54d2db": {"doc_hash": "221cc89a5b9b9a2a79649e4370df2bbaffd8047d1686730de61d8053b5f6548e", "ref_doc_id": "dcdbd654-b340-4b01-804d-6c84d615fa8d"}, "a2700ebc-73f4-47f2-9be0-5da6cc685184": {"doc_hash": "c0b2681f1dc4858d098a517fa9d804cd76749302b558fc13fb77a1352b09327a", "ref_doc_id": "dcdbd654-b340-4b01-804d-6c84d615fa8d"}, "6881237e-6022-4757-824a-327c84bee071": {"doc_hash": "6317d59e8ec6054215fddcfa907b089c35c9578da3ab4f1d32adb99e852590f5", "ref_doc_id": "abe808bb-5736-4620-9cdb-93b4fce9bd95"}, "ac7f9c2d-b46d-487b-8aeb-d58f2298b620": {"doc_hash": "4efc535cd2fb954eb1a18705781346d901f09fdbbace8af99010f5daf4338bc6", "ref_doc_id": "abe808bb-5736-4620-9cdb-93b4fce9bd95"}, "7e907fe7-404f-4987-b6d9-b9b904da5697": {"doc_hash": "5e565cafa1c635e5baa453579086087a72969c87f353346c83ade78b4593d850", "ref_doc_id": "45951905-fded-4332-9d80-63f460eff4b2"}, "6bdcf5e1-dfef-48e8-9fbb-f01f3788bd80": {"doc_hash": "2e0161d406b30ea907a52b593d39b97f32f9964987797a8908f92db838a829f1", "ref_doc_id": "45951905-fded-4332-9d80-63f460eff4b2"}, "28e4a364-d161-40e9-adf2-8f7217637584": {"doc_hash": "4518736a71f38c85fd23dbf19fe7ea621cbefe22e4303c5e4fa255570ea47b18", "ref_doc_id": "b3ef261b-07fc-4b62-a916-b724b2f859c2"}, "be00c1bf-f757-4fb1-a50d-10866ed0b0b3": {"doc_hash": "d7d2f4a83801fa0f6994b16b0cf92bda1ad5910c74e2c9f9a274487d6089db80", "ref_doc_id": "b3ef261b-07fc-4b62-a916-b724b2f859c2"}, "aa2a5083-e125-40b8-b7a8-70889ef850aa": {"doc_hash": "217f694eb8559256dd2e9c11f8d39bda5e4fad80ebb50d3cb0c6ac2683c00435", "ref_doc_id": "172f2bc1-2afd-4fca-809d-61610410f536"}, "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663": {"doc_hash": "4bc2dc9a26e31b38d39fb268aa80db3b15dc20136b5fb52f03e8dbc7d57a07f9", "ref_doc_id": "172f2bc1-2afd-4fca-809d-61610410f536"}, "61034220-4cf2-421f-a755-5167452ea91a": {"doc_hash": "a9158aebb30ae48b19cf30b6045f2b77a976920512cf153bb736edf4248907ac", "ref_doc_id": "172f2bc1-2afd-4fca-809d-61610410f536"}, "5d302ae8-1813-4bc4-8984-aa6fa574d1d0": {"doc_hash": "7ebeec12798cba15fbd5e4b1cd13535dcd057754b1520b64861ca8853cbb055a", "ref_doc_id": "a5e7090e-560e-44a2-a4f5-bf6f850af51b"}, "af4e08e6-cb27-44df-8e38-81705f821f1c": {"doc_hash": "407a2e247323cfe9cfd63498c4d58a232410b0a29255237f29065d1026effaf3", "ref_doc_id": "a5e7090e-560e-44a2-a4f5-bf6f850af51b"}, "f22a8030-44c5-4d0d-81fe-684e25115ca9": {"doc_hash": "59202495d2da51d806fe3b6ee6a222abc1f87065567c0ae92ec741654bd18c76", "ref_doc_id": "313fed82-cf8b-497f-a6e6-844ed9389016"}, "ccae7991-b698-409b-b6a1-89bce496bc17": {"doc_hash": "bb99e24810992396d30e86a65150007359efcd0fb0d273d4d09cf9c059ca8b0b", "ref_doc_id": "313fed82-cf8b-497f-a6e6-844ed9389016"}, "381a91ec-4477-4125-bcd2-ddc8f08a0c3a": {"doc_hash": "558abc7d5657682bfdb771d528135b9445494cbc265a247d90dff11c5caab1f6", "ref_doc_id": "351829c6-203c-457f-805a-5cd94e118083"}, "0ce1b7ed-db2b-4e3f-9220-502a519ac331": {"doc_hash": "a272312cbc561f437a9126819764d052c588778448d817e3b05e46a1b106d5d3", "ref_doc_id": "351829c6-203c-457f-805a-5cd94e118083"}, "a1f54889-c0fe-4427-b8cb-f55fa31708a0": {"doc_hash": "9183ee814b5d2c7d478906279e85784849e7e13550bf738bf362abbf6eac4115", "ref_doc_id": "351829c6-203c-457f-805a-5cd94e118083"}, "a0b5c042-5e83-442a-a09f-1dd58a3adfa5": {"doc_hash": "48dc0df9b0f397b9132d3b6cb6770317bd18ab2078ef4aa3b7d2c0e21de3f4bf", "ref_doc_id": "e0410865-d4f2-4559-9497-0003375965f8"}, "5fcd8455-5cba-4bbc-995e-0cb952ff0064": {"doc_hash": "6527674a86baf40fcde8feec2a230fe985e563f2eef0f25c30cf9a4c16fb1c9c", "ref_doc_id": "e0410865-d4f2-4559-9497-0003375965f8"}, "8e478d03-88b6-420a-8d64-02d50db72179": {"doc_hash": "f0857ae8c2b76ad9022dc73c06138a70ed10cd1f50332b31c18acc9aa2b1023a", "ref_doc_id": "7f105346-ea7b-4859-ad91-ef0fa8d8076a"}, "75c81eb6-8608-4e0e-91b9-7c716e344a62": {"doc_hash": "5b2715cd1d9c576f5e79ffcf4af96b967c00b8f3b264fd4d6178b5e88ca4e096", "ref_doc_id": "7f105346-ea7b-4859-ad91-ef0fa8d8076a"}, "96e78378-cfb9-4372-bca5-996c32d397f2": {"doc_hash": "86258473f7de4d2fbea33dd3dbc50368d6b969e991aa187c91a64e9dd6eefa8e", "ref_doc_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb"}, "bca3487e-5a11-4de5-adf5-abf81d803e73": {"doc_hash": "c34becddd9abf76423d3d7be575be1cd32ee06f73e06603e3bfbc8f93e9a4276", "ref_doc_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb"}, "393a1aed-b228-4dee-ac51-b5c22b08c4fe": {"doc_hash": "7a36e7fff0ed9d708f30bc84b4cb9f943537fb1416923b75f0bdf20e59a14d4c", "ref_doc_id": "c307d7c6-14ae-43f2-99f9-e2075287efcb"}, "d443c8ef-4948-4900-8579-5b81660a5aca": {"doc_hash": "fd592a92435323c8c5776a49a5f7873bc4af0fad5c95afe94b2bf0ac0a941032", "ref_doc_id": "0b09887a-3543-485c-9688-dbd8274e68d8"}, "d195006c-ebea-40a3-b83e-c279d81cfcef": {"doc_hash": "2fce10264c4bdf11334c9c5f8fa2ff11a522116cc301c68ed33213b4eafeb32e", "ref_doc_id": "0b09887a-3543-485c-9688-dbd8274e68d8"}, "15ce7c61-5fe1-47f6-b4cf-1f37a24af453": {"doc_hash": "cda9ee3e6bb1028d8ab7fb50bd2240eeccdbbaa1c6a525a76e5a97aff0daa4bb", "ref_doc_id": "0b09887a-3543-485c-9688-dbd8274e68d8"}, "5587a118-5738-4d94-a872-09c7f6eba240": {"doc_hash": "b6c276f05587aecf489c0662e6621b55c309d0322f772e4e6912c6a83c7df348", "ref_doc_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9"}, "6b874f0b-aa5e-4beb-b601-cca9db8fbc87": {"doc_hash": "1f8c6803242a0b4478dae3d9b3b1e88e36bd40c0c19d150ebf941b9e876b66ef", "ref_doc_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9"}, "5f8f1135-4c98-48a2-a0a7-1a42217a8278": {"doc_hash": "2b77d64279a69a7015bbe4d85378ea88d4eaab6e1b52d67528308d3e741e044a", "ref_doc_id": "614f7563-ca2e-41e1-94e8-ee0c350cc6c9"}, "8ccd17d2-6c9e-420f-9f50-a4ec06011c7c": {"doc_hash": "47b252c648c6c51872f73f4737f7a37b92856ce8573afcf55dd70e123dbea2ed", "ref_doc_id": "04b45b2b-d2f0-40dd-9e63-5174e44ead1f"}, "0b5b65b3-98d7-4a6f-99c6-b4b0f1d00615": {"doc_hash": "96e85745910c4a52c6604f08f090eeff0491d23580239ac5aee2bda761d5a9cd", "ref_doc_id": "04b45b2b-d2f0-40dd-9e63-5174e44ead1f"}, "8a784c41-0b68-4086-b5dc-a5dc3ba29801": {"doc_hash": "276b88c8fbabf2e16bedf4eb7e8abf070f263125ad7d582888924545cadd9885", "ref_doc_id": "3eed6519-158a-4c58-a59f-3f2480df64b1"}, "340482c2-4d52-447e-98a4-7fd213b6da24": {"doc_hash": "e4a3af79d50d191a39f347018c7c858f850ae6bd572aebba497453849b5c4cb4", "ref_doc_id": "3eed6519-158a-4c58-a59f-3f2480df64b1"}, "fe0ce4c5-cb3c-4a3a-b226-1783076e7aba": {"doc_hash": "5d77feb11129fde73d083afe3fb4881ea2bc5eae3e140e47c590552532c20c0e", "ref_doc_id": "3eed6519-158a-4c58-a59f-3f2480df64b1"}, "e712e84c-3d98-4a05-8153-7e8a0a0e3f94": {"doc_hash": "8248b80bbd60c3b481219cd0ec61fc52e5bb6e3a1bd813c0b2762267118217cd", "ref_doc_id": "0c2b943e-9fe1-4806-9977-bb019a2f1e1a"}, "c7e065d9-a334-4715-8bf7-c9b5c450215f": {"doc_hash": "c678a7fc9357b3130c25d2d694e02dc62b968a87e4e2b3a6b6ac7ee35ec1a07c", "ref_doc_id": "0c2b943e-9fe1-4806-9977-bb019a2f1e1a"}, "5aec2c4f-c433-47b4-8a29-1abc29c895b7": {"doc_hash": "9c97855380b7cc69677d0affa50e0c91c44cdb74a8a6aa03158e524fb1291bf5", "ref_doc_id": "d3cb2308-ad99-4db7-8b67-5f61797e1dc6"}, "d7dd8068-9a85-4a1f-9527-1e2c1d98aa2f": {"doc_hash": "6e845c83c897b2fd4fb7f383ab8a77f75c051e4f5ddac066c78c087eba6c66c8", "ref_doc_id": "d3cb2308-ad99-4db7-8b67-5f61797e1dc6"}, "d1a1de1c-33ed-4743-851c-7a5d0ff9aa63": {"doc_hash": "07e5be76d459429600fe29c38ab470ec12889cdb7558634dba33c22284f9db72", "ref_doc_id": "ba7e3a8b-a15c-4da1-809b-5a6356010026"}, "cb20a189-a306-406f-b50e-b616716b5678": {"doc_hash": "b50cdde2aa0e9c8f984c78c782177dcc452b31f0bd3c0c01693bb088e8a2c388", "ref_doc_id": "ba7e3a8b-a15c-4da1-809b-5a6356010026"}, "25e133f4-bc70-46fe-a325-3b89401791db": {"doc_hash": "24f288d18c58f8701b5f1e728addfb9bd1c25520d74ca8bfc569acfced23eebe", "ref_doc_id": "e18da8e3-d25d-43ac-852e-7237342949f5"}, "dad2166e-5b5b-4908-8ee6-7cf984132bff": {"doc_hash": "cf2e7235b770bf3b16e0cfbdf1fe4e6fbfb826983ab4b381d0333253dfa6d3d8", "ref_doc_id": "e18da8e3-d25d-43ac-852e-7237342949f5"}, "708021d9-a6a7-4556-be6a-1b608c9d93b3": {"doc_hash": "8ef80413a63ede0460c6083afc480b9c61b8c3b61b662ce220369eeb617ac675", "ref_doc_id": "538fd650-3844-4c9c-ae10-98eb72b9780d"}, "9c7f8640-e545-4155-97a3-5d36f83cd8e1": {"doc_hash": "845284415e4464b1a621b1691947b3fd3b21bc6ac4966691fba83c446c12b613", "ref_doc_id": "538fd650-3844-4c9c-ae10-98eb72b9780d"}, "5bb90251-6edd-4733-94c8-0db8d9f70bf3": {"doc_hash": "ef5a1052e6c5e32f3398be4cee4c494cc04455f361ddec9bbc5efd3b062b7046", "ref_doc_id": "538fd650-3844-4c9c-ae10-98eb72b9780d"}, "1e668eef-2e8b-4f4b-a848-b44095802037": {"doc_hash": "d7b5faaadd727c9e5b8190712677dc1e06d7af78bd0b789aabd55a29ee109557", "ref_doc_id": "0d57da68-e01c-4593-918d-5c1cdc5d075c"}, "c0c5d876-701c-405a-91d4-28b0d88ee4e8": {"doc_hash": "506c2d842acdaf29816456f67e8b91a1baa52b79f1c21211db89bcba7b0a0b3f", "ref_doc_id": "7fea458a-ccbc-48d3-813a-e1fdd2c9c382"}, "fbd3d3f5-018a-4f2e-bca4-6e7c01c5d789": {"doc_hash": "37df47db8ef42abbfac38c78c3410e85cbef53c95b3654d05306d9e1651ea100", "ref_doc_id": "7fea458a-ccbc-48d3-813a-e1fdd2c9c382"}, "e0bb481d-19b3-45ce-b51b-250593995d57": {"doc_hash": "e16a114304399b2f4f54424cfe489fe430bd2e03932626487d292e245baf280b", "ref_doc_id": "e5766be6-b7e5-4705-974d-ce60bced9940"}, "b923529e-7157-4dca-ba76-0071d83cc16b": {"doc_hash": "533073b61a9f9e554ee38a5c153b4ddd03c1a62b753d7096ec802e0f69e81e3d", "ref_doc_id": "e5766be6-b7e5-4705-974d-ce60bced9940"}, "53f3c914-a232-4d4d-8b96-c4cc1a10ff40": {"doc_hash": "282e10b13ce8ba662f03235faf66117012b255d26bd53cef9b8877422cd959df", "ref_doc_id": "d89f8aa6-8af9-4f71-805a-11f3b184d30e"}, "d4a3014c-3ca6-44c2-b22b-5de08eb16140": {"doc_hash": "2fa75302d6408afe7b3d2efb1d2ce601f66917546f381438bd4c50880d961167", "ref_doc_id": "d89f8aa6-8af9-4f71-805a-11f3b184d30e"}, "d33e3429-5da5-4850-bc21-5a1ccc3933d7": {"doc_hash": "f07da07b60f96b85dcefb02814b394422b441be2b719896d8c546fa28f314741", "ref_doc_id": "6c9c18dc-348f-4a15-8505-e20ff908d468"}, "d155fe7c-3247-4d20-bced-830577584bf0": {"doc_hash": "233a9008d44853716df9b8c0171a8bcc4c808c568f2900c5212cb94e9a572af2", "ref_doc_id": "6c9c18dc-348f-4a15-8505-e20ff908d468"}, "d906a0e4-fff5-4f89-9338-561cc63715db": {"doc_hash": "26bb44b781f8fe60ebe469576535025d029dc34215fa8db04d3dfd4cb50209ca", "ref_doc_id": "cadad17f-b852-4a75-abc3-cabe61d756c3"}, "2ed248da-0ea9-437d-a79b-f9fc60ee7d1a": {"doc_hash": "6a8edf5ea487a3e9565f552b65dc3eaa69acc60843c1fa749807b32e04b0419a", "ref_doc_id": "cadad17f-b852-4a75-abc3-cabe61d756c3"}, "ddcdb0e2-e2c0-4664-b72b-012a5250046f": {"doc_hash": "b2a2bdc732032905007f2d886768713df59f920c69bc5d70fb8ed2eb5bc95db9", "ref_doc_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d"}, "5eec916a-d1aa-49a0-8d11-6c31073c2f01": {"doc_hash": "2aec3331d4461eaa83cd7a37c154c023dcf5bc8c8fdaf21976faed6c0b765284", "ref_doc_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d"}, "9a37b9c5-7eae-44f1-babe-e032a29cb509": {"doc_hash": "881ceae936b1d00e615ffd512668b3d4d4ba56bdc76d3018ff4528f11e8cedee", "ref_doc_id": "ae90e0e2-608f-428f-b8cc-91e8bda9a16d"}, "ae7c7504-f6c5-428c-9266-d8b8878b2069": {"doc_hash": "7c53441b207c5b1f87aa5e3c76ec63d45128eb4807e1811ee60514db733d7aff", "ref_doc_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b"}, "7d953357-3c7b-4e07-a68b-9ed3b09393c1": {"doc_hash": "31a25f2e0b101ef4e4ae1068e4b2f7f541915b447626ec9e7b2727e0bf64d123", "ref_doc_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b"}, "40af5aee-e74e-4b45-b444-c3bb98a818a7": {"doc_hash": "1e0fdbcea157171c35f2555a69013c809a8a8e9bf75f682db4e57ab58310c92e", "ref_doc_id": "0d8c963a-50db-4fed-bafe-71b0a36e434b"}, "4237b9f1-1c28-49aa-bd36-c14987589793": {"doc_hash": "0b0f3c225322d5ff66f5d3fa00094e141c03d96ff5da672e75c30e35d986dfb1", "ref_doc_id": "6762426a-ef98-439e-ab85-8cb43e719a28"}, "09027ed3-5ba1-403f-b82b-2a494562416d": {"doc_hash": "9dddaa4c234ec65f37d7def197541fdff4607459a6ded255dc604dd317e671b2", "ref_doc_id": "6762426a-ef98-439e-ab85-8cb43e719a28"}, "a690025d-dbc3-472e-828b-5490e1997cc3": {"doc_hash": "0e120514be5d9619e0a8538809d7cf0e21799c877a6a18135642f80137509234", "ref_doc_id": "bcea66c2-5561-468d-8f0e-c241ef9b69c1"}, "03a01d85-96fc-4c73-8f23-6aab9a2367c7": {"doc_hash": "c0f7879cebc01ef145a2b90cf13d106dcab8b7ccc42f79fde1f341858fdae56f", "ref_doc_id": "bcea66c2-5561-468d-8f0e-c241ef9b69c1"}, "d28b9f83-fed4-452b-a4e9-9b3b9bc49260": {"doc_hash": "328d35b62c3319fdb85745ec00e9b6b9fd444084bd17a58657c6d406536d41bd", "ref_doc_id": "19bb7590-fab3-4376-b200-02003ed783d2"}, "5a5ebac0-cd5f-4ba4-9919-111350cf44ab": {"doc_hash": "95b9b1b8a0d7d9220bb3db4eee5f1a8e2b23782b073c897fe37df52096598638", "ref_doc_id": "19bb7590-fab3-4376-b200-02003ed783d2"}, "44970a6d-c014-45a0-a38b-ed2c3956ba9c": {"doc_hash": "12d3f88da95bda46cfeff680bc17ffa62577dbbe1f1ca8a0dc86a1f32012b3fd", "ref_doc_id": "5fe4a4df-617b-4aee-935f-2ec7df1a9c9d"}, "d438897b-a24f-438c-b051-154ed47a40b2": {"doc_hash": "0bd44b9378f832cf9b7d7e39f3541fa91a5ad2f9b6b9386e5bfff5136a35bf58", "ref_doc_id": "5fe4a4df-617b-4aee-935f-2ec7df1a9c9d"}, "19b82460-1126-4d0c-9f4a-f085456e155a": {"doc_hash": "c7e492c5b8dd16de1c10656662cce66804cc50c971138ef199daa95d3fff4d71", "ref_doc_id": "dfba1766-96ef-4ccd-981d-10cbff8bae2e"}, "e11a4600-e37d-4e38-a5f0-d77a3f13836a": {"doc_hash": "85c4e4ffdf524ae378039032a17fc6b671efe8bc419a3e82c2906121547151ef", "ref_doc_id": "dfba1766-96ef-4ccd-981d-10cbff8bae2e"}, "23e5cc32-1c49-424b-822c-0bd0858c6ae9": {"doc_hash": "1bca3c307413d6c10e1b53f8acdc56de3cb4057bc009079565f5add0657413b4", "ref_doc_id": "530921fd-05ca-4e41-a39f-b424c2532001"}, "cd6f1aa8-e47e-4cf0-858d-60fdbbc684c7": {"doc_hash": "36c3b93b22881ae8429d8f4ca1e76df930cad9c2957f22b0bd17bdfa4e781bc8", "ref_doc_id": "530921fd-05ca-4e41-a39f-b424c2532001"}, "f164af51-35b5-4222-b859-4cc084679c45": {"doc_hash": "88d5c365801fa17dd7fa8927a1dc527c83ae145bc183a214c0cca11bbb4a039d", "ref_doc_id": "17c22fa1-6046-43cb-a9fb-f7372f10bdc6"}, "19bbd5ce-e8ca-4f40-b136-4c380a70a474": {"doc_hash": "2487378121ccea586d775400504d9cbaa39aade17123871cf628a5fe0e96a5bc", "ref_doc_id": "17c22fa1-6046-43cb-a9fb-f7372f10bdc6"}, "e1dd40be-de17-49aa-9b68-fcfec71b4bd9": {"doc_hash": "07a4382322d0cb98711c0dbc69b7393c4d37268712ff317f308ee322dd22bd06", "ref_doc_id": "0c11ffeb-ca4b-4198-808e-df8a552c4395"}, "dde3b63d-8515-4ceb-ae16-2b455afe93d9": {"doc_hash": "e5f69e848ac55ddf9715e90acec9996e168cabfa3b4b7a1c890df9d99a11fde1", "ref_doc_id": "0c11ffeb-ca4b-4198-808e-df8a552c4395"}, "171e36f0-ffcb-4166-be99-d765ef071fcb": {"doc_hash": "ddd2550b3b89608503886019f3a4d88ea6aef1e629ca3799672a997523cf5788", "ref_doc_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191"}, "64b10c67-f37d-43b6-bead-ed79d8ad7f04": {"doc_hash": "1a1d45cdd6bbae29f091ad4bcbfc588abcdfa2167f46482fa1c52c597b58d67c", "ref_doc_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191"}, "dbd67790-22ab-40b4-bdef-0fee95edf233": {"doc_hash": "be22550640786b95755d628e59b884b3f5107c581c4d2e89c325a75f5fcdd6ed", "ref_doc_id": "6d3596de-904b-4e15-9a9e-7ccde8e6d191"}, "2c0bdf44-70c2-426e-9ea0-c830693784ae": {"doc_hash": "02c5e649f001c33b426881a8c0454ab8cbf3841175b461a6a6dcf6057615b4da", "ref_doc_id": "59fd8556-7588-455b-801f-90f1aa5ea54e"}, "28471846-62eb-45fb-8ea3-47ed68dc8552": {"doc_hash": "104e24ebf246eca8ea94a751297e59c7213885eeafd016518e4d48e73eda51f6", "ref_doc_id": "59fd8556-7588-455b-801f-90f1aa5ea54e"}, "2147871d-2550-426a-807f-e01780a7d4a8": {"doc_hash": "b3722af8a9a4bd61f483ee137e73af08d646ac950b17ef9c4c2e28c8855fd0c9", "ref_doc_id": "6845cba9-b5d5-4c9a-a999-0d54d4c6d6ac"}, "54c9e226-e659-4416-82aa-6dcbace6013b": {"doc_hash": "f2a1b39208f2aff7feb6cfd91885837a151950686bcc101c70808baf2bdb9962", "ref_doc_id": "6845cba9-b5d5-4c9a-a999-0d54d4c6d6ac"}, "23be1abc-0d6a-4513-9162-d71d7ad070ee": {"doc_hash": "e1da30200d6d11ffc3c3cc7b6cbf840a36f05b17c20506d632dfc6b8112005cb", "ref_doc_id": "6f835bcf-fe07-4b4b-9519-b487a4e317cf"}, "a8052bd9-03f2-4b50-bff7-fe2b62a97cb9": {"doc_hash": "aaa204673c5e6fabc086c49a2807b132de0a705df3c99950817d66f1ced4a8e7", "ref_doc_id": "6f835bcf-fe07-4b4b-9519-b487a4e317cf"}, "9d6525f0-f8ad-47c6-979d-50ca0cb4a470": {"doc_hash": "b6763e73a2b6cd2178b9ae0eeb0fc5afc40134cc841cd8d0940729eb818bb0ec", "ref_doc_id": "b78649b4-7496-4360-8675-5946975a5619"}, "046d7b87-368e-4800-a0ed-f650cb87400d": {"doc_hash": "aa527ed9396bd8139d8d92b211ef61475ca20ccc693e682d22169c475e20ed21", "ref_doc_id": "b78649b4-7496-4360-8675-5946975a5619"}, "b43805c2-dcd8-46c2-8db7-612b1edbbc45": {"doc_hash": "819750555225484927c4308d298dd3aca9ebbecda8ebda618bad8ccc02c3711e", "ref_doc_id": "7bd3882a-1032-4173-94e0-156d59c0200e"}, "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b": {"doc_hash": "5c1a247eb2c5ad16d87bf65e6b1142e5c56f000909d06ef7cb11a37991bf6eb5", "ref_doc_id": "7bd3882a-1032-4173-94e0-156d59c0200e"}, "308179ed-013f-4c0b-a23d-16e4958879cb": {"doc_hash": "38208e09917c4058c4278fe1b3fbdcb54b1f6d07b72d3da89e97aa8487039ed9", "ref_doc_id": "7bd3882a-1032-4173-94e0-156d59c0200e"}, "1123a6f5-bfc0-4133-9040-21b67b6fb2aa": {"doc_hash": "7596b7049c4427e3d13ce7fd4fbe147ea3fae9cba2ce9aba71848b029e43d5c6", "ref_doc_id": "26f5346c-b27f-4573-aebf-badb465945c7"}, "287a2303-acb5-4e6e-acb7-566aec503816": {"doc_hash": "c9ebd1005119e686f3858c6e6e74308bd2db67bb6959f51af2fd1a38863e4260", "ref_doc_id": "26f5346c-b27f-4573-aebf-badb465945c7"}, "1158319a-97f4-485b-be5e-569b33aafd73": {"doc_hash": "7d3c119af0764b09b19315bb3fffc970942bc876460be58bd095f75460e21cef", "ref_doc_id": "26f5346c-b27f-4573-aebf-badb465945c7"}, "12422c48-9e7e-44db-87cc-17c28b985bdc": {"doc_hash": "0903f2fa036e867bfa15e66a40879fa968275c54a51bdd2c51e9e8c3fb547712", "ref_doc_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e"}, "494ec5ff-bda4-44a3-aadd-18c94a07a1ce": {"doc_hash": "0c83e19ebe3ee2315470bfaba70828f860a7851ebca96132f0075b5f2d82cdf6", "ref_doc_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e"}, "9384594b-f542-421e-b9e4-e2064c34229d": {"doc_hash": "b3061fab6340429843eeffb84a4baaddecd392436fed6f481ba1bedc58f41c01", "ref_doc_id": "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e"}, "d033964b-bf0f-47ac-9f5b-df4c42fbf64f": {"doc_hash": "11378debcd0b383e47aee18668f8319f343a68a6d3a22f34c2f8990b7ec6da5a", "ref_doc_id": "90c802f5-b356-493d-b9b2-50d549375b18"}, "c7f980a1-cc44-455e-878b-cb94ea0fe6dd": {"doc_hash": "be645ad862ad474250b3470d38cf2f119b76e50e60ede61c47ec0aa1c17a2120", "ref_doc_id": "90c802f5-b356-493d-b9b2-50d549375b18"}, "168aeea7-832a-43f6-9c2d-fa5fd4786ae6": {"doc_hash": "5484aa0cd1f234f7ca6e78c40bbe7613cc584cd21f56241762b8887acae7317e", "ref_doc_id": "90c802f5-b356-493d-b9b2-50d549375b18"}, "8fdaa288-db87-4204-a58e-72df30846c15": {"doc_hash": "50c8c142b48ceccdc6665072ab8eafd5affa128e8715e2370960ddba98dcad87", "ref_doc_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f"}, "aaa2bb40-1513-4834-8a13-d206164d61e2": {"doc_hash": "6487cf8eda95d6b8ecc8c744fd966061a22fee6490ae8502ae04d3f6b1ec9228", "ref_doc_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f"}, "67289dca-78fe-433f-b738-e68362893ad4": {"doc_hash": "6a37ed9744036bfe191bc12b6882c803229c703cdf09e3918633d4df36cf440f", "ref_doc_id": "363bf3f0-6c95-4a98-bb4c-5333578be99f"}, "9baabe20-d2ff-456b-b59d-405423f34716": {"doc_hash": "dd1ddfc089aa6848d8e0ce5803357d01b8693906bffab68bad866210e884d277", "ref_doc_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3"}, "4597828f-432c-4e9f-b482-a86b1d34eaee": {"doc_hash": "90ff43f6f59e1eed32e1f4c4b059f039b8ce8eb4bdf147f391ff8e89f09fa8ee", "ref_doc_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3"}, "c769bfed-504d-4107-9aab-6862b7750b40": {"doc_hash": "697b6222439de43abe1e4c1e31cbc4e938f360e4df7ca1f7b2dfbc67053fa4eb", "ref_doc_id": "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3"}, "3b079175-e295-4a11-8646-cb2400aa2a5f": {"doc_hash": "c08137bd8861ef85275d1c3d7cf64c63fe7f052fbf342af9e6a7ae59022b26fb", "ref_doc_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca"}, "41d6c060-7629-4d42-9ac6-7cf21899c923": {"doc_hash": "d5057bde8fe08b771b949025aa4ad323ba209e7a589d0c10be298b909877da71", "ref_doc_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca"}, "5fce250c-4c58-4906-97f4-2891bb048018": {"doc_hash": "acfc3e5b7114993c87568fd370ebe21dc532ba0bc60b618654400f7f6faff7dc", "ref_doc_id": "d75fc4cc-8b25-481f-8a09-2b48313c18ca"}, "3562c0cb-6908-47fb-8c9e-5379051b6722": {"doc_hash": "f0c457a6073e3db2e28d070828104b26203e9d685e8233bbf4b6f59f2f3fe7cb", "ref_doc_id": "8c685f54-a752-4dcf-ab48-1d9dad78a9f4"}, "38b6660b-838c-445f-8591-53b2b14e8fb9": {"doc_hash": "48fa8aa0b1171a4b27bbef9a0326b44f4d3bcbb0d91b4c8e4fb7f5c669842920", "ref_doc_id": "8c685f54-a752-4dcf-ab48-1d9dad78a9f4"}, "63f45eba-e510-4ad6-8d07-2868bc0e8334": {"doc_hash": "fabaa718ccfc5de7580ed5b604c425f88638a2bde95cd9cf88c340d01d29d17c", "ref_doc_id": "ba0558ef-5afe-43de-b184-6aa94adb4fb9"}, "6eb35303-b16e-46f9-8318-204b06e79881": {"doc_hash": "ce8236dab86b8af3a9e0249d1caf477f9699226d2ce1ea07f0d87be8cdf2361c", "ref_doc_id": "ba0558ef-5afe-43de-b184-6aa94adb4fb9"}, "17cde1e8-8cd3-419a-82c2-231aaa6ceac0": {"doc_hash": "def0b7a455e6d5347cd755ba23ca4c81f5c72c3f46b86874eccbefcaf1052b55", "ref_doc_id": "da687cd3-9b78-426e-8668-5a05a36a2516"}, "825fc91b-632e-41c9-9ce1-ff254fb8149a": {"doc_hash": "8a65b58c284ef556492cd3f0f8f3bdca93070b37b5adaea280e80a86d0b65e0c", "ref_doc_id": "da687cd3-9b78-426e-8668-5a05a36a2516"}, "dff7a6ca-1d44-434e-a6db-875d1b02b938": {"doc_hash": "752f1a83d244041416d19f4bc40d2097467abff2666914e97055813e019f8130", "ref_doc_id": "7f31f09f-0b40-4acc-88cd-df9d871a115c"}, "9bbc6c76-8f06-4c69-8d61-af5d3c10f99f": {"doc_hash": "1647a783989a71f42a075d43a2ab4812aa237f65bea8c4d4ffa6fe4fc9e160fb", "ref_doc_id": "7f31f09f-0b40-4acc-88cd-df9d871a115c"}, "76975238-8e92-4bfb-a98d-5ad1f514fb63": {"doc_hash": "c39f4866d56d9cab594bbab1529311aa2a4414928ded9c2d4ac4ee8b443ed604", "ref_doc_id": "931e986f-63a7-4835-b289-ea8ae5f24f6e"}, "6aeb8a71-2912-40eb-9639-5e0abac2932b": {"doc_hash": "f19a90f787d589d17225a2bf229efd910dfa2c8c44e4845f82533eaf8cad3624", "ref_doc_id": "931e986f-63a7-4835-b289-ea8ae5f24f6e"}, "9f602a83-609b-43bf-8bd2-b2df55ea06cd": {"doc_hash": "a7116ff48e8bc11e9d37869487658204c33b5278c5bbbb67b937565bb6fbd326", "ref_doc_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64"}, "3d367960-34c5-4625-8db5-6947de44498b": {"doc_hash": "a1f47486903ce1485ddec7fc54bccb1b894bd8455b31b07c258fb904a12cfec1", "ref_doc_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64"}, "a09c23ed-1ef4-4ea1-8b19-5f1686900131": {"doc_hash": "4a2d62be815845a90517310353a71006e63c1fd0e48e0797a44edbb9d6b8574c", "ref_doc_id": "fd044d1f-9e44-4b85-984c-5b8f85110b64"}, "05727bc2-4777-4def-852a-2eb724798a32": {"doc_hash": "9e5b9fbe384685340bb15472fe245758953e0fcbef6045ff08fb178ba70677c9", "ref_doc_id": "77075934-e8a7-4531-a24a-d04820dc0948"}, "40ecb72a-4984-4a52-a3ff-68fea1e80feb": {"doc_hash": "9b7c857395b51aae9596f6f8cf9cbc18618bfb1c7d35ad414ce50e3004e1e4ab", "ref_doc_id": "77075934-e8a7-4531-a24a-d04820dc0948"}, "13a3e385-2554-4316-a285-20d54f94c404": {"doc_hash": "e156233002515269f3aeb3de4a4cb272796a764cceba8a04475769e75ec569af", "ref_doc_id": "77075934-e8a7-4531-a24a-d04820dc0948"}, "3895072f-d445-4832-a69f-f312070c68f4": {"doc_hash": "3658794880d784b1936a882b1db5050d4d7b1772cf9fdaa01f46a437c5f9a04a", "ref_doc_id": "fd8d4023-3ddf-44a6-a122-d884032c2cf5"}, "5dedd692-1f51-4eb8-b932-dd9740fd7266": {"doc_hash": "61f06639fae3af995359a3f0b23c26664a50a5288b8ad85185564e53ce1abdb4", "ref_doc_id": "fd8d4023-3ddf-44a6-a122-d884032c2cf5"}, "99c863f4-03ad-49ac-ad88-3933726c5ec8": {"doc_hash": "a9ea01ddb7b44aa35805647f5ab1399eb3da81478447916890354f545edcb1cd", "ref_doc_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90"}, "9f637d46-42e4-420b-954e-71ea3024fb35": {"doc_hash": "799701a91815b27c30a80684f156b932480c37de9b6f15b031a91c14af38d197", "ref_doc_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90"}, "04d14bae-6fe1-4a03-a1b7-1eb924a2bd10": {"doc_hash": "83521129d80c2a12462a3077a82765f4efaa05fa8a32126915d3fbd9ed7bb47a", "ref_doc_id": "91e1a9c6-d88e-494a-9037-93c626bbcb90"}, "626d8a1f-ffaa-4c04-9360-93e6ca7fffde": {"doc_hash": "7e7654c5608adf1e94cb1f73b567766e7a3daabe9752bc410e3f039ab21ac60b", "ref_doc_id": "85039423-8416-4d2b-8196-cde99cddd876"}, "70f41368-a063-4137-8a18-1639682d265b": {"doc_hash": "3188a8e3d35467221ba5fec0c1bdec842dd7c322f33f2c137293fe9659e930c9", "ref_doc_id": "85039423-8416-4d2b-8196-cde99cddd876"}, "5bfb8b4d-2feb-4e27-a377-d07566abe3b4": {"doc_hash": "6ac7936363ea231db6a3400c30f0796f861be112b8c675cc67b55f0050dc0bb6", "ref_doc_id": "85039423-8416-4d2b-8196-cde99cddd876"}, "c42952f7-b9d6-40cd-abef-16d840cfcc72": {"doc_hash": "0ae62cb8fbd00ad23ff928a5a0c0170cbe434df139b5ad34d7288df88397068c", "ref_doc_id": "85039423-8416-4d2b-8196-cde99cddd876"}, "cc93cc7e-5092-4892-a108-bea46bcd52ee": {"doc_hash": "b3017c7983422ffe8b331b6dc3e0eddd4293554bee24284f7dc84ecf545cd93a", "ref_doc_id": "85039423-8416-4d2b-8196-cde99cddd876"}, "4b8e6a2b-8266-43e5-83b5-3f8447f695b5": {"doc_hash": "47c9e638ae7667c1f3432ecb7f2b95bae76299e510f09cfde6554eb011b0f0e5", "ref_doc_id": "10370bc2-338f-48f3-b0e0-e21eba5e013c"}, "bffedf82-fda0-48f0-bdee-91047df8e757": {"doc_hash": "bf0906fe87a4975c93f1a1f36fc0d5ecf39c7f332b47e3b1f1a8ebb2e5d478d8", "ref_doc_id": "10370bc2-338f-48f3-b0e0-e21eba5e013c"}, "eb964db0-b684-4e3e-a8c3-22a31d2e3eaf": {"doc_hash": "6a5e2070de13cf3ade0f1dcc2de461e0e5348797d4a1e33b56afa97edac078ba", "ref_doc_id": "b1074c79-82a4-4ff2-aa2c-036126c86bca"}, "61f61a63-4908-4eaa-9c1b-6e75d3127b6c": {"doc_hash": "70d8eb282d508954ebb86419f12d6a00fc554e5aec2c4b9d60cffb8c3b57bbb1", "ref_doc_id": "68790215-4530-499c-9367-48e4d1731a1c"}, "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03": {"doc_hash": "1b2c5cccf2373e7db28a80b257c28c0ff9bf1d154a0e6eb510ef700209f7a1ac", "ref_doc_id": "68790215-4530-499c-9367-48e4d1731a1c"}, "8faa2299-0148-4e5a-9941-ecba0f691325": {"doc_hash": "b1f3638c0e83b16bfcdb6cb81b64be87e09004f2baf7a6c1a6cf26fe583cd200", "ref_doc_id": "68790215-4530-499c-9367-48e4d1731a1c"}, "9f2682ad-7a72-4a5c-84c2-6bf4bf229be8": {"doc_hash": "cb583c3f9b04ea8a16a7b5fef3c1f4ba0fca235f08e4fb5cc440db569762ee17", "ref_doc_id": "f15c89a8-6c75-49f9-9649-b44454060c33"}, "bc077712-e360-4535-84b0-cff36becd3bb": {"doc_hash": "9785d784225215762ec5eee7a6f4e75e677bf9b495f5bce99a6630f0b16edbb9", "ref_doc_id": "f15c89a8-6c75-49f9-9649-b44454060c33"}, "cda4cda8-8b59-4fa2-bebf-43d40db9b808": {"doc_hash": "f9268d220bee4511c0a5779fd0763eb2e19df54b268b2115dd5820158791ade5", "ref_doc_id": "f15c89a8-6c75-49f9-9649-b44454060c33"}, "7aaeef2a-f4c7-4d15-8085-23ddd7d75400": {"doc_hash": "fc16710aa271d126ba8383a49e91303d221f9a83efe83e5da960f607f5723832", "ref_doc_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8"}, "9181075c-0b27-4af4-9471-5ea78ba20c7f": {"doc_hash": "eacd1a484bcecf6c922587fe9d18266ff9d770c74ebf760297ff41fb934a6386", "ref_doc_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8"}, "d9911ae7-0973-4319-b3cf-a4d3b6409e23": {"doc_hash": "a5864e6d98612d17c0555274c4fce577fc8717524611cd00c4dcef84507e1e03", "ref_doc_id": "680bacfc-2dc5-4797-be82-30f55aa2cfd8"}, "a833e759-3e19-4519-b744-e73a1182a428": {"doc_hash": "4fb105b1c107eeb208e67995647339edee63825d305645368a7bdddcc37edb41", "ref_doc_id": "ef25f7ae-8b20-49e6-b6cc-31eb4489b5c3"}, "39b250d2-6c9f-4874-8a50-64d0431bb864": {"doc_hash": "7e308662c6ba238fcec6819f3db8f91548fe2842e5132a883d97c19eef42b673", "ref_doc_id": "ef25f7ae-8b20-49e6-b6cc-31eb4489b5c3"}, "c8b01ac1-b5d2-4b21-b005-653b50a10139": {"doc_hash": "3e8b4a87e148279d4ba1531e362557e17868f39944c2c4e5bcdc52517d6850b7", "ref_doc_id": "358ea664-5ddf-4710-8b71-ceab28c800b3"}, "cc64a61b-0e7f-428c-82b4-45de39085bd0": {"doc_hash": "fa61f5108fa111e57bd9ab0094f533f1536715aef2816335ac07b5d6e83be418", "ref_doc_id": "358ea664-5ddf-4710-8b71-ceab28c800b3"}, "e487d5b3-4fa0-44cb-b6b5-838c10477673": {"doc_hash": "94d1f333eae93f3afaa4dc115fc086cb0642a65bef42a1598bc8e19f981f2694", "ref_doc_id": "358ea664-5ddf-4710-8b71-ceab28c800b3"}, "460963d0-5c13-4fc8-825f-29c6d6768284": {"doc_hash": "968578ac2864055a76bc45af347d9e94a861c27ca4ee26df324aca535a9c9395", "ref_doc_id": "66748b71-348d-408b-893c-28400c287b84"}, "373120ad-b2b8-486a-9598-1d710e1a5dde": {"doc_hash": "d41a7a5b63adae453cfa6f2e78eae7c2ff43ceb4de65cfc30cddb70802e69949", "ref_doc_id": "66748b71-348d-408b-893c-28400c287b84"}, "70117239-c252-4312-9b99-af08d1e1c4ff": {"doc_hash": "803440c2c133ad7ddebc6e032a9baa62284769df77db68d88ea26460888fc1ec", "ref_doc_id": "66748b71-348d-408b-893c-28400c287b84"}, "22cf24c3-7b7c-42d8-ad4c-ad6997b6e326": {"doc_hash": "94519dd217029059d7290f9edfede4062a72a01e1beb8da8c14a897336f9fb82", "ref_doc_id": "66748b71-348d-408b-893c-28400c287b84"}, "ed567de4-ffb7-4631-980d-aef67205138f": {"doc_hash": "2b1f7f5cbce4119b6c8fc90c1131cd89f5144fe4ad7dca7162adfd6ecef6f466", "ref_doc_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709"}, "4a58338f-f3d1-4671-a4e0-5e96fba8e41b": {"doc_hash": "5e35b16b56dd59c7d9b267ac15b22a5f9678dcfe819e188a5661889bfdbd522e", "ref_doc_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709"}, "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21": {"doc_hash": "db300cf8c8b61ba161a930930c8c36a66d5578b36870d02e359422705f5be585", "ref_doc_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709"}, "b6e723cd-ef67-45d7-8a56-0c002ead1964": {"doc_hash": "b653279470c2712d71c6d7a9107152e6b31bae93db2b98cf2028e1ac701caff8", "ref_doc_id": "3ef7219a-bb62-4a7e-a487-798a2e8e6709"}, "155f99b3-213a-4334-a32d-bc072236b1bb": {"doc_hash": "fcb99de456f6df0cee9c680c621101f9eadc4135240a27c31341e2ee9fb97190", "ref_doc_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1"}, "09274819-6c2a-4375-8c09-5f88c1cd4744": {"doc_hash": "50bcd75520652005e8ef3c5f701fe0efe0b6929e949a28b2064828f8ee456811", "ref_doc_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1"}, "20c4e11a-d30a-47b4-b87f-195724488233": {"doc_hash": "c343c99885b3a1352c27c7976d733c6132644a4ef6c3dc88be92c3605d1d5151", "ref_doc_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1"}, "4704137b-2268-42fc-bbd8-57e784075f68": {"doc_hash": "943de6e427e27fff366359e60c67e126f3824b33a7cdbc087cdc9d410971b521", "ref_doc_id": "26f634c5-6cc0-4613-851e-4f5a521f37d1"}, "c424730e-2a91-47b7-9885-30bb433c8b86": {"doc_hash": "91bcf970384fc90f1dc3a36c875490ae7e74483507688abc28807dfa5af9c08b", "ref_doc_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357"}, "71427092-11c9-4891-adc0-1a2c1b424f81": {"doc_hash": "f24c5847f0dab05f3a47d91de8943f453222099d8d8e4436d78582dc6d5c5b4c", "ref_doc_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357"}, "d99592fa-59a8-4759-bb5f-acec403b94c6": {"doc_hash": "7f241246ac4ace6319eff93774ece557c90e1602189e15fe55255f291c93e028", "ref_doc_id": "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357"}, "f632186d-cf0d-4b20-9f7f-22e0324fdff4": {"doc_hash": "1b8307b4bf1b4aa96275c93b806d8bebb764d090b751352b7250de1e4c2e85c2", "ref_doc_id": "74b2ed3b-192f-46c6-8037-25ecfc16706c"}, "8f82f364-33cd-492c-bf3d-848b05bdcbb6": {"doc_hash": "c8c8eb6a079386069e3e6a9107fc9d0cfc897da847d1c7eebcb7149a5789c5f7", "ref_doc_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0"}, "58729b5c-a404-4c8f-9ccf-294992a37587": {"doc_hash": "1f4e00f5102bde95dc30967dedba86f0f712be7a3f18e4739c7da8d9399ec3e8", "ref_doc_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0"}, "046b8fc2-22ac-4e94-be0b-41874c7e1706": {"doc_hash": "fa55dd4b5dfefbc9f9255a7ae987fa32b377aec188e68d34da2e282cbb5642f1", "ref_doc_id": "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0"}, "f79cb9a2-20df-442a-b4ca-21f9aa22f9d4": {"doc_hash": "784cb3a82b009de3c2245a6f87920eb87bf252096488baa94320b693797c2ef7", "ref_doc_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3"}, "cbc0c819-760b-4464-ba06-0c55be80f0a6": {"doc_hash": "0dca7d0a5e8c0697519daef0de66decd315ee880498131c6d0583f9228f02384", "ref_doc_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3"}, "411e1bc3-7633-477f-ba9c-cb018489c24b": {"doc_hash": "c5d404695ee13bec19b467ae2beb04d74dbf021b4548f0c246fadef4247053fd", "ref_doc_id": "9c25f086-8c4c-41f8-bbfb-ce3e240583c3"}, "2e1a7eb0-f474-41e9-96d0-9fb5a43f2f30": {"doc_hash": "476b18e52599374caf3c7ee0d4a7ecd2affa215f744728671014577ef5b454c2", "ref_doc_id": "6f473616-908b-4a06-9571-8ca1eec6fe60"}, "3a35c244-ab44-444e-ac17-14af107f406f": {"doc_hash": "2a118c4cf49e820bc7dc78b29ac91b29b609e3ba8871d19f93947f19a43e99cf", "ref_doc_id": "6f473616-908b-4a06-9571-8ca1eec6fe60"}, "3b685780-dda7-40d5-b626-9649c4d5b037": {"doc_hash": "ab49e9e2fd13d3de0e54a430f16beac9ff8b46c6ae94435d3476b34e183c6553", "ref_doc_id": "dcc592e4-e140-4bf5-a14b-4a600f13b673"}, "0140e678-f287-40f6-876a-094a7b806fe3": {"doc_hash": "18f0305e6484809ada14008f3606086a1d4a10d2618fb1eb7da015503bc3129c", "ref_doc_id": "dcc592e4-e140-4bf5-a14b-4a600f13b673"}, "afe44c8c-888e-445f-b320-cc2c2d885b2f": {"doc_hash": "eb2f97faf5e92a099aedc474aa23391d16bbd418ad9c9403dca84d37c5778247", "ref_doc_id": "ac12e8d1-a576-427e-b52b-120c9060e7d7"}, "b37b101e-5c8c-462f-ac1e-e33aa3bdbfb7": {"doc_hash": "5fb967cb458c1518343f947ba7d11d34c958445a82875e2fc0bb49538d22ddfd", "ref_doc_id": "ac12e8d1-a576-427e-b52b-120c9060e7d7"}, "6c909920-fe5f-4688-986b-55cb8bc11b62": {"doc_hash": "5f0acddaf0d684bdff3cc09f374c39a595a371fe3ec4d460a251aeb42ecf261d", "ref_doc_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591"}, "5d7d55e8-89e8-4d17-ae56-0e4378798eb2": {"doc_hash": "a01756df38d4eb4f851d4e821918876a807e71855dbb2ff1ef87591b06a32f1a", "ref_doc_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591"}, "094fa640-a7dd-4d57-89e1-ed82d5eb8226": {"doc_hash": "b7572e8ca55ceb2816087cea7112d71e9a249ad39771af8136e8f0d50d2e5bc1", "ref_doc_id": "aff13d10-272b-4cdf-afa1-c7b92faf6591"}, "7fecdb54-4072-40b4-95c2-b8db3047af73": {"doc_hash": "53314ec1c0a00c9c32689ba82093bda3124e19d5280b53eecbdf3c7132046764", "ref_doc_id": "87b97aee-0be4-4194-85a3-2d0c21eab203"}, "f9a49e94-c49b-4d7b-a6ba-51497c30d77f": {"doc_hash": "d520bc10c78f862a931a531010a5205950d3f0cdd23a2c0a4984f3f345f5489b", "ref_doc_id": "87b97aee-0be4-4194-85a3-2d0c21eab203"}, "91527bb0-7e2b-403f-87a7-f2f5be922fca": {"doc_hash": "6e969883b2c664e5a63634a6b36c08ffdf3835fa85e086e4de0a240df8a134b7", "ref_doc_id": "fefc5875-f032-4e27-8da2-6a25f3e91ae6"}, "b45830ab-5582-46c8-92a9-8654660df610": {"doc_hash": "a91706665bcd52be1913a1066674d5c65280bcd2d17db92967bfcee870891321", "ref_doc_id": "fefc5875-f032-4e27-8da2-6a25f3e91ae6"}, "4a7dcb17-785e-4789-8483-35b80ac96426": {"doc_hash": "c5e6ed77690d33c91b752e4759d91974ddeb023196a7cf49d8078a852580b494", "ref_doc_id": "29e048cf-1454-4eee-b8df-5454adf056f9"}, "31bfbe17-f5b1-4170-8b60-6c41062584ee": {"doc_hash": "b04cc7ca6338d9ed4e571bd81d53361f15567bd59160ed28129e72db6dd9baf0", "ref_doc_id": "29e048cf-1454-4eee-b8df-5454adf056f9"}, "ca414aec-0be8-43bb-bf14-70913a2327b4": {"doc_hash": "ce193b313c243a236af10a3050e0fc960943857232853dfc422c60a8aba5707d", "ref_doc_id": "6dee6fc4-8b59-4f01-bb37-d063be0ec777"}, "5ff14fbf-956c-47ba-bc92-29dcfa2a3492": {"doc_hash": "a31a0e3ea0b59ed51643c0d422e6155b7c7545ba9ca6275131408d3619b87dce", "ref_doc_id": "6dee6fc4-8b59-4f01-bb37-d063be0ec777"}, "5f821f59-9944-4be5-8ed5-d475ec91ee22": {"doc_hash": "1795eaa55e79573d7fc18531ebfa213cb0893c111de2fcc47b4f0d8cc6adadd7", "ref_doc_id": "535029b4-28bf-478f-9388-e9b45546db29"}, "2bddb1b9-598a-47d7-ba73-e8183da4305d": {"doc_hash": "3914af43cfb2b2203008ed5fc843f5557c1a100087c1b435d634d8a02099943e", "ref_doc_id": "535029b4-28bf-478f-9388-e9b45546db29"}, "fe2fb6d8-9693-45b5-95dc-a93d4811b973": {"doc_hash": "3b956c834447a7414db005bffa801d23a3ba34d6c2b8c4f1040d27172db6fad3", "ref_doc_id": "b4afd0b4-2463-41d6-9f58-9ae2dafd739d"}, "471301e5-3811-4004-a7da-4cb4d288e7e7": {"doc_hash": "b41e5d82a5ba1ce4d1ef62545e60fb4e70c018ac21089171c584c109febb00d9", "ref_doc_id": "b4afd0b4-2463-41d6-9f58-9ae2dafd739d"}, "4b3bb05d-0068-4fbd-9b6e-ca9700b63bdc": {"doc_hash": "153633c4d815898c6d00ce99b462d5f44d8f9ecaa8cd1c50b2867ad23fcb5fc8", "ref_doc_id": "a93c02df-fd8c-44c1-993e-f22923aacaa6"}, "eeb31901-632f-4f34-a2ce-37dd367e1f8d": {"doc_hash": "71f2ec3fcd71dfa3a42f7cb0bf6f6c1292345300478f08030f8aefad62ae36a5", "ref_doc_id": "a93c02df-fd8c-44c1-993e-f22923aacaa6"}, "70ec31eb-d00b-405d-871a-eb6ae464a16b": {"doc_hash": "5f9ae1d98852a3f59a7e8cf8ba7deec814e735e85642cbe1b2b2f779710261b4", "ref_doc_id": "0cc664b9-8de1-43e1-b96a-31cb2731586f"}, "cbb6fc99-ca60-46ac-bf7a-73ae2ea015b6": {"doc_hash": "e14fe784daf4f3e64dc3952693d2cfc89b63916ce4f39e32876fa9a6f00e6a03", "ref_doc_id": "0cc664b9-8de1-43e1-b96a-31cb2731586f"}, "92d1bae6-ae12-4f72-96f2-de0a7dd51af5": {"doc_hash": "2b13367107c27323f0a8c5df4b9b79de8cc0260aa69fe7d48be1ed827464e3bf", "ref_doc_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6"}, "c7f35387-b22e-4fee-b97f-b5136af93249": {"doc_hash": "7be5dfc1f4fd1b4cd584bc1ad4a6e8ce503a2f59df2457ea203dc55eebef33bb", "ref_doc_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6"}, "3fef175c-7e87-4f0c-a3ac-aba24302d3b3": {"doc_hash": "40b655015806120afb327e6ee2ae59ded5ebce67c771a0b33e0349851067a5f7", "ref_doc_id": "8ffa2fcc-7640-418f-b65a-1e7165eda3d6"}, "3764c2e5-3cc6-4857-82f3-8a31b179a485": {"doc_hash": "6dec8189a12de514cc68b8fb23868d7340838d725ccc0864f48050eb3947d52c", "ref_doc_id": "e963c169-e15c-40df-a425-e5888daecf23"}, "d52b139f-8995-475a-bc6e-da0699f86715": {"doc_hash": "e1121d42f5816c9d4f7864693c4426653104d5a18aa99e870935781f78d22a97", "ref_doc_id": "e963c169-e15c-40df-a425-e5888daecf23"}, "894ffa2b-f97b-4543-9912-3979c977623e": {"doc_hash": "3ed26d0b974e8bd78deced19687558ccb9e29af5e9d5745f03c23b0552824a15", "ref_doc_id": "e963c169-e15c-40df-a425-e5888daecf23"}, "b4a98139-8d81-4bea-8f19-a732201dc4fd": {"doc_hash": "63cc4b126a75af66c8c3ef92b8381e2039207ba965219f2c31a4808cd149feb9", "ref_doc_id": "419e6e22-f936-47bb-96a9-338c6707b1da"}, "a0533fa0-1f65-42a8-b8f9-b5c3a712b148": {"doc_hash": "36c313bbf68ab5a3b9eba9da101451619b86cdd8daa946a27990ea05f3e72fbc", "ref_doc_id": "419e6e22-f936-47bb-96a9-338c6707b1da"}, "3ffa2e1e-20bc-43c8-a0e4-cd8971233cce": {"doc_hash": "8e385a984fdd094b76baa86bd0d99a0978c07e69c626b835d60fb6ea271c569c", "ref_doc_id": "419e6e22-f936-47bb-96a9-338c6707b1da"}, "2ac99c54-d900-4f60-a450-173d97562ee7": {"doc_hash": "355d5dbd04454437d5bcf75991c89bebd786e908dfb0ff198abce265d73f500a", "ref_doc_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc"}, "5457532a-2d22-4c08-ad2b-e92d289295c1": {"doc_hash": "0a9fc089b917751f0a1f57ac061f92146af3740c512c6eef5f5e9df512f72ba5", "ref_doc_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc"}, "1fafebe3-e835-4caa-8f20-de6a57f234e5": {"doc_hash": "8f5b2615984be8bef12b58826a7cec9985de9c46dcc944f8a67d854ad8701ff5", "ref_doc_id": "19dbb1b2-5b20-40b4-816a-78e0304578dc"}, "4f6abef7-0ff4-443e-aa72-a96a111bbf89": {"doc_hash": "a4df9233e8774129e0695ce2b37252da6699d52f546e14f8d4b82fc13469e9da", "ref_doc_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b"}, "95684395-58e0-4abc-bb3e-75e6fe4f63a0": {"doc_hash": "7de42620967fe63c9796d31af1e6a4c4e3ce165c56c3314b43b02227ea3cc913", "ref_doc_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b"}, "ef62c422-b13c-41e3-9b44-56461e128783": {"doc_hash": "9fe82f762efe49b89ebf9edb87b0b450f5f606e997eac4d378282de2c5ae2c79", "ref_doc_id": "e9dc8933-18e2-4e19-9909-5e53a80f3d2b"}, "865d8d13-7378-4640-9b3c-dedc3603c3e1": {"doc_hash": "7246022aec200650e399d9c24a28f4ef6f467e8a134bf3e2e7b504fb3e90d3bb", "ref_doc_id": "244e9faa-8f88-4169-b498-df7174ac5b2e"}, "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4": {"doc_hash": "e32a6e93ee2a2c8eec149b29fb5593a2e209f54eeba7d99c9cf8036df9c8c7fb", "ref_doc_id": "244e9faa-8f88-4169-b498-df7174ac5b2e"}, "4cd83e89-56cd-489e-92f2-b2cf7e6e9e0d": {"doc_hash": "75c92dfd06a7598986391017c7b64ec7c7f26a373001f9dc2583ba4cf0cf4109", "ref_doc_id": "244e9faa-8f88-4169-b498-df7174ac5b2e"}, "437feafa-9c49-4020-af64-fb21a48150c5": {"doc_hash": "a89ca309d9fb4092c468c35cafff5fec873228bf0dac2d37cb4c43999e450fe4", "ref_doc_id": "d092018d-6ffc-4107-b13c-65353c2fbb80"}, "0c3645e2-d63d-436d-ae4f-7e8540f845ef": {"doc_hash": "b9f32c95072c795451930ee74833a7ba12307b22e4eee69f248712dc95e0d46b", "ref_doc_id": "d092018d-6ffc-4107-b13c-65353c2fbb80"}, "91453e0c-5588-4f23-9518-079b43e70b04": {"doc_hash": "9e35d58070aa35bfa4ba58f07ac57d59932008ac4f8b2dadc2172554cd166563", "ref_doc_id": "d092018d-6ffc-4107-b13c-65353c2fbb80"}, "51b21bc9-6150-4180-a52b-914879d2ea8f": {"doc_hash": "7b7a990d593e946335e7620f8982875a69e9cdf0b33b60e8a9996cfb57b313b0", "ref_doc_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61"}, "d172b56a-71b2-439a-93af-56fd77fa2a1c": {"doc_hash": "1c0af505b3d3638866304b31884178462d687387a6122d7ccdaf28dcc61bcc43", "ref_doc_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61"}, "9fc2cc90-37b3-4e74-9e77-1a798bf31c00": {"doc_hash": "96549b78105d044717b610e7297a9fc2aa5a50913130b4e09df2113a0524be4b", "ref_doc_id": "fa519b96-ca2c-4258-a366-4a41c6be2e61"}, "3a7d0cb4-46c2-43b4-ba85-a8cdde3768b3": {"doc_hash": "c020d1b079d03191af2495de31b09d6d6edd5956c096090ff4b0774361e7d470", "ref_doc_id": "595a714f-e8d6-4d09-9482-291afaa48c9c"}, "30a05a20-e1c0-450b-8eda-f11268c0bc0b": {"doc_hash": "a9705b0dc7f0a4afee76c1dbcdfa659f9635288a2c8a168090bf87eb64787c2b", "ref_doc_id": "595a714f-e8d6-4d09-9482-291afaa48c9c"}, "f14e90d5-2d7a-494a-a45e-08fa1c4be1f2": {"doc_hash": "f234173f651bb2e7a98429aad5a280b02df9c9f627902980fa3d7fa677019176", "ref_doc_id": "595a714f-e8d6-4d09-9482-291afaa48c9c"}, "070ba16b-9a75-4565-bd54-7b82b17d88e1": {"doc_hash": "43fea2ee8970d8705c8872312a2622a71130777a55b47514a710862cfa676b89", "ref_doc_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544"}, "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271": {"doc_hash": "cfc4cbde83e2abaa3c4dd5893bde42d1b58b305ea0e80db6c3314611e79ffc6b", "ref_doc_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544"}, "5155dd24-1e21-4cda-9bec-48b1536b6af6": {"doc_hash": "302f7d647696b776b1c9146e3f9c2098e0cfb49a5d848ab2d459b41907bba83d", "ref_doc_id": "65a7db06-c8bf-409d-a66c-d9c9c8848544"}, "20e091fe-ed82-4010-bee5-436d0e63058b": {"doc_hash": "c3cb907ab4c7eb92fcccb5094e6524166d680d4b449155d3a52174c11311614b", "ref_doc_id": "700f443b-0350-4537-bd3b-75a1bd68947c"}, "a4be6c80-1824-48f8-b7ff-2873e98443ea": {"doc_hash": "1c6c0e8962d8c2853712622984ed4731ebbbe86150cb1c2dfaf9e8f0894aae67", "ref_doc_id": "700f443b-0350-4537-bd3b-75a1bd68947c"}, "7444e014-ebb5-42fd-bc60-601a36b87485": {"doc_hash": "bd4eb46669324f2769030911e93e775ea7ec2f7958b6bee894b8d7bb456f402c", "ref_doc_id": "700f443b-0350-4537-bd3b-75a1bd68947c"}, "4096d52f-af71-4d6c-ba98-4aa973a1d2fa": {"doc_hash": "745d168f68926c12329443b68301225c4588ea9d60d5028608ce364671eeb8a5", "ref_doc_id": "32d16191-9537-46c6-891a-d555a7b58d71"}, "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72": {"doc_hash": "0f216d54db585bce7762cd37f1fa1088382f62b80b3e4ae5d7f55c69abaa9419", "ref_doc_id": "32d16191-9537-46c6-891a-d555a7b58d71"}, "e2a5aaf2-9791-4e65-a21c-674aaf47f629": {"doc_hash": "96e5d19dcbb42286b8136e9ab7c78e14dcf0f8b2ef7c6185d3ef072f7c8a1d34", "ref_doc_id": "32d16191-9537-46c6-891a-d555a7b58d71"}, "823fc1de-e171-4e04-acdf-32b909ca150c": {"doc_hash": "f0f0cb38838599477d045ed56e40859f357643c0d509888e7463c3568fca1835", "ref_doc_id": "cd4e564e-27c0-4b3a-acba-e5591f45ae50"}, "7f08dd9a-188f-4296-89f4-95f35b5730da": {"doc_hash": "f1bcf791217ff4233923ff76f3b8f8a46ec112c1af8452c1da81367817680644", "ref_doc_id": "cd4e564e-27c0-4b3a-acba-e5591f45ae50"}, "a2951346-57b7-4fc7-bc18-2439e6db34d0": {"doc_hash": "5f21b370de8d2b73d2d36c7bd5093ca1930db6e1ec9a397ce54b1638787b05ff", "ref_doc_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6"}, "9ed30f11-7473-4049-8ceb-9939b3605247": {"doc_hash": "5876f9c5ee515224b74250786fc49cd13859ac21a24326eaabf0c9360c268158", "ref_doc_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6"}, "d802b767-a2d0-4525-8b38-a41638c3ebf5": {"doc_hash": "daae0dc1958503c993963ecfd09f8a6882b919ac970f255cd512ddbe4fa2fa2d", "ref_doc_id": "aafaed3a-3e58-4009-ae04-8d6fe593f0a6"}, "80d6e646-12a4-4e2f-8317-1000e63e9b2a": {"doc_hash": "933139fe16b3d36ec3a07db256fd6b82f7b35679feb91e53f8cbb7ac75ddf65c", "ref_doc_id": "947558ac-45e0-4dc6-9001-a4df85838719"}, "03d27074-68aa-4699-b0e1-33ad05fc6395": {"doc_hash": "801a01526db5f9506d6f75514b6cd2f9694cf70adc05b99563042df8919b2332", "ref_doc_id": "947558ac-45e0-4dc6-9001-a4df85838719"}, "897e9bb7-bead-4acc-9946-7af4df170be1": {"doc_hash": "dc2a71fffd705f034b0cebe5839803c784bc3b29b31e35dd4f83df19de615118", "ref_doc_id": "947558ac-45e0-4dc6-9001-a4df85838719"}, "5e7d6cce-c6bd-49f1-a9f2-e5b26dd70b39": {"doc_hash": "eb339948472320de2c1a684c43296270e0cf1a450e0e80b489610c44a52bc266", "ref_doc_id": "9c5ac2c6-2298-45c5-912c-714e59a2ef2e"}, "69b49676-2b4a-441e-bfcf-dc7701a0c288": {"doc_hash": "29a5629043be247bc3848c4d7a2091ba9d6666fd401aa1ce4107036d36381b96", "ref_doc_id": "9c5ac2c6-2298-45c5-912c-714e59a2ef2e"}, "f0d7995f-f4ac-42cd-97b4-ec3554c2dacd": {"doc_hash": "d8c4eec3ab7d9f32d4f2ded11201580a5fb8fa941fc44d238b034f0f54038a35", "ref_doc_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4"}, "6f00feb7-2967-47e7-9a6d-0376f6b37a92": {"doc_hash": "7fb6980d8d47393ce2663124eb15aba0ec921305cbf341fea0f0f545cce79d96", "ref_doc_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4"}, "939689c9-930d-4c0f-8e1c-9387450786c4": {"doc_hash": "e7500ba7b1be1633c540630778bc00ca906b31cecff14134c3c982d66cc97473", "ref_doc_id": "cc4aaaf6-f84c-455b-a2da-2529469f4bd4"}, "b338c463-f35d-4ede-8c2e-0b45adbe86c6": {"doc_hash": "89240792a97f5a533badf049a0ab8a8f5f7e0fa72d2a1793a921684f03a8c579", "ref_doc_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7"}, "bb097d24-28fe-403f-969f-b636ac5eae7e": {"doc_hash": "69d5e6425e5fb869fb83d5b3553b355a80e519ae296f4e91119202fde888d9db", "ref_doc_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7"}, "d10738cd-ce72-4b30-abc8-9039436c9f0e": {"doc_hash": "4d3d1131197fe882d3de22f355b02be510983da34fd994cbe82547baefbf18bc", "ref_doc_id": "837a349f-20a8-4bf8-84bd-568c7054b8c7"}, "844d0a60-2d02-4a39-8153-966b64de8a04": {"doc_hash": "5097367b8a83c400f3ec60cc1376b8f3727d7f014f718d63b1de99e17d9e2707", "ref_doc_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6"}, "67bfd251-00be-4e27-9209-cdf9f2f83dc2": {"doc_hash": "36dadd3357e91523be87f77250dcae88831a6e56b0ce34843a12fd5ac6ded53b", "ref_doc_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6"}, "8dadd252-bac6-45d4-9eb9-81d9340fdb69": {"doc_hash": "da6dcbd4820bdaebc58b069cf3bb2cff7ad7963ab5918df6bb168bdf16cb52d1", "ref_doc_id": "4cd53b8e-9b98-453f-845a-c9d1844a04b6"}, "6b2a613d-36da-4441-b03a-70ade77a1ceb": {"doc_hash": "4b803e80fadb8651677d4899ef2ac2370a52fa783ba5415d62447b0cdfa0925b", "ref_doc_id": "3037eab8-ef41-41ca-8448-f90be2519dd6"}, "3a708ed8-4078-46b0-8327-42c19cfc5fd4": {"doc_hash": "94cc9ce9623c3bf9e3c918d7f0c3b4bb8ebd82b9168e4d18878c8a55fdaf2944", "ref_doc_id": "3037eab8-ef41-41ca-8448-f90be2519dd6"}, "a3feb080-b17e-491b-bdd4-2ad01ef43f30": {"doc_hash": "327b76573abdbd97e581bd5458faedcaf4164cc71e11e31c937a80c20cd92818", "ref_doc_id": "3037eab8-ef41-41ca-8448-f90be2519dd6"}, "b450be89-f98e-4a1e-8180-b30c78c9b448": {"doc_hash": "70d7789149145c444e477864883142fda1c933642e15fb34cc0264a67b534a20", "ref_doc_id": "3bde6c50-662a-475b-8a4d-95a59267d5cd"}, "95cf2059-f79c-4163-848b-e3e73c3c5624": {"doc_hash": "aac418e3bcca443fdd8fd6ae64892b457e1352fe4812aa21fdf77b3ecd099d17", "ref_doc_id": "3bde6c50-662a-475b-8a4d-95a59267d5cd"}, "19bbd9f3-571f-4bb5-8eb2-8bd50e70be42": {"doc_hash": "30433ba5e35516129d901189f6b9d4f777ba77273569b5f84e3ad84b0ef6d928", "ref_doc_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54"}, "14566228-578c-41d3-a8bf-b0b6756d3070": {"doc_hash": "5752bbf4ea1baa145d97422a3c2ca98217144506e90d5c50c6b5eb180aca5973", "ref_doc_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54"}, "0cffef41-d13f-4c43-a427-c4f8a6017a80": {"doc_hash": "2304b7b68ae67cc6b5b4a126ebac7357bfd1ec160bc97af05b8dd9453f17c748", "ref_doc_id": "644e331a-7af1-45bb-a0d0-32076f1d4e54"}, "10224088-99be-437b-b06f-98ee05e0f383": {"doc_hash": "3cfecdb15500eec8345663ae1a31eb99ee1d218c22b3b62a544a6d3a83e3ac86", "ref_doc_id": "da736100-9fdb-46be-a03c-2b8f1b826bed"}, "6174c69e-57b7-404a-bebe-dd8150115a3d": {"doc_hash": "613cf602c438b444ba0f417648d58b184193c0d3e96ed90f24d6714d6d050789", "ref_doc_id": "8023a183-d887-4091-9928-12adf4e08ab4"}, "322da2a6-9054-4cfc-ba04-9caba877e4fe": {"doc_hash": "7308b52234a766805f7a7c0c2d4237225f682445917f8cbec5410085f25193ad", "ref_doc_id": "8023a183-d887-4091-9928-12adf4e08ab4"}, "7f973fb9-6302-4bca-b5e0-aadcfa9fcf34": {"doc_hash": "b98efcecbc13fbfdb713eb3c3a01907119c1b36db7fa4685583ec86b4d292699", "ref_doc_id": "d1914955-a91a-44dc-9874-e2effb407150"}, "2d0c4180-149e-4372-8178-353af562571d": {"doc_hash": "1918ab87027948a56f622c39e2ff11e0fbbf273dd55cd8250d85e30c1fa952b6", "ref_doc_id": "d1914955-a91a-44dc-9874-e2effb407150"}, "31a4d691-a2fe-4189-ae48-37e82ee78d39": {"doc_hash": "aa5481cb1b3ed244c19b4ee7fd11361ebcdd7b663e93cf1fdada5050a245e661", "ref_doc_id": "6676dcc9-27e9-4f04-8e1b-9033648361d8"}, "bd1252d1-28a3-4741-b5fa-6b4a0e8ac2ff": {"doc_hash": "9a41c218a008d1493d9e429ced92b0cc792412595a08dc99f64926e00cf2c38d", "ref_doc_id": "6676dcc9-27e9-4f04-8e1b-9033648361d8"}, "fb237528-9881-42b4-9b9f-6b8d094f84a0": {"doc_hash": "301f72fb8113e8c7b8379381a259092c8c0f718d99ba185415b69cf627ab9a60", "ref_doc_id": "ddd75935-2c98-4714-a331-784795444528"}, "df3d7b57-451e-4ca1-8d7d-08ce07c3ffef": {"doc_hash": "b3b5c5c60d1bda7d49b8c021189e4a8f52c1020c6c28969b64d7d93a12bc6009", "ref_doc_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105"}, "579730e9-ccc0-47d9-a54c-ccfc8918f9f4": {"doc_hash": "f69cbb92182d297ce1170c789f3292dc469c6e0dfcae44ffdfb525bd10ee2eac", "ref_doc_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105"}, "fc39c9c2-2682-4b87-a5b5-3e6bedede610": {"doc_hash": "365059fda87886b4f38f250cc500d03ebb961d6fb83f4a4a029a4d54290cd54d", "ref_doc_id": "39d08641-8b3f-4ac1-818a-fd9bca2ac105"}, "b5b1a543-a0e3-4a42-942a-553eadbfeaaa": {"doc_hash": "ca228066818a80e3930a68cb76f9c1f94759b3fbfcb28962284e06afca31c8bf", "ref_doc_id": "aef600eb-1256-4c0e-94e6-c7f3be035e55"}, "d2669b64-b05a-4e6e-aa56-f67e2e3a19d2": {"doc_hash": "4d9690c79e1694a3ac449f36b5b30505dd2f37d64f5cef488a1286536126dbf4", "ref_doc_id": "aef600eb-1256-4c0e-94e6-c7f3be035e55"}, "4d9f3e71-4984-4add-9aa7-76c5b818bef7": {"doc_hash": "2fbf401a182497b64307cfac52129a8a61eff07b36d1b96259fd698c50287575", "ref_doc_id": "0d07d8a2-3d96-4bf9-be8a-a02cdf4c15ea"}, "71ac52ac-31cb-414b-b073-d6095c994e2a": {"doc_hash": "3fb9fdc581c9295ec4df1ed232d7d6fc9cb8b0c8e719d4f0c14ec95988d37e53", "ref_doc_id": "0d07d8a2-3d96-4bf9-be8a-a02cdf4c15ea"}, "29ab8f4e-01a4-494a-912e-bbc2bde22737": {"doc_hash": "35469c5ea35b41723798a888b4aa11bab7deae66001cd04a6ce31a5d6433c088", "ref_doc_id": "b14c1699-57b2-4eb2-9d0c-7185b411ca83"}, "3cc7f7d2-bf22-444f-8b68-687c28d02e12": {"doc_hash": "bea31e179f6ec876e891e1dbe0550a07538a848b0ed676b2a4f0d2b6c7458155", "ref_doc_id": "2b0c7f1e-6eab-4af2-a200-9e3ceafb7e0a"}, "1d1926ed-857b-4c1c-ab5b-89a5ff328108": {"doc_hash": "bd600af5af8cad9e0c97cca4c09a680beaba6b6c56f4c0e0c4272b6c78b9ac9a", "ref_doc_id": "e1eb475b-07b3-4926-8c49-ece7cc00555b"}, "dea62079-e8b6-4895-af82-9306a64655e9": {"doc_hash": "504073aa3fb08d951f08c773a7337fb36260df4fdf46b625d5baf9bca6f8ebb9", "ref_doc_id": "66fcd770-d101-4d2e-b312-1aec2ee836de"}, "433b3516-7a57-41d0-8490-51b4abe1b6e1": {"doc_hash": "b354a7a385c2416ecfa96df0389d754b8f9807499b076f0983228fee70f10eaf", "ref_doc_id": "66fcd770-d101-4d2e-b312-1aec2ee836de"}, "3ca34d85-bf48-4abd-ad1e-751f1f723d71": {"doc_hash": "501b911fca7c3641e2272c405578e46da692a43a1aee7edfffe6eb9a7f986892", "ref_doc_id": "45f56240-ba48-4c7f-803b-5f9717abe94d"}, "dc6e0634-d25b-435b-93a9-f9d46eef567d": {"doc_hash": "db293708a9c80f3a6e60934c05e3b3eb16fb1a13e37309a96c2ab4d89da27bec", "ref_doc_id": "45f56240-ba48-4c7f-803b-5f9717abe94d"}, "1509f7ba-ef54-4202-959c-ad7459df5890": {"doc_hash": "5a8b4b1b93f6c37f16884be3726a890019aa8b1621ffc619aa6d5f3ef4026803", "ref_doc_id": "45f56240-ba48-4c7f-803b-5f9717abe94d"}, "e2bd6c62-6be6-44d4-9462-f05a1e62d4a0": {"doc_hash": "4672bbdf078db1540c6fff3d0d74ff256decbcd1d929eb23dba2be6a91e9539d", "ref_doc_id": "19e693b9-e980-46f2-8b4a-b6236781cca0"}, "61c70631-9805-46df-bb5d-220a5299a5fd": {"doc_hash": "7e790e9d5f93bc26b0ce003c848eef7c9b81e8922b81d6c2fca15241ab138008", "ref_doc_id": "ed88d090-b902-4b15-8a71-079595926904"}, "7bf1f1f7-ce66-40b5-8f3b-aaaa776e4235": {"doc_hash": "ed3d616c49e9f5e63f29097ff3aeeee17288eaa9f2b809d50b3b2cdbfb63974c", "ref_doc_id": "2d412c94-af78-4309-950f-9e4a543757a3"}, "dde7482c-f3b5-4469-8d5f-7f625e72bca4": {"doc_hash": "0d46ae0eb6de1486546ed5e044f606e5a87f223e927f5e4f75660e21868d8883", "ref_doc_id": "2d412c94-af78-4309-950f-9e4a543757a3"}, "1547db17-ff94-466b-aefb-e13df80ae7f2": {"doc_hash": "8e8a652070e10f4166e36bb84d92acb67689005ceabc2e82de8796278639ace3", "ref_doc_id": "ca1b43f1-ba74-480b-9a2b-88a4b23e6cee"}, "14437b94-05ea-48db-9c10-d3c8499a443d": {"doc_hash": "9d37941e20d210f817abf15f186f8266df6dda88d691e71350622c9e55f3d6b0", "ref_doc_id": "ca1b43f1-ba74-480b-9a2b-88a4b23e6cee"}, "d5d922c8-557c-4872-bdcf-9475a7f9b90e": {"doc_hash": "b47ac4810621faab15f560ce50686112e609a6fa86ca7069584f34d6b3858294", "ref_doc_id": "ff30aa8c-bf0d-45ad-be65-00ff1fb7e94c"}, "24c50c0c-f0b3-430b-8a30-0023ff0c28ce": {"doc_hash": "49d15ae516c65aad9ed6eef89ebfbb8227093543423aa0210e013889cb17c423", "ref_doc_id": "ff30aa8c-bf0d-45ad-be65-00ff1fb7e94c"}, "1a33172a-75a7-4ed4-ba88-d504c8cd31bd": {"doc_hash": "d4a903d1db251b524c2101198587dcaf59aa81a1880fed369438085c12cb51f7", "ref_doc_id": "3da8bd87-095b-40eb-9cab-787d62d9727a"}, "a1e9fe0e-7869-48ac-be25-4cecdfc866a4": {"doc_hash": "a7f68d9e0dcf34653054de88892b613e942260073f4786e9912f49cf84130c1b", "ref_doc_id": "3da8bd87-095b-40eb-9cab-787d62d9727a"}, "f0330e3a-a513-4f02-b1f5-a3682cd88527": {"doc_hash": "07ffa88f79518d78cadf071c6d47c0251d9786275b48619fb45a05eeea791d78", "ref_doc_id": "0f7b5f54-10c9-43da-85c5-b381475c6e12"}, "b6d1a5bb-d19e-4fa8-a5cd-e75ba43c2379": {"doc_hash": "791a97ac7c4f86c39688ffe1b90e35c420b69afb32c05085dedf6ae9c20ca730", "ref_doc_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac"}, "ef89ef00-8e12-4398-a11f-6770714ab10d": {"doc_hash": "8098786133fe23ef2cf006f74d7682ce67956bacf6276d771d5c5da7485480eb", "ref_doc_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac"}, "f7661f79-a75b-425c-8068-9c320ad13887": {"doc_hash": "020b6e6a06f7f02943bc37c3966ce0139c615bec32c8f3a1c3eff658afa8c865", "ref_doc_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac"}, "f6e3deb0-5012-48aa-9a92-6c262f366b31": {"doc_hash": "23a83306ba8ca2612c604c32c9efc328492f59f7b571fd67058d434967f9576e", "ref_doc_id": "5eaf01e1-f7e0-483a-9c52-0040301ec1ac"}, "c0e3a3f3-6f52-480a-8e64-372a9235563c": {"doc_hash": "d39e8f83cc861eae50f1af70b71b626b4741ac43be5b665bc14747967c62c116", "ref_doc_id": "70d2dda2-1ccb-41c7-a814-5a655f290524"}, "dd169996-e25f-48d6-9850-2a17af0378ef": {"doc_hash": "b5a6fe229e231fa68de0de76ac8acd602710a2417c0111780f6fc7ed547b0d29", "ref_doc_id": "70d2dda2-1ccb-41c7-a814-5a655f290524"}, "9bafc4d1-8d51-45e2-8369-75686477093c": {"doc_hash": "4850cf319e76ce38e10cb8f03e535c7814b60d755f83d27c751ddd0de336eb72", "ref_doc_id": "70d2dda2-1ccb-41c7-a814-5a655f290524"}, "670fec93-413d-45ed-aadf-775fc95f3529": {"doc_hash": "4aa670065f2172b24e82b9cc7a7cc23463a68c57ec494701e541b1ab9f79914c", "ref_doc_id": "70d2dda2-1ccb-41c7-a814-5a655f290524"}, "9cd08118-40fb-47ec-baa4-f48dfe1790c3": {"doc_hash": "fa7a2a085a5d1c80d463a469483786a20a03566fe905f94486a25b5f67eea928", "ref_doc_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6"}, "2426ae24-c8e6-4589-b960-615120e67502": {"doc_hash": "4dacbe9eba26a463f50ba7b52d8730d20e79bd5621d719aa00a20dd674dc9651", "ref_doc_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6"}, "85229042-adc3-47f2-9663-b782a15163e8": {"doc_hash": "3be3f05693760ac79f105a958ca2eecdaf80ae15cc79e60ad5bafdc4de8198f2", "ref_doc_id": "188b8dec-2d9a-4ade-b873-831b84c0adf6"}, "8526ba8b-bde8-47b0-bdde-d0e4c5264749": {"doc_hash": "317c4fb74c24e2d6fdfec500bba200107b56a8b07aad8d2a0ff25081275f75cc", "ref_doc_id": "8a95293f-9291-46e1-8732-47aeba53d843"}, "908e5fae-a19e-4ac4-9a3e-bd4742afb021": {"doc_hash": "ccbf66131393c6a3c30feacaa9f7a751f322e770a82d40e8a82b16768c16c96f", "ref_doc_id": "8a95293f-9291-46e1-8732-47aeba53d843"}, "32671358-8069-43a8-ab8c-c3de2293b785": {"doc_hash": "bccb0e517f359023d2eb64b194020a35380dc6e763ae822ca930bd034198c343", "ref_doc_id": "8a95293f-9291-46e1-8732-47aeba53d843"}, "aec33b9a-3a93-42b6-ae8d-04abe65193e9": {"doc_hash": "59366860b43c04bb97b5e9d6e4d182395925ab2affc281aa86df2e68c5508d5d", "ref_doc_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e"}, "79fd9ab1-63dc-4ae8-bb61-0540f122f771": {"doc_hash": "0a1b026f497d9774e4f2830efb681495baa7a309d90a533549be3269e2761edd", "ref_doc_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e"}, "ddffdabd-53ac-4601-a971-33ebab990483": {"doc_hash": "ad9965becac798b8dcc0be9540551de16cf4652927d140ed488f897a701a9117", "ref_doc_id": "135b8231-20d5-4a96-b2f9-8fe0477c8a0e"}, "ddf1800b-4af1-4616-8466-4604f55e78cb": {"doc_hash": "4177d92cfde396aa9e9e6253fb633de4b6bf613c3e626e77211336a5b89b1f47", "ref_doc_id": "2bb30396-1883-4bd8-aa7d-5983f7ee110c"}, "1dd02701-0fcc-4081-973f-4864cbdc76b8": {"doc_hash": "f8b16bd102fda1e8923f920fecfb4706ba482885ff1951e78bbf3386c43f62f4", "ref_doc_id": "2bb30396-1883-4bd8-aa7d-5983f7ee110c"}, "cf9d7f42-ad4c-4fc5-be9e-16d6e2fc7ce9": {"doc_hash": "d5a92182ad04fc67dff00ae78c5a650c6659a5437420ad4c62f0d5e6e655785f", "ref_doc_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773"}, "8a47826f-f54b-4327-bb55-f7e41abce13d": {"doc_hash": "afb35f19e4b4c42c71da25e535143500784bf11906d0cc328cc6fa88ccd382a7", "ref_doc_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773"}, "53e2ff56-c20c-41e3-826e-4edea0691c82": {"doc_hash": "8cd56e8505eaf5fd014a6a42b6c51a514e5fb1dd1371420224d532c768e2cf0a", "ref_doc_id": "d44eb81d-579a-4e0b-92f3-7a9d4239f773"}, "ecb46220-f151-42c9-bf35-a6738495d33a": {"doc_hash": "69e535316204f3edd523025f4347e6322b4b2776478d5f19a6c707dfe0c52046", "ref_doc_id": "f667cf8e-f1c7-4060-9876-db38884a10a2"}, "9840397b-a353-4968-b138-567ee44b661a": {"doc_hash": "900aa492b229b19fb2c85d06f99168603b7fdceb3315358aab952dd2c7404e2f", "ref_doc_id": "f667cf8e-f1c7-4060-9876-db38884a10a2"}, "527e5a00-e5b0-4fa7-ac3c-067dc8399dc7": {"doc_hash": "16f60ef6092d8e1a1ed1bb467573f4496f3912e83a42732c584f09bf4bd4d29b", "ref_doc_id": "f667cf8e-f1c7-4060-9876-db38884a10a2"}, "6072db05-4d9d-422e-9c44-87a10d218200": {"doc_hash": "ccb9820b09649fa3e22c4115c58db9d58c4e54a622675564b5fa9534d8f8a4e1", "ref_doc_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010"}, "d031b1a5-b654-486f-b994-7ac1f6d5cb97": {"doc_hash": "2561642f27cba7c9515e136b5ff89751cd202b5f142d355e6b9dc1c69f5dae17", "ref_doc_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010"}, "d2fc892d-0236-49cf-a8cd-49a78ce3dfa7": {"doc_hash": "768883298697fe0bee156482687f864f4d8b0002058c1e0e1afa267c9461dce9", "ref_doc_id": "29ec5f91-e4b6-422e-9e2c-b07644c57010"}, "6668f0db-4fed-41e5-b0a9-023633b4ec91": {"doc_hash": "8dfd7abe65b87daedf52fe49b0fd0b2743447c8351882eb30cdca46627a00f70", "ref_doc_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e"}, "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a": {"doc_hash": "8342d640b558f87112d3910a377b9fa7773fe19a78f6e8ad3c02492e388d2827", "ref_doc_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e"}, "e3b019ff-da87-4a2f-b07f-964d8a2dca17": {"doc_hash": "aa052d05d039cc08372fe1681a7e6710bc6209103284f2bff8e61b19325e977b", "ref_doc_id": "a21d6256-61a8-4ca8-b06c-500cebae3b9e"}, "313052c9-fdbf-43d9-be89-aac53a1e9b7a": {"doc_hash": "90b9864f591d6686eb1d5b237ce06c9ef2c3b02b325c8072021c92d828ee48d7", "ref_doc_id": "bde7b5fe-6256-4250-9748-fb59a4d2b59b"}, "809c657b-a1fa-4055-868c-670bb87ac70c": {"doc_hash": "6b67af4cf24a254cd2eb26296c02954222324c4aec2efa91640582932797c6ab", "ref_doc_id": "bde7b5fe-6256-4250-9748-fb59a4d2b59b"}, "7ccb2e24-774e-48ca-90db-211ebed1b933": {"doc_hash": "ecd5350fa27802ed1655a9c1714aa3bfdcf1b2661d9ed91e56921135614afac3", "ref_doc_id": "f7118a60-6ed8-4961-b211-dd32ae93e8d3"}, "077347fb-658f-4788-b8cb-bb598760b89c": {"doc_hash": "9f323fed3be5b48a9d90b472cac56470bf1062a5640a8b2cb3045b218d827e67", "ref_doc_id": "f7118a60-6ed8-4961-b211-dd32ae93e8d3"}, "70155e9e-c4b8-463a-9a88-9e6571558f17": {"doc_hash": "29e8bf45fdcdf8490671fb7a29eb5c8a7cb330c523ea0263cd979db956700e57", "ref_doc_id": "65108a05-dafa-492f-bbb6-bbb355922faf"}, "0364b81c-d2bd-4169-bfb7-a2e43242d236": {"doc_hash": "9d15d81368f8930891473af0bf54397ca7d0780bdb9412630cae9828aff801ec", "ref_doc_id": "65108a05-dafa-492f-bbb6-bbb355922faf"}, "41d8c304-9d95-4088-8836-1137066833cf": {"doc_hash": "1daeaff0652323717e742c3b6b23de58b33556afb5a2ef2f2feccdc414085ed1", "ref_doc_id": "68939d01-9e64-4799-af4a-228ef42c0cd4"}, "f7ecb880-bbde-4d52-b082-be47d9c0c932": {"doc_hash": "d6ee2f26c5febd5dd88362d5cb3adbffc16334c58124a6caa0725cfd51a78da0", "ref_doc_id": "8546289a-22cb-4456-978d-ade35ec2c7f7"}, "c1b5908d-69c5-4715-af02-034076d4fa59": {"doc_hash": "fa11a3619e91c04769c57aa597908c552ab0546575d064ddcae2a048d5f6bb33", "ref_doc_id": "8546289a-22cb-4456-978d-ade35ec2c7f7"}, "f139cac1-ee59-4f5f-96ea-3449cfb71c35": {"doc_hash": "1d79948046c592c364085f0c112dad769ea769a75cda8d692d370a2b6190ef01", "ref_doc_id": "b4ef13f8-6316-4d8d-ad33-b85f67b88a73"}, "bab92b7f-d609-4675-9e37-f727b7f7a223": {"doc_hash": "964ca44153f2155cafb136caa3fae1e9200ce2b5d9c00b1992b9114721c60f31", "ref_doc_id": "98c2f212-2e85-4a2a-ba5e-7f2865a4c2d6"}, "a3933f77-9c67-4c35-9715-2b3ef2819d0d": {"doc_hash": "5ea23bbbd4adc4ee59d76dcff60595654d7c0ec8115be158c85c83e2d2b484d3", "ref_doc_id": "98c2f212-2e85-4a2a-ba5e-7f2865a4c2d6"}, "bef9d154-3336-4583-a64a-3d2766ff3691": {"doc_hash": "1e9a7dfba6d6fe9b0d1bdb31c5efd7be486de8facafca4a72f6ca3752107899e", "ref_doc_id": "618e8839-629c-44a6-aa4d-320a6d08ae71"}, "6da33626-2f46-468b-8c32-b0901c5dd36d": {"doc_hash": "84f8047c873d8306500af9778d5c7bb2450859b9b17e3e30f810a95b6d14cbfe", "ref_doc_id": "ff702a23-c773-4af9-aa85-9d32e2641de0"}, "a065238b-f945-4e8a-a7d6-d3894fce4433": {"doc_hash": "361551048d20b01d4b5f2f8b6093bd769d87df778e6f51cfa866fb1958f11df9", "ref_doc_id": "ff702a23-c773-4af9-aa85-9d32e2641de0"}, "d13658c4-63e5-49cc-a707-488a8e0eb1c5": {"doc_hash": "0622e3fcde166310a4828daaea98d1ea5ec08d0b169e0639f8ed6ca1bae0e095", "ref_doc_id": "46a7ac91-7a0d-46c3-b13a-fd529634e344"}, "fb25cf23-4874-4b20-aca0-274edb31e358": {"doc_hash": "a6f4a52d24954315035943c98fad0589703e07c94d23408ec52847cc5e730816", "ref_doc_id": "082b069f-4f88-49bc-9aed-5e7a723505d3"}, "2483c03e-db60-4860-a3f6-eab291acfe65": {"doc_hash": "4c1324b41b5e732affe5b10736aa02168c62d00eef1518edfa9a64e973bac1e1", "ref_doc_id": "8b5f1d7d-9c5e-4902-8d96-74e800e9bcf5"}, "549f2983-992f-49c6-a5a7-ec9e641bdbc5": {"doc_hash": "bd0baba4dc0a37bb95a4e4f1649212877b02b9fb31c4ba7631d420d69eb047b6", "ref_doc_id": "0c489a46-39c8-427f-a590-69735b422f3b"}, "e8f2533b-709d-44ee-bd5c-88672607fa43": {"doc_hash": "889ce6306ef583eb91c46c307829c2b5ac4c3afe654c0f94e407acd777648dc7", "ref_doc_id": "1c014fde-f8c6-415e-afb0-bacd8e98976c"}, "705b1dc8-36ac-4cf1-b342-5e3a52e7c746": {"doc_hash": "6d88231cf973ee6c4d67a27ebae1b8bb070d5a3a99b78f81d15d8c4916a31eda", "ref_doc_id": "f52d607a-95fd-4d07-91ad-c3e423b06282"}, "c2a44b57-974a-45b5-941d-5903838b7436": {"doc_hash": "bc1caf29fb380d925c454cf670a4e4e94397ab078763cef5744aa6186ed6db2e", "ref_doc_id": "37b7e384-57e2-4e31-97cc-a05e39068a57"}, "b21f27e0-bed9-4893-9967-7381d0a100b4": {"doc_hash": "335bf9effa245b0a93478e595b08ebceaa457c61833f3e4f9a2668d788210863", "ref_doc_id": "37b7e384-57e2-4e31-97cc-a05e39068a57"}, "0b869a26-8455-4991-bd4b-fad054b7a673": {"doc_hash": "87e96e1bc5a76a01c4f8b549fe18a3fa8e25137117a7b215989f2e9a8cc7a9b1", "ref_doc_id": "25b0b13c-8c8c-4b8d-9a4f-e566c3afd7b5"}, "8acba6a6-ce5f-44c9-a0dd-e0ca58e7daa1": {"doc_hash": "0dc4cdc9a139ffe975b5a4346e05a7c48a5c8facbe276733ee120de9ed660237", "ref_doc_id": "25b0b13c-8c8c-4b8d-9a4f-e566c3afd7b5"}, "f9b04b26-0b5f-4954-93a0-4a7a4f5d95b9": {"doc_hash": "2066b3f3f332443815245637121d3717ac3e5b1e5a02d84d63dfcd5e660453be", "ref_doc_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef"}, "850a41ac-491d-4773-843f-dc0db49d6a09": {"doc_hash": "c15763bc78dd9ad9f1c7ee1de9418adadc41747b01c0aed4949e837a988250c7", "ref_doc_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef"}, "62783a11-ea60-414f-9061-bc1ad5a2b51f": {"doc_hash": "3d629061b64ada1ae7e2e76457da80ba6633811a4ed85511bb68d9a9b1d03f68", "ref_doc_id": "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef"}, "d50be52a-d3f2-4d94-9d4a-7717623feea4": {"doc_hash": "0363e147fccf98e75b73409f2fce9aa130a1d6fe838aef14a965e8fd4c204c53", "ref_doc_id": "b6ececde-910a-448a-a576-108b6e563a83"}, "37b028ff-5f0f-47a6-8d0c-b7bbbb16bea6": {"doc_hash": "27fb3aee87ae607edafecaf52ba084694ce61f0449ae529c7cedddde32f0a86f", "ref_doc_id": "b6ececde-910a-448a-a576-108b6e563a83"}, "06bb4562-bb06-409c-bd39-935c351b481d": {"doc_hash": "4167465622a93f2a11234547959e8f891b6a96f68be5d6321c8937c006e2d741", "ref_doc_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7"}, "79e99097-97c6-4883-a99a-837de733d052": {"doc_hash": "3e412f9cf3f458f1deedfc33bbcf73f8124351716dc76d041846955ad1f53f13", "ref_doc_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7"}, "1cb14f03-5239-4c00-af66-b685e094db4f": {"doc_hash": "67118a6e6200604d04d179a13b61f053ecaffdf523d094a844f433953026a9ea", "ref_doc_id": "efb0540e-dd7b-4eed-95a9-3b982d1339c7"}, "aba78512-b47a-41b9-8362-2488056959d7": {"doc_hash": "a4650372ebf299a7508d831ede862665ceec30ac39218e3c61520dd9be63bdca", "ref_doc_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475"}, "15993fae-0909-4cde-8f2f-acd9162afffa": {"doc_hash": "1166d5c4ed4e1f41a10fbdfd110a074595067a6d80140f0cea775430aaaaaf77", "ref_doc_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475"}, "aacc8a2f-2ca8-4e7b-8c99-012c2af56e4d": {"doc_hash": "f833ba0883b663ea61b6435711f868d05e6a7f04f3fb44e5970c771764c5ede1", "ref_doc_id": "ac4f480b-b3e0-4467-af6c-75ad1c74b475"}, "dc88ebe8-c84d-4b31-982d-6f9a965a2d17": {"doc_hash": "cf22afa0d3e8ec0948a433ed99064894e2db4350242fa840e75f2b5878e5914a", "ref_doc_id": "040f6da8-e162-4b79-9088-dcc53e09cf22"}, "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6": {"doc_hash": "0a571df3340be70958846281d4e95aa64be134c8d7c9331e3013ec8c4cf78fe7", "ref_doc_id": "040f6da8-e162-4b79-9088-dcc53e09cf22"}, "0836e195-60f1-4787-a830-cba0129553f0": {"doc_hash": "a9a279863fb8dec7617d2d2aa3c5b32c431b21d3bf739729601e7411acb2e7d9", "ref_doc_id": "040f6da8-e162-4b79-9088-dcc53e09cf22"}, "1911fcb0-86d8-45cd-8e1f-743fd8e29dac": {"doc_hash": "45e9c56f3e74cef6d98ddedf00d356a9c6ba6b5509161319268badb444e8530d", "ref_doc_id": "523b424c-a557-4d8c-b915-605f882474bf"}, "7070bebd-8fe0-4fe6-98e2-7bc5272e3307": {"doc_hash": "3a3be09075139f80db519fcc85acdaceacef62a00bec89eabe98e55f3892af3b", "ref_doc_id": "523b424c-a557-4d8c-b915-605f882474bf"}, "57be5665-06ff-429d-8394-ac01dfe81e40": {"doc_hash": "ed77e6cb2a8986149a6126c4624cf57019ad96da87e837e46167fe005fd3f275", "ref_doc_id": "523b424c-a557-4d8c-b915-605f882474bf"}, "e1da7b85-11a2-4f63-b4c0-cf47289787da": {"doc_hash": "d84c24611803b812ce2872e7050121fb56f76af1dc55c781c41ed747b1110837", "ref_doc_id": "523b424c-a557-4d8c-b915-605f882474bf"}, "ba9fa39c-3176-4b9f-9495-96cbf1007f75": {"doc_hash": "4e129cfd9709511e44574eb94d422048ae17f43a426514597256f2eae25180a0", "ref_doc_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7"}, "4a4ab598-ea36-4036-99d6-844aca8686e1": {"doc_hash": "2812727f6b676c48ba2169529aff51f1e70529e6ce689a051131883685210050", "ref_doc_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7"}, "4181f138-d340-4f45-b866-d200b95e3e67": {"doc_hash": "3d4693e3b8a1c39ec0746f5d49daed4b705f5e490679edd04bb5dc994d2ff5a2", "ref_doc_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7"}, "672c6587-298b-41ea-bc48-4249aa34d0dd": {"doc_hash": "0078df2f31359fd588435795a4d1d789211b348c821bf867cd0cc46b166adfab", "ref_doc_id": "64432a0c-fe20-4f3f-b362-df09d3e0eef7"}, "5fcc6e78-e4ba-4fe5-99f8-617d18bb02cc": {"doc_hash": "7f73310d687b7a0cd90c64056e3a1437442085355700c679d2f5326cabf455fb", "ref_doc_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce"}, "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11": {"doc_hash": "da74bb3d809da5fee53a7ab6826f2cddc0d7c8e8dc80836b737df53ef0c10b9c", "ref_doc_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce"}, "0a54780c-b2b6-4d62-b54e-d3f0a62db851": {"doc_hash": "7e36ea4bfc54dbd2387077f23963af4370b907256017624f740520c378a6ad90", "ref_doc_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce"}, "0f4292ec-9ef3-4730-9d57-9b23cf5ebc24": {"doc_hash": "6cc09ea62c141e4cbfc4c76940e2f1ca8029a23964c2abdf5eec6e848fe72b27", "ref_doc_id": "a96b5f6f-e533-48ff-8ac1-17e18047e8ce"}, "7e98a10b-cb2a-42b3-8d31-b4c472ff0590": {"doc_hash": "04b25e5573b3193da9f27ded2509a48027dd7131e1f2f0b0932968a03f57003e", "ref_doc_id": "564633f6-2b2b-4c6b-979e-353c2674de49"}, "baf0b178-86b1-42d1-bdf7-22a139904ade": {"doc_hash": "e73f7187686723306d08de208f5f1f60e1a86d2d94d7678773c43d3f75e87183", "ref_doc_id": "564633f6-2b2b-4c6b-979e-353c2674de49"}, "5e632426-ff4e-4cec-99ba-6240eed52bde": {"doc_hash": "d6233575f816537c2a56f2ac8434321d0ae53b11928b2c8fc45e757d1fa30bb8", "ref_doc_id": "564633f6-2b2b-4c6b-979e-353c2674de49"}, "f5950ca1-5d03-4f48-b111-d75a891f1ecb": {"doc_hash": "c653e2f59cffce2deb62b70222ac9093393413bb16f407eea7eccccf7d46fcd6", "ref_doc_id": "564633f6-2b2b-4c6b-979e-353c2674de49"}, "b5301235-217a-41b3-8356-9d91f9da00db": {"doc_hash": "3f5598d031ee147758934f40c0b3b2c00f2e08eb975f45eee2c3b8c7f1699d66", "ref_doc_id": "855b058d-1941-4905-a8e7-aa8498b380d8"}, "7fe929ca-2720-41b7-b3f1-97f8b040fec1": {"doc_hash": "0a6cab34d635c963e51758eb9d2ad042d69b37c203dcdc08dc9bb3122670096b", "ref_doc_id": "855b058d-1941-4905-a8e7-aa8498b380d8"}, "8ec3e0ad-a912-434c-8177-6e85e76402b4": {"doc_hash": "17093a184646b81584d84a6af3c7d3ec28e8f07dfaa356f23a9c7da3ddf762bd", "ref_doc_id": "855b058d-1941-4905-a8e7-aa8498b380d8"}, "56141d5f-946b-4857-a9ae-41e697bcfb51": {"doc_hash": "acba33b4bd27e2ebf411c30312f1de9ad81504968a1f33266d9b3cbb1a66ae7a", "ref_doc_id": "855b058d-1941-4905-a8e7-aa8498b380d8"}, "82f268b1-da76-4828-b1c1-8fd4b935f1ee": {"doc_hash": "e5e4d9212e7cc4c0c1d3507120394ca66e9a4c8b133741d9ca9778a3348a5f0e", "ref_doc_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf"}, "9d7c0f1c-2232-4a52-bd62-c8c13c06e326": {"doc_hash": "4ba0d9a377ad1e9a9ec81a1a1cb6007dfcbe0afc587b53b08af7d74124795c28", "ref_doc_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf"}, "c9c23c32-deb0-436e-b4dd-36d2733ec24b": {"doc_hash": "98d3dee0ac8b2cb57b208fbfd0d9a2d271a8415b79aad043deaabc1c429cca26", "ref_doc_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf"}, "cb64d5fd-d2fc-4ff0-8898-7e551df9383c": {"doc_hash": "4a6b563a5193c13f57b475b336efbade1a47c554b50cc0a762df4b36783e4fba", "ref_doc_id": "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf"}, "4c8e2dfc-5b06-41cd-acff-5ea27e92f81f": {"doc_hash": "2b026fa4fad93e26adba66be5e98c61075c01dd15eb2bc87bb52efd662856694", "ref_doc_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a"}, "560d5e23-6de0-4fa6-9504-e0986030994e": {"doc_hash": "31b8349d3eb09b27a0621eb58d68ecd0c8396495d69c79bfda895ffd8d466614", "ref_doc_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a"}, "df12bce3-6ece-4140-9594-78f6539cd4e1": {"doc_hash": "17d0b6bcd8855f58e1bd06c2c582e3b970ba27f054d0fa224e611c9491d85aa8", "ref_doc_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a"}, "ce051b6b-1203-4f8a-840e-6ca60fdd1c5a": {"doc_hash": "2a18b4a119b4610370b2596cd89491a7f85c43e221c89fdeba7ab42eb6c55f83", "ref_doc_id": "7a0e5738-73d7-48df-b06b-f0d2c68c471a"}, "346c52ec-826c-4db7-90bd-5d7fddd4dcfa": {"doc_hash": "1cf536f683cffa1bd862e10cb8894e1dad2232124a5126dbedb0d16b1d4ff5be", "ref_doc_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf"}, "18534955-03bf-40ab-8d72-c6a1f1251ee7": {"doc_hash": "bee08160d88a73ccdfd449ca846b237244ac852235c9cba557e350cf07f3942d", "ref_doc_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf"}, "0714ac06-d4c9-4b00-82f8-57621bbcdacc": {"doc_hash": "e57612b7dce898b7d1febb335cb065b6b7403baf0a23648630987b23461e0e42", "ref_doc_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf"}, "4b7fe5a5-059d-49b3-acf9-62f9bf0fb437": {"doc_hash": "8ca58a3de31a4231bdcbefaaa36f1c460ea5e8743fad2f340b25a6255c16f606", "ref_doc_id": "cd2118a4-3b09-477d-9e59-5e2ff1d319bf"}, "1081ff39-016a-4517-a222-572d0f6e2262": {"doc_hash": "57e3456b1b88c1f5498c48d46124b5af6e16d07c1c513507ead6a09356179e0c", "ref_doc_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7"}, "04a57b08-5113-4084-893e-9424d0995730": {"doc_hash": "ee72aaddb2efb87ad5a67dc26d61363470e3755a43dec5cc74e822f3e3ced48e", "ref_doc_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7"}, "75df3b7c-0020-4873-8acf-4e7173cc4374": {"doc_hash": "38f659a62cd651c20d219c768ca53518f7fb599c56220eb52066002f6d04977c", "ref_doc_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7"}, "59186958-6921-440b-a239-1f94865dbbec": {"doc_hash": "85ad3f7ac30b6787fa7133423ce7a91b6476b24eb6e412389e02a666c7cd1f17", "ref_doc_id": "2c724e4d-989c-4c3e-b558-fdc81e2a13d7"}, "4c324da2-6f8a-4cd7-8ba0-2c3bb0ff71f7": {"doc_hash": "1ab9e5d9a641cf04ffbe303c3cd9070e496cac36ec68082f0f0b0e5141bdc5d1", "ref_doc_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d"}, "54af2640-d152-437c-b647-f840c2a7a494": {"doc_hash": "60998973867f3963e59d68c0d632771719d8a19f868978390973b73ed88e7b76", "ref_doc_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d"}, "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92": {"doc_hash": "3bda8d2e572c04cadfcc37cf190984db8fe72a6fc6ce7ab9accb05bef9eed747", "ref_doc_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d"}, "31c7bbdb-f3ec-44e3-b595-4bc945b919dd": {"doc_hash": "5458e294ecdade070705094f248183003769771dd98f5e32a779baa5ab3b3b45", "ref_doc_id": "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d"}, "d323752e-eae7-4e91-ad48-44bf45b96a3d": {"doc_hash": "6a07685433608576c181edf297dc6e6ed3f4ee43ad5eded4f5663314d9c7b5d1", "ref_doc_id": "19b7d1f7-86e2-49be-94f9-5420213f210c"}, "674e107d-e6fd-468d-ab8a-941168208699": {"doc_hash": "b86945e021d9c5943a2c9b6896fc75fd4c2e5d7aac317655c0b5b0d51da97ed7", "ref_doc_id": "19b7d1f7-86e2-49be-94f9-5420213f210c"}, "191940cb-9aad-4d15-a995-3ad3c4bf35dc": {"doc_hash": "ff139032b27f10ff4e95dafc7ca5305e574708848715abfd876987437cd8e988", "ref_doc_id": "19b7d1f7-86e2-49be-94f9-5420213f210c"}, "c1667837-84cb-4cc3-9a6c-eec2fb7f15a9": {"doc_hash": "b769833810de109c5b899d7fe4b15e77958905a1f5485582ac0be1f9a7513c13", "ref_doc_id": "19b7d1f7-86e2-49be-94f9-5420213f210c"}, "81d65d6d-fc11-426d-81ba-723749fea8b6": {"doc_hash": "5ddde93bdecb2b53620ecbac1fbc1fe99bced8f5bbbcb64195678083b22686ca", "ref_doc_id": "a8d91be3-1982-4936-a357-bd0e568bb2de"}, "3f3147b3-25c5-471e-b2f7-ff4b7304ee14": {"doc_hash": "787625c10abc03edbcbac498f722858cb193ca8e7a3eca3005145dd24f1467ee", "ref_doc_id": "a8d91be3-1982-4936-a357-bd0e568bb2de"}, "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4": {"doc_hash": "fbb99c146b6a2f17822e5f989d8f38d1c51163a9564156c7404fa04dcf788343", "ref_doc_id": "a8d91be3-1982-4936-a357-bd0e568bb2de"}, "045470f1-e054-4c03-a4be-e368180a5f80": {"doc_hash": "094bff8b2d326cc0af2edc4834d0f1f32235a1099e8c510e8c7c2c7bca63a680", "ref_doc_id": "a8d91be3-1982-4936-a357-bd0e568bb2de"}, "058c6872-bfe0-4651-b81f-90495a136769": {"doc_hash": "8f09d42d09d746225a7e85ffabdc9c4e8dbc1c17813be9ccd7916259effd55c1", "ref_doc_id": "95717486-af1a-4b93-a92f-606eff5a9eca"}, "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3": {"doc_hash": "481e4b201d4e3d5d4473ce4375922f3a5fa054ace9794d6619104cecacae9484", "ref_doc_id": "95717486-af1a-4b93-a92f-606eff5a9eca"}, "d6e4904c-0fab-42f7-afa1-4b1858ba0975": {"doc_hash": "89b37b7bf4b8c4350303e37d6652f6801a3e7fab4f3202ff1744c8bc3a803629", "ref_doc_id": "95717486-af1a-4b93-a92f-606eff5a9eca"}, "36ac6ad2-7f20-4d18-991e-52ad04e8ccae": {"doc_hash": "86cc7d5b812b6db4e6b54019c4cb80298be4e7e32ed8e54d1b058cf3ac8da741", "ref_doc_id": "95717486-af1a-4b93-a92f-606eff5a9eca"}, "e1c0acc5-17ac-46ca-bcd2-4b0201425281": {"doc_hash": "7be2cc3467b50614cd2fe117856661e2f1ef7d48ee2ee4595fc5a256f36062a5", "ref_doc_id": "d3a448ad-95b2-404c-ad53-476c33814281"}, "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89": {"doc_hash": "1e027eafe000b0430babba60e59c36435e1053bb55e340362604ba15a8875999", "ref_doc_id": "d3a448ad-95b2-404c-ad53-476c33814281"}, "7170e89c-1731-41da-b40e-8da602874f69": {"doc_hash": "281ea2dd5754556d27df7f6e02e14e7731b6b3c37295dc89b9692c0a60162fd0", "ref_doc_id": "d3a448ad-95b2-404c-ad53-476c33814281"}, "222e66de-c741-4784-b36c-9b1492306d0e": {"doc_hash": "d2e73697d00703383bf2504f9e53bf3639760e04a1d7fd5b37c43bff359a444b", "ref_doc_id": "d3a448ad-95b2-404c-ad53-476c33814281"}, "a51c2ded-fcc0-4cac-bc41-df1255f9de0a": {"doc_hash": "f492844c44e03e76068f8501f0c75ed934e7b42f238d6fb45f63d2b187492d8e", "ref_doc_id": "87185294-bfef-40dc-b947-6d84e1d29e71"}, "0b6ea739-7573-4f1d-a762-deb76892020c": {"doc_hash": "68c205ae02869ea8642216fb2248c8a5da6ca4947908b257ced17ee34a2b0ade", "ref_doc_id": "87185294-bfef-40dc-b947-6d84e1d29e71"}, "cfe17e86-1e41-4a36-9478-22903f8364ab": {"doc_hash": "fd2edbf859c35379d4ec0e899c6c8f35bf3c54982396651b33e08bdb944b9250", "ref_doc_id": "87185294-bfef-40dc-b947-6d84e1d29e71"}, "d070c60c-9a08-4e2f-aa0d-1639d771a6b6": {"doc_hash": "7a86d687e82526790f3c2bf8c05fde9ec4627c3a9c8f44191463bb02ee4d271b", "ref_doc_id": "d922510e-c2fb-46f8-b821-4311fbac943b"}, "80834199-94e7-4418-b9b3-cd90f6690103": {"doc_hash": "0fca1b7977ea82e9fea0a21fa556f6f93ac8d28ded55d499008ac8c4188c8cb1", "ref_doc_id": "d922510e-c2fb-46f8-b821-4311fbac943b"}, "b196c72b-a419-457a-a8be-c0e264d55261": {"doc_hash": "c5fec55f344f95a44129237abde4bd047440b246ff7b9a38201169f7b4ede51f", "ref_doc_id": "d922510e-c2fb-46f8-b821-4311fbac943b"}, "0fed7c31-6eb9-4f3b-b104-8f8dc13944b1": {"doc_hash": "6f3b227001ea47c5f05ed60f083ebe9b1376a858b28476765b38b85a47f2b94d", "ref_doc_id": "3fa810e3-4123-44c6-8ac9-44ad80ecf15f"}, "1c347f4c-629f-4a1a-90d8-5f44153635d4": {"doc_hash": "9f0b6abfc87cd71d67bf779fbe207bad0aea55be5a130f4414934624def0b208", "ref_doc_id": "3fa810e3-4123-44c6-8ac9-44ad80ecf15f"}, "92edf8ec-81e5-42f8-912d-7ceb7a799a5c": {"doc_hash": "26a17007c40dab16ef934ac2af48ae210bdf7ac31025687de07a6e14470fe55f", "ref_doc_id": "822a7d88-2c9c-4559-ac21-22e929caa41d"}, "a94c88c4-63ac-429a-87c9-c48af0448fe8": {"doc_hash": "f076c2f60bd42e66f5cacc067bc5ac4478811280506dc41fe623c7bc08626fb2", "ref_doc_id": "822a7d88-2c9c-4559-ac21-22e929caa41d"}, "62a0847f-ba67-4372-ba2a-6b46cadb6c4a": {"doc_hash": "4d1886b40e29612495bee5ca370299d49d50534df9c9f6e405fe85bfbe88df35", "ref_doc_id": "86e1f3dc-e670-4dd4-8ce3-8d56c3f6a351"}, "94823d06-774a-4801-b8ec-5444910596d2": {"doc_hash": "f387fe5b22e81cd3cd87d17074f4e8e9d3db38aa2bd520006ff3f49c2151ec08", "ref_doc_id": "86e1f3dc-e670-4dd4-8ce3-8d56c3f6a351"}, "1e3ef1b9-169c-4cc2-9269-63ba52d4f6cd": {"doc_hash": "753620e07a9b246373da5a474a495d01580be786eab264243a097357045f8c99", "ref_doc_id": "703a5d70-d6b7-49d0-b837-1c8defd313c8"}, "ff3a3cec-a426-4c1b-98d7-38a112e8c5a8": {"doc_hash": "36ab3e72067b9e2c88d3de17f152864ccabd8d60c4ed975393ce6d05f126cc15", "ref_doc_id": "bd1c3ca8-4e9c-4919-b408-c9939b84580e"}, "569d9074-484e-49f6-8c10-12d6e70cb69d": {"doc_hash": "7472bf614dd354e6b645b71bcb8ba9b33dafe440a64e858dea1ac23456642637", "ref_doc_id": "bd1c3ca8-4e9c-4919-b408-c9939b84580e"}, "492b7e6f-1a3a-4ff4-99bf-e8b56c81db4a": {"doc_hash": "03287165c7c3652f91f18f1026a5e93e5dbccf784142de58f0cfec2397134ee7", "ref_doc_id": "ef780403-4c43-40eb-927c-99e01a0e3090"}, "b2bca3d1-a8a9-457a-87c1-d145f037266a": {"doc_hash": "b6d4b5b98b668ce814daf17ace4e09a5242696fc1e907897601eb0a27046a11c", "ref_doc_id": "ef780403-4c43-40eb-927c-99e01a0e3090"}, "ddc1a132-b45f-4334-afef-b6266938f3e8": {"doc_hash": "a96603ff78587a81d9a805d806df2b6c1844f283f734a8f1d24e5b2bf59b4d2a", "ref_doc_id": "6e9287e3-b6ca-4876-825f-57519634ccb8"}, "f05d4464-99aa-49d6-bc7f-586babff43bf": {"doc_hash": "248521eff277568907e58e21012f0202ce86a8d80216e6e342eec4f394a05cf8", "ref_doc_id": "6e9287e3-b6ca-4876-825f-57519634ccb8"}, "e1a01391-86c1-4aeb-84ed-7ba06d80800a": {"doc_hash": "7e2adc137bf560e4d1da409a7a5b673c7231076fca1fcf344a1b40dc151a6cf5", "ref_doc_id": "c8c0cbe1-0a0d-48e6-aa68-945b7c61dc62"}, "19f7ed07-3117-46b2-b559-1eb1d393be3d": {"doc_hash": "16a6b805da2784fffab75479d60b1b316678542eea168539862468ff6babc5ac", "ref_doc_id": "c8c0cbe1-0a0d-48e6-aa68-945b7c61dc62"}, "fb767130-e5b1-45fe-a306-6d3cdec78a91": {"doc_hash": "284a3c36011bed6f357dc80d2768f5e5e485345714c2c910538ca198b9f1522d", "ref_doc_id": "a9154b9c-1f4a-4905-8a75-7e2360c60da7"}, "301f18ab-dcaa-406e-91a3-aac0033684ab": {"doc_hash": "ebd867999cf19b7167bfc85ed46316c659539bbf10eb22ea18a2718e1b0cef24", "ref_doc_id": "a9154b9c-1f4a-4905-8a75-7e2360c60da7"}, "e4683200-e601-4501-8e10-dc03c1bd4bc6": {"doc_hash": "88dbaeb4790ac471ec4c7758649354bd9356635b7fa3217a72eb6abcab6c4457", "ref_doc_id": "0cb8e473-ad19-4e17-9b6e-75250ccca7ab"}, "9d79c11c-0595-4f0e-902d-384062630562": {"doc_hash": "787e1cf8a81e28a6ba765f39ec8a84780a3f8738f879e47ff4cc7470cf53716b", "ref_doc_id": "03e3b5ea-8690-4346-abf5-461c724b060c"}, "01a62911-3b8c-4e79-bf51-f51a6cba4ac6": {"doc_hash": "10af896bd8e7115b8c63c1ea3d891d8f81de07c7295c4a42f4ca7005ff95433e", "ref_doc_id": "03e3b5ea-8690-4346-abf5-461c724b060c"}, "8974a857-b8cd-4f5f-9d24-09376a6964da": {"doc_hash": "56f4c3cb522a2e8f2aa718f204253c185e47dc71cbd5db5abd1843296a0dbc7a", "ref_doc_id": "7c043f11-3af7-49da-83f6-40ba109a9f3a"}, "2e35237f-8a90-4602-91da-657f7f4e07bc": {"doc_hash": "7385e92be4976f0f1a461fd3f1a5d4758f42cffe16dfbcb610174406766167ae", "ref_doc_id": "cc9c2e74-d7e8-4b12-a107-43378825beed"}, "951a2ada-9c2f-4321-80a0-d002828ba775": {"doc_hash": "37968ec98e4aed16a0f933bc114c2091ead6821578b0482bd5daea9e245f6329", "ref_doc_id": "e1bd9e3a-d5ef-4f71-90ab-c5055aaf6b25"}, "f22a87bd-8604-4601-ad09-ab55698177bc": {"doc_hash": "0be14917724adef5d0d9eb86ac3d6fb6e165daf700ca8c5d388941ba9b957675", "ref_doc_id": "4b89ebe0-2aaf-4283-97f6-f02e6995c2f0"}, "9c68fd1c-c38d-462e-8e18-45236ff31d25": {"doc_hash": "05ae74684165ef9a5f79913ea4c90f3b4ef25a44e039eccd68194696b69fea91", "ref_doc_id": "9e6c018e-150d-4199-b37b-867d3a952835"}, "79d9b640-e14e-4926-a563-ef8ba32a1c9e": {"doc_hash": "c5c98e74a7ad42ac4ece1c0f8a80752419e2d0e3812c9a15d125ef601504a563", "ref_doc_id": "9e6c018e-150d-4199-b37b-867d3a952835"}, "d88f6c25-624b-4de1-9fa0-49d90f4e9685": {"doc_hash": "31b2afc84a014efbea227062524242af3d895cbccbe4b70842e1a89a75bebab2", "ref_doc_id": "996015b3-fae0-43c8-9289-71ceed422f3c"}, "2d9fc9ee-aa04-420e-89a5-bb27eb05364e": {"doc_hash": "01f047b802961e6b2359c4c6da3fa4abfeb8c6737074958bdadc264316e3083d", "ref_doc_id": "bfd69bdb-448a-4d6a-b936-c615adfc4437"}, "ce5bd309-7598-4b17-ae33-f6bc5628c6d4": {"doc_hash": "76d7061531ae0d1997088ec934c2a06abab3a360a5d96f35d8cc1c7671aace35", "ref_doc_id": "bfd69bdb-448a-4d6a-b936-c615adfc4437"}, "277892c6-cc78-4675-bf11-8ecb291eb876": {"doc_hash": "37f580ef9c3a5b1f387e339964fac965564646100902720907286f4fba9804b8", "ref_doc_id": "b8446e10-4d5d-46c1-b6b0-dcfd9a007b54"}, "52f0549d-02d4-4060-b68c-fa5dc47e33c4": {"doc_hash": "1a2d588ba7824287e2ad0ee8a0ce39c7faaf81cf4ba9c48ff3571d753cb30ad3", "ref_doc_id": "b8446e10-4d5d-46c1-b6b0-dcfd9a007b54"}, "a4b9622d-f5d2-4e4c-931b-cf8b543599b6": {"doc_hash": "65972370ceeceb4d1408478e2f94b68138264b97ddafbde990bb546cfae87c65", "ref_doc_id": "09aa8432-afc3-4f13-834c-b674ef4d7386"}, "6a03d138-6607-4aa7-8b30-23babb45171f": {"doc_hash": "edf95a69eadd098e755a29eeb3dc3d874eaef9dc33125c135db189d84cbd5f4a", "ref_doc_id": "09aa8432-afc3-4f13-834c-b674ef4d7386"}, "1feba834-c277-40c0-8d74-f4c1585766e0": {"doc_hash": "2cd19fac8a7db45fca0cacd5352b5c6f90e576e33055100c7dc53ffaa6932d39", "ref_doc_id": "f31feff2-2766-471b-bb07-c4e15c84f2c8"}, "053b196a-bf9f-4d57-971d-8a894f807221": {"doc_hash": "ab71cdb815694568c231b40488a7a13dc92880413e3584e000ac6491b096812a", "ref_doc_id": "f31feff2-2766-471b-bb07-c4e15c84f2c8"}, "63c2598b-4d39-419d-8591-42c78a2377fc": {"doc_hash": "9f5c85d1a771d60e87416dc6ba7eebcd3dac151a2078e30b3a487c56a38d036b", "ref_doc_id": "55dbbfde-8dde-4f0c-b755-31de5cfb713c"}, "ad7dae62-ee71-491b-9467-4f935c4711c1": {"doc_hash": "0c7fdc373d06b59eaaca47464db7c61331964f5d623797c12d5fa470ad2a515a", "ref_doc_id": "55dbbfde-8dde-4f0c-b755-31de5cfb713c"}, "307b75fb-552c-4039-b080-980123165029": {"doc_hash": "af1b3718e57418a8f36d9e0b7229a1e47aa4f5c0020616543d0bf1ad6d29b9e5", "ref_doc_id": "62c0f547-5d79-4ba1-bafe-dac454538580"}, "25ef4110-e668-46e6-a609-762f435a2e86": {"doc_hash": "45183ba0ba03b43b70e6d004df07480c02474531abe697e9a06fcefb49bca9cb", "ref_doc_id": "607ae8d8-c9ca-43dd-8276-d45f3e353ab5"}, "fe85ef80-e81b-4fd5-b5c4-3cf725bf0c1d": {"doc_hash": "c4745b5c65cdd42762f1a8b08e1c08583b51d697406518ce1e79a7f7bf944d19", "ref_doc_id": "ce2033fc-a5f4-4545-8073-a4fbffb53468"}, "d241d8cf-e2a0-4b2c-b1a0-9b4e2e61f075": {"doc_hash": "1eb41b5e52b1d65657868209b35b60d9cc4042b56a4f775bed4ec0844881bf96", "ref_doc_id": "7555c572-2098-4efd-a172-c576a90d9830"}, "fc519cb4-3ebd-4d04-8a05-6ed6aa535010": {"doc_hash": "f77722499e0b7bd01d12e8805e4b078ead5d981b7ee3d5fe1486f93b6e18752a", "ref_doc_id": "2ff2fd65-6208-4b61-8cf0-55816a6a2d5a"}, "37eb174e-cc27-4e14-b091-0bfab082643a": {"doc_hash": "b875eb17b6955904a8bc0f0c4e9e9ce30f14255dd18f21bc67012b14f7f0ebcf", "ref_doc_id": "863f98db-a335-4270-b23e-99613c971906"}, "ee21d4a3-2ee8-4c4f-8eb6-6b5ce235a834": {"doc_hash": "c20fdaf3ac97fb464a640b1e80f2e73aed418e20f338115b3381558991b9df3b", "ref_doc_id": "863f98db-a335-4270-b23e-99613c971906"}, "65b957ba-1f36-4edc-b5ef-26d07ce72054": {"doc_hash": "bab6058720c5abfbad13c044623f3f98c02e66b991447af9f3bf1bd5c651f97a", "ref_doc_id": "9f937a09-b9d3-49eb-afc3-77f25c268668"}, "319953bf-8172-44f6-b6c8-487055118a38": {"doc_hash": "b2c6419ee9702d30b7582ef3f73f854f96b2bfc4d059094b70c42d81213ac389", "ref_doc_id": "00de9ba6-772d-4931-aa5a-10dce405dd02"}, "44255134-a96f-4fc0-b1ef-e9c7e0923845": {"doc_hash": "7c867240bcff4da7260984425f6fb9db90592e0e579bc168e482feee3be0f5d1", "ref_doc_id": "00de9ba6-772d-4931-aa5a-10dce405dd02"}, "626a9f62-b5e7-4294-8dfc-e8553013547e": {"doc_hash": "0003c0171017bc6c4abf4694284147ffd04a932c161c8e57bd0804b6a93d38dc", "ref_doc_id": "b741f0cb-a641-4783-be36-e7f1a26a57bf"}, "0b7b5ddc-24c5-45eb-aee5-b96bd1fe5230": {"doc_hash": "dfdff12b86048c25b64ea0c8225cc0ae0e9a5e8845d7fe688c982960612ed97c", "ref_doc_id": "65647689-9302-4330-bf54-7a4397fe8f4c"}, "4704fcab-2bbe-4c5b-8285-797a9a433ec7": {"doc_hash": "599e98c48b181bb0e373e60208370098841510992c949699f37b71dbda15473c", "ref_doc_id": "11f6ab73-4fff-4721-9cbd-409cf941e33f"}, "69e9eaf6-f921-40a7-998c-495d85e0eea4": {"doc_hash": "6634a258380cc8dd64368a89c4e896bfe34c4d1990f74d421ca345376a24ae6c", "ref_doc_id": "ddf422db-304a-425e-9d1a-44b695295e5a"}, "b688e63f-1143-43a2-8c1d-786660573ade": {"doc_hash": "2bf2e61122a8f7f7f5aba0035b3630c56f74882ce56dbd12b0c62e536ee502b4", "ref_doc_id": "94a87df3-8407-44bd-ac6f-73e0885a57b3"}, "5ae44566-351a-4a17-a2e5-cebd3a279e3e": {"doc_hash": "8bd471ee169ed1b40500c8902caefb17865c07026b32068f2e9544ce805c3744", "ref_doc_id": "413e8ab2-0040-47a5-8542-762bf4cdb0fa"}, "7d7337fa-d1f2-4397-b6c0-2f8607eb1ecd": {"doc_hash": "8f60419e5e23589d6d70c2d44d77e5a140911d89f6192d0864d0ab86fde85da9", "ref_doc_id": "dc976877-e90b-4dd3-a317-f6649c1e80b2"}, "29e06953-a9b8-4157-aaae-5236a67cb88e": {"doc_hash": "8726b02d892fcef1d461a673b1e6d7f33d98d45dc4d977e05ea176028f4fc01a", "ref_doc_id": "3889fb77-de69-4178-a179-957e018cd49e"}, "987b3ab0-db03-4a71-91bd-1576f06fb0c2": {"doc_hash": "52a550bef620c780af13e31cd2f10df3a3b8bee10927aee5209706d30f420b39", "ref_doc_id": "4b13a69f-152a-43cc-8c2c-0269cf3782fb"}, "910198d7-ca88-4583-8a50-99bf495ee42d": {"doc_hash": "7eea210b53b136a7d52356313c0eeb2731b8e26bc52d4e6b59e51fea2ed41e24", "ref_doc_id": "2859100b-c12b-428e-8179-5446ec72b79e"}, "d5c26315-da6a-4295-8d2f-6f0181b2197f": {"doc_hash": "8f4f28ba6899eec7dd5a84b128625745861e1ce1b987e75b7829f6d4491df534", "ref_doc_id": "8f62c61e-7c00-4f44-9b95-1db2fae5e730"}, "1ebd6568-4890-4d2f-a82a-43256b2f14b5": {"doc_hash": "b7fb665173343c21ae113428d740dc923d209ed805823c6b82f4efa34f27b82e", "ref_doc_id": "a188e631-adb8-47c4-ac1f-e0d0c34ee3a9"}, "6df930df-68ad-431c-9d6f-4bb33ebd45ec": {"doc_hash": "b55ce3fa839cfe10d6c1f66459fc1115740bd827102d4dc8e607f367cb54eafa", "ref_doc_id": "a188e631-adb8-47c4-ac1f-e0d0c34ee3a9"}, "efac6625-c88a-4631-b478-74cc39b00b92": {"doc_hash": "78584f1a8a30d35481666bad2a166311f88f9b7c939b8d68ebc30b141b59725f", "ref_doc_id": "5def114f-dffb-4f3b-a5ba-5e6b5f7081ff"}, "1beaaa49-25ac-45ec-8d23-c7eb3d275426": {"doc_hash": "5cb6f360133e743a994363bebbf941d6768b27ad1d9626953106dff090c6aed2", "ref_doc_id": "5def114f-dffb-4f3b-a5ba-5e6b5f7081ff"}, "2f28b51b-c7cc-4378-9e5b-38487538b9f1": {"doc_hash": "c1cc825c34484e0a642ff43652cc150f7d26b9559308ec4de6dc47cc209ef350", "ref_doc_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7"}, "da7e3020-ea30-4d75-825a-f016f30a64f2": {"doc_hash": "53ec09f8158bf5ad1cbab0f01580f8cb2ed79d613dd3dc374e94253b0e7642a1", "ref_doc_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7"}, "611eb08b-f4e5-44bb-aec3-a73f4d75370f": {"doc_hash": "388b9458ac122bebfd4d1b15a3ca9ea1a05f1ca6d8f1d21b811f12df236deb21", "ref_doc_id": "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7"}, "57e56554-1eb7-4f64-90b7-fe0859f58cbf": {"doc_hash": "3eb45ec7d52a59181b33631589b7f4b2674342a838903fe5c124fcafe4a85682", "ref_doc_id": "a21e7d2a-309b-475f-909b-a0c9324a7c65"}, "75d0d4db-8435-4926-b785-6044b999c06e": {"doc_hash": "41e9889216b342d04cdfdb98049604082dce659c00dc9f1d7308b43bb28b9c40", "ref_doc_id": "a21e7d2a-309b-475f-909b-a0c9324a7c65"}, "feda77a3-cb4c-411a-ac04-a64b2cf51bda": {"doc_hash": "dd6fe5c81f58f0982a50e04926ef2d1c1d93c811f64b86be15c2ba359577e507", "ref_doc_id": "2f3b20aa-4f55-4be3-95ac-c0ed92573c96"}, "50a6ec46-f2c8-49ed-b349-ef934969253f": {"doc_hash": "33209d650d03eec75060d408b9176b2edfbfc8241cb0a6f3c04e1c6418c74e38", "ref_doc_id": "2f3b20aa-4f55-4be3-95ac-c0ed92573c96"}, "bba0ed14-b7e2-41e3-8d8a-20026fff8072": {"doc_hash": "3069dcf9bf2f09a2697a37ddc23d3099435150e3a19e0801ee3d565824cf09d5", "ref_doc_id": "d3d3eba5-62fc-4e32-b655-d1002c822730"}, "cc6145a9-7100-4c8f-aa30-b906f4f1727d": {"doc_hash": "8898ef28ad4a6ed229ac34816d194d736a4223d2bafcec3149856a7a3d5763d2", "ref_doc_id": "d3d3eba5-62fc-4e32-b655-d1002c822730"}, "eea871a8-fd5d-4998-aebf-9df5464d465a": {"doc_hash": "534fd08578392cf6fc2d4d76979beca2fb3725a37f03895a4d6ba6a54141f70f", "ref_doc_id": "6bb27cc1-09df-4b81-9d1d-c312b99de80c"}, "77a0051c-96d7-46c8-b102-ba8327a379a5": {"doc_hash": "d7c671d9245b061ef8fe0cd4644930cc484262e6102755abd2da6a4c49ea1ac2", "ref_doc_id": "6bb27cc1-09df-4b81-9d1d-c312b99de80c"}, "1b778797-4974-40c4-8e10-fca22bfd0a63": {"doc_hash": "b519ca96eae173582bed081a11afebb5d2937518511e9f2021aa403cec16e522", "ref_doc_id": "222502d3-e79d-470b-ab84-c483cf624e94"}, "39ec31a3-df66-42bb-81a7-a4cb3aa759f1": {"doc_hash": "adc7749ea33755ff48c258d83aca18a06fb3f211f14a45bff44e683436671e75", "ref_doc_id": "222502d3-e79d-470b-ab84-c483cf624e94"}, "3e56af11-9175-4dab-a1c9-fa5547598f68": {"doc_hash": "c6b8c9bafb47dd80b1a352c46188ad6eaf8998463bbb178433c3e741cf937fe1", "ref_doc_id": "222502d3-e79d-470b-ab84-c483cf624e94"}, "1e5b0c8f-4fc3-4e68-a760-c77a7be91c99": {"doc_hash": "545d3350befc8fa25b5097ce3f521a56ffc81c5106311c05230a3f73ecc81ec2", "ref_doc_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3"}, "f958cbf5-2359-4250-9f21-247a4c1539d5": {"doc_hash": "0aaad3750f04596ebedf2eb44d840b8a520af9c8ea145ccb249169d7845a9ee8", "ref_doc_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3"}, "d8499007-1aee-4a9a-9140-6989c295aafa": {"doc_hash": "8c2874a5a5ef155ed9def3ef64f177e6b501a12359bf8658edf04663e84786ed", "ref_doc_id": "e8337ffd-3633-47aa-afb7-63d7f7808ca3"}, "d8747a04-ece6-463e-9ad3-c159654e1ca6": {"doc_hash": "9f06b356bb03d83ab27faedc3aea9fdd34041cec9d8b66ee95a851248460835d", "ref_doc_id": "047a76c0-ef5b-4d44-b414-85a3cf16917d"}, "b92a0646-982f-496a-a9e8-77eea9a7cd48": {"doc_hash": "d7717b112cbfe7b34e3c5de835690055f3cd0e5dd98fa9144c8f45c35d773ca3", "ref_doc_id": "047a76c0-ef5b-4d44-b414-85a3cf16917d"}, "1780a61c-7a45-49bf-aafa-66e6d5351c54": {"doc_hash": "53f895769508b3bd992e3b84920d8dec952a9a76db2b6b72f314d204cff0c6fd", "ref_doc_id": "89639ce0-e0f2-4dc2-a92f-734e12d54d9b"}, "1078d8a1-2de8-4392-97c4-8bf50eb6b20c": {"doc_hash": "3ab30921f52c4f3fb10ef44657e70aac9d6cff19bff56cb427f7b54dcf7202d9", "ref_doc_id": "89639ce0-e0f2-4dc2-a92f-734e12d54d9b"}, "072928e6-a73c-4949-8517-d8d5f6f89d40": {"doc_hash": "cdbafa39c2318a87706e928384897d12464f4931ab30815061a828080c1a67fa", "ref_doc_id": "60eb91f6-0e9a-4a15-9ff9-c3399964c63a"}, "9bbb746e-b284-4e3c-b6f2-8ccf4cd082a9": {"doc_hash": "58aedde1ee153562044a2f2137db0720defb91447af74933415a691b20052e94", "ref_doc_id": "60eb91f6-0e9a-4a15-9ff9-c3399964c63a"}, "fdb1c1c8-0af2-4b3e-9300-7dd9d7ad0152": {"doc_hash": "c8e54ed8ec141a28b3f85e7121ed8343b84abdc2f01a49f76d342bd425891239", "ref_doc_id": "5447a6e0-5f19-48aa-aa06-d7ecd3cc1b08"}, "270f35d1-37d8-412e-ac37-4dd6944f64c1": {"doc_hash": "45f7d76e72b36f814a76c932a15edaa10d91984354ffd4d5810ae7a6667534ae", "ref_doc_id": "5447a6e0-5f19-48aa-aa06-d7ecd3cc1b08"}, "dbfebcab-1814-4cc1-9db8-9f0f458c60f4": {"doc_hash": "30d0599339a4ed2c55673ea2903be6a2013b7cca374f68a8bf68bbb85d2e264b", "ref_doc_id": "91235c5d-dbfd-4455-a6f0-0bb49b630309"}, "8141e2ff-b9c3-4b1f-9cda-ff22a70de7aa": {"doc_hash": "ae615a42b19eb3224d9a01b9d5ac726bf1f3a6f5fec85d61e99798497e219e6d", "ref_doc_id": "5e0b16c1-16d2-42cb-bb56-d5824a6d3aaa"}, "a2c9f3fd-b113-4c2b-b650-9bc861c7729c": {"doc_hash": "c7d38a8890e5d166249f22e544d44814e30316e06065eb341521f894227de13e", "ref_doc_id": "374d2791-dae4-4d17-8272-a6176a3d8946"}, "bc7608cd-abb3-4a03-a3dc-aae713d29f16": {"doc_hash": "4a43d695cea1c015286ccfe9478dc6878d16bfdce9c184ee9f740c6f7616e73a", "ref_doc_id": "aa1c0843-cf7c-48be-8091-bab726bc7294"}, "3b2c7a68-be64-4420-8221-a769bf7c271d": {"doc_hash": "302b447f0ca05c24a752f63ba45505ee171b4b195529452fb5053d4ecd88b5aa", "ref_doc_id": "aa1c0843-cf7c-48be-8091-bab726bc7294"}, "dbcd19f6-6dc8-46bc-a0f1-e241aa1ea4dd": {"doc_hash": "3058849c458b107fa54bc81357a66a4a54a7f7d9d6fea54613cef63de01a0810", "ref_doc_id": "aa1c0843-cf7c-48be-8091-bab726bc7294"}, "0c65a97a-103c-4b60-82fa-c67db75feeac": {"doc_hash": "723e51c09d834bd36a14c615edc3d33bea51ed07c6ad5e4f4340dd6cc1b2a7db", "ref_doc_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c"}, "bafd0336-b6b6-49fd-a859-839b68d23d61": {"doc_hash": "4694988b7de4bc22fedd6ec0b0bdfdb4529d94efc0c7044bfa79203028f0b7db", "ref_doc_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c"}, "60d33b36-1dbf-45bd-b445-ca61e9ce2202": {"doc_hash": "672e14967cfb58bc06e896f6eaad39d437bcffc80b899c5e3c5d15a425c63e39", "ref_doc_id": "f617efa1-ab0e-4e53-8d14-01fa94a8058c"}, "7d372479-4a75-4239-be54-3cb7518e5a82": {"doc_hash": "33e377e95b697631f539892074f2695824f3e4214f0b67d58357b1eb89528138", "ref_doc_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a"}, "91bfaaad-08c0-4533-bd61-f86487e6a757": {"doc_hash": "b3b595e1782f749c50a3a0aab9b1b7dc0f6a71fd08a2fdd84eb006d6a50efa77", "ref_doc_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a"}, "818259d7-a1fd-4e90-9746-9152db6276f1": {"doc_hash": "eba6573622b651e3794a88624641fe4b1ae24b4a31b49c0edbb8b2deb97d6d6b", "ref_doc_id": "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a"}, "4a23abd4-056a-402b-a0cc-7a19b59821a1": {"doc_hash": "3856f2d0841154372e8e4ac95e459863b88e5983ab584b64415d697053008722", "ref_doc_id": "e79facfe-8dc6-4f2f-a3cc-66211f19b471"}, "be7c2ec1-2153-489b-95b1-51a0610fa82d": {"doc_hash": "0ae77c95661ed65a6ea48db723f9bf6179b28288659e7374694d79c292bec776", "ref_doc_id": "1ddbae92-cce9-43a6-acd2-2d306bcc033e"}, "5caa32ac-bcac-4fe6-bf8f-2b80482e7d76": {"doc_hash": "67d5d944c08f9d99e6388a56aad342c638ff37311a4fec7225e758b042397b97", "ref_doc_id": "caad82f0-9b43-436e-9dfb-ecdae8daacf7"}, "4d504789-8a55-423a-9848-9a9c6f221e0f": {"doc_hash": "0bb895c39bbc19b47b00c42b0f64cdbade25b882ece55b1144c1927298629e44", "ref_doc_id": "3b5451e7-b742-408a-87f2-1d94327d2115"}, "c43a4165-4cea-4c3f-a0f9-ec3ad5b4fea7": {"doc_hash": "deacf6e31c3c5d7a45c9fb4d908d6d4a9033fc91dbbd93dd07a866891bc13866", "ref_doc_id": "e60f7e1e-e362-415d-b6b1-df50fd2c4873"}, "b532a8f7-7512-4a2b-8804-35473f8b3441": {"doc_hash": "e96919fe624bb60c3b7d708f0f0c303ab49b34d959e7ca7250da7c73292f757a", "ref_doc_id": "cd2dddf6-bca3-4127-9a1c-8297d88577ba"}, "511716d0-facb-4224-b2d8-e4a83bf32243": {"doc_hash": "d0d766f533b1297d648aae961bf7a2090369438d70a2a00c77638f9a375139a2", "ref_doc_id": "c417eb2e-15d3-452b-8e6a-579aec027362"}, "3b8025e3-be9b-4684-9cb7-6634e1d3c346": {"doc_hash": "065acab26d7112ef170897c4360da69f062c5cbdbe7762e65331da59bcbe6af9", "ref_doc_id": "881d5b9e-eb7f-4a8e-8c8f-6f2c88824943"}, "5c0a3657-d982-4654-ae95-b304af30d6fc": {"doc_hash": "53788ee4e04a2cbe33b1739cb351d70115fb32782dfe274dc430ebaec0616daa", "ref_doc_id": "239de56c-f8a0-4f85-8f6c-cfaf0f264230"}, "6c2f251b-9cda-4d77-a037-07974de14784": {"doc_hash": "058f820aa8b6d38f6f9d2141be8d87453d7f5f102ed41c989bf5655587549cb5", "ref_doc_id": "1d255750-9bee-4c0a-9fcb-8676f8420860"}, "f6295624-6cad-4e98-bbed-0c4c59c59230": {"doc_hash": "600aafed4827dfdbd62037199fc935b701c0a3ef351deed24e75ab6b09365bf2", "ref_doc_id": "1d255750-9bee-4c0a-9fcb-8676f8420860"}, "8b4787bf-b813-43ba-8a4d-54ad246fda1e": {"doc_hash": "e168321427b3308ac56ffb0ffb7b4a770b38b79e1e3cbdb0abec2ca4731cd619", "ref_doc_id": "1d255750-9bee-4c0a-9fcb-8676f8420860"}, "b6ca832f-dbf8-44f1-a1b8-5d3765bd618e": {"doc_hash": "f854d67e3c5f62f7cc85d8f9e93aff433cf6f9bfc58dc20d3161c028a932454f", "ref_doc_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a"}, "75f90425-973e-4bde-85b6-a405660b6635": {"doc_hash": "9a75a1d7c5049107ca41c6487e1c6f0d77b36a127bfef593b9fe96f539c5b0e8", "ref_doc_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a"}, "17f680ea-2fa3-4c30-a19d-11f1bfa3be91": {"doc_hash": "227074b735051201864b3a16abf388f556df98bbf4e631c9599298731f8858b6", "ref_doc_id": "cf63458b-2b0f-4868-8436-9fa20f512a5a"}, "c07d6017-5215-4565-9185-59d023be6e5f": {"doc_hash": "ec135f6d1cfe2e92ad6500256b272617de524dbd838e4ea50de38c7f6c927449", "ref_doc_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f"}, "3f58e112-ee72-4c8c-b261-72d53f56726e": {"doc_hash": "18364f0f6c0f48c29ba04fa5e3aba441a10369df25bbb4d8a11fc383a8196408", "ref_doc_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f"}, "0e974654-3965-4489-bace-4490558bb080": {"doc_hash": "1a1697be62c7be9db77f3bcdda5a6921a969217e9698e1ffbc8d115c9fb7495c", "ref_doc_id": "77ca8632-b6b9-43bf-82f5-9b274ba6db9f"}, "fe2415d8-d12e-4ee8-aab5-69034d3b5c9b": {"doc_hash": "f46989c45d788149c7a11266a53ca84f1373d276e994730af0feee789b813ce6", "ref_doc_id": "7fc2cadb-a624-43ba-859a-0aa00444a5cc"}, "75ee5e8a-550c-43b8-9841-2a3a29b71323": {"doc_hash": "ba9cc134de8387362634c13744f73b57d93e7554c0d598d195a7e50208fcd333", "ref_doc_id": "7fc2cadb-a624-43ba-859a-0aa00444a5cc"}, "96af0f6b-7c3a-42d5-9875-bd43edd96055": {"doc_hash": "42691b816af15e39ad47df48345accc86bf40d10919bc2589dfb0edee95b24ca", "ref_doc_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428"}, "6dfbc82e-c9b0-4997-922b-cb47732576aa": {"doc_hash": "61815300279ffd9d3b84b0d38aab68baacc12a3162503b69db29909761c5361e", "ref_doc_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428"}, "653c954d-a9d8-4e92-96b0-77bcfff55ed9": {"doc_hash": "ff166f0cb7c7c2f737477cf8c552471262afd8b4921564fe4aa68024c1b4bc80", "ref_doc_id": "ff18f242-69aa-49f5-9a6e-8f02cd310428"}, "963f2ca7-4e33-4acb-bb40-6ada598b797f": {"doc_hash": "b3959a153e7406a71c62bca48c12611da949ad72b90e848c7178b3088d740620", "ref_doc_id": "e6789132-8c1a-4d2b-927c-6cbd9caa85fb"}, "a3f0d9d6-d81a-4a74-8fa4-6ce125ec7a9d": {"doc_hash": "7670edae0313b1b72bd16c044f303aaa63ec3890a4c5985b4e8b72c6928ffe27", "ref_doc_id": "e6789132-8c1a-4d2b-927c-6cbd9caa85fb"}}, "docstore/ref_doc_info": {"23d12095-5494-4dc1-9d73-217ec8fc0f52": {"node_ids": ["53bf41f3-452a-4212-baaf-3b8bee4b8383"], "metadata": {"page_label": "1", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "40fe008c-53c6-47ed-bdfc-9b7337d66b35": {"node_ids": ["bf472390-5c76-4df6-8192-720b22c4ac79", "4f9a555e-ee8f-4408-9f8e-4afa8019aac8"], "metadata": {"page_label": "2", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b7363acf-e953-4ff5-86ef-82a4644634f5": {"node_ids": ["0044bce3-b99a-48b7-a64d-288ff9cebb1d", "1de97c50-8be7-40e3-aa94-7ff83fa95f8b"], "metadata": {"page_label": "3", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5a256c6f-d494-4c94-8d41-bc605e4d637f": {"node_ids": ["266ad9e8-5bca-4ee3-b536-dad1cbd85f62"], "metadata": {"page_label": "4", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "92b752d1-30a5-4c36-a678-42d978cb2b92": {"node_ids": ["75090174-3c37-4ef1-adab-3c357a83894d", "c637f05a-9b3b-46a1-b485-de5d5360eab0", "f1d6b171-8509-4b20-a93f-5a12299c761d", "71f21173-a84d-4f81-b281-552fb842e33b"], "metadata": {"page_label": "5", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2c48ae2e-4cad-4915-8f69-1c2cf897baef": {"node_ids": ["8b72111d-4720-4778-9b20-251913652806", "d4209acf-feb9-4bc3-8ef7-08a5ef8794db", "4dc6be8a-2e80-4e17-aa8b-1fafd81096d7", "903cd9a0-f243-4829-aed8-53204c571b03"], "metadata": {"page_label": "6", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "41cbfd8c-8429-44b4-b05d-9e398c09f7df": {"node_ids": ["f6ec7f7c-e29e-4807-988f-7c7544f89d44", "5c151aaa-624c-4d43-bb76-2497ee6d8a85", "71fec814-20b3-4531-9c4a-2834fcd1cab8", "4b2c079b-ec45-4b2a-9508-c5fd1dd8307e"], "metadata": {"page_label": "7", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "794b4324-268d-45a0-9c68-70b1f052249b": {"node_ids": ["258b7e56-3de0-40c4-9838-afc5d496d970", "20a04aa2-4767-4e81-bae8-40578cab27cb", "91b16fdf-df9a-4038-8c12-b7db61c7acf0", "ef1e1449-a49e-4518-a4af-d31cc9ea583b"], "metadata": {"page_label": "8", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7dabf9f5-ccd5-41ac-9938-0337b8960fb5": {"node_ids": ["a3e3e723-bcc1-47d2-953b-b80e3a304f12", "ff2574ca-dec7-46d1-b83b-de684c629ad8", "f7422710-ea6f-4dce-b24b-24cfa7952773", "0296452a-2101-436c-9798-e1f7a0037c30"], "metadata": {"page_label": "9", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "00d1cda2-e45e-4c46-8e06-e9adabe94885": {"node_ids": ["6186cb44-bad4-41cd-9a15-66c17ad91737", "086c77bb-7cee-45c9-add7-e398ed4311ae", "d50ba49a-79dd-4a0b-9aba-906102ac40ce", "c5525be1-bba8-43ca-ae22-bfd6b20d2ab3"], "metadata": {"page_label": "10", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f663f423-4c30-491e-a148-7bf3cc75e128": {"node_ids": ["7a362c72-7e9f-46b2-95ea-22a5ba53120d", "40de51ea-9f6e-4acf-9ce1-8a2bb6d3d2b8", "656baed6-63a2-4973-8217-5bffcc746821", "7ca8be7d-338b-42b6-b681-eee221b84493"], "metadata": {"page_label": "11", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5d7b863c-40dd-463a-9f5f-e8f1007eb14e": {"node_ids": ["5e0fd98a-ec7e-4178-a35e-182eabdbea21", "9c8290b6-df0c-4508-b2f7-d07cdf24a088", "54890e7d-d970-480c-90de-8f5bd37cd356"], "metadata": {"page_label": "12", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4f4bf0e2-dc53-42dd-b7b5-073419444ff0": {"node_ids": ["ccf36001-b186-47c4-90b6-be7d62619e5c", "7d1a829e-a7fa-42a6-8df8-dd0b227282d3"], "metadata": {"page_label": "13", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "32512d19-4b00-4786-92c1-c1b945618d7f": {"node_ids": ["c715d56b-191f-4cce-83a9-3763ea361110", "8a9190d7-cb06-44dc-a578-8fbb40aef3ff"], "metadata": {"page_label": "14", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6290aa2c-f659-49fe-9ca3-c625bb1438ea": {"node_ids": ["450e6967-e946-42ed-b197-0c8594c910c7"], "metadata": {"page_label": "15", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "908ef37a-c50f-46bb-adef-ff36f7511ff1": {"node_ids": ["0e7d6743-703c-49b2-845b-e767049a0112"], "metadata": {"page_label": "16", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "43b05f27-24de-497f-850e-c2143875d6b7": {"node_ids": ["3daf8d19-ac8e-404a-ba5b-8e7648f36d3d", "16e78e6f-4f02-46c1-9d90-cdc993c47940", "76cd7a76-0402-4cbd-b3ae-64654ad487f2"], "metadata": {"page_label": "17", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "21a3898a-f12a-4794-a946-4ee34c183643": {"node_ids": ["bf126563-33ff-4a1c-b53b-d6c1ea665da1", "0d45a013-155d-43c1-b2d9-b0168d860764", "e6231e58-bc8b-44ec-8fc8-44341cc3b14a"], "metadata": {"page_label": "18", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "08233cc1-2ce5-4b1e-af95-c878148353a2": {"node_ids": ["86505ad7-4e6d-407a-a1d2-d59403ad3556", "0e64f7b9-c96b-410e-9a2d-510def4bb0d9", "12296885-5b1a-4bc8-9f55-97433c1a5bf0"], "metadata": {"page_label": "19", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ab1e2836-d71e-4ef9-809a-4c4f22e8a0e5": {"node_ids": ["8e0684c0-625d-49b6-a914-5db9b1d4e101", "4bf08fb6-abb4-4c86-8352-f1f1aa0a5688", "c9248cf3-d502-44c9-8496-b90ac5a02817"], "metadata": {"page_label": "20", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "24c6e4fe-530d-45fc-b28d-53c622e9dfaf": {"node_ids": ["83fef36d-cc10-4535-9e86-5177bf77c137", "f198b342-56f4-4ca1-a61e-8ff7edbd7480", "3d95982f-3ccb-46ee-b574-24237710c1e6"], "metadata": {"page_label": "21", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "79df2d75-a1a4-488f-8e9f-2c72cccf5ba6": {"node_ids": ["c14c6f73-d36a-48db-840d-6743f61fd983", "392943af-341f-41c6-a778-1dbe790f1f51"], "metadata": {"page_label": "22", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9adfd97d-0fc6-4127-bc96-0e4890dc4782": {"node_ids": ["9c4f3d48-06b8-48e8-bb72-65fba0b0ee2b", "579c66b9-d1cf-4937-bbad-ea0cdb41c61e", "377a5ada-3fc8-49c4-a2a7-6d95e6c9cf2a"], "metadata": {"page_label": "23", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "593b56aa-e50f-46c1-8073-d7f991860c69": {"node_ids": ["6ad7cc27-28c8-4a79-b5f8-fe42d0d5f02c", "df82032b-a91b-465e-a7cc-b7a245b711f1", "91d0b10a-4b26-4ba2-b202-2ac977800a94"], "metadata": {"page_label": "24", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "75bcae47-1f76-4533-ab12-aeadc92bd995": {"node_ids": ["2d106a2d-ed94-4cfc-9c9e-115d4cf2dfc3", "03fc80b6-be2c-44ff-a04e-e3a870ccc7be", "94c8ce6e-4439-4b83-999c-ab5895693c03"], "metadata": {"page_label": "25", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "24e7fa0c-f784-4ead-8699-ce6204850d54": {"node_ids": ["14a0cc8d-80cb-4a8c-9028-d1266bda183c", "765d5187-5a1d-40d7-afd9-0443b29d5240", "47a391ae-874d-4eee-b669-bb7758b7a3d5"], "metadata": {"page_label": "26", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4764088b-fe2b-4b30-bbd1-f9e96606d9a8": {"node_ids": ["d2515558-dd2c-42bb-a49a-035b96fe7f4c", "e35f5fa1-01c8-4de2-80a9-e63266d1b7a7"], "metadata": {"page_label": "27", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "64f4fb18-b869-4677-bec2-b0344d985d20": {"node_ids": ["4a6c5ae0-1742-4e39-b8fd-a84850816ca2", "74c0b494-b40c-489e-82a7-85da3cf5892a"], "metadata": {"page_label": "28", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5bea4f7c-4ab9-4985-83cd-383c96ced389": {"node_ids": ["9a13fd38-7b38-461f-a123-2bd78f071214", "afa8196b-95f5-45b7-8edc-46e159b9a77e"], "metadata": {"page_label": "29", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a8f748c5-e7c2-48ee-8941-d57b63f0d234": {"node_ids": ["44adaf06-e8bb-400a-a156-84cfeea90bff", "77fc56da-5059-47ad-b2c7-6a483b2a0fd7"], "metadata": {"page_label": "30", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "24c93f16-dad4-4260-b6a8-a5cd60f261a8": {"node_ids": ["98c865bd-8b82-4514-926d-a5a4eda8c9bb", "11ce259d-43f2-47d3-8ec8-6bd8f918c0ae", "e45e8786-86bc-46a6-9e27-807828a42f90"], "metadata": {"page_label": "31", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "01369c3e-b9f1-4e03-a2db-fe8fffa7539e": {"node_ids": ["36f7ef5b-30ea-49ab-a6c5-e94d24ad668b", "a02ee002-f4e1-43d8-8a96-1823ac1cadd1", "8515cb0e-0ea9-4ff6-8954-e3a765b56bf4"], "metadata": {"page_label": "32", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7c0c4541-276b-4f3d-93a0-1edea3aa8580": {"node_ids": ["dbff4355-39e8-47dd-8f60-2c44f97445ce", "0b4e5e89-9392-4d64-a8fc-0e47545d2ab8", "c5f22c47-f9bc-4ba3-9d99-32da291f9fc3"], "metadata": {"page_label": "33", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3478e9ee-4fc9-46ef-828a-0d07bb86288d": {"node_ids": ["7ac17321-2398-49c3-8ad4-836be1dbde5b", "5c5e1b9e-60fd-4d5f-8d98-e0b6216da97f", "f69e0c80-4643-4ca2-bd70-817bd9941950"], "metadata": {"page_label": "34", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a2b05edd-4a24-48a5-a7aa-c0d5fee6f6de": {"node_ids": ["fb0b8114-1b87-4161-8e3c-9e7100c6f198", "9b3cd671-a3e1-4229-8c99-70d7c48f5e0e", "a4953c58-0a12-4cf8-b59e-d175bfd7315b"], "metadata": {"page_label": "35", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e6ea936b-62b9-4bff-bd61-43280dbf3061": {"node_ids": ["78c07387-484f-4c71-8472-98df5d64fdda", "cdd3225a-c868-4dc8-bb2b-5d1fdede40a0"], "metadata": {"page_label": "36", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1196481d-c98a-4dd7-acbe-416a593ac148": {"node_ids": ["305cb33c-21d1-43e9-a3f8-d801b2f2d2c8", "d682d670-af5a-47ba-ab7b-b862b421158b", "31dc2b7d-f313-424b-9da6-d6077a5df683"], "metadata": {"page_label": "37", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2022255a-bde6-4818-9325-b9f396edb043": {"node_ids": ["4ca029cb-150b-4694-9f18-2ffc8c186250", "ce640a28-3108-4b3d-afd8-3495e7073dbb"], "metadata": {"page_label": "38", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bcfb755b-b958-4cc8-b97d-231e5f5fd169": {"node_ids": ["c49d3d30-223a-460a-8999-6105b1e29408", "ba7b08d3-a8c5-4ef6-a0a7-d05aac62aa2e", "98848281-538c-4bb4-8b9e-df079994e3cf"], "metadata": {"page_label": "39", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "aec78c57-43e3-4618-8cfd-45cbdabae0b4": {"node_ids": ["b1cec0df-a2b0-4f39-8d00-2987fba5d005", "8dbccb6c-8829-4ec7-b228-b5cc36f13e4e"], "metadata": {"page_label": "40", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fb48588d-51c1-4fa3-9bf6-bf2456f5f318": {"node_ids": ["cda2cc47-2c5e-4996-af74-d02ad23fb162", "0fbb17fb-46ab-40f7-9581-e6b608124c23"], "metadata": {"page_label": "41", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4c12024f-4f17-462e-b46b-5c394949acca": {"node_ids": ["f1c7d8ed-4a2e-44c4-a139-28d4262e1415"], "metadata": {"page_label": "42", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "311c96b3-6dc5-4b37-8922-609126f3132e": {"node_ids": ["69445069-1300-4b56-b3cc-1225106eea99", "c321f11a-6fbf-493b-b668-31c45a9392d2", "707d8363-4c58-419b-bc35-26e9706cc16a"], "metadata": {"page_label": "43", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "06e5e280-d852-4b5f-910c-637ac3a0a938": {"node_ids": ["1d006e56-d3c9-4295-aec8-d288f06925a8", "1505259f-6e10-414e-862b-5713cdf28754", "cabb71c1-61e6-4106-b43b-6a3a94fe41d7"], "metadata": {"page_label": "44", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "98744e3c-0ffe-40b9-b36c-fc769785a068": {"node_ids": ["f3ae7623-8ccd-4941-a3a9-b7ef867328df", "01a70e21-7d61-4caf-9607-c264d6044c75", "9e0f8acc-c042-460a-a6b2-a8b78b6916b7"], "metadata": {"page_label": "45", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "833f8234-8abe-4ba2-ad44-316f42e4b104": {"node_ids": ["12bd91db-e6bd-4f91-be01-6d3e6c63dcd0", "135de2cf-a0a7-4e8f-8126-84c07a03c770", "d082fda5-fd23-44ec-a71d-6d2590a0d6e0"], "metadata": {"page_label": "46", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8d5a5784-e6ef-4d8a-98b0-6e46890f069d": {"node_ids": ["3609ee8e-144a-4f7b-8d56-c80a1d003afe", "98750ad1-899a-4e7e-ba94-20eb01bac3fa", "7c69d095-4aa5-4303-9365-624c4c4c884a"], "metadata": {"page_label": "47", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5e77ed84-971b-426f-bda3-61f7e9532626": {"node_ids": ["b3ebb17f-e94b-4aa4-b19a-8426ee72873b", "088e581f-85c9-4c7f-a6e9-47f69494d773", "f10a04ff-54a8-4845-8156-0c14bedfc2d9"], "metadata": {"page_label": "48", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e7ccdd1e-74f8-4478-ac54-f4315bd04c32": {"node_ids": ["d7df5b83-59d3-4c44-b5c8-e51191e9d2e5", "18a29e23-8309-48d6-b9f8-8b3a756cd854", "dd253342-4f9a-4571-b24b-1b8580531029"], "metadata": {"page_label": "49", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "53b8222b-b9cf-47a8-be90-cff719188640": {"node_ids": ["5b9a7327-79ba-4269-8ad0-143db0b2b441", "3e60225a-4904-4b4e-b6cf-20a71a424683", "253912bf-973a-4f5c-9f10-e706af5312a3"], "metadata": {"page_label": "50", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0e0d35c0-9cbb-4e61-8d59-cdc6b72b4feb": {"node_ids": ["2c2b90a2-7388-40a4-8856-8cbc9cfd732d", "6d3e660e-c78d-4f92-ba68-5a725b486553"], "metadata": {"page_label": "51", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f307ca91-ac27-45d7-b22c-1b99431135d5": {"node_ids": ["9a762e93-d847-4fee-8174-092eaaf04f15", "5c2d232d-3c81-43cd-bd99-46486b49df19"], "metadata": {"page_label": "52", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b92e5bc5-32f4-4545-b702-ed95196c6c5c": {"node_ids": ["84704abc-f5b7-445a-bc35-f0047c4a2f00", "cf721ced-9e2b-4ca0-8369-c690258bf35b", "c1847468-3f90-44d3-9174-2c4c0b2be703"], "metadata": {"page_label": "53", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "569818b3-cffa-4713-a187-bcea79695568": {"node_ids": ["f9d480bc-ac6b-4a06-8916-0ed7afc81c14", "a07a261a-2bb4-4e42-ab1e-d94471c9fee8"], "metadata": {"page_label": "54", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5a064895-f3c9-4808-ab79-103bc8b553d4": {"node_ids": ["4e60815f-54e4-4645-92ce-a3195a9f54b0", "88eeab28-ee1f-4c7d-8dd1-9813f0f4f247", "85336622-3b81-4b92-b412-626dd96168a9"], "metadata": {"page_label": "55", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ee675dc1-e8e7-492b-83c8-e4a48757f328": {"node_ids": ["84166803-206c-4cb8-94b1-edc180afabf6", "fdbf07a9-232a-460e-8494-113112583e22", "524d1c43-a6db-4f4e-8d0e-91f1b299575d"], "metadata": {"page_label": "56", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3a963ae3-330a-44df-b99e-4e9b571155fe": {"node_ids": ["5a75cdc2-a802-4a19-9173-f3ed02d184c3", "e396bc62-209f-4ed2-8703-3ee551782d47", "1fcc7fa3-3d15-41b8-a7ac-df99606b1dbf"], "metadata": {"page_label": "57", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6973ece1-a08b-43b1-9bba-5893762a10e6": {"node_ids": ["7f88655e-f3ac-4827-a01e-f70c448e5552", "3bf7c7d1-cdc2-479b-951a-0f96f1dcd34a"], "metadata": {"page_label": "58", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fe952172-5caf-4ebd-a9d6-6e9c38b1538c": {"node_ids": ["2a2871e6-5bf5-4947-b02b-a389ba5b2b1d"], "metadata": {"page_label": "59", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e53516f7-bb5a-416d-b06c-4fdf1d1c5825": {"node_ids": ["15af85a1-ae76-4a90-ba69-2626be4999fa", "05161677-6e60-4c6f-b117-2ad6b0b285f9", "d241c4cc-c10e-46e5-9745-106fd60cfce5"], "metadata": {"page_label": "60", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2eaa3724-3d41-49b5-8e58-12ce9434f6be": {"node_ids": ["04432928-5a20-422b-aa51-27c495f178b4", "e58056ef-bcc5-437f-98a8-701e3c254124"], "metadata": {"page_label": "61", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0bd560cb-05d6-4270-bc1f-eb1f891e464b": {"node_ids": ["d89acea1-7647-4879-bee1-98c8eeb7870b", "f4814d3d-8615-4bc9-8413-21db8e3d9696", "75fd92b1-b8f6-4041-8396-b20f6645ae6a"], "metadata": {"page_label": "62", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a5802a35-05e1-4dcf-b160-b13eb39f6910": {"node_ids": ["7bfa7abb-8fcf-439c-9c3c-4c540a24b754", "50fb184c-ecb8-4e47-a778-fb4358036ce2"], "metadata": {"page_label": "63", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "abcbbb41-6aa6-4384-a954-54e782116937": {"node_ids": ["41e0379d-5298-47a6-b88e-6bb84210084e", "982075c9-50d6-4bb8-bf3f-f8f7b9ada977"], "metadata": {"page_label": "64", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "63afd7a0-2212-475d-a3ca-62be5bee3de4": {"node_ids": ["36a60426-eedc-4d66-9a64-566a6273a98d", "41bb89f4-5f89-4835-95f2-aa3e5148e46d"], "metadata": {"page_label": "65", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2080a320-4179-40bb-842a-9c0903ad88b3": {"node_ids": ["c9e86f49-e9b6-4c3d-9726-24d61783565c", "3111054e-fdcb-4527-a214-a07cd5936527", "3068bab1-2b93-425e-a48f-b9e96183c573"], "metadata": {"page_label": "66", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b1c38257-179e-4213-ac89-7f82c6502517": {"node_ids": ["2655990a-d19e-45d1-9469-ca81c80c80f6", "215a06b8-a874-4cad-af08-4733556e867f", "d9bcbf03-27e4-4df1-ac28-89a5dab2e657"], "metadata": {"page_label": "67", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "05ce0b82-ef9a-490c-9405-601c46c2ff62": {"node_ids": ["bdff6f58-e1b9-401e-ac58-450e19067007", "ae2c6c99-b42b-4b39-a1aa-723e47cea682", "9248c451-833a-48d5-a4d4-6fc72a14c1cf"], "metadata": {"page_label": "68", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8a65c12c-a99b-40d3-9db8-bce2f8e6cdf4": {"node_ids": ["e7d83f9f-2e12-4b12-a45a-d40a68434e38", "48ae22d9-68b3-4c7f-855a-586146f490e0", "829be7fd-c7ba-42f7-8bf4-51bb11b812fd"], "metadata": {"page_label": "69", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9e262974-ee9f-492a-a794-5cd1bf50972e": {"node_ids": ["27302734-5021-45ee-8eea-7584bb59d288", "a4f83fe2-ae09-4750-81da-83ab942f21f2", "299e58de-46de-430b-b9db-e87ad56ccf3a"], "metadata": {"page_label": "70", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7cc59db6-4869-4f2f-b8e5-ab8d0c40a7b6": {"node_ids": ["1df2c793-0a6f-4473-b967-3346ff53f383", "0457547f-b5cf-495b-9af9-63e5140e0d09", "27d84622-9b52-4e64-a4e5-07017cd3f1eb"], "metadata": {"page_label": "71", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e6a7198b-f62d-4349-9240-e7ab7888122a": {"node_ids": ["7fa85137-7f34-4aa8-b1fb-ba1fbbe1963b", "140ddc32-1e79-40d3-a1a3-56de924e83b2", "f629b0be-5f4a-4c82-82a1-1cfc72240e49"], "metadata": {"page_label": "72", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "79528cad-cde0-411d-b1a4-7b42aff7d60f": {"node_ids": ["5d11edba-ea18-4bd7-9976-8c83dcbae78a", "72aa2711-db7e-4061-ae98-efda8b970bfd"], "metadata": {"page_label": "73", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d5b5f064-0c2c-43a5-8d28-14f171386095": {"node_ids": ["7de06d75-68b5-4082-a658-154f65b407f4", "4747856f-2007-4e23-908f-6224909878e4", "ed2475a8-734b-43eb-b215-f963e9d4611f"], "metadata": {"page_label": "74", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cf682347-a278-45ef-adde-c627a3564272": {"node_ids": ["461760cb-70a7-4fd1-a9db-db27ca193db0", "56f741d1-413b-471a-a1bf-e82c1b921cdf"], "metadata": {"page_label": "75", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5b509944-1d03-49a0-a4c4-09781bbdc385": {"node_ids": ["24aa729a-99e1-49df-88cb-912befa237af", "45bf727d-0730-4a1f-b3a3-0c1c873c2fab"], "metadata": {"page_label": "76", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ad53ed6a-5749-4ed7-8831-5fc332509e4e": {"node_ids": ["0c221451-8201-4c08-99c4-304999a527c0", "34d3898a-5c8c-4b2d-8f9d-9514d1bdead3", "5aa3b179-ae61-4a99-9d2c-a6f00681ccf1"], "metadata": {"page_label": "77", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "29d6156b-9fe0-48e4-b151-b22423846b47": {"node_ids": ["e96693b2-6e3b-4c10-a9e7-95aa3ca66f55", "0d0670bf-5b33-425a-ad02-b23de7a05c0b", "7d17772e-d222-4829-b32d-9fb1b869415a"], "metadata": {"page_label": "78", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "99a9535d-02bb-4140-92cd-a10d2a1654db": {"node_ids": ["e85a0f35-0808-4674-a533-97540fc31dec", "c0031d59-a62c-4993-a5b8-823104cc208a"], "metadata": {"page_label": "79", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "033f9051-4452-48d6-ba5c-2cf30cb3235c": {"node_ids": ["183e79e1-433d-4390-b4b4-b2197db392fd", "fa0c3897-d6ed-44d2-85d7-36f1d313246a"], "metadata": {"page_label": "80", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "38cd6045-a758-4735-82bb-225459cc76ee": {"node_ids": ["93aa3599-33f0-49eb-866f-b2e25e60ad01", "df940fd3-0b18-4a78-bf06-a8d65c422922", "282bafe0-723c-46c1-81ed-c5d6c9854999"], "metadata": {"page_label": "81", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "54bdc110-0d4c-4a54-8fcd-1ee7d48c3cbe": {"node_ids": ["fad1b8ee-881b-4ebd-b2d5-bdcd8aa629c5", "b047a9aa-ff56-4208-bff6-4fa756ca94fb", "f66b7df8-e3ee-4505-a023-f73fb7a9ed53"], "metadata": {"page_label": "82", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "734ec8ee-a25a-497b-9218-b70c189de4e3": {"node_ids": ["c3011061-df16-4446-9d53-966433b10dc4", "5d8acc0a-0d20-4862-9220-2404a0da4ad5", "2c880062-31d3-4e09-bee7-3fff90468af8"], "metadata": {"page_label": "83", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e0a7b4fb-8136-46ac-ae0e-4f4a66782022": {"node_ids": ["2073834d-f536-4833-ad59-f863ec0aef8d", "4d154734-b071-46e0-bb94-b26622a3ef7c", "62007527-e2b3-486a-9a12-5d565536440f"], "metadata": {"page_label": "84", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "59f7ea35-2bc0-4354-b3bc-767514a2366d": {"node_ids": ["9c107b52-f97c-442e-a2a3-dfe1aa6e703b", "3f661e17-8bc8-44ac-8d5d-ffe3a071296e", "003239ab-620b-41b1-903d-68265a69b7e7"], "metadata": {"page_label": "85", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b9cc6284-7170-47ed-89c3-a5c9b09044e2": {"node_ids": ["7685b032-465c-4619-925c-cf52ece4837b", "d0cac3f0-0153-446e-9f7a-146f42f69196", "67bbf578-2c5d-40b5-be0d-eb71d2326a28"], "metadata": {"page_label": "86", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b448c3b1-c3cf-4092-81c2-c51818539ad8": {"node_ids": ["642a1e57-460f-4958-83cd-a6c5dcfa09be", "f3615cbe-932f-4daa-b2f4-4b6d0d11580a"], "metadata": {"page_label": "87", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "37399807-0717-4acf-9a96-72e87cd2dae9": {"node_ids": ["e178afc5-d73a-4157-9cb8-5fcfdf0439f1", "74d5501f-65c9-45ae-b0a5-b6b597de34c8"], "metadata": {"page_label": "88", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b9062343-982e-4ed3-b6a5-bd86d9a96f14": {"node_ids": ["a7b0cdc9-c89b-426f-9c25-f763e99a39e5", "c444c0f4-d128-4b8c-9ee3-3ad703b03afc", "b2a0bfac-2f27-4149-8c49-83f389e544c9"], "metadata": {"page_label": "89", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5569b904-e479-4e7c-ae65-5dad142cab85": {"node_ids": ["99c450b3-16e7-4ea0-bbb4-ed2183f9aa82", "9adabfab-ba8d-478a-8efb-0b4a16c68388", "72bc99ac-2008-4a8b-8b0d-3b5aeae80977"], "metadata": {"page_label": "90", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1b041c9c-b8bb-48b3-8d59-d175e7b5e021": {"node_ids": ["2a38f6c9-cb6b-480f-be4b-f34085c0d9da", "3638be35-3e8b-4b3f-a513-e7d772f20eab", "96a2534c-45ae-4940-900c-210c0a85c377"], "metadata": {"page_label": "91", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9931a92f-9e59-42f3-a728-780def1247b1": {"node_ids": ["0b99078c-7f4b-48bb-892a-fc1ec83d77e9", "50df2fe1-dd92-4fcb-9bbf-2c36fc5523fa", "51b90cfb-ea71-43a8-a43e-41394e24a067"], "metadata": {"page_label": "92", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3413ea8d-7982-4109-80e0-96913437781b": {"node_ids": ["80ad94f2-061a-44ab-9292-172cfba3edec", "4a05607d-ed1f-49c9-930c-355a8da8a3c7", "0a443b5e-2299-4180-b305-c7d4d9f47e70"], "metadata": {"page_label": "93", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "501563dd-b689-4b9d-a1c5-d777d2a21dd0": {"node_ids": ["81649f77-7d35-45e6-af1f-640d12b1a031", "8963a3fc-d194-4082-8266-5685700d59af"], "metadata": {"page_label": "94", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7803d600-c2e5-4359-a8f7-26fa1e430dbd": {"node_ids": ["d3fc6bc1-571b-4936-bf72-442948650bbf", "71dbbbf4-2da8-4617-8e2d-2d134c5bf2d1"], "metadata": {"page_label": "95", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d9ea3e19-4a78-4ce2-92c8-b8c410365ea1": {"node_ids": ["e21c4c66-928f-4242-9fef-e03a4b8277a5", "8c14d1a8-05be-4974-a3a3-76c3d23d0d13"], "metadata": {"page_label": "96", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "150f6d3f-437c-4b8e-87bb-d0d5af0788be": {"node_ids": ["87828e2e-cae5-42a4-8e7e-a378062b72dc", "5b811e76-18ae-49f1-a688-3fc52bb00bb5", "242d91e7-0e84-447a-a511-ac8da51ece76"], "metadata": {"page_label": "97", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2e270caa-ed45-4469-949a-fd39edd36be6": {"node_ids": ["dd4ae17a-1871-4b0c-bc5a-3f4755422c25", "75dda0d5-7370-4244-b44b-7e4596586714", "e4dbd3dd-9bce-4972-8712-52587000a782"], "metadata": {"page_label": "98", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1d0b8f75-069e-48e5-9a57-12de676bcaad": {"node_ids": ["16cafb69-a998-4c26-aade-28f9dd006e79", "d22aac33-ee5a-4be7-8e4d-225e272c6c39", "d8ad95fc-0d71-4308-b6cc-87afe4118008"], "metadata": {"page_label": "99", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "094c6ac1-bd0b-4a82-ac68-8d7c9fae865c": {"node_ids": ["4bf30da7-e1ef-4d9f-a57a-88f8f240f406", "d06b23c9-bb5a-4eaa-bccb-ed3237060d7f"], "metadata": {"page_label": "100", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9daf359a-0691-4631-83ec-864032242595": {"node_ids": ["af7333b4-4a28-4232-90d5-0f19d04b8d04", "d0b2972c-c9ac-4109-b608-cff70d2fe359"], "metadata": {"page_label": "101", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "eaa0c961-9c47-4972-9b5c-706d22b3e3d6": {"node_ids": ["38195d40-2719-45dd-bdfb-28bf327e39d5", "8522c12d-36e6-4618-a970-3c6cf59fc592", "16250ed4-d518-4411-acf1-2324465e0960"], "metadata": {"page_label": "102", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "19bceb5b-40bd-47a5-9c32-a3e0aca7e468": {"node_ids": ["bfc9c5f8-0ab5-48c2-97e0-b96859150715", "6d890d02-c3b4-4c84-8138-46337a87f991", "3d5fd494-f66a-4397-abfd-bf89ccfabe62"], "metadata": {"page_label": "103", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "c59e764a-39e5-4004-a92d-33a5c6bfc2e5": {"node_ids": ["c6c775f8-c44a-4fad-8a6c-c8922406a985", "485ec083-4189-4610-a49f-9bf46026e888", "af101114-6d8f-4f73-bfa9-63e041d150f4", "74e7d57b-b19e-47b5-bdc5-1d90f447072f"], "metadata": {"page_label": "104", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "150cf30b-f370-4a8b-8a07-f32f0e12ba96": {"node_ids": ["dd070148-fcae-4038-8d3e-dd9d9d492d4e", "6c775314-cdf2-4d9d-afdb-74efd0936ec0"], "metadata": {"page_label": "105", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1993620f-4e63-4723-8697-725614a1e458": {"node_ids": ["5f35ccf0-b7d5-44f8-b40d-9709f11d5ce0", "e11717db-52d8-4880-b293-883ce900a9dd"], "metadata": {"page_label": "106", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f758155d-13b4-4df9-a44b-1e9f07dfb994": {"node_ids": ["3ff63954-d453-4f6d-a8a7-7cfc0f0edbcb", "733ab213-6668-48f9-9629-b94de514579a"], "metadata": {"page_label": "107", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "03a05338-d801-422b-9a7a-b05a81b85bc7": {"node_ids": ["c114f1df-ea3f-496c-9749-99e4cfc8356e", "3723ffa7-5af5-4654-a39a-e84038aa2241"], "metadata": {"page_label": "108", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "815ba303-bcad-4831-b9c5-e2d78985749a": {"node_ids": ["5abc906a-20a8-48ca-b34d-8d8293981f7f", "ac909690-6913-43f3-95b3-d2e277b5ae28"], "metadata": {"page_label": "109", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "01f6861f-ae8c-41fb-958d-11487bb3b509": {"node_ids": ["e2fef361-60ea-4db1-92de-0e885e1b13a8", "f5621613-626b-4b4d-8622-39e57422ea16", "b3a6b636-1527-4d3e-bb25-2acf8b247902"], "metadata": {"page_label": "110", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f9d6d2a9-22c4-4c62-84fc-de9f9a6c6d6e": {"node_ids": ["1e86c68c-6cd7-466c-8b45-9ffbe2c75139", "68cf5b1f-46ef-492a-94c3-d10ec84559f6", "4ef1b444-b2c9-4b86-80d9-50c3a864ab5f"], "metadata": {"page_label": "111", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "72971d80-bda9-4c0f-be03-786304d2a533": {"node_ids": ["8c77481a-758d-481d-9a84-b9c669135516", "32e6622b-d604-4968-b742-9e32703d0a00", "6bb7bce8-78ce-4177-84cc-e1a0c1f74e4c"], "metadata": {"page_label": "112", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d697fd96-59ce-48cb-bfd8-15e542ee4900": {"node_ids": ["5d49af94-5939-4a88-93a1-9aede3da405a", "f7c6278d-b606-4a51-87ee-4403ba8edaaa", "54b1bd4f-bf4d-4b0a-802d-460dba63d387"], "metadata": {"page_label": "113", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a7f39a5b-4f51-4253-83c4-c760b34dd41f": {"node_ids": ["560de637-836a-457e-8c21-c340365121c9", "9bf1d076-7cd1-4f91-8eed-dd24b0693293", "f97bdde2-039d-460c-8c8d-bbc3397589d8"], "metadata": {"page_label": "114", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a909af8f-b665-44c1-871b-f73188e2b459": {"node_ids": ["482d8b7c-3cc4-4437-b339-2583e104dde4", "535d3a85-d357-4f47-9ad9-e751e5f21e3b", "50f9b37d-1f81-429f-bb40-cb47eae0276a"], "metadata": {"page_label": "115", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a85e9ed6-1d8d-4222-9eee-e860dba90c60": {"node_ids": ["3b657296-4b59-466e-8392-e46994f1a607", "15008751-7e1c-436b-b55a-74d050369057", "d9c857a0-ad47-4503-8cca-e09c4d8b4654"], "metadata": {"page_label": "116", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bc6220ea-cc99-4367-80a0-0d5fe5f32b6d": {"node_ids": ["460c21e0-566e-4b6b-be52-4229f26299b0", "3309f929-249e-49fa-838a-1679d3ee2d75"], "metadata": {"page_label": "117", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cfee5237-28fb-4bc8-8c55-92553cc50e4b": {"node_ids": ["6b12f09a-2e4b-44a1-b7a9-97e1f3c0e6fe", "956a4dfc-06c0-42f1-89f5-0f8edea3d86d"], "metadata": {"page_label": "118", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "eecdca00-6afa-49ca-8f08-28fcb3424ee1": {"node_ids": ["f94d3504-320d-4c78-bba1-f7069b931c2c", "ac13e018-09a1-45c2-9a73-f5dcf126fa28"], "metadata": {"page_label": "119", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b65d4149-4418-4a59-bed4-c70a9b9c05c0": {"node_ids": ["41f82b24-bea7-491c-8020-418d308dd012", "39ec4bdc-8790-4758-bdcc-5d0c5831f16c", "28f5426c-4dab-4436-a684-17a9036047c9"], "metadata": {"page_label": "120", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b7b9f244-bb11-4a5b-88e5-2b690c553deb": {"node_ids": ["73a09d09-463c-4e37-94a3-ea5bfe969d7b", "f5ae0003-b92a-4440-aed5-4af9b2caa3be", "bfe95d98-a6df-4332-beb5-baa0cbca8b33"], "metadata": {"page_label": "121", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9c1678a3-9ec7-44f3-b91d-d325cf57acc1": {"node_ids": ["37018b8c-80ac-4e7d-9582-09259ae59e30", "a49d15ef-b120-4519-86e3-d71182b0b882", "212e6dbd-db28-4452-a89c-5b744f8aefe9"], "metadata": {"page_label": "122", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a0eff26c-8f49-466e-812d-a70cc68e866f": {"node_ids": ["5196474f-348a-42b5-bc16-8a4a9335af06", "23471b4b-fbc9-4d38-af70-2dc301b15a18"], "metadata": {"page_label": "123", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0f6a69ea-1806-4b0f-9e05-078f2fd24bae": {"node_ids": ["77a6bc4e-21c6-408c-aa43-91b9e785ac35", "15764751-f07b-4b10-9e1e-97051aba8fc0", "6ecde42a-4f02-49ee-b03a-972123c93fd1"], "metadata": {"page_label": "124", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "80dc0551-929e-4306-b3fe-3896c5db61e5": {"node_ids": ["dc0e25f6-8620-4c85-b3f9-25dde0278ef5", "651f8e31-9c08-4e44-9b17-2d6cb883addd"], "metadata": {"page_label": "125", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9bd832c3-2e07-423c-b73c-4e50f8ac0990": {"node_ids": ["4c3fa5fd-c6d7-4c98-be0b-4aa7897b968b", "508308cc-275c-4108-abea-342360614d2a", "cb0742f5-1959-480c-9338-52e6cf950458"], "metadata": {"page_label": "126", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "407cec08-52b6-43ea-ab39-acc3ec2a21bf": {"node_ids": ["727c2e15-680f-4752-90eb-aa1cb71e1a3c", "61bbd862-fd3f-42b4-b909-f65a8f152606", "83a18cc6-dc75-481e-b063-d52476ee3a47"], "metadata": {"page_label": "127", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "046d728a-70ff-4d2c-8de3-9f8fa7260521": {"node_ids": ["710c6f58-56ce-4511-a420-5e9e6b11e28a", "f44f41de-83e3-4c9e-b0e6-ddceab9c2d46", "8e3f858d-ed06-45d7-a5d2-cfce0a9a75e7"], "metadata": {"page_label": "128", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f57ee002-962a-45ab-9aa8-e237c6affa76": {"node_ids": ["281b4f0e-8b63-4224-af03-06ead4e7b15b", "16c5b8b7-1c96-4f73-8213-c2e4722948b7"], "metadata": {"page_label": "129", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "08e1b220-97da-4418-b2ba-6c614756a51b": {"node_ids": ["5f11309e-f8a2-43d4-be4b-7d0c0e1f5a65", "cfaaf32f-3c07-4fd9-b8ad-1ca2cb02ee3f", "1d4ba5c4-de80-4fc7-9d54-157b7b12f7df"], "metadata": {"page_label": "130", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "34bce83d-cbef-43d4-87f9-d2a891c87619": {"node_ids": ["04f0c3f6-7953-467f-a168-154a986cbafb", "e9fd09b1-00f5-4438-a08a-d51da6084c4c"], "metadata": {"page_label": "131", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b79276ec-2437-46cf-86b6-721af5fad0b4": {"node_ids": ["60e3204a-f1fa-4237-b3f3-666bb60b2fd1", "57c7b1cc-a073-4e1c-875e-4642bd47253d", "fc785764-e68b-4082-95ae-f657c2e12623"], "metadata": {"page_label": "132", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "43a19dca-e840-4abd-aece-1e151d154dd5": {"node_ids": ["cb7f84b5-cba9-4fc9-af28-dd90880a8e53", "f7a55646-92a8-4261-a541-a743cdbe0272"], "metadata": {"page_label": "133", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fbfdc6ed-4d1f-4681-bb58-86a62112d552": {"node_ids": ["3799d0d6-4ad6-47af-a7c3-9030bd76f9f2", "2c06a8d8-6d9c-4a79-bb4c-e6e200dd484d"], "metadata": {"page_label": "134", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1b5c198b-c0a5-4b97-af6c-92fdae4d89de": {"node_ids": ["3cb2610c-4102-4ceb-b581-ce098304992d", "4230780e-ff2e-4ed9-ac79-98204ccdc547", "9b8b93a4-16fc-4b2f-8599-e73c7f228e2c"], "metadata": {"page_label": "135", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2368af20-a76a-46d0-8a05-ddd70573838e": {"node_ids": ["91fa0c51-a152-4eba-8813-da86fb931f81", "fd7d02c5-03d9-442d-840c-389b6e8c27db"], "metadata": {"page_label": "136", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ae896505-27ba-4e9e-a29e-b6874c340e11": {"node_ids": ["47beb3b9-34a6-42f5-a94e-7dee46e2f589", "1133bdb8-9749-4b6b-b3d9-6d9bfdce613a"], "metadata": {"page_label": "137", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "faa5d4fc-141a-4633-977d-c7ecfaeefed4": {"node_ids": ["d408e380-c02e-4574-8529-abb87c89804c", "6d127561-63d0-4c00-bc25-b23457791406"], "metadata": {"page_label": "138", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6a377e3f-b8bd-46c5-b028-34a1fcb52988": {"node_ids": ["907c139f-b7e3-42d0-af7a-80a2c1ab3f52", "6a76793f-80af-4628-b347-49a7ee06faf0"], "metadata": {"page_label": "139", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d0a150b6-97a3-4967-8e1c-01afd59f4d4f": {"node_ids": ["2cf2fb18-fe61-4283-803a-2594e0b03b17", "c49d0500-7e80-420e-a280-3f9fe69d8198"], "metadata": {"page_label": "140", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f29b83d0-ef0a-4fb7-aa4e-067884cf8f80": {"node_ids": ["2cdada33-1d54-43f3-ba5e-bf1c0d772c1d", "c5d24a03-3e5e-4987-a66d-d3d050e60b5c"], "metadata": {"page_label": "141", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "585c42eb-7f7a-428d-a58e-dc262ddf7d70": {"node_ids": ["61452b86-2713-4dd8-9d19-faa904194cfd", "4c362495-7faf-4372-b8e1-367cab0c81a0"], "metadata": {"page_label": "142", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4cbffaa0-2ea8-49b6-879e-79cf0dfd23a9": {"node_ids": ["40dabc99-17f5-4982-adfb-7b6f3a3595ea", "5dd54b17-7527-4133-b082-38ce4287a62f"], "metadata": {"page_label": "143", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "98b3534e-47af-4e6e-9df0-b44500c743c1": {"node_ids": ["ef3b6ea0-f6e4-46ac-a2d8-02609b47b33e", "a038b144-ec86-4560-afb7-d94a93755a17"], "metadata": {"page_label": "144", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9e9d4dfb-d5ac-4a39-b7aa-824d45e630bc": {"node_ids": ["a6b1aed1-782c-41ed-b757-1e52be3b708f", "95e9c904-9e4b-49ce-951c-687e511f1b29"], "metadata": {"page_label": "145", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9e954b10-87f0-4905-aba1-8a6daf7ea88e": {"node_ids": ["db01a155-fbd1-4b21-8bfd-afe129128432", "c004831c-6037-4a70-8de6-3f97ced70eb5"], "metadata": {"page_label": "146", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "539fd4b2-0767-49be-8481-a71d2c016b5d": {"node_ids": ["4ef86e2e-9b78-457f-bf9b-afb2c8b4d55e", "62264394-d41f-4948-a207-28ba6875d467"], "metadata": {"page_label": "147", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4490db42-eefa-4d00-b7f0-0c8169722614": {"node_ids": ["7f33bd26-ec0d-41d8-b989-cdac52e09254", "06764239-581c-43d2-83cf-2251369e252f"], "metadata": {"page_label": "148", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "88a8fa14-d099-46f0-9b2e-d7046bb05185": {"node_ids": ["2d1c83a3-3012-4843-8865-36601fbfeefc", "38b4545e-f7b2-4dfd-b349-c604b153693b", "61edc0d5-8323-42b7-9d4f-f4893230381c"], "metadata": {"page_label": "149", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2c4c709a-dfd2-4cf9-8cfe-e4da8765e9f8": {"node_ids": ["5b10192e-cbb7-4c4f-b2fc-2dddc5cd19e7", "eaaa8346-89e2-49ed-8828-3a0153dfb05f"], "metadata": {"page_label": "150", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7f14d1a2-f136-465c-95ef-bde2c69b6d63": {"node_ids": ["190e6982-7264-4f3e-bc69-8d8e69dab527", "0ef28d87-2220-4d15-9b07-03f87958cf8b", "37534c5e-ad79-4f1f-80b8-7b1ca5237625"], "metadata": {"page_label": "151", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "dcdbd654-b340-4b01-804d-6c84d615fa8d": {"node_ids": ["11ce7bc0-6a66-4391-b220-92b58f54d2db", "a2700ebc-73f4-47f2-9be0-5da6cc685184"], "metadata": {"page_label": "152", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "abe808bb-5736-4620-9cdb-93b4fce9bd95": {"node_ids": ["6881237e-6022-4757-824a-327c84bee071", "ac7f9c2d-b46d-487b-8aeb-d58f2298b620"], "metadata": {"page_label": "153", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "45951905-fded-4332-9d80-63f460eff4b2": {"node_ids": ["7e907fe7-404f-4987-b6d9-b9b904da5697", "6bdcf5e1-dfef-48e8-9fbb-f01f3788bd80"], "metadata": {"page_label": "154", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b3ef261b-07fc-4b62-a916-b724b2f859c2": {"node_ids": ["28e4a364-d161-40e9-adf2-8f7217637584", "be00c1bf-f757-4fb1-a50d-10866ed0b0b3"], "metadata": {"page_label": "155", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "172f2bc1-2afd-4fca-809d-61610410f536": {"node_ids": ["aa2a5083-e125-40b8-b7a8-70889ef850aa", "04a8a4b8-6ad9-4a29-88fa-e9cdb8aab663", "61034220-4cf2-421f-a755-5167452ea91a"], "metadata": {"page_label": "156", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a5e7090e-560e-44a2-a4f5-bf6f850af51b": {"node_ids": ["5d302ae8-1813-4bc4-8984-aa6fa574d1d0", "af4e08e6-cb27-44df-8e38-81705f821f1c"], "metadata": {"page_label": "157", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "313fed82-cf8b-497f-a6e6-844ed9389016": {"node_ids": ["f22a8030-44c5-4d0d-81fe-684e25115ca9", "ccae7991-b698-409b-b6a1-89bce496bc17"], "metadata": {"page_label": "158", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "351829c6-203c-457f-805a-5cd94e118083": {"node_ids": ["381a91ec-4477-4125-bcd2-ddc8f08a0c3a", "0ce1b7ed-db2b-4e3f-9220-502a519ac331", "a1f54889-c0fe-4427-b8cb-f55fa31708a0"], "metadata": {"page_label": "159", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e0410865-d4f2-4559-9497-0003375965f8": {"node_ids": ["a0b5c042-5e83-442a-a09f-1dd58a3adfa5", "5fcd8455-5cba-4bbc-995e-0cb952ff0064"], "metadata": {"page_label": "160", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7f105346-ea7b-4859-ad91-ef0fa8d8076a": {"node_ids": ["8e478d03-88b6-420a-8d64-02d50db72179", "75c81eb6-8608-4e0e-91b9-7c716e344a62"], "metadata": {"page_label": "161", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "c307d7c6-14ae-43f2-99f9-e2075287efcb": {"node_ids": ["96e78378-cfb9-4372-bca5-996c32d397f2", "bca3487e-5a11-4de5-adf5-abf81d803e73", "393a1aed-b228-4dee-ac51-b5c22b08c4fe"], "metadata": {"page_label": "162", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0b09887a-3543-485c-9688-dbd8274e68d8": {"node_ids": ["d443c8ef-4948-4900-8579-5b81660a5aca", "d195006c-ebea-40a3-b83e-c279d81cfcef", "15ce7c61-5fe1-47f6-b4cf-1f37a24af453"], "metadata": {"page_label": "163", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "614f7563-ca2e-41e1-94e8-ee0c350cc6c9": {"node_ids": ["5587a118-5738-4d94-a872-09c7f6eba240", "6b874f0b-aa5e-4beb-b601-cca9db8fbc87", "5f8f1135-4c98-48a2-a0a7-1a42217a8278"], "metadata": {"page_label": "164", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "04b45b2b-d2f0-40dd-9e63-5174e44ead1f": {"node_ids": ["8ccd17d2-6c9e-420f-9f50-a4ec06011c7c", "0b5b65b3-98d7-4a6f-99c6-b4b0f1d00615"], "metadata": {"page_label": "165", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3eed6519-158a-4c58-a59f-3f2480df64b1": {"node_ids": ["8a784c41-0b68-4086-b5dc-a5dc3ba29801", "340482c2-4d52-447e-98a4-7fd213b6da24", "fe0ce4c5-cb3c-4a3a-b226-1783076e7aba"], "metadata": {"page_label": "166", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0c2b943e-9fe1-4806-9977-bb019a2f1e1a": {"node_ids": ["e712e84c-3d98-4a05-8153-7e8a0a0e3f94", "c7e065d9-a334-4715-8bf7-c9b5c450215f"], "metadata": {"page_label": "167", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d3cb2308-ad99-4db7-8b67-5f61797e1dc6": {"node_ids": ["5aec2c4f-c433-47b4-8a29-1abc29c895b7", "d7dd8068-9a85-4a1f-9527-1e2c1d98aa2f"], "metadata": {"page_label": "168", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ba7e3a8b-a15c-4da1-809b-5a6356010026": {"node_ids": ["d1a1de1c-33ed-4743-851c-7a5d0ff9aa63", "cb20a189-a306-406f-b50e-b616716b5678"], "metadata": {"page_label": "169", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e18da8e3-d25d-43ac-852e-7237342949f5": {"node_ids": ["25e133f4-bc70-46fe-a325-3b89401791db", "dad2166e-5b5b-4908-8ee6-7cf984132bff"], "metadata": {"page_label": "170", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "538fd650-3844-4c9c-ae10-98eb72b9780d": {"node_ids": ["708021d9-a6a7-4556-be6a-1b608c9d93b3", "9c7f8640-e545-4155-97a3-5d36f83cd8e1", "5bb90251-6edd-4733-94c8-0db8d9f70bf3"], "metadata": {"page_label": "171", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0d57da68-e01c-4593-918d-5c1cdc5d075c": {"node_ids": ["1e668eef-2e8b-4f4b-a848-b44095802037"], "metadata": {"page_label": "172", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7fea458a-ccbc-48d3-813a-e1fdd2c9c382": {"node_ids": ["c0c5d876-701c-405a-91d4-28b0d88ee4e8", "fbd3d3f5-018a-4f2e-bca4-6e7c01c5d789"], "metadata": {"page_label": "173", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e5766be6-b7e5-4705-974d-ce60bced9940": {"node_ids": ["e0bb481d-19b3-45ce-b51b-250593995d57", "b923529e-7157-4dca-ba76-0071d83cc16b"], "metadata": {"page_label": "174", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d89f8aa6-8af9-4f71-805a-11f3b184d30e": {"node_ids": ["53f3c914-a232-4d4d-8b96-c4cc1a10ff40", "d4a3014c-3ca6-44c2-b22b-5de08eb16140"], "metadata": {"page_label": "175", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6c9c18dc-348f-4a15-8505-e20ff908d468": {"node_ids": ["d33e3429-5da5-4850-bc21-5a1ccc3933d7", "d155fe7c-3247-4d20-bced-830577584bf0"], "metadata": {"page_label": "176", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cadad17f-b852-4a75-abc3-cabe61d756c3": {"node_ids": ["d906a0e4-fff5-4f89-9338-561cc63715db", "2ed248da-0ea9-437d-a79b-f9fc60ee7d1a"], "metadata": {"page_label": "177", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ae90e0e2-608f-428f-b8cc-91e8bda9a16d": {"node_ids": ["ddcdb0e2-e2c0-4664-b72b-012a5250046f", "5eec916a-d1aa-49a0-8d11-6c31073c2f01", "9a37b9c5-7eae-44f1-babe-e032a29cb509"], "metadata": {"page_label": "178", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0d8c963a-50db-4fed-bafe-71b0a36e434b": {"node_ids": ["ae7c7504-f6c5-428c-9266-d8b8878b2069", "7d953357-3c7b-4e07-a68b-9ed3b09393c1", "40af5aee-e74e-4b45-b444-c3bb98a818a7"], "metadata": {"page_label": "179", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6762426a-ef98-439e-ab85-8cb43e719a28": {"node_ids": ["4237b9f1-1c28-49aa-bd36-c14987589793", "09027ed3-5ba1-403f-b82b-2a494562416d"], "metadata": {"page_label": "180", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bcea66c2-5561-468d-8f0e-c241ef9b69c1": {"node_ids": ["a690025d-dbc3-472e-828b-5490e1997cc3", "03a01d85-96fc-4c73-8f23-6aab9a2367c7"], "metadata": {"page_label": "181", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "19bb7590-fab3-4376-b200-02003ed783d2": {"node_ids": ["d28b9f83-fed4-452b-a4e9-9b3b9bc49260", "5a5ebac0-cd5f-4ba4-9919-111350cf44ab"], "metadata": {"page_label": "182", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5fe4a4df-617b-4aee-935f-2ec7df1a9c9d": {"node_ids": ["44970a6d-c014-45a0-a38b-ed2c3956ba9c", "d438897b-a24f-438c-b051-154ed47a40b2"], "metadata": {"page_label": "183", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "dfba1766-96ef-4ccd-981d-10cbff8bae2e": {"node_ids": ["19b82460-1126-4d0c-9f4a-f085456e155a", "e11a4600-e37d-4e38-a5f0-d77a3f13836a"], "metadata": {"page_label": "184", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "530921fd-05ca-4e41-a39f-b424c2532001": {"node_ids": ["23e5cc32-1c49-424b-822c-0bd0858c6ae9", "cd6f1aa8-e47e-4cf0-858d-60fdbbc684c7"], "metadata": {"page_label": "185", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "17c22fa1-6046-43cb-a9fb-f7372f10bdc6": {"node_ids": ["f164af51-35b5-4222-b859-4cc084679c45", "19bbd5ce-e8ca-4f40-b136-4c380a70a474"], "metadata": {"page_label": "186", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0c11ffeb-ca4b-4198-808e-df8a552c4395": {"node_ids": ["e1dd40be-de17-49aa-9b68-fcfec71b4bd9", "dde3b63d-8515-4ceb-ae16-2b455afe93d9"], "metadata": {"page_label": "187", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6d3596de-904b-4e15-9a9e-7ccde8e6d191": {"node_ids": ["171e36f0-ffcb-4166-be99-d765ef071fcb", "64b10c67-f37d-43b6-bead-ed79d8ad7f04", "dbd67790-22ab-40b4-bdef-0fee95edf233"], "metadata": {"page_label": "188", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "59fd8556-7588-455b-801f-90f1aa5ea54e": {"node_ids": ["2c0bdf44-70c2-426e-9ea0-c830693784ae", "28471846-62eb-45fb-8ea3-47ed68dc8552"], "metadata": {"page_label": "189", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6845cba9-b5d5-4c9a-a999-0d54d4c6d6ac": {"node_ids": ["2147871d-2550-426a-807f-e01780a7d4a8", "54c9e226-e659-4416-82aa-6dcbace6013b"], "metadata": {"page_label": "190", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6f835bcf-fe07-4b4b-9519-b487a4e317cf": {"node_ids": ["23be1abc-0d6a-4513-9162-d71d7ad070ee", "a8052bd9-03f2-4b50-bff7-fe2b62a97cb9"], "metadata": {"page_label": "191", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b78649b4-7496-4360-8675-5946975a5619": {"node_ids": ["9d6525f0-f8ad-47c6-979d-50ca0cb4a470", "046d7b87-368e-4800-a0ed-f650cb87400d"], "metadata": {"page_label": "192", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7bd3882a-1032-4173-94e0-156d59c0200e": {"node_ids": ["b43805c2-dcd8-46c2-8db7-612b1edbbc45", "aa55cd35-680c-4fd1-bfab-5bf5d6fbcc6b", "308179ed-013f-4c0b-a23d-16e4958879cb"], "metadata": {"page_label": "193", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "26f5346c-b27f-4573-aebf-badb465945c7": {"node_ids": ["1123a6f5-bfc0-4133-9040-21b67b6fb2aa", "287a2303-acb5-4e6e-acb7-566aec503816", "1158319a-97f4-485b-be5e-569b33aafd73"], "metadata": {"page_label": "194", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a7b16da1-ba2d-4f17-a017-c1fc6c5fc81e": {"node_ids": ["12422c48-9e7e-44db-87cc-17c28b985bdc", "494ec5ff-bda4-44a3-aadd-18c94a07a1ce", "9384594b-f542-421e-b9e4-e2064c34229d"], "metadata": {"page_label": "195", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "90c802f5-b356-493d-b9b2-50d549375b18": {"node_ids": ["d033964b-bf0f-47ac-9f5b-df4c42fbf64f", "c7f980a1-cc44-455e-878b-cb94ea0fe6dd", "168aeea7-832a-43f6-9c2d-fa5fd4786ae6"], "metadata": {"page_label": "196", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "363bf3f0-6c95-4a98-bb4c-5333578be99f": {"node_ids": ["8fdaa288-db87-4204-a58e-72df30846c15", "aaa2bb40-1513-4834-8a13-d206164d61e2", "67289dca-78fe-433f-b738-e68362893ad4"], "metadata": {"page_label": "197", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ddbd95c3-9f5a-4ec1-8071-c50cadef6fc3": {"node_ids": ["9baabe20-d2ff-456b-b59d-405423f34716", "4597828f-432c-4e9f-b482-a86b1d34eaee", "c769bfed-504d-4107-9aab-6862b7750b40"], "metadata": {"page_label": "198", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d75fc4cc-8b25-481f-8a09-2b48313c18ca": {"node_ids": ["3b079175-e295-4a11-8646-cb2400aa2a5f", "41d6c060-7629-4d42-9ac6-7cf21899c923", "5fce250c-4c58-4906-97f4-2891bb048018"], "metadata": {"page_label": "199", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8c685f54-a752-4dcf-ab48-1d9dad78a9f4": {"node_ids": ["3562c0cb-6908-47fb-8c9e-5379051b6722", "38b6660b-838c-445f-8591-53b2b14e8fb9"], "metadata": {"page_label": "200", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ba0558ef-5afe-43de-b184-6aa94adb4fb9": {"node_ids": ["63f45eba-e510-4ad6-8d07-2868bc0e8334", "6eb35303-b16e-46f9-8318-204b06e79881"], "metadata": {"page_label": "201", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "da687cd3-9b78-426e-8668-5a05a36a2516": {"node_ids": ["17cde1e8-8cd3-419a-82c2-231aaa6ceac0", "825fc91b-632e-41c9-9ce1-ff254fb8149a"], "metadata": {"page_label": "202", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7f31f09f-0b40-4acc-88cd-df9d871a115c": {"node_ids": ["dff7a6ca-1d44-434e-a6db-875d1b02b938", "9bbc6c76-8f06-4c69-8d61-af5d3c10f99f"], "metadata": {"page_label": "203", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "931e986f-63a7-4835-b289-ea8ae5f24f6e": {"node_ids": ["76975238-8e92-4bfb-a98d-5ad1f514fb63", "6aeb8a71-2912-40eb-9639-5e0abac2932b"], "metadata": {"page_label": "204", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fd044d1f-9e44-4b85-984c-5b8f85110b64": {"node_ids": ["9f602a83-609b-43bf-8bd2-b2df55ea06cd", "3d367960-34c5-4625-8db5-6947de44498b", "a09c23ed-1ef4-4ea1-8b19-5f1686900131"], "metadata": {"page_label": "205", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "77075934-e8a7-4531-a24a-d04820dc0948": {"node_ids": ["05727bc2-4777-4def-852a-2eb724798a32", "40ecb72a-4984-4a52-a3ff-68fea1e80feb", "13a3e385-2554-4316-a285-20d54f94c404"], "metadata": {"page_label": "206", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fd8d4023-3ddf-44a6-a122-d884032c2cf5": {"node_ids": ["3895072f-d445-4832-a69f-f312070c68f4", "5dedd692-1f51-4eb8-b932-dd9740fd7266"], "metadata": {"page_label": "207", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "91e1a9c6-d88e-494a-9037-93c626bbcb90": {"node_ids": ["99c863f4-03ad-49ac-ad88-3933726c5ec8", "9f637d46-42e4-420b-954e-71ea3024fb35", "04d14bae-6fe1-4a03-a1b7-1eb924a2bd10"], "metadata": {"page_label": "208", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "85039423-8416-4d2b-8196-cde99cddd876": {"node_ids": ["626d8a1f-ffaa-4c04-9360-93e6ca7fffde", "70f41368-a063-4137-8a18-1639682d265b", "5bfb8b4d-2feb-4e27-a377-d07566abe3b4", "c42952f7-b9d6-40cd-abef-16d840cfcc72", "cc93cc7e-5092-4892-a108-bea46bcd52ee"], "metadata": {"page_label": "209", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "10370bc2-338f-48f3-b0e0-e21eba5e013c": {"node_ids": ["4b8e6a2b-8266-43e5-83b5-3f8447f695b5", "bffedf82-fda0-48f0-bdee-91047df8e757"], "metadata": {"page_label": "210", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b1074c79-82a4-4ff2-aa2c-036126c86bca": {"node_ids": ["eb964db0-b684-4e3e-a8c3-22a31d2e3eaf"], "metadata": {"page_label": "211", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "68790215-4530-499c-9367-48e4d1731a1c": {"node_ids": ["61f61a63-4908-4eaa-9c1b-6e75d3127b6c", "4d1a0c90-b8fc-4a4e-b833-d8a3990b8d03", "8faa2299-0148-4e5a-9941-ecba0f691325"], "metadata": {"page_label": "212", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f15c89a8-6c75-49f9-9649-b44454060c33": {"node_ids": ["9f2682ad-7a72-4a5c-84c2-6bf4bf229be8", "bc077712-e360-4535-84b0-cff36becd3bb", "cda4cda8-8b59-4fa2-bebf-43d40db9b808"], "metadata": {"page_label": "213", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "680bacfc-2dc5-4797-be82-30f55aa2cfd8": {"node_ids": ["7aaeef2a-f4c7-4d15-8085-23ddd7d75400", "9181075c-0b27-4af4-9471-5ea78ba20c7f", "d9911ae7-0973-4319-b3cf-a4d3b6409e23"], "metadata": {"page_label": "214", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ef25f7ae-8b20-49e6-b6cc-31eb4489b5c3": {"node_ids": ["a833e759-3e19-4519-b744-e73a1182a428", "39b250d2-6c9f-4874-8a50-64d0431bb864"], "metadata": {"page_label": "215", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "358ea664-5ddf-4710-8b71-ceab28c800b3": {"node_ids": ["c8b01ac1-b5d2-4b21-b005-653b50a10139", "cc64a61b-0e7f-428c-82b4-45de39085bd0", "e487d5b3-4fa0-44cb-b6b5-838c10477673"], "metadata": {"page_label": "216", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "66748b71-348d-408b-893c-28400c287b84": {"node_ids": ["460963d0-5c13-4fc8-825f-29c6d6768284", "373120ad-b2b8-486a-9598-1d710e1a5dde", "70117239-c252-4312-9b99-af08d1e1c4ff", "22cf24c3-7b7c-42d8-ad4c-ad6997b6e326"], "metadata": {"page_label": "217", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3ef7219a-bb62-4a7e-a487-798a2e8e6709": {"node_ids": ["ed567de4-ffb7-4631-980d-aef67205138f", "4a58338f-f3d1-4671-a4e0-5e96fba8e41b", "cfa68fb7-8c38-40c7-b884-5c9e96b4bd21", "b6e723cd-ef67-45d7-8a56-0c002ead1964"], "metadata": {"page_label": "218", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "26f634c5-6cc0-4613-851e-4f5a521f37d1": {"node_ids": ["155f99b3-213a-4334-a32d-bc072236b1bb", "09274819-6c2a-4375-8c09-5f88c1cd4744", "20c4e11a-d30a-47b4-b87f-195724488233", "4704137b-2268-42fc-bbd8-57e784075f68"], "metadata": {"page_label": "219", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "39c3f9bd-3e68-43a7-bbb8-1df13c0c8357": {"node_ids": ["c424730e-2a91-47b7-9885-30bb433c8b86", "71427092-11c9-4891-adc0-1a2c1b424f81", "d99592fa-59a8-4759-bb5f-acec403b94c6"], "metadata": {"page_label": "220", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "74b2ed3b-192f-46c6-8037-25ecfc16706c": {"node_ids": ["f632186d-cf0d-4b20-9f7f-22e0324fdff4"], "metadata": {"page_label": "221", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4e3b0917-fe3a-4c6d-bf4b-da797014d6b0": {"node_ids": ["8f82f364-33cd-492c-bf3d-848b05bdcbb6", "58729b5c-a404-4c8f-9ccf-294992a37587", "046b8fc2-22ac-4e94-be0b-41874c7e1706"], "metadata": {"page_label": "222", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9c25f086-8c4c-41f8-bbfb-ce3e240583c3": {"node_ids": ["f79cb9a2-20df-442a-b4ca-21f9aa22f9d4", "cbc0c819-760b-4464-ba06-0c55be80f0a6", "411e1bc3-7633-477f-ba9c-cb018489c24b"], "metadata": {"page_label": "223", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6f473616-908b-4a06-9571-8ca1eec6fe60": {"node_ids": ["2e1a7eb0-f474-41e9-96d0-9fb5a43f2f30", "3a35c244-ab44-444e-ac17-14af107f406f"], "metadata": {"page_label": "224", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "dcc592e4-e140-4bf5-a14b-4a600f13b673": {"node_ids": ["3b685780-dda7-40d5-b626-9649c4d5b037", "0140e678-f287-40f6-876a-094a7b806fe3"], "metadata": {"page_label": "225", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ac12e8d1-a576-427e-b52b-120c9060e7d7": {"node_ids": ["afe44c8c-888e-445f-b320-cc2c2d885b2f", "b37b101e-5c8c-462f-ac1e-e33aa3bdbfb7"], "metadata": {"page_label": "226", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "aff13d10-272b-4cdf-afa1-c7b92faf6591": {"node_ids": ["6c909920-fe5f-4688-986b-55cb8bc11b62", "5d7d55e8-89e8-4d17-ae56-0e4378798eb2", "094fa640-a7dd-4d57-89e1-ed82d5eb8226"], "metadata": {"page_label": "227", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "87b97aee-0be4-4194-85a3-2d0c21eab203": {"node_ids": ["7fecdb54-4072-40b4-95c2-b8db3047af73", "f9a49e94-c49b-4d7b-a6ba-51497c30d77f"], "metadata": {"page_label": "228", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fefc5875-f032-4e27-8da2-6a25f3e91ae6": {"node_ids": ["91527bb0-7e2b-403f-87a7-f2f5be922fca", "b45830ab-5582-46c8-92a9-8654660df610"], "metadata": {"page_label": "229", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "29e048cf-1454-4eee-b8df-5454adf056f9": {"node_ids": ["4a7dcb17-785e-4789-8483-35b80ac96426", "31bfbe17-f5b1-4170-8b60-6c41062584ee"], "metadata": {"page_label": "230", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6dee6fc4-8b59-4f01-bb37-d063be0ec777": {"node_ids": ["ca414aec-0be8-43bb-bf14-70913a2327b4", "5ff14fbf-956c-47ba-bc92-29dcfa2a3492"], "metadata": {"page_label": "231", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "535029b4-28bf-478f-9388-e9b45546db29": {"node_ids": ["5f821f59-9944-4be5-8ed5-d475ec91ee22", "2bddb1b9-598a-47d7-ba73-e8183da4305d"], "metadata": {"page_label": "232", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b4afd0b4-2463-41d6-9f58-9ae2dafd739d": {"node_ids": ["fe2fb6d8-9693-45b5-95dc-a93d4811b973", "471301e5-3811-4004-a7da-4cb4d288e7e7"], "metadata": {"page_label": "233", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a93c02df-fd8c-44c1-993e-f22923aacaa6": {"node_ids": ["4b3bb05d-0068-4fbd-9b6e-ca9700b63bdc", "eeb31901-632f-4f34-a2ce-37dd367e1f8d"], "metadata": {"page_label": "234", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0cc664b9-8de1-43e1-b96a-31cb2731586f": {"node_ids": ["70ec31eb-d00b-405d-871a-eb6ae464a16b", "cbb6fc99-ca60-46ac-bf7a-73ae2ea015b6"], "metadata": {"page_label": "235", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8ffa2fcc-7640-418f-b65a-1e7165eda3d6": {"node_ids": ["92d1bae6-ae12-4f72-96f2-de0a7dd51af5", "c7f35387-b22e-4fee-b97f-b5136af93249", "3fef175c-7e87-4f0c-a3ac-aba24302d3b3"], "metadata": {"page_label": "236", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e963c169-e15c-40df-a425-e5888daecf23": {"node_ids": ["3764c2e5-3cc6-4857-82f3-8a31b179a485", "d52b139f-8995-475a-bc6e-da0699f86715", "894ffa2b-f97b-4543-9912-3979c977623e"], "metadata": {"page_label": "237", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "419e6e22-f936-47bb-96a9-338c6707b1da": {"node_ids": ["b4a98139-8d81-4bea-8f19-a732201dc4fd", "a0533fa0-1f65-42a8-b8f9-b5c3a712b148", "3ffa2e1e-20bc-43c8-a0e4-cd8971233cce"], "metadata": {"page_label": "238", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "19dbb1b2-5b20-40b4-816a-78e0304578dc": {"node_ids": ["2ac99c54-d900-4f60-a450-173d97562ee7", "5457532a-2d22-4c08-ad2b-e92d289295c1", "1fafebe3-e835-4caa-8f20-de6a57f234e5"], "metadata": {"page_label": "239", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e9dc8933-18e2-4e19-9909-5e53a80f3d2b": {"node_ids": ["4f6abef7-0ff4-443e-aa72-a96a111bbf89", "95684395-58e0-4abc-bb3e-75e6fe4f63a0", "ef62c422-b13c-41e3-9b44-56461e128783"], "metadata": {"page_label": "240", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "244e9faa-8f88-4169-b498-df7174ac5b2e": {"node_ids": ["865d8d13-7378-4640-9b3c-dedc3603c3e1", "1b7363a1-bc26-4aa6-8a86-bb0d7254f6f4", "4cd83e89-56cd-489e-92f2-b2cf7e6e9e0d"], "metadata": {"page_label": "241", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d092018d-6ffc-4107-b13c-65353c2fbb80": {"node_ids": ["437feafa-9c49-4020-af64-fb21a48150c5", "0c3645e2-d63d-436d-ae4f-7e8540f845ef", "91453e0c-5588-4f23-9518-079b43e70b04"], "metadata": {"page_label": "242", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "fa519b96-ca2c-4258-a366-4a41c6be2e61": {"node_ids": ["51b21bc9-6150-4180-a52b-914879d2ea8f", "d172b56a-71b2-439a-93af-56fd77fa2a1c", "9fc2cc90-37b3-4e74-9e77-1a798bf31c00"], "metadata": {"page_label": "243", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "595a714f-e8d6-4d09-9482-291afaa48c9c": {"node_ids": ["3a7d0cb4-46c2-43b4-ba85-a8cdde3768b3", "30a05a20-e1c0-450b-8eda-f11268c0bc0b", "f14e90d5-2d7a-494a-a45e-08fa1c4be1f2"], "metadata": {"page_label": "244", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "65a7db06-c8bf-409d-a66c-d9c9c8848544": {"node_ids": ["070ba16b-9a75-4565-bd54-7b82b17d88e1", "3ceb26ae-77f7-44fb-9d88-cc84e7d3d271", "5155dd24-1e21-4cda-9bec-48b1536b6af6"], "metadata": {"page_label": "245", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "700f443b-0350-4537-bd3b-75a1bd68947c": {"node_ids": ["20e091fe-ed82-4010-bee5-436d0e63058b", "a4be6c80-1824-48f8-b7ff-2873e98443ea", "7444e014-ebb5-42fd-bc60-601a36b87485"], "metadata": {"page_label": "246", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "32d16191-9537-46c6-891a-d555a7b58d71": {"node_ids": ["4096d52f-af71-4d6c-ba98-4aa973a1d2fa", "215f4e4d-5d1a-4cf1-8cf5-1607d5412d72", "e2a5aaf2-9791-4e65-a21c-674aaf47f629"], "metadata": {"page_label": "247", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cd4e564e-27c0-4b3a-acba-e5591f45ae50": {"node_ids": ["823fc1de-e171-4e04-acdf-32b909ca150c", "7f08dd9a-188f-4296-89f4-95f35b5730da"], "metadata": {"page_label": "248", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "aafaed3a-3e58-4009-ae04-8d6fe593f0a6": {"node_ids": ["a2951346-57b7-4fc7-bc18-2439e6db34d0", "9ed30f11-7473-4049-8ceb-9939b3605247", "d802b767-a2d0-4525-8b38-a41638c3ebf5"], "metadata": {"page_label": "249", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "947558ac-45e0-4dc6-9001-a4df85838719": {"node_ids": ["80d6e646-12a4-4e2f-8317-1000e63e9b2a", "03d27074-68aa-4699-b0e1-33ad05fc6395", "897e9bb7-bead-4acc-9946-7af4df170be1"], "metadata": {"page_label": "250", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9c5ac2c6-2298-45c5-912c-714e59a2ef2e": {"node_ids": ["5e7d6cce-c6bd-49f1-a9f2-e5b26dd70b39", "69b49676-2b4a-441e-bfcf-dc7701a0c288"], "metadata": {"page_label": "251", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cc4aaaf6-f84c-455b-a2da-2529469f4bd4": {"node_ids": ["f0d7995f-f4ac-42cd-97b4-ec3554c2dacd", "6f00feb7-2967-47e7-9a6d-0376f6b37a92", "939689c9-930d-4c0f-8e1c-9387450786c4"], "metadata": {"page_label": "252", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "837a349f-20a8-4bf8-84bd-568c7054b8c7": {"node_ids": ["b338c463-f35d-4ede-8c2e-0b45adbe86c6", "bb097d24-28fe-403f-969f-b636ac5eae7e", "d10738cd-ce72-4b30-abc8-9039436c9f0e"], "metadata": {"page_label": "253", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4cd53b8e-9b98-453f-845a-c9d1844a04b6": {"node_ids": ["844d0a60-2d02-4a39-8153-966b64de8a04", "67bfd251-00be-4e27-9209-cdf9f2f83dc2", "8dadd252-bac6-45d4-9eb9-81d9340fdb69"], "metadata": {"page_label": "254", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3037eab8-ef41-41ca-8448-f90be2519dd6": {"node_ids": ["6b2a613d-36da-4441-b03a-70ade77a1ceb", "3a708ed8-4078-46b0-8327-42c19cfc5fd4", "a3feb080-b17e-491b-bdd4-2ad01ef43f30"], "metadata": {"page_label": "255", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3bde6c50-662a-475b-8a4d-95a59267d5cd": {"node_ids": ["b450be89-f98e-4a1e-8180-b30c78c9b448", "95cf2059-f79c-4163-848b-e3e73c3c5624"], "metadata": {"page_label": "256", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "644e331a-7af1-45bb-a0d0-32076f1d4e54": {"node_ids": ["19bbd9f3-571f-4bb5-8eb2-8bd50e70be42", "14566228-578c-41d3-a8bf-b0b6756d3070", "0cffef41-d13f-4c43-a427-c4f8a6017a80"], "metadata": {"page_label": "257", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "da736100-9fdb-46be-a03c-2b8f1b826bed": {"node_ids": ["10224088-99be-437b-b06f-98ee05e0f383"], "metadata": {"page_label": "258", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8023a183-d887-4091-9928-12adf4e08ab4": {"node_ids": ["6174c69e-57b7-404a-bebe-dd8150115a3d", "322da2a6-9054-4cfc-ba04-9caba877e4fe"], "metadata": {"page_label": "259", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d1914955-a91a-44dc-9874-e2effb407150": {"node_ids": ["7f973fb9-6302-4bca-b5e0-aadcfa9fcf34", "2d0c4180-149e-4372-8178-353af562571d"], "metadata": {"page_label": "260", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6676dcc9-27e9-4f04-8e1b-9033648361d8": {"node_ids": ["31a4d691-a2fe-4189-ae48-37e82ee78d39", "bd1252d1-28a3-4741-b5fa-6b4a0e8ac2ff"], "metadata": {"page_label": "261", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ddd75935-2c98-4714-a331-784795444528": {"node_ids": ["fb237528-9881-42b4-9b9f-6b8d094f84a0"], "metadata": {"page_label": "262", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "39d08641-8b3f-4ac1-818a-fd9bca2ac105": {"node_ids": ["df3d7b57-451e-4ca1-8d7d-08ce07c3ffef", "579730e9-ccc0-47d9-a54c-ccfc8918f9f4", "fc39c9c2-2682-4b87-a5b5-3e6bedede610"], "metadata": {"page_label": "263", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "aef600eb-1256-4c0e-94e6-c7f3be035e55": {"node_ids": ["b5b1a543-a0e3-4a42-942a-553eadbfeaaa", "d2669b64-b05a-4e6e-aa56-f67e2e3a19d2"], "metadata": {"page_label": "264", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0d07d8a2-3d96-4bf9-be8a-a02cdf4c15ea": {"node_ids": ["4d9f3e71-4984-4add-9aa7-76c5b818bef7", "71ac52ac-31cb-414b-b073-d6095c994e2a"], "metadata": {"page_label": "265", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b14c1699-57b2-4eb2-9d0c-7185b411ca83": {"node_ids": ["29ab8f4e-01a4-494a-912e-bbc2bde22737"], "metadata": {"page_label": "266", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2b0c7f1e-6eab-4af2-a200-9e3ceafb7e0a": {"node_ids": ["3cc7f7d2-bf22-444f-8b68-687c28d02e12"], "metadata": {"page_label": "267", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e1eb475b-07b3-4926-8c49-ece7cc00555b": {"node_ids": ["1d1926ed-857b-4c1c-ab5b-89a5ff328108"], "metadata": {"page_label": "268", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "66fcd770-d101-4d2e-b312-1aec2ee836de": {"node_ids": ["dea62079-e8b6-4895-af82-9306a64655e9", "433b3516-7a57-41d0-8490-51b4abe1b6e1"], "metadata": {"page_label": "269", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "45f56240-ba48-4c7f-803b-5f9717abe94d": {"node_ids": ["3ca34d85-bf48-4abd-ad1e-751f1f723d71", "dc6e0634-d25b-435b-93a9-f9d46eef567d", "1509f7ba-ef54-4202-959c-ad7459df5890"], "metadata": {"page_label": "270", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "19e693b9-e980-46f2-8b4a-b6236781cca0": {"node_ids": ["e2bd6c62-6be6-44d4-9462-f05a1e62d4a0"], "metadata": {"page_label": "271", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ed88d090-b902-4b15-8a71-079595926904": {"node_ids": ["61c70631-9805-46df-bb5d-220a5299a5fd"], "metadata": {"page_label": "272", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2d412c94-af78-4309-950f-9e4a543757a3": {"node_ids": ["7bf1f1f7-ce66-40b5-8f3b-aaaa776e4235", "dde7482c-f3b5-4469-8d5f-7f625e72bca4"], "metadata": {"page_label": "273", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ca1b43f1-ba74-480b-9a2b-88a4b23e6cee": {"node_ids": ["1547db17-ff94-466b-aefb-e13df80ae7f2", "14437b94-05ea-48db-9c10-d3c8499a443d"], "metadata": {"page_label": "274", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ff30aa8c-bf0d-45ad-be65-00ff1fb7e94c": {"node_ids": ["d5d922c8-557c-4872-bdcf-9475a7f9b90e", "24c50c0c-f0b3-430b-8a30-0023ff0c28ce"], "metadata": {"page_label": "275", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3da8bd87-095b-40eb-9cab-787d62d9727a": {"node_ids": ["1a33172a-75a7-4ed4-ba88-d504c8cd31bd", "a1e9fe0e-7869-48ac-be25-4cecdfc866a4"], "metadata": {"page_label": "276", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0f7b5f54-10c9-43da-85c5-b381475c6e12": {"node_ids": ["f0330e3a-a513-4f02-b1f5-a3682cd88527"], "metadata": {"page_label": "277", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5eaf01e1-f7e0-483a-9c52-0040301ec1ac": {"node_ids": ["b6d1a5bb-d19e-4fa8-a5cd-e75ba43c2379", "ef89ef00-8e12-4398-a11f-6770714ab10d", "f7661f79-a75b-425c-8068-9c320ad13887", "f6e3deb0-5012-48aa-9a92-6c262f366b31"], "metadata": {"page_label": "278", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "70d2dda2-1ccb-41c7-a814-5a655f290524": {"node_ids": ["c0e3a3f3-6f52-480a-8e64-372a9235563c", "dd169996-e25f-48d6-9850-2a17af0378ef", "9bafc4d1-8d51-45e2-8369-75686477093c", "670fec93-413d-45ed-aadf-775fc95f3529"], "metadata": {"page_label": "279", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "188b8dec-2d9a-4ade-b873-831b84c0adf6": {"node_ids": ["9cd08118-40fb-47ec-baa4-f48dfe1790c3", "2426ae24-c8e6-4589-b960-615120e67502", "85229042-adc3-47f2-9663-b782a15163e8"], "metadata": {"page_label": "280", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8a95293f-9291-46e1-8732-47aeba53d843": {"node_ids": ["8526ba8b-bde8-47b0-bdde-d0e4c5264749", "908e5fae-a19e-4ac4-9a3e-bd4742afb021", "32671358-8069-43a8-ab8c-c3de2293b785"], "metadata": {"page_label": "281", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "135b8231-20d5-4a96-b2f9-8fe0477c8a0e": {"node_ids": ["aec33b9a-3a93-42b6-ae8d-04abe65193e9", "79fd9ab1-63dc-4ae8-bb61-0540f122f771", "ddffdabd-53ac-4601-a971-33ebab990483"], "metadata": {"page_label": "282", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2bb30396-1883-4bd8-aa7d-5983f7ee110c": {"node_ids": ["ddf1800b-4af1-4616-8466-4604f55e78cb", "1dd02701-0fcc-4081-973f-4864cbdc76b8"], "metadata": {"page_label": "283", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d44eb81d-579a-4e0b-92f3-7a9d4239f773": {"node_ids": ["cf9d7f42-ad4c-4fc5-be9e-16d6e2fc7ce9", "8a47826f-f54b-4327-bb55-f7e41abce13d", "53e2ff56-c20c-41e3-826e-4edea0691c82"], "metadata": {"page_label": "284", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f667cf8e-f1c7-4060-9876-db38884a10a2": {"node_ids": ["ecb46220-f151-42c9-bf35-a6738495d33a", "9840397b-a353-4968-b138-567ee44b661a", "527e5a00-e5b0-4fa7-ac3c-067dc8399dc7"], "metadata": {"page_label": "285", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "29ec5f91-e4b6-422e-9e2c-b07644c57010": {"node_ids": ["6072db05-4d9d-422e-9c44-87a10d218200", "d031b1a5-b654-486f-b994-7ac1f6d5cb97", "d2fc892d-0236-49cf-a8cd-49a78ce3dfa7"], "metadata": {"page_label": "286", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a21d6256-61a8-4ca8-b06c-500cebae3b9e": {"node_ids": ["6668f0db-4fed-41e5-b0a9-023633b4ec91", "fb0fa2a3-0ad9-4846-95c1-c40c1a757b5a", "e3b019ff-da87-4a2f-b07f-964d8a2dca17"], "metadata": {"page_label": "287", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bde7b5fe-6256-4250-9748-fb59a4d2b59b": {"node_ids": ["313052c9-fdbf-43d9-be89-aac53a1e9b7a", "809c657b-a1fa-4055-868c-670bb87ac70c"], "metadata": {"page_label": "288", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f7118a60-6ed8-4961-b211-dd32ae93e8d3": {"node_ids": ["7ccb2e24-774e-48ca-90db-211ebed1b933", "077347fb-658f-4788-b8cb-bb598760b89c"], "metadata": {"page_label": "289", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "65108a05-dafa-492f-bbb6-bbb355922faf": {"node_ids": ["70155e9e-c4b8-463a-9a88-9e6571558f17", "0364b81c-d2bd-4169-bfb7-a2e43242d236"], "metadata": {"page_label": "290", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "68939d01-9e64-4799-af4a-228ef42c0cd4": {"node_ids": ["41d8c304-9d95-4088-8836-1137066833cf"], "metadata": {"page_label": "291", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8546289a-22cb-4456-978d-ade35ec2c7f7": {"node_ids": ["f7ecb880-bbde-4d52-b082-be47d9c0c932", "c1b5908d-69c5-4715-af02-034076d4fa59"], "metadata": {"page_label": "292", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b4ef13f8-6316-4d8d-ad33-b85f67b88a73": {"node_ids": ["f139cac1-ee59-4f5f-96ea-3449cfb71c35"], "metadata": {"page_label": "293", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "98c2f212-2e85-4a2a-ba5e-7f2865a4c2d6": {"node_ids": ["bab92b7f-d609-4675-9e37-f727b7f7a223", "a3933f77-9c67-4c35-9715-2b3ef2819d0d"], "metadata": {"page_label": "294", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "618e8839-629c-44a6-aa4d-320a6d08ae71": {"node_ids": ["bef9d154-3336-4583-a64a-3d2766ff3691"], "metadata": {"page_label": "295", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ff702a23-c773-4af9-aa85-9d32e2641de0": {"node_ids": ["6da33626-2f46-468b-8c32-b0901c5dd36d", "a065238b-f945-4e8a-a7d6-d3894fce4433"], "metadata": {"page_label": "296", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "46a7ac91-7a0d-46c3-b13a-fd529634e344": {"node_ids": ["d13658c4-63e5-49cc-a707-488a8e0eb1c5"], "metadata": {"page_label": "297", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "082b069f-4f88-49bc-9aed-5e7a723505d3": {"node_ids": ["fb25cf23-4874-4b20-aca0-274edb31e358"], "metadata": {"page_label": "298", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8b5f1d7d-9c5e-4902-8d96-74e800e9bcf5": {"node_ids": ["2483c03e-db60-4860-a3f6-eab291acfe65"], "metadata": {"page_label": "299", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0c489a46-39c8-427f-a590-69735b422f3b": {"node_ids": ["549f2983-992f-49c6-a5a7-ec9e641bdbc5"], "metadata": {"page_label": "300", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1c014fde-f8c6-415e-afb0-bacd8e98976c": {"node_ids": ["e8f2533b-709d-44ee-bd5c-88672607fa43"], "metadata": {"page_label": "301", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f52d607a-95fd-4d07-91ad-c3e423b06282": {"node_ids": ["705b1dc8-36ac-4cf1-b342-5e3a52e7c746"], "metadata": {"page_label": "302", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "37b7e384-57e2-4e31-97cc-a05e39068a57": {"node_ids": ["c2a44b57-974a-45b5-941d-5903838b7436", "b21f27e0-bed9-4893-9967-7381d0a100b4"], "metadata": {"page_label": "303", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "25b0b13c-8c8c-4b8d-9a4f-e566c3afd7b5": {"node_ids": ["0b869a26-8455-4991-bd4b-fad054b7a673", "8acba6a6-ce5f-44c9-a0dd-e0ca58e7daa1"], "metadata": {"page_label": "304", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9dc1d5c3-232d-44f0-9b01-c8c63ba3d1ef": {"node_ids": ["f9b04b26-0b5f-4954-93a0-4a7a4f5d95b9", "850a41ac-491d-4773-843f-dc0db49d6a09", "62783a11-ea60-414f-9061-bc1ad5a2b51f"], "metadata": {"page_label": "305", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b6ececde-910a-448a-a576-108b6e563a83": {"node_ids": ["d50be52a-d3f2-4d94-9d4a-7717623feea4", "37b028ff-5f0f-47a6-8d0c-b7bbbb16bea6"], "metadata": {"page_label": "306", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "efb0540e-dd7b-4eed-95a9-3b982d1339c7": {"node_ids": ["06bb4562-bb06-409c-bd39-935c351b481d", "79e99097-97c6-4883-a99a-837de733d052", "1cb14f03-5239-4c00-af66-b685e094db4f"], "metadata": {"page_label": "307", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ac4f480b-b3e0-4467-af6c-75ad1c74b475": {"node_ids": ["aba78512-b47a-41b9-8362-2488056959d7", "15993fae-0909-4cde-8f2f-acd9162afffa", "aacc8a2f-2ca8-4e7b-8c99-012c2af56e4d"], "metadata": {"page_label": "308", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "040f6da8-e162-4b79-9088-dcc53e09cf22": {"node_ids": ["dc88ebe8-c84d-4b31-982d-6f9a965a2d17", "7dc4d7c0-6b32-4c6d-8d25-e501fa34e0b6", "0836e195-60f1-4787-a830-cba0129553f0"], "metadata": {"page_label": "309", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "523b424c-a557-4d8c-b915-605f882474bf": {"node_ids": ["1911fcb0-86d8-45cd-8e1f-743fd8e29dac", "7070bebd-8fe0-4fe6-98e2-7bc5272e3307", "57be5665-06ff-429d-8394-ac01dfe81e40", "e1da7b85-11a2-4f63-b4c0-cf47289787da"], "metadata": {"page_label": "310", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "64432a0c-fe20-4f3f-b362-df09d3e0eef7": {"node_ids": ["ba9fa39c-3176-4b9f-9495-96cbf1007f75", "4a4ab598-ea36-4036-99d6-844aca8686e1", "4181f138-d340-4f45-b866-d200b95e3e67", "672c6587-298b-41ea-bc48-4249aa34d0dd"], "metadata": {"page_label": "311", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a96b5f6f-e533-48ff-8ac1-17e18047e8ce": {"node_ids": ["5fcc6e78-e4ba-4fe5-99f8-617d18bb02cc", "e97cc6b5-cefc-4aa9-9d79-990a7b8f9d11", "0a54780c-b2b6-4d62-b54e-d3f0a62db851", "0f4292ec-9ef3-4730-9d57-9b23cf5ebc24"], "metadata": {"page_label": "312", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "564633f6-2b2b-4c6b-979e-353c2674de49": {"node_ids": ["7e98a10b-cb2a-42b3-8d31-b4c472ff0590", "baf0b178-86b1-42d1-bdf7-22a139904ade", "5e632426-ff4e-4cec-99ba-6240eed52bde", "f5950ca1-5d03-4f48-b111-d75a891f1ecb"], "metadata": {"page_label": "313", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "855b058d-1941-4905-a8e7-aa8498b380d8": {"node_ids": ["b5301235-217a-41b3-8356-9d91f9da00db", "7fe929ca-2720-41b7-b3f1-97f8b040fec1", "8ec3e0ad-a912-434c-8177-6e85e76402b4", "56141d5f-946b-4857-a9ae-41e697bcfb51"], "metadata": {"page_label": "314", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6da76a73-8d92-43f1-8fb6-2a6505a0a4bf": {"node_ids": ["82f268b1-da76-4828-b1c1-8fd4b935f1ee", "9d7c0f1c-2232-4a52-bd62-c8c13c06e326", "c9c23c32-deb0-436e-b4dd-36d2733ec24b", "cb64d5fd-d2fc-4ff0-8898-7e551df9383c"], "metadata": {"page_label": "315", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7a0e5738-73d7-48df-b06b-f0d2c68c471a": {"node_ids": ["4c8e2dfc-5b06-41cd-acff-5ea27e92f81f", "560d5e23-6de0-4fa6-9504-e0986030994e", "df12bce3-6ece-4140-9594-78f6539cd4e1", "ce051b6b-1203-4f8a-840e-6ca60fdd1c5a"], "metadata": {"page_label": "316", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cd2118a4-3b09-477d-9e59-5e2ff1d319bf": {"node_ids": ["346c52ec-826c-4db7-90bd-5d7fddd4dcfa", "18534955-03bf-40ab-8d72-c6a1f1251ee7", "0714ac06-d4c9-4b00-82f8-57621bbcdacc", "4b7fe5a5-059d-49b3-acf9-62f9bf0fb437"], "metadata": {"page_label": "317", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2c724e4d-989c-4c3e-b558-fdc81e2a13d7": {"node_ids": ["1081ff39-016a-4517-a222-572d0f6e2262", "04a57b08-5113-4084-893e-9424d0995730", "75df3b7c-0020-4873-8acf-4e7173cc4374", "59186958-6921-440b-a239-1f94865dbbec"], "metadata": {"page_label": "318", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "c51b2ec2-9a1e-4fe6-ab6a-e8a306ccb62d": {"node_ids": ["4c324da2-6f8a-4cd7-8ba0-2c3bb0ff71f7", "54af2640-d152-437c-b647-f840c2a7a494", "bf5e3b1c-671b-4d2b-8fb6-f6a3ac268f92", "31c7bbdb-f3ec-44e3-b595-4bc945b919dd"], "metadata": {"page_label": "319", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "19b7d1f7-86e2-49be-94f9-5420213f210c": {"node_ids": ["d323752e-eae7-4e91-ad48-44bf45b96a3d", "674e107d-e6fd-468d-ab8a-941168208699", "191940cb-9aad-4d15-a995-3ad3c4bf35dc", "c1667837-84cb-4cc3-9a6c-eec2fb7f15a9"], "metadata": {"page_label": "320", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a8d91be3-1982-4936-a357-bd0e568bb2de": {"node_ids": ["81d65d6d-fc11-426d-81ba-723749fea8b6", "3f3147b3-25c5-471e-b2f7-ff4b7304ee14", "0920c56e-cbc9-46b7-b0c7-35adcef4c7f4", "045470f1-e054-4c03-a4be-e368180a5f80"], "metadata": {"page_label": "321", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "95717486-af1a-4b93-a92f-606eff5a9eca": {"node_ids": ["058c6872-bfe0-4651-b81f-90495a136769", "aa667c2c-f2ec-4bac-bef9-b76d1879e5e3", "d6e4904c-0fab-42f7-afa1-4b1858ba0975", "36ac6ad2-7f20-4d18-991e-52ad04e8ccae"], "metadata": {"page_label": "322", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d3a448ad-95b2-404c-ad53-476c33814281": {"node_ids": ["e1c0acc5-17ac-46ca-bcd2-4b0201425281", "f1b3d73e-0b7b-4b8c-b6a9-fe3862fc8e89", "7170e89c-1731-41da-b40e-8da602874f69", "222e66de-c741-4784-b36c-9b1492306d0e"], "metadata": {"page_label": "323", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "87185294-bfef-40dc-b947-6d84e1d29e71": {"node_ids": ["a51c2ded-fcc0-4cac-bc41-df1255f9de0a", "0b6ea739-7573-4f1d-a762-deb76892020c", "cfe17e86-1e41-4a36-9478-22903f8364ab"], "metadata": {"page_label": "324", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d922510e-c2fb-46f8-b821-4311fbac943b": {"node_ids": ["d070c60c-9a08-4e2f-aa0d-1639d771a6b6", "80834199-94e7-4418-b9b3-cd90f6690103", "b196c72b-a419-457a-a8be-c0e264d55261"], "metadata": {"page_label": "325", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3fa810e3-4123-44c6-8ac9-44ad80ecf15f": {"node_ids": ["0fed7c31-6eb9-4f3b-b104-8f8dc13944b1", "1c347f4c-629f-4a1a-90d8-5f44153635d4"], "metadata": {"page_label": "326", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "822a7d88-2c9c-4559-ac21-22e929caa41d": {"node_ids": ["92edf8ec-81e5-42f8-912d-7ceb7a799a5c", "a94c88c4-63ac-429a-87c9-c48af0448fe8"], "metadata": {"page_label": "327", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "86e1f3dc-e670-4dd4-8ce3-8d56c3f6a351": {"node_ids": ["62a0847f-ba67-4372-ba2a-6b46cadb6c4a", "94823d06-774a-4801-b8ec-5444910596d2"], "metadata": {"page_label": "328", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "703a5d70-d6b7-49d0-b837-1c8defd313c8": {"node_ids": ["1e3ef1b9-169c-4cc2-9269-63ba52d4f6cd"], "metadata": {"page_label": "329", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bd1c3ca8-4e9c-4919-b408-c9939b84580e": {"node_ids": ["ff3a3cec-a426-4c1b-98d7-38a112e8c5a8", "569d9074-484e-49f6-8c10-12d6e70cb69d"], "metadata": {"page_label": "330", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ef780403-4c43-40eb-927c-99e01a0e3090": {"node_ids": ["492b7e6f-1a3a-4ff4-99bf-e8b56c81db4a", "b2bca3d1-a8a9-457a-87c1-d145f037266a"], "metadata": {"page_label": "331", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6e9287e3-b6ca-4876-825f-57519634ccb8": {"node_ids": ["ddc1a132-b45f-4334-afef-b6266938f3e8", "f05d4464-99aa-49d6-bc7f-586babff43bf"], "metadata": {"page_label": "332", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "c8c0cbe1-0a0d-48e6-aa68-945b7c61dc62": {"node_ids": ["e1a01391-86c1-4aeb-84ed-7ba06d80800a", "19f7ed07-3117-46b2-b559-1eb1d393be3d"], "metadata": {"page_label": "333", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a9154b9c-1f4a-4905-8a75-7e2360c60da7": {"node_ids": ["fb767130-e5b1-45fe-a306-6d3cdec78a91", "301f18ab-dcaa-406e-91a3-aac0033684ab"], "metadata": {"page_label": "334", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "0cb8e473-ad19-4e17-9b6e-75250ccca7ab": {"node_ids": ["e4683200-e601-4501-8e10-dc03c1bd4bc6"], "metadata": {"page_label": "335", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "03e3b5ea-8690-4346-abf5-461c724b060c": {"node_ids": ["9d79c11c-0595-4f0e-902d-384062630562", "01a62911-3b8c-4e79-bf51-f51a6cba4ac6"], "metadata": {"page_label": "336", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7c043f11-3af7-49da-83f6-40ba109a9f3a": {"node_ids": ["8974a857-b8cd-4f5f-9d24-09376a6964da"], "metadata": {"page_label": "337", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cc9c2e74-d7e8-4b12-a107-43378825beed": {"node_ids": ["2e35237f-8a90-4602-91da-657f7f4e07bc"], "metadata": {"page_label": "338", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e1bd9e3a-d5ef-4f71-90ab-c5055aaf6b25": {"node_ids": ["951a2ada-9c2f-4321-80a0-d002828ba775"], "metadata": {"page_label": "339", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4b89ebe0-2aaf-4283-97f6-f02e6995c2f0": {"node_ids": ["f22a87bd-8604-4601-ad09-ab55698177bc"], "metadata": {"page_label": "340", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9e6c018e-150d-4199-b37b-867d3a952835": {"node_ids": ["9c68fd1c-c38d-462e-8e18-45236ff31d25", "79d9b640-e14e-4926-a563-ef8ba32a1c9e"], "metadata": {"page_label": "341", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "996015b3-fae0-43c8-9289-71ceed422f3c": {"node_ids": ["d88f6c25-624b-4de1-9fa0-49d90f4e9685"], "metadata": {"page_label": "342", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "bfd69bdb-448a-4d6a-b936-c615adfc4437": {"node_ids": ["2d9fc9ee-aa04-420e-89a5-bb27eb05364e", "ce5bd309-7598-4b17-ae33-f6bc5628c6d4"], "metadata": {"page_label": "343", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b8446e10-4d5d-46c1-b6b0-dcfd9a007b54": {"node_ids": ["277892c6-cc78-4675-bf11-8ecb291eb876", "52f0549d-02d4-4060-b68c-fa5dc47e33c4"], "metadata": {"page_label": "344", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "09aa8432-afc3-4f13-834c-b674ef4d7386": {"node_ids": ["a4b9622d-f5d2-4e4c-931b-cf8b543599b6", "6a03d138-6607-4aa7-8b30-23babb45171f"], "metadata": {"page_label": "345", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f31feff2-2766-471b-bb07-c4e15c84f2c8": {"node_ids": ["1feba834-c277-40c0-8d74-f4c1585766e0", "053b196a-bf9f-4d57-971d-8a894f807221"], "metadata": {"page_label": "346", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "55dbbfde-8dde-4f0c-b755-31de5cfb713c": {"node_ids": ["63c2598b-4d39-419d-8591-42c78a2377fc", "ad7dae62-ee71-491b-9467-4f935c4711c1"], "metadata": {"page_label": "347", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "62c0f547-5d79-4ba1-bafe-dac454538580": {"node_ids": ["307b75fb-552c-4039-b080-980123165029"], "metadata": {"page_label": "348", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "607ae8d8-c9ca-43dd-8276-d45f3e353ab5": {"node_ids": ["25ef4110-e668-46e6-a609-762f435a2e86"], "metadata": {"page_label": "349", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ce2033fc-a5f4-4545-8073-a4fbffb53468": {"node_ids": ["fe85ef80-e81b-4fd5-b5c4-3cf725bf0c1d"], "metadata": {"page_label": "350", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7555c572-2098-4efd-a172-c576a90d9830": {"node_ids": ["d241d8cf-e2a0-4b2c-b1a0-9b4e2e61f075"], "metadata": {"page_label": "351", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2ff2fd65-6208-4b61-8cf0-55816a6a2d5a": {"node_ids": ["fc519cb4-3ebd-4d04-8a05-6ed6aa535010"], "metadata": {"page_label": "352", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "863f98db-a335-4270-b23e-99613c971906": {"node_ids": ["37eb174e-cc27-4e14-b091-0bfab082643a", "ee21d4a3-2ee8-4c4f-8eb6-6b5ce235a834"], "metadata": {"page_label": "353", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "9f937a09-b9d3-49eb-afc3-77f25c268668": {"node_ids": ["65b957ba-1f36-4edc-b5ef-26d07ce72054"], "metadata": {"page_label": "354", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "00de9ba6-772d-4931-aa5a-10dce405dd02": {"node_ids": ["319953bf-8172-44f6-b6c8-487055118a38", "44255134-a96f-4fc0-b1ef-e9c7e0923845"], "metadata": {"page_label": "355", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "b741f0cb-a641-4783-be36-e7f1a26a57bf": {"node_ids": ["626a9f62-b5e7-4294-8dfc-e8553013547e"], "metadata": {"page_label": "356", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "65647689-9302-4330-bf54-7a4397fe8f4c": {"node_ids": ["0b7b5ddc-24c5-45eb-aee5-b96bd1fe5230"], "metadata": {"page_label": "357", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "11f6ab73-4fff-4721-9cbd-409cf941e33f": {"node_ids": ["4704fcab-2bbe-4c5b-8285-797a9a433ec7"], "metadata": {"page_label": "358", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ddf422db-304a-425e-9d1a-44b695295e5a": {"node_ids": ["69e9eaf6-f921-40a7-998c-495d85e0eea4"], "metadata": {"page_label": "359", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "94a87df3-8407-44bd-ac6f-73e0885a57b3": {"node_ids": ["b688e63f-1143-43a2-8c1d-786660573ade"], "metadata": {"page_label": "360", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "413e8ab2-0040-47a5-8542-762bf4cdb0fa": {"node_ids": ["5ae44566-351a-4a17-a2e5-cebd3a279e3e"], "metadata": {"page_label": "361", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "dc976877-e90b-4dd3-a317-f6649c1e80b2": {"node_ids": ["7d7337fa-d1f2-4397-b6c0-2f8607eb1ecd"], "metadata": {"page_label": "362", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3889fb77-de69-4178-a179-957e018cd49e": {"node_ids": ["29e06953-a9b8-4157-aaae-5236a67cb88e"], "metadata": {"page_label": "363", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "4b13a69f-152a-43cc-8c2c-0269cf3782fb": {"node_ids": ["987b3ab0-db03-4a71-91bd-1576f06fb0c2"], "metadata": {"page_label": "364", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2859100b-c12b-428e-8179-5446ec72b79e": {"node_ids": ["910198d7-ca88-4583-8a50-99bf495ee42d"], "metadata": {"page_label": "365", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "8f62c61e-7c00-4f44-9b95-1db2fae5e730": {"node_ids": ["d5c26315-da6a-4295-8d2f-6f0181b2197f"], "metadata": {"page_label": "366", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a188e631-adb8-47c4-ac1f-e0d0c34ee3a9": {"node_ids": ["1ebd6568-4890-4d2f-a82a-43256b2f14b5", "6df930df-68ad-431c-9d6f-4bb33ebd45ec"], "metadata": {"page_label": "367", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5def114f-dffb-4f3b-a5ba-5e6b5f7081ff": {"node_ids": ["efac6625-c88a-4631-b478-74cc39b00b92", "1beaaa49-25ac-45ec-8d23-c7eb3d275426"], "metadata": {"page_label": "368", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a9b2bb76-7202-41cf-b476-88ee6e5ee5d7": {"node_ids": ["2f28b51b-c7cc-4378-9e5b-38487538b9f1", "da7e3020-ea30-4d75-825a-f016f30a64f2", "611eb08b-f4e5-44bb-aec3-a73f4d75370f"], "metadata": {"page_label": "369", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "a21e7d2a-309b-475f-909b-a0c9324a7c65": {"node_ids": ["57e56554-1eb7-4f64-90b7-fe0859f58cbf", "75d0d4db-8435-4926-b785-6044b999c06e"], "metadata": {"page_label": "370", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "2f3b20aa-4f55-4be3-95ac-c0ed92573c96": {"node_ids": ["feda77a3-cb4c-411a-ac04-a64b2cf51bda", "50a6ec46-f2c8-49ed-b349-ef934969253f"], "metadata": {"page_label": "371", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "d3d3eba5-62fc-4e32-b655-d1002c822730": {"node_ids": ["bba0ed14-b7e2-41e3-8d8a-20026fff8072", "cc6145a9-7100-4c8f-aa30-b906f4f1727d"], "metadata": {"page_label": "372", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "6bb27cc1-09df-4b81-9d1d-c312b99de80c": {"node_ids": ["eea871a8-fd5d-4998-aebf-9df5464d465a", "77a0051c-96d7-46c8-b102-ba8327a379a5"], "metadata": {"page_label": "373", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "222502d3-e79d-470b-ab84-c483cf624e94": {"node_ids": ["1b778797-4974-40c4-8e10-fca22bfd0a63", "39ec31a3-df66-42bb-81a7-a4cb3aa759f1", "3e56af11-9175-4dab-a1c9-fa5547598f68"], "metadata": {"page_label": "374", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e8337ffd-3633-47aa-afb7-63d7f7808ca3": {"node_ids": ["1e5b0c8f-4fc3-4e68-a760-c77a7be91c99", "f958cbf5-2359-4250-9f21-247a4c1539d5", "d8499007-1aee-4a9a-9140-6989c295aafa"], "metadata": {"page_label": "375", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "047a76c0-ef5b-4d44-b414-85a3cf16917d": {"node_ids": ["d8747a04-ece6-463e-9ad3-c159654e1ca6", "b92a0646-982f-496a-a9e8-77eea9a7cd48"], "metadata": {"page_label": "376", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "89639ce0-e0f2-4dc2-a92f-734e12d54d9b": {"node_ids": ["1780a61c-7a45-49bf-aafa-66e6d5351c54", "1078d8a1-2de8-4392-97c4-8bf50eb6b20c"], "metadata": {"page_label": "377", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "60eb91f6-0e9a-4a15-9ff9-c3399964c63a": {"node_ids": ["072928e6-a73c-4949-8517-d8d5f6f89d40", "9bbb746e-b284-4e3c-b6f2-8ccf4cd082a9"], "metadata": {"page_label": "378", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5447a6e0-5f19-48aa-aa06-d7ecd3cc1b08": {"node_ids": ["fdb1c1c8-0af2-4b3e-9300-7dd9d7ad0152", "270f35d1-37d8-412e-ac37-4dd6944f64c1"], "metadata": {"page_label": "379", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "91235c5d-dbfd-4455-a6f0-0bb49b630309": {"node_ids": ["dbfebcab-1814-4cc1-9db8-9f0f458c60f4"], "metadata": {"page_label": "380", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "5e0b16c1-16d2-42cb-bb56-d5824a6d3aaa": {"node_ids": ["8141e2ff-b9c3-4b1f-9cda-ff22a70de7aa"], "metadata": {"page_label": "381", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "374d2791-dae4-4d17-8272-a6176a3d8946": {"node_ids": ["a2c9f3fd-b113-4c2b-b650-9bc861c7729c"], "metadata": {"page_label": "382", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "aa1c0843-cf7c-48be-8091-bab726bc7294": {"node_ids": ["bc7608cd-abb3-4a03-a3dc-aae713d29f16", "3b2c7a68-be64-4420-8221-a769bf7c271d", "dbcd19f6-6dc8-46bc-a0f1-e241aa1ea4dd"], "metadata": {"page_label": "383", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "f617efa1-ab0e-4e53-8d14-01fa94a8058c": {"node_ids": ["0c65a97a-103c-4b60-82fa-c67db75feeac", "bafd0336-b6b6-49fd-a859-839b68d23d61", "60d33b36-1dbf-45bd-b445-ca61e9ce2202"], "metadata": {"page_label": "384", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "42cf8dfa-9b02-4682-bb4c-07e34ab87b4a": {"node_ids": ["7d372479-4a75-4239-be54-3cb7518e5a82", "91bfaaad-08c0-4533-bd61-f86487e6a757", "818259d7-a1fd-4e90-9746-9152db6276f1"], "metadata": {"page_label": "385", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e79facfe-8dc6-4f2f-a3cc-66211f19b471": {"node_ids": ["4a23abd4-056a-402b-a0cc-7a19b59821a1"], "metadata": {"page_label": "386", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1ddbae92-cce9-43a6-acd2-2d306bcc033e": {"node_ids": ["be7c2ec1-2153-489b-95b1-51a0610fa82d"], "metadata": {"page_label": "387", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "caad82f0-9b43-436e-9dfb-ecdae8daacf7": {"node_ids": ["5caa32ac-bcac-4fe6-bf8f-2b80482e7d76"], "metadata": {"page_label": "388", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "3b5451e7-b742-408a-87f2-1d94327d2115": {"node_ids": ["4d504789-8a55-423a-9848-9a9c6f221e0f"], "metadata": {"page_label": "389", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e60f7e1e-e362-415d-b6b1-df50fd2c4873": {"node_ids": ["c43a4165-4cea-4c3f-a0f9-ec3ad5b4fea7"], "metadata": {"page_label": "390", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cd2dddf6-bca3-4127-9a1c-8297d88577ba": {"node_ids": ["b532a8f7-7512-4a2b-8804-35473f8b3441"], "metadata": {"page_label": "391", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "c417eb2e-15d3-452b-8e6a-579aec027362": {"node_ids": ["511716d0-facb-4224-b2d8-e4a83bf32243"], "metadata": {"page_label": "392", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "881d5b9e-eb7f-4a8e-8c8f-6f2c88824943": {"node_ids": ["3b8025e3-be9b-4684-9cb7-6634e1d3c346"], "metadata": {"page_label": "393", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "239de56c-f8a0-4f85-8f6c-cfaf0f264230": {"node_ids": ["5c0a3657-d982-4654-ae95-b304af30d6fc"], "metadata": {"page_label": "394", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "1d255750-9bee-4c0a-9fcb-8676f8420860": {"node_ids": ["6c2f251b-9cda-4d77-a037-07974de14784", "f6295624-6cad-4e98-bbed-0c4c59c59230", "8b4787bf-b813-43ba-8a4d-54ad246fda1e"], "metadata": {"page_label": "395", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "cf63458b-2b0f-4868-8436-9fa20f512a5a": {"node_ids": ["b6ca832f-dbf8-44f1-a1b8-5d3765bd618e", "75f90425-973e-4bde-85b6-a405660b6635", "17f680ea-2fa3-4c30-a19d-11f1bfa3be91"], "metadata": {"page_label": "396", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "77ca8632-b6b9-43bf-82f5-9b274ba6db9f": {"node_ids": ["c07d6017-5215-4565-9185-59d023be6e5f", "3f58e112-ee72-4c8c-b261-72d53f56726e", "0e974654-3965-4489-bace-4490558bb080"], "metadata": {"page_label": "397", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "7fc2cadb-a624-43ba-859a-0aa00444a5cc": {"node_ids": ["fe2415d8-d12e-4ee8-aab5-69034d3b5c9b", "75ee5e8a-550c-43b8-9841-2a3a29b71323"], "metadata": {"page_label": "398", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "ff18f242-69aa-49f5-9a6e-8f02cd310428": {"node_ids": ["96af0f6b-7c3a-42d5-9875-bd43edd96055", "6dfbc82e-c9b0-4997-922b-cb47732576aa", "653c954d-a9d8-4e92-96b0-77bcfff55ed9"], "metadata": {"page_label": "399", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}, "e6789132-8c1a-4d2b-927c-6cbd9caa85fb": {"node_ids": ["963f2ca7-4e33-4acb-bb40-6ada598b797f", "a3f0d9d6-d81a-4a74-8fa4-6ce125ec7a9d"], "metadata": {"page_label": "400", "file_name": "GNU COBOL 2.0 Programmers Guide.pdf", "file_path": "/Users/jamesdominguez/git/cobal-reporter/data/GNU COBOL 2.0 Programmers Guide.pdf", "file_type": "application/pdf", "file_size": 4492079, "creation_date": "2024-06-19", "last_modified_date": "2024-06-19"}}}}